The following text is a Git repository with code. The structure of the text are sections that begin with **-****-****-****-**, followed by a single line containing the file path and file name, followed by a variable amount of lines containing the file contents. The text representing the Git repository ends when the symbols --END-- are encounted. Any further text beyond --END-- are meant to be interpreted as instructions using the aforementioned Git repository as context.
**-****-****-****-**
unittest.cfg
[coverage]
always-on = True
coverage-report = term

**-****-****-****-**
LICENSE
The MIT License (MIT)

Copyright (c) 2015 Gouthaman Balaraman

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


**-****-****-****-**
Requirements.txt
Flask
Flask-WTF>=0.14.0
Flask-Login
Flask-Principal
flask-caching
Flask-FileUpload
SQLAlchemy>=1.3.1
Markdown
Werkzeug>=1.0.0
blinker
python-slugify
shortuuid
feedwerk

**-****-****-****-**
MANIFEST.in
include README.rst
include Requirements.txt
recursive-include flask_blogging/templates *.*
recursive-include test *
recursive-exclude docs *

**-****-****-****-**
.gitmodules
[submodule "docs/_themes"]
	path = docs/_themes
	url = git://github.com/mitsuhiko/flask-sphinx-themes.git

**-****-****-****-**
setup.py
"""
Flask-Blogging
--------------

Flask-Blogging is a Flask extension for adding blogging support to
your web application. Flask-Blogging comes with the following
features out of the box:

- Bootstrap based site
- Markdown based blog editor
- Models to store blog
- Authentication of User's choice
- Sitemap, ATOM support
- Disqus support for comments
- Google analytics for usage tracking
- Permissions enabled to control which users can create/edit blogs
- Incorporates Flask-Cache for fast rendering
- Well documented, tested, and extensible design


Links
`````
* `documentation <http://flask-blogging.readthedocs.org/>`_
* `development version <https://github.com/gouthambs/Flask-Blogging>`_

"""

from setuptools import setup, find_packages
import os
import re
import ast

_version_re = re.compile(r'__version__\s+=\s+(.*)')

with open('flask_blogging/__init__.py', 'rb') as f:
    version = str(ast.literal_eval(_version_re.search(
        f.read().decode('utf-8')).group(1)))



BASE_PATH = os.path.dirname(__file__)


def get_requirements(suffix=''):
    with open(os.path.join(BASE_PATH, 'Requirements%s.txt' % suffix)) as f:
        rv = f.read().splitlines()
    return rv

setup(
    name='Flask-Blogging',
    version=version,
    url='https://github.com/gouthambs/Flask-Blogging',
    license='MIT',
    author='Gouthaman Balaraman',
    author_email='gouthaman.balaraman@gmail.com',
    description='A flask extension for adding Markdown blog support to your site',
    long_description=__doc__,
    packages=find_packages(),
    zip_safe=False,
    include_package_data=True,
    platforms='any',
    install_requires=get_requirements(),
    tests_require=["nose", "mysqlclient", "psycopg2"],
    test_suite='nose.collector',
    classifiers=[
        'Development Status :: 4 - Beta',
        'Environment :: Web Environment',
        'Framework :: Flask',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: MIT License',
        'Operating System :: OS Independent',
        'Programming Language :: Python',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
        'Topic :: Software Development :: Libraries :: Python Modules'
    ]
)

**-****-****-****-**
.gitignore
*.py[cod]
*.swp
.idea
.cache
.env
dist/
Flask_Blogging.egg-info/
example/static/*
.coverage

**-****-****-****-**
README.rst
Flask-Blogging
==============

.. image:: https://github.com/gouthambs/Flask-Blogging/actions/workflows/unittesting.yml/badge.svg
    :target: https://github.com/gouthambs/Flask-Blogging/actions/workflows/unittesting.yml

This is a Flask extension for adding blog support to your site using Markdown.
Please see `Flask-Blogging documentation <http://flask-blogging.readthedocs.org/en/latest/>`_
for more details. You can extend Flask-Blogging by using `plugins from here <https://github.com/gouthambs/blogging_plugins>`_.

Check out the `Serverless Blog <https://serverlessblog.com>`_  demo running on AWS Lambda.

Features
--------

- Integration with Markdown Editor
- Ability to upload images for use in blog pages
- Incorporate math formulas in LaTeX format
- Integrates with authentication to allow multiple users
- Plugin framework to easily extend and add new features
    
Screen Shots
------------

    Blog Editor

.. figure:: /docs/_static/blog_editor.png

    Blog Page

.. figure:: /docs/_static/blog_page.png


Minimal Example
---------------

Check the `quickstart example <http://flask-blogging.readthedocs.org/en/latest/#quick-start-example>`_ for the latest documentation.

Installation
------------

Install the extension with the following commands::

    $ easy_install flask-blogging
    
or alternatively if you have pip installed::

    $ pip install flask-blogging
    

Dependencies
------------

- `Flask <https://github.com/mitsuhiko/flask>`_
- `SQLAlchemy <https://github.com/zzzeek/sqlalchemy>`_
- `Flask-Login <https://github.com/maxcountryman/flask-login>`_
- `Flask-Principal <https://github.com/mattupstate/flask-principal>`_
- `Flask-WTF <https://github.com/lepture/flask-wtf>`_
- `Flask-FileUpload <https://github.com/Speedy1991/Flask-FileUpload>`_
- `Markdown <https://pypi.org/project/Markdown/>`_
- `Bootstrap <http://getbootstrap.com/>`_
- `Bootstrap-Markdown <https://github.com/toopay/bootstrap-markdown>`_
- `Markdown-js <https://github.com/evilstreak/markdown-js>`_


License
-------

`MIT </LICENSE>`_

.. include:: /docs/releases.rst

.. include:: /docs/authors.rst

**-****-****-****-**
.travis.yml
language: python
python:
  - 2.7
  - 3.4
  - 3.5
  - 3.6
# Enable 3.7 without globally enabling sudo and dist: xenial for other build jobs
matrix:
  include:
    - python: 3.7
      env: XENIAL=true
      dist: xenial
      sudo: true
before_script:
  - if [ "$XENIAL" = true ] ; then sudo apt-get update; fi
  - if [ "$XENIAL" = true ] ; then sudo apt-get install -y mysql-server; fi
  - if [ "$XENIAL" = true ] ; then sudo service mysql restart; fi  
  - if [ "$XENIAL" = true ] ; then sudo service postgresql restart; fi  
  - if [ "$XENIAL" = true ] ; then which mysql && until mysql -u root -e "show status" &>/dev/null; do sleep 1; done; fi
  - mysql -e 'create database flask_blogging;'
  - psql -c 'create database flask_blogging;' -U postgres;
install:
  - pip install -e .
  - pip install coverage pep8 mysqlclient==1.3.6 psycopg2 Flask-Sqlalchemy==2.2
script:
  - nosetests --with-coverage --cover-package=flask_blogging --cover-min-percentage=85 -v
  - pep8 --repeat flask_blogging/ test/
notifications:
  email: false

**-****-****-****-**
test/test_signals.py
import os
from flask import current_app, redirect
from test import FlaskBloggingTestCase, TestUser
import tempfile
from sqlalchemy import create_engine, MetaData
from flask_blogging import SQLAStorage, BloggingEngine
from flask_login import LoginManager, login_user, logout_user, current_user
from flask_principal import identity_changed, Identity, \
    AnonymousIdentity, identity_loaded, RoleNeed, UserNeed
from test.plugin import disconnect_receivers


class SignalCountingBloggingEngine(BloggingEngine):
    ctr_blueprint_created = 0
    ctr_sitemap_posts = 0
    ctr_feed_posts_fetched = 0
    ctr_feed_posts_processed = 0
    ctr_index_posts = 0
    ctr_page_by_id = 0
    ctr_posts_by_tag = 0
    ctr_posts_by_author = 0


class TestSignals(FlaskBloggingTestCase):

    def _create_storage(self):
        temp_dir = tempfile.gettempdir()
        self._dbfile = os.path.join(temp_dir, "temp.db")
        conn_string = 'sqlite:///'+self._dbfile
        engine = create_engine(conn_string)
        meta = MetaData()
        self.storage = SQLAStorage(engine, metadata=meta)
        meta.create_all(bind=engine)

    def _create_blogging_engine(self):
        return SignalCountingBloggingEngine(self.app, self.storage)

    def tearDown(self):
        disconnect_receivers(self.app)

    def setUp(self):
        FlaskBloggingTestCase.setUp(self)
        self._create_storage()
        self.app.config["BLOGGING_URL_PREFIX"] = "/blog"
        self.app.config["BLOGGING_PLUGINS"] = ["test.plugin"]
        self.engine = self._create_blogging_engine()
        self.login_manager = LoginManager(self.app)

        @self.login_manager.user_loader
        @self.engine.user_loader
        def load_user(user_id):
            return TestUser(user_id)

        @self.app.route("/login/<username>/", methods=["POST"],
                        defaults={"blogger": 0})
        @self.app.route("/login/<username>/<int:blogger>/", methods=["POST"])
        def login(username, blogger):
            this_user = TestUser(username)
            login_user(this_user)
            if blogger:
                identity_changed.send(current_app._get_current_object(),
                                      identity=Identity(username))
            return redirect("/")

        @self.app.route("/logout/")
        def logout():
            logout_user()
            identity_changed.send(current_app._get_current_object(),
                                  identity=AnonymousIdentity())
            return redirect("/")

        for i in range(20):
            tags = ["hello"] if i < 10 else ["world"]
            user = "testuser" if i < 10 else "newuser"
            self.storage.save_post(title="Sample Title%d" % i,
                                   text="Sample Text%d" % i,
                                   user_id=user, tags=tags)

    def test_blueprint_created_signal(self):
        with self.client:
            self.assertEqual(self.engine.ctr_blueprint_created, 1)

    def test_sitemap_signals(self):
        with self.client:
            response = self.client.get("/blog/sitemap.xml")
            self.assertEqual(response.status_code, 200)
            self.assertEqual(self.engine.ctr_sitemap_posts, 2)

    def test_feed_signals(self):
        with self.client:
            response = self.client.get("/blog/feeds/all.atom.xml")
            self.assertEqual(response.status_code, 200)
            self.assertEqual(self.engine.ctr_feed_posts_fetched, 1)
            self.assertEqual(self.engine.ctr_feed_posts_processed, 1)

    def test_index_posts_signals(self):
        with self.client:
            response = self.client.get("/blog/")
            self.assertEqual(response.status_code, 200)
            self.assertEqual(self.engine.ctr_index_posts, 2)

    def test_page_by_id_signals(self):
        with self.client:
            response = self.client.get("/blog/page/1/")
            self.assertEqual(response.status_code, 200)
            self.assertEqual(self.engine.ctr_page_by_id, 2)

    def test_posts_by_tag_signals(self):
        with self.client:
            response = self.client.get("/blog/tag/hello/")
            self.assertEqual(response.status_code, 200)
            self.assertEqual(self.engine.ctr_posts_by_tag, 2)

    def test_posts_by_author_signals(self):
        with self.client:
            response = self.client.get("/blog/author/testuser/")
            self.assertEqual(response.status_code, 200)
            self.assertEqual(self.engine.ctr_posts_by_author, 2)

**-****-****-****-**
test/test_core.py
try:
    from builtins import str, range
except ImportError:
    pass

from unittest import TestCase
from flask_blogging import BloggingEngine, PostProcessor
from markdown.extensions.codehilite import CodeHiliteExtension


sample_markdown = """

##This is a test


    :::python
    print("Hello, World")
"""

expected_markup = u'<h2>This is a test</h2>\n' \
                  u'<div class="codehilite"><pre>' \
                  u'<span class="k">print</span>' \
                  u'<span class="p">(</span><span class="s">' \
                  u'&quot;Hello, World&quot;</span><span class="p">)' \
                  u'</span>\n' \
                  u'</pre></div>'


class TestCore(TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_custom_md_extension(self):
        extn = CodeHiliteExtension()
        engine = BloggingEngine(extensions=[extn])
        extns = engine.post_processor.all_extensions()
        self.assertEqual(len(extns), 3)
        self.assertTrue(isinstance(extns[-1], CodeHiliteExtension))

**-****-****-****-**
test/test_dynamodb.py
try:
    from builtins import range
except ImportError:
    pass
import unittest
from test import FlaskBloggingTestCase
from moto import mock_dynamodb2
import time
import os


@mock_dynamodb2
class TestDynamoDBStorage(FlaskBloggingTestCase):

    def _create_storage(self):
        """Mocked AWS Credentials for moto."""
        os.environ["AWS_ACCESS_KEY_ID"] = "testing"
        os.environ["AWS_SECRET_ACCESS_KEY"] = "testing"
        os.environ["AWS_SECURITY_TOKEN"] = "testing"
        os.environ["AWS_SESSION_TOKEN"] = "testing"
        os.environ["AWS_DEFAULT_REGION"] = "us-west-2"
        from flask_blogging.dynamodbstorage import DynamoDBStorage
        self.storage = DynamoDBStorage(table_prefix="test_")

    def setUp(self):
        FlaskBloggingTestCase.setUp(self)
        self._create_storage()

    def tearDown(self):
        self.storage._client.delete_table(TableName='test_blog_posts')
        self.storage._client.delete_table(TableName='test_tag_posts')

    def test_table_exists(self):
        response = self.storage._client.list_tables()
        tables = response["TableNames"]
        self.assertTrue('test_blog_posts' in tables)
        self.assertTrue('test_tag_posts' in tables)

    def test_user_post_table_consistency(self):
        # check if the user post table updates the user_id
        user_id = 1
        post_id = 5
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=["hello", "world"])
        posts = self.storage.get_posts()
        self.assertEqual(len(posts), 1)
        self.storage.save_post(title="Title", text="Sample Text",
                               user_id="newuser", tags=["hello", "world"],
                               post_id=pid)
        self.assertEqual(len(posts), 1)
        return

    def test_user_post_model_consistency(self):
        # check if the user post table updates the user_id
        user_id = 1
        post_id = 5
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=["hello", "world"])
        response = self.storage._blog_posts_table.scan()
        posts = response["Items"]
        self.assertEqual(len(posts), 1)
        post = posts[0]
        self.assertEqual(post['title'], "Title")
        self.assertEqual(post['text'], "Sample Text")
        self.assertEqual(post['post_id'], pid)
        return

    def test_tags_consistency(self):
        # check that when tag is updated, the posts get updated
        tags = ["hello", "world"]
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=tags)
        post = self.storage.get_post_by_id(pid)
        self.assertEqual(len(post["tags"]), 2)
        tags.pop()
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=tags, post_id=pid)
        post = self.storage.get_post_by_id(pid)
        self.assertEqual(len(post["tags"]), 1)

    def test_save_post(self):
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"], post_id='1')
        p = self.storage.get_post_by_id('2')
        self.assertIsNone(p)

        # invalid post_id will be treated as inserts
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"],
                                     post_id='5')
        self.assertNotEqual(pid, '5')
        p = self.storage.get_post_by_id(pid)
        self.assertIsNotNone(p)

    def test_delete_post(self):
        # insert, check exists, delete, check doesn't exist anymore
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        p = self.storage.get_post_by_id(pid)
        self.assertIsNotNone(p)
        self.storage.delete_post(pid)
        p = self.storage.get_post_by_id(pid)
        self.assertIsNone(p)

        # insert again.
        pid1 = self.storage.save_post(title="Title1", text="Sample Text",
                                      user_id="testuser",
                                      tags=["hello", "world"],
                                      post_id=pid)
        p = self.storage.get_post_by_id(pid1)
        self.assertNotEqual(pid, pid1)
        self.assertIsNotNone(p)

    def test_get_post_by_id(self):
        pid1 = self.storage.save_post(title="Title1", text="Sample Text1",
                                      user_id="testuser",
                                      tags=["hello", "world"])
        pid2 = self.storage.save_post(title="Title2", text="Sample Text2",
                                      user_id="testuser",
                                      tags=["hello", "my", "world"])

        post = self.storage.get_post_by_id(pid1)
        self._assert_post(post, "Title1", "Sample Text1", "testuser",
                          ["HELLO", "WORLD"])

        post = self.storage.get_post_by_id(pid2)
        self._assert_post(post, "Title2", "Sample Text2", "testuser",
                          ["HELLO", "MY", "WORLD"])

    def _assert_post(self, post, title, text, user_id, tags):
        tags = set([t.upper() for t in tags])
        self.assertSetEqual(set(post["tags"]), tags)
        self.assertEqual(post["title"], title)
        self.assertEqual(post["text"], text)
        self.assertEqual(post["user_id"], user_id)

    def test_get_posts(self):
        self._create_dummy_data()

        # test default queries
        posts = self.storage.get_posts()
        self.assertEqual(len(posts), 10)
        ctr = 19
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr -= 1

        posts = self.storage.get_posts(recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 0
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1

        # test count and offset
        posts = self.storage.get_posts(count=5, offset=5, recent=False)
        self.assertEqual(len(posts), 5)
        ctr = 5
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1

        # test tag feature
        posts = self.storage.get_posts(tag="hello", recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 0
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1
        posts = self.storage.get_posts(tag="world", recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 10
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr += 1

        # test user_id feature
        posts = self.storage.get_posts(user_id="newuser", recent=True)
        self.assertEqual(len(posts), 10)
        ctr = 19
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr -= 1

        posts = self.storage.get_posts(user_id="testuser", recent=True)
        self.assertEqual(len(posts), 10)
        ctr = 9
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr -= 1
        return

    def test_count_posts(self):
        self._create_dummy_data()

        count = self.storage.count_posts()
        self.assertEqual(count, 20)

        # test user
        count = self.storage.count_posts(user_id="testuser")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(user_id="newuser")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(user_id="testuser")
        self.assertEqual(count, 10)

        # test tags
        count = self.storage.count_posts(tag="hello")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(tag="world")
        self.assertEqual(count, 10)

    def _create_dummy_data(self):
        for i in range(20):
            tags = ["hello"] if i < 10 else ["world"]
            user = "testuser" if i < 10 else "newuser"
            self.storage.save_post(title="Title%d" % i,
                                   text="Sample Text%d" % i,
                                   user_id=user, tags=tags)
            time.sleep(0.01)

**-****-****-****-**
test/__init__.py
import unittest
from flask import Flask
from flask_login import UserMixin

__author__ = 'gbalaraman'


class FlaskBloggingTestCase(unittest.TestCase):

    def setUp(self):
        self.app = Flask(__name__)
        self.app.config['SECRET_KEY'] = "test-secret"
        self.app.config["WTF_CSRF_ENABLED"] = False  # to bypass CSRF token
        self.app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False
        self.client = self.app.test_client()

        @self.app.route("/")
        def index():
            return "Hello World!"


class TestUser(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

**-****-****-****-**
test/test_views.py
try:
    from builtins import str, range
except ImportError:
    pass
import os
import unittest
import unittest.mock
import tempfile
from flask import redirect, url_for, current_app
from flask_login import LoginManager, login_user, logout_user, current_user
from sqlalchemy import create_engine, MetaData
from flask_blogging.sqlastorage import SQLAStorage
from flask_blogging import BloggingEngine
from test import FlaskBloggingTestCase, TestUser
import re
from flask_principal import identity_changed, Identity, Permission,\
    AnonymousIdentity, identity_loaded, RoleNeed, UserNeed
from flask_caching import Cache
from .utils import get_random_unicode
from moto import mock_dynamodb2


@mock_dynamodb2
class TestViews(FlaskBloggingTestCase):

    def _create_storage(self):
        temp_dir = tempfile.gettempdir()
        self._dbfile = os.path.join(temp_dir, "temp.db")
        conn_string = 'sqlite:///' + self._dbfile
        engine = create_engine(conn_string)
        meta = MetaData()
        self.storage = SQLAStorage(engine, metadata=meta)
        meta.create_all(bind=engine)

    def _create_blogging_engine(self):
        return BloggingEngine(self.app, self.storage)

    def setUp(self):
        FlaskBloggingTestCase.setUp(self)
        self._create_storage()
        self.app.config["BLOGGING_URL_PREFIX"] = "/blog"
        self.app.config["BLOGGING_PLUGINS"] = []
        self.engine = self._create_blogging_engine()
        self.login_manager = LoginManager(self.app)

        @self.login_manager.user_loader
        @self.engine.user_loader
        def load_user(user_id):
            return TestUser(user_id)

        @self.app.route("/login/<username>/", methods=["POST"],
                        defaults={"blogger": 0})
        @self.app.route("/login/<username>/<int:blogger>/", methods=["POST"])
        def login(username, blogger):
            this_user = TestUser(username)
            login_user(this_user)
            if blogger:
                identity_changed.send(current_app._get_current_object(),
                                      identity=Identity(username))
            return redirect("/")

        @self.app.route("/logout/")
        def logout():
            logout_user()
            identity_changed.send(current_app._get_current_object(),
                                  identity=AnonymousIdentity())
            return redirect("/")
        self.pids = []
        for i in range(20):
            tags = ["hello"] if i < 10 else ["world"]
            user = "testuser" if i < 10 else "newuser"
            pid = self.storage.save_post(title="Sample Title%d" % i,
                                         text="Sample Text%d" % i,
                                         user_id=user, tags=tags)
            self.pids.append(pid)

    def tearDown(self):
        os.remove(self._dbfile)

    def test_index(self):
        response = self.client.get("/blog/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog")
        self.assertIn(response.status_code, [301, 308])

        response = self.client.get("/blog/5/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/5/2/")
        self.assertEqual(response.status_code, 200)

    def test_post_by_id(self):
        post_id0 = self.pids[0]
        response = self.client.get("/blog/page/%s/" % post_id0)
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/page/%s/sample-title/" % post_id0)
        self.assertEqual(response.status_code, 200)
        # trailing slash redirect
        response = self.client.get("/blog/page/%s" % post_id0)
        self.assertIn(response.status_code, [301, 308])

    def test_post_by_tag(self):
        response = self.client.get("/blog/tag/hello/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/tag/hello/5/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/tag/hello/5/2/")
        self.assertEqual(response.status_code, 200)

    def test_post_by_author(self):
        response = self.client.get("/blog/author/newuser/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/author/newuser/5/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/author/newuser/5/2/")
        self.assertEqual(response.status_code, 200)

        response = self.client.get("/blog/author/nonexistent_user/",
                                   follow_redirects=True)
        assert "No posts found for this user!" in str(response.data)

    def test_editor_get(self):
        user_id = "testuser"
        with self.client:
            # access to editor should be forbidden before login
            response = self.client.get("/blog/editor/")
            self.assertEqual(response.status_code, 401)

            response = self.client.get("/blog/editor/%s/" % self.pids[0])
            self.assertEqual(response.status_code, 401)

            self.login(user_id)
            self.assertEquals(current_user.get_id(), user_id)
            response = self.client.get("/blog/editor/")
            assert response.status_code == 200

            for i in range(1, 21):
                # logged in user can edit their post, and will be redirected
                # if they try to edit other's post
                response = self.client.get("/blog/editor/%s/" % self.pids[i-1])
                expected_status_code = 200 if i <= 10 else 302
                self.assertEqual(response.status_code, expected_status_code,
                                 "Error for item %s %d" %
                                 (self.pids[i - 1], response.status_code))
            # logout and the access should be gone again
            self.logout()
            response = self.client.get("/blog/editor/")
            self.assertEqual(response.status_code, 401)

            response = self.client.get("/blog/editor/%s/" % self.pids[0])
            self.assertEqual(response.status_code, 401)

    @unittest.mock.patch('flask_blogging.sqlastorage.SQLAStorage._logger', unittest.mock.Mock())
    def test_editor_post(self):
        user_id = "testuser"
        with self.client:
            # access to editor should be forbidden before login
            response = self.client.get("/blog/page/21/",
                                       follow_redirects=True)
            assert "The page you are trying to access is not valid!" in \
                   str(response.data)

            response = self.client.post("/blog/editor/")
            self.assertEqual(response.status_code, 401)

            response = self.client.post("/blog/editor/%s/" % self.pids[0])
            self.assertEqual(response.status_code, 401)

            self.login(user_id)
            self.assertEquals(current_user.get_id(), user_id)

            response = self.client.post("/blog/editor/",
                                        data=dict(text="Test Text",
                                                  tags="tag1, tag2"))
            # should give back the editor page
            self.assertEqual(response.status_code, 200)

            response = self.client.post("/blog/editor/",
                                        data=dict(title="Test Title",
                                                  text="Test Text",
                                                  tags="tag1, tag2"))
            self.assertEqual(response.status_code, 302)

            response = self.client.get("/blog/page/%s/" % self.pids[19])
            self.assertEqual(response.status_code, 200)

    def test_editor_edit_page(self):
        user_id = "testuser"
        with self.client:
            self.login(user_id)
            response = self.client.post(
                "/blog/editor/%s/" % self.pids[0],
                data=dict(title="Sample Title0-Edited",
                          text="Sample Text0-Edited", tags="tag1, tag2"))

            response = self.client.get("/blog/100/")
            self.assertEqual(response.status_code, 200)

            pattern = re.compile(b"<h1>.*</h1>")
            headings = pattern.findall(response.data)
            self.assertEqual(len(headings), 20)
            self.assertEqual(headings[-1], b"<h1>Sample Title0-Edited</h1>")

            return

    def test_delete(self):
        user_id = "testuser"
        with self.client:

            # Anonymous user cannot delete
            response = self.client.post("/blog/delete/%s/" % self.pids[0])
            self.assertEqual(response.status_code, 401)

            # a user cannot delete another person's post
            self.login(user_id)
            self.assertEquals(current_user.get_id(), user_id)
            response = self.client.post("/blog/delete/%s/" % self.pids[12],
                                        follow_redirects=True)
            assert "You do not have the rights to delete this post" in \
                   str(response.data)

            # a user can delete his posts
            response = self.client.post("/blog/delete/%s/" % self.pids[0],
                                        follow_redirects=True)
            assert "Your post was successfully deleted" in str(response.data)

    def login(self, user_id, blogger=False):
        if blogger:
            return self.client.post("/login/%s/1/" % user_id,
                                    follow_redirects=True)
        else:
            return self.client.post("/login/%s/" % user_id,
                                    follow_redirects=True)

    def logout(self):
        return self.client.get("/logout/")

    def test_sitemap(self):
        with self.client:
            # access to editor should be forbidden before login
            response = self.client.get("/blog/sitemap.xml")
            self.assertEqual(response.status_code, 200)

    def test_atom(self):
        with self.client:
            # access to editor should be forbidden before login
            response = self.client.get("/blog/feeds/all.atom.xml")
            self.assertEqual(response.status_code, 200)

    def test_posts_per_page(self):
        posts_per_page = 5
        self.app.config["BLOGGING_POSTS_PER_PAGE"] = posts_per_page
        with self.client:
            pattern = re.compile(b"<h1>.*</h1>")
            # index page
            response = self.client.get("/blog/")
            headings = pattern.findall(response.data)
            self.assertEqual(len(headings), posts_per_page)

            # tag page
            response = self.client.get("/blog/tag/hello/")
            headings = pattern.findall(response.data)
            self.assertEqual(len(headings), posts_per_page)

            # author page
            response = self.client.get("/blog/author/testuser/")
            headings = pattern.findall(response.data)
            self.assertEqual(len(headings), posts_per_page)

    def test_url_construction(self):
        ctx = self.app.test_request_context()
        ctx.push()
        index_url = url_for("blogging.index")
        self.assertEqual(index_url, "/blog/")

        # index url
        index_url = url_for("blogging.index", count=10)
        self.assertEqual(index_url, "/blog/10/")

        index_url = url_for("blogging.index", count=10, page=2)
        self.assertEqual(index_url, "/blog/10/2/")

        # page by id
        page_url = url_for("blogging.page_by_id", post_id=5)
        self.assertEqual(page_url, "/blog/page/5/")

        # posts by tag
        tag_url = url_for("blogging.posts_by_tag", tag="hello")
        self.assertEqual(tag_url, "/blog/tag/hello/")

        # posts by author
        author_url = url_for("blogging.posts_by_author", user_id="newuser")
        self.assertEqual(author_url, "/blog/author/newuser/")

        # sitemap
        sitemap_url = url_for("blogging.sitemap")
        self.assertEqual(sitemap_url, "/blog/sitemap.xml")

        # feeds
        feed_url = url_for("blogging.feed")
        self.assertEqual(feed_url, "/blog/feeds/all.atom.xml")

        ctx.pop()

    def _set_identity_loader(self, role_name):
        @identity_loaded.connect_via(self.app)
        def on_identity_loaded(sender, identity):
            identity.user = current_user
            if hasattr(current_user, "id"):
                identity.provides.add(UserNeed(current_user.id))
            identity.provides.add(RoleNeed(role_name))

    def test_permissions_editor(self):
        self.app.config["BLOGGING_PERMISSIONS"] = True
        self.app.config["BLOGGING_PERMISSIONNAME"] = "testblogger"
        user_id = "newuser"
        self._set_identity_loader(self.app.config.get(
            "BLOGGING_PERMISSIONNAME", "blogger"))

        with self.client:
            response = self.client.post("/blog/editor/")
            self.assertEqual(response.status_code, 401)

            response = self.client.post("/blog/editor/1/")
            self.assertEqual(response.status_code, 401)

            self.login(user_id)
            response = self.client.post("/blog/editor/")
            self.assertEqual(response.status_code, 302)

            response = self.client.post("/blog/editor/1/")
            self.assertEqual(response.status_code, 302)

            self.logout()

            self.login(user_id, blogger=True)
            response = self.client.post("/blog/editor/")
            self.assertEqual(response.status_code, 200)

            response = self.client.post("/blog/editor/1/")
            self.assertEqual(response.status_code, 200)

            test_permission = Permission(RoleNeed("testblogger"))
            blogger_permission = Permission(RoleNeed("blogger"))
            self.assertTrue(test_permission.issubset(
                self.engine.blogger_permission))
            self.assertFalse(blogger_permission.issubset(
                self.engine.blogger_permission))

    def test_permissions_delete(self):
        self.app.config["BLOGGING_PERMISSIONS"] = True
        # Assuming "BLOGGING_PERMISSIONNAME" read failure
        # self.app.config["BLOGGING_PERMISSIONNAME"] = None
        user_id = "testuser"
        self._set_identity_loader(self.app.config.get(
            "BLOGGING_PERMISSIONNAME", "blogger"))

        with self.client:
            # Anonymous user cannot delete
            response = self.client.post("/blog/delete/%s/" % self.pids[0])
            self.assertEqual(response.status_code, 401)

            self.login(user_id)
            # non blogger cannot delete posts
            response = self.client.post("/blog/delete/%s/" % self.pids[0])
            self.assertEqual(response.status_code, 302)  # will be redirected
            self.logout()

            self.login(user_id, blogger=True)
            response = self.client.post("/blog/delete/%s/" % self.pids[0],
                                        follow_redirects=True)
            assert "Your post was successfully deleted" in str(response.data)

            # a user cannot delete another person's post
            self.assertEquals(current_user.get_id(), user_id)
            response = self.client.post("/blog/delete/%s/" % self.pids[10],
                                        follow_redirects=True)
            assert "You do not have the rights to delete this post" in \
                   str(response.data)

            test_permission = Permission(RoleNeed("testblogger"))
            blogger_permission = Permission(RoleNeed("blogger"))
            self.assertFalse(test_permission.issubset(
                self.engine.blogger_permission))
            self.assertTrue(blogger_permission.issubset(
                self.engine.blogger_permission))


class TestViewsWithCache(TestViews):

    def _create_blogging_engine(self):
        cache = Cache(self.app, config={"CACHE_TYPE": "simple"})
        return BloggingEngine(self.app, self.storage, cache=cache)


class TestViewsWithUnicode(TestViews):

    def setUp(self):
        TestViews.setUp(self)

        for i in range(20):
            tags = ["unicode hello"] if i < 10 else ["unicode world"]
            user = "testuser" if i < 10 else "newuser"
            self.storage.save_post(
                title=u'{0}_{1}'.format(get_random_unicode(15), i),
                text=u'{0}_{1}'.format(get_random_unicode(200), i),
                user_id=user, tags=tags)

    def test_editor_edit_page(self):
        pass

    def test_editor_post(self):
        pass


@mock_dynamodb2
class TestViewsWithDynamoDB(TestViews):

    def _create_storage(self):
        """Mocked AWS Credentials for moto."""
        os.environ["AWS_ACCESS_KEY_ID"] = "testing"
        os.environ["AWS_SECRET_ACCESS_KEY"] = "testing"
        os.environ["AWS_SECURITY_TOKEN"] = "testing"
        os.environ["AWS_SESSION_TOKEN"] = "testing"
        os.environ["AWS_DEFAULT_REGION"] = "us-west-2"
        from flask_blogging.dynamodbstorage import DynamoDBStorage
        self.storage = DynamoDBStorage(table_prefix="test_")

    def tearDown(self):
        self.storage._client.delete_table(TableName='test_blog_posts')
        self.storage._client.delete_table(TableName='test_tag_posts')

**-****-****-****-**
test/utils.py
# http://stackoverflow.com/questions/1477294/generate-random-utf-8-string-in-python

import random


def get_random_unicode(length):

    try:
        get_char = unichr
    except NameError:
        get_char = chr

    # Update this to include code point ranges to be sampled
    include_ranges = [
            (0x0021, 0x0021),
            (0x0023, 0x0026),
            (0x0028, 0x007E),
            (0x00A1, 0x00AC),
            (0x00AE, 0x00FF),
            (0x0100, 0x017F),
            (0x0180, 0x024F),
            (0x2C60, 0x2C7F),
            (0x16A0, 0x16F0),
            (0x0370, 0x0377),
            (0x037A, 0x037E),
            (0x0384, 0x038A),
            (0x038C, 0x038C),
            ]

    alphabet = [
            get_char(code_point) for current_range in include_ranges
            for code_point in range(current_range[0], current_range[1] + 1)
            ]

    return ''.join(random.choice(alphabet) for i in range(length))

**-****-****-****-**
test/plugin.py
from flask_blogging import signals, BloggingEngine
from flask import Blueprint
from feedwerk.atom import AtomFeed


# receivers for various signals
def blueprint_created_receiver(sender, engine, blueprint):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(blueprint, Blueprint)
    engine.ctr_blueprint_created += 1


def sitemap_posts_receiver(sender, engine, posts):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(posts, list)
    engine.ctr_sitemap_posts += 1


def feed_posts_fetched_receiver(sender, engine, posts):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(posts, list)
    engine.ctr_feed_posts_fetched += 1


def feed_posts_processed_receiver(sender, engine, feed):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(feed, AtomFeed)
    engine.ctr_feed_posts_processed += 1


def index_posts_receiver(sender, engine, posts, meta):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(posts, list)
    isinstance(meta, dict)
    isinstance(meta["count"], int)
    isinstance(meta["page"], int)
    engine.ctr_index_posts += 1


def page_by_id_receiver(sender, engine, post, meta):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(post, dict)
    isinstance(meta, dict)
    isinstance(meta["post_id"], int)
    isinstance(meta["slug"], str)
    engine.ctr_page_by_id += 1


def posts_by_tag_receiver(sender, engine, posts, meta):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(posts, list)
    isinstance(meta, dict)
    isinstance(meta["tag"], str)
    isinstance(meta["count"], int)
    isinstance(meta["page"], int)
    engine.ctr_posts_by_tag += 1


def posts_by_author_receiver(sender, engine, posts, meta):
    assert sender == engine.app
    isinstance(engine, BloggingEngine)
    isinstance(posts, list)
    isinstance(meta, dict)
    isinstance(meta["user_id"], str)
    isinstance(meta["count"], int)
    isinstance(meta["page"], int)
    engine.ctr_posts_by_author += 1


def register(app):
    signals.blueprint_created.connect(blueprint_created_receiver)

    signals.sitemap_posts_fetched.connect(sitemap_posts_receiver)
    signals.sitemap_posts_processed.connect(sitemap_posts_receiver)

    signals.feed_posts_fetched.connect(feed_posts_fetched_receiver)
    signals.feed_posts_processed.connect(feed_posts_processed_receiver)

    signals.index_posts_fetched.connect(index_posts_receiver)
    signals.index_posts_processed.connect(index_posts_receiver)

    signals.page_by_id_fetched.connect(page_by_id_receiver)
    signals.page_by_id_processed.connect(page_by_id_receiver)

    signals.posts_by_tag_fetched.connect(posts_by_tag_receiver)
    signals.posts_by_tag_processed.connect(posts_by_tag_receiver)

    signals.posts_by_author_fetched.connect(posts_by_author_receiver)
    signals.posts_by_author_processed.connect(posts_by_author_receiver)


def disconnect_receivers(app):
    signals.blueprint_created.disconnect(blueprint_created_receiver)

    signals.sitemap_posts_fetched.disconnect(sitemap_posts_receiver)
    signals.sitemap_posts_processed.disconnect(sitemap_posts_receiver)

    signals.feed_posts_fetched.disconnect(feed_posts_fetched_receiver)
    signals.feed_posts_processed.disconnect(feed_posts_processed_receiver)

    signals.index_posts_fetched.disconnect(index_posts_receiver)
    signals.index_posts_processed.disconnect(index_posts_receiver)

    signals.page_by_id_fetched.disconnect(page_by_id_receiver)
    signals.page_by_id_processed.disconnect(page_by_id_receiver)

    signals.posts_by_tag_fetched.disconnect(posts_by_tag_receiver)
    signals.posts_by_tag_processed.disconnect(posts_by_tag_receiver)

    signals.posts_by_author_fetched.disconnect(posts_by_author_receiver)
    signals.posts_by_author_processed.disconnect(posts_by_author_receiver)

**-****-****-****-**
test/test_sqlastorage.py
try:
    from builtins import range
except ImportError:
    pass
import unittest
import unittest.mock
import tempfile
import os
from flask_blogging.sqlastorage import SQLAStorage
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from test import FlaskBloggingTestCase
import sqlalchemy as sqla
from flask_sqlalchemy import SQLAlchemy
import time
try:
    from MySQLdb import _mysql
    HAS_MYSQL = True
except ImportError:
    HAS_MYSQL = False
try:
    import psycopg2
    HAS_POSTGRES = True
except ImportError:
    HAS_POSTGRES = False


class TestSQLiteStorage(FlaskBloggingTestCase):

    def _create_storage(self):
        temp_dir = tempfile.gettempdir()
        self._dbfile = os.path.join(temp_dir, "temp.db")
        self._engine = create_engine('sqlite:///'+self._dbfile)
        self._meta = sqla.MetaData()
        self.storage = SQLAStorage(self._engine, metadata=self._meta)
        self._meta.create_all(bind=self._engine)

    def setUp(self):
        FlaskBloggingTestCase.setUp(self)
        self._create_storage()

    def tearDown(self):
        os.remove(self._dbfile)

    def test_post_table_exists(self):
        table_name = "post"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['id', 'title', 'text', 'post_date',
                                'last_modified_date', 'draft']
            self.assertListEqual(columns, expected_columns)

    def test_tag_table_exists(self):
        table_name = "tag"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['id', 'text']
            self.assertListEqual(columns, expected_columns)

    def test_tag_post_table_exists(self):
        table_name = "tag_posts"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['tag_id', 'post_id']
            self.assertListEqual(columns, expected_columns)

    def test_user_post_table_exists(self):
        table_name = "user_posts"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['user_id', 'post_id']
            self.assertListEqual(columns, expected_columns)

    def test_user_post_table_consistency(self):
        # check if the user post table updates the user_id
        user_id = 1
        post_id = 5
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=["hello", "world"])
        posts = self.storage.get_posts()
        self.assertEqual(len(posts), 1)
        self.storage.save_post(title="Title", text="Sample Text",
                               user_id="newuser", tags=["hello", "world"],
                               post_id=pid)
        self.assertEqual(len(posts), 1)
        return

    def _test_user_post_model_consistency(self):
        # check if the user post table updates the user_id - DISABLED
        user_id = 1
        post_id = 5
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=["hello", "world"])
        with self._engine.begin() as conn:
            from flask_blogging.sqlastorage import Post
            Session = sessionmaker()
            Session.configure(bind=self._engine)
            session = Session()
            posts = session.query(Post).all()

            self.assertEqual(len(posts), 1)
            post = posts[0]
            self.assertEqual(post.title, "Title")
            self.assertEqual(post.text, "Sample Text")
            self.assertEqual(post.id, pid)
        return

    def test_tags_uniqueness(self):
        table_name = "tag"
        metadata = self._meta
        table = metadata.tables[table_name]
        with self._engine.begin() as conn:
            statement = table.insert().values(text="test_tag")
            conn.execute(statement)
        # reentering same tag should raise exception
        with self._engine.begin() as conn:
            statement = table.insert().values(text="test_tag")
            self.assertRaises(sqla.exc.IntegrityError, conn.execute, statement)

    def test_tags_consistency(self):
        # check that when tag is updated, the posts get updated
        tags = ["hello", "world"]
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=tags)
        post = self.storage.get_post_by_id(pid)
        self.assertEqual(len(post["tags"]), 2)
        tags.pop()
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=tags, post_id=pid)
        post = self.storage.get_post_by_id(pid)
        self.assertEqual(len(post["tags"]), 1)

    def test_tag_post_uniqueness(self):
        self.storage.save_post(title="Title", text="Sample Text",
                               user_id="user", tags=["tags"])
        table_name = "tag_posts"
        metadata = self._meta
        table = metadata.tables[table_name]
        with self._engine.begin() as conn:
            statement = table.insert().values(tag_id=1, post_id=1)
            self.assertRaises(sqla.exc.IntegrityError, conn.execute, statement)

    def test_user_post_uniqueness(self):
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        table_name = "user_posts"
        metadata = sqla.MetaData()
        metadata.reflect(bind=self._engine)
        table = metadata.tables[table_name]
        # reentering same user should raise exception
        with self._engine.begin() as conn:
            statement = table.insert().values(user_id="testuser",
                                              post_id=pid)
            self.assertRaises(sqla.exc.IntegrityError, conn.execute, statement)

    def test_bind_database(self):
        # self.storage._create_all_tables()
        self.test_post_table_exists()
        self.test_tag_table_exists()
        self.test_tag_post_table_exists()
        self.test_user_post_table_exists()

    @unittest.mock.patch('flask_blogging.sqlastorage.SQLAStorage._logger', unittest.mock.Mock())
    def test_save_post(self):
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"], post_id=1)
        p = self.storage.get_post_by_id(2)
        self.assertIsNone(p)

        # invalid post_id will be treated as inserts
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"],
                                     post_id=5)
        self.assertNotEqual(pid, 5)
        self.assertEqual(pid, 2)
        p = self.storage.get_post_by_id(2)
        self.assertIsNotNone(p)

    @unittest.mock.patch('flask_blogging.sqlastorage.SQLAStorage._logger', unittest.mock.Mock())
    def test_delete_post(self):
        # insert, check exists, delete, check doesn't exist anymore
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        p = self.storage.get_post_by_id(pid)
        self.assertIsNotNone(p)
        self.storage.delete_post(pid)
        p = self.storage.get_post_by_id(pid)
        self.assertIsNone(p)

        # insert again.
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"],
                                     post_id=1)
        p = self.storage.get_post_by_id(pid)
        self.assertIsNotNone(p)

    def test_get_post_by_id(self):
        pid1 = self.storage.save_post(title="Title1", text="Sample Text1",
                                      user_id="testuser",
                                      tags=["hello", "world"])
        pid2 = self.storage.save_post(title="Title2", text="Sample Text2",
                                      user_id="testuser",
                                      tags=["hello", "my", "world"])

        post = self.storage.get_post_by_id(pid1)
        self._assert_post(post, "Title1", "Sample Text1", "testuser",
                          ["HELLO", "WORLD"])

        post = self.storage.get_post_by_id(pid2)
        self._assert_post(post, "Title2", "Sample Text2", "testuser",
                          ["HELLO", "MY", "WORLD"])

    def _assert_post(self, post, title, text, user_id, tags):
        tags = set([t.upper() for t in tags])
        self.assertSetEqual(set(post["tags"]), tags)
        self.assertEqual(post["title"], title)
        self.assertEqual(post["text"], text)
        self.assertEqual(post["user_id"], user_id)

    def test_get_posts(self):
        self._create_dummy_data()

        # test default queries
        posts = self.storage.get_posts()
        self.assertEqual(len(posts), 10)
        ctr = 19
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr -= 1

        posts = self.storage.get_posts(recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 0
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1

        # test count and offset
        posts = self.storage.get_posts(count=5, offset=5, recent=False)
        self.assertEqual(len(posts), 5)
        ctr = 5
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1

        # test tag feature
        posts = self.storage.get_posts(tag="hello", recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 0
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1
        posts = self.storage.get_posts(tag="world", recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 10
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr += 1

        # test user_id feature
        posts = self.storage.get_posts(user_id="newuser", recent=True)
        self.assertEqual(len(posts), 10)
        ctr = 19
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr -= 1

        posts = self.storage.get_posts(user_id="testuser", recent=True)
        self.assertEqual(len(posts), 10)
        ctr = 9
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr -= 1
        return

    def test_count_posts(self):
        self._create_dummy_data()

        count = self.storage.count_posts()
        self.assertEqual(count, 20)

        # test user
        count = self.storage.count_posts(user_id="testuser")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(user_id="newuser")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(user_id="testuser")
        self.assertEqual(count, 10)

        # test tags
        count = self.storage.count_posts(tag="hello")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(tag="world")
        self.assertEqual(count, 10)

        # multiple queries
        count = self.storage.count_posts(user_id="testuser", tag="world")
        self.assertEqual(count, 0)

    def _create_dummy_data(self):
        for i in range(20):
            tags = ["hello"] if i < 10 else ["world"]
            user = "testuser" if i < 10 else "newuser"
            self.storage.save_post(title="Title%d" % i,
                                   text="Sample Text%d" % i,
                                   user_id=user, tags=tags)
            time.sleep(1)


@unittest.skipUnless(HAS_MYSQL, "Package mysql-python needs to be install to "
                                "run this test.")
class TestMySQLStorage(TestSQLiteStorage):

    def _create_storage(self):
        self._engine = create_engine(
            "mysql+mysqldb://root:root@localhost/flask_blogging")
        self._meta = sqla.MetaData()
        self.storage = SQLAStorage(self._engine, metadata=self._meta)
        self._meta.create_all(bind=self._engine)

    def tearDown(self):
        metadata = sqla.MetaData()
        metadata.reflect(bind=self._engine)
        metadata.drop_all(bind=self._engine)


@unittest.skipUnless(HAS_POSTGRES, "Requires psycopg2 Postgres package")
class TestPostgresStorage(TestSQLiteStorage):

    def _create_storage(self):
        self._engine = create_engine(
            "postgresql+psycopg2://postgres:postgres@localhost/flask_blogging")
        self._meta = sqla.MetaData()
        self.storage = SQLAStorage(self._engine, metadata=self._meta)
        self._meta.create_all(bind=self._engine)

    def tearDown(self):
        metadata = sqla.MetaData()
        metadata.reflect(bind=self._engine)
        metadata.drop_all(bind=self._engine)

    def test_user_post_model_consistency(self):
        pass


class TestSQLiteBinds(FlaskBloggingTestCase):

    def _conn_string(self, dbfile):
        return 'sqlite:///'+dbfile

    def setUp(self):
        FlaskBloggingTestCase.setUp(self)

        temp_dir = tempfile.gettempdir()
        self._dbfile = os.path.join(temp_dir, "temp.db")
        conn_string = self._conn_string(self._dbfile)
        self.app.config["SQLALCHEMY_BINDS"] = {
            'blog': conn_string
        }
        self._db = SQLAlchemy(self.app)
        self.storage = SQLAStorage(db=self._db, bind="blog")
        self._engine = self._db.get_engine(self.app, bind="blog")
        self._meta = self._db.metadata
        self._db.create_all(bind=["blog"])

    def tearDown(self):
        os.remove(self._dbfile)

    def test_post_table_exists(self):
        table_name = "post"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['id', 'title', 'text', 'post_date',
                                'last_modified_date', 'draft']
            self.assertListEqual(columns, expected_columns)

            # test models
            from flask_blogging.sqlastorage import Post
            self.assertNotEqual(Post, None)

    def test_tag_table_exists(self):
        table_name = "tag"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['id', 'text']
            self.assertListEqual(columns, expected_columns)

            # test models
            from flask_blogging.sqlastorage import Tag
            self.assertNotEqual(Tag, None)

    def test_tag_post_table_exists(self):
        table_name = "tag_posts"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['tag_id', 'post_id']
            self.assertListEqual(columns, expected_columns)

    def test_user_post_table_exists(self):
        table_name = "user_posts"
        with self._engine.begin() as conn:
            self.assertTrue(conn.dialect.has_table(conn, table_name))
            metadata = self._meta
            table = metadata.tables[table_name]
            columns = [t.name for t in table.columns]
            expected_columns = ['user_id', 'post_id']
            self.assertListEqual(columns, expected_columns)


@unittest.skipUnless(HAS_MYSQL, "Package mysql-python needs to be install to "
                                "run this test.")
class TestMySQLBinds(TestSQLiteBinds):

    def _conn_string(self, dbfile):
        return "mysql+mysqldb://root:root@localhost/flask_blogging"

    def tearDown(self):
        pass


@unittest.skipUnless(HAS_POSTGRES, "Requires psycopg2 Postgres package")
class TestPostgresBinds(TestSQLiteBinds):

    def _conn_string(self, dbfile):
        return "postgresql+psycopg2://postgres:postgres@localhost/flask_blogging"

    def tearDown(self):
        pass

**-****-****-****-**
test/test_gcdatastore.py
try:
    from builtins import range
except ImportError:
    pass
import unittest
import os
import itertools
import time
from test import FlaskBloggingTestCase
try:
    from flask_blogging.gcdatastore import GoogleCloudDatastore
    try:
        credentials = os.environ["GOOGLE_APPLICATION_CREDENTIALS"]
        HAS_GCDATASTORE = True
    except KeyError as ex:
        HAS_GCDATASTORE = False
except ImportError:
    HAS_GCDATASTORE = False

skip_message = """Need Google Cloud Datastore client and
                  service account credentials to run
                  this test."""

"""TODO: add support for Cloud Datastore Emulator."""


@unittest.skipUnless(HAS_GCDATASTORE, skip_message)
class TestGoogleCloudDatastore(FlaskBloggingTestCase):

    try:
        storage = GoogleCloudDatastore(namespace="Test")
    except Exception as ex:
        pass

    def setUp(self):
        FlaskBloggingTestCase.setUp(self)

    def tearDown(self):
        post_q = self.storage._client.query(kind='Post')
        post_q.keys_only()
        post_keys = list(post_q.fetch())
        post_keys = [e.key for e in post_keys]

        post_id_q = self.storage._client.query(kind='PostIDCounter')
        post_id_q.keys_only()
        post_id_keys = list(post_id_q.fetch())
        post_id_keys = [e.key for e in post_id_keys]

        if not post_keys:
            post_keys = []
        if not post_id_keys:
            post_id_keys = []

        keys = itertools.chain(post_keys, post_id_keys)
        keys = list(keys)
        if keys:
            self.storage._client.delete_multi(keys)

    def test_user_post_table_consistency(self):
        user_id = 1
        post_id = 5
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=["hello", "world"])
        posts = self.storage.get_posts()
        self.assertEqual(len(posts), 1)
        self.storage.save_post(title="Title", text="Sample Text",
                               user_id="newuser", tags=["hello", "world"],
                               post_id=pid)
        self.assertEqual(len(posts), 1)
        return

    def test_tags_consistency(self):
        # check that when tag is updated, the posts get updated
        tags = ["hello", "world"]
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=tags)
        post = self.storage.get_post_by_id(pid)
        self.assertEqual(len(post["tags"]), 2)
        tags.pop()
        pid = self.storage.save_post(title="Title", text="Sample Text",
                                     user_id="user", tags=tags, post_id=pid)
        post = self.storage.get_post_by_id(pid)
        self.assertEqual(len(post["tags"]), 1)

    def test_save_post(self):
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"], post_id='1')
        p = self.storage.get_post_by_id('2')
        self.assertIsNone(p)

        # invalid post_id will be treated as inserts
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"],
                                     post_id='5')
        self.assertNotEqual(pid, '5')
        p = self.storage.get_post_by_id(pid)
        self.assertIsNotNone(p)

    def test_delete_post(self):
        # insert, check exists, delete, check doesn't exist anymore
        pid = self.storage.save_post(title="Title1", text="Sample Text",
                                     user_id="testuser",
                                     tags=["hello", "world"])
        p = self.storage.get_post_by_id(pid)
        self.assertIsNotNone(p)
        self.storage.delete_post(pid)
        p = self.storage.get_post_by_id(pid)
        self.assertIsNone(p)

        # insert again.
        pid1 = self.storage.save_post(title="Title1", text="Sample Text",
                                      user_id="testuser",
                                      tags=["hello", "world"],
                                      post_id=pid)
        p = self.storage.get_post_by_id(pid1)
        self.assertNotEqual(pid, pid1)
        self.assertIsNotNone(p)

    def test_get_post_by_id(self):
        pid1 = self.storage.save_post(title="Title1", text="Sample Text1",
                                      user_id="testuser",
                                      tags=["hello", "world"])
        pid2 = self.storage.save_post(title="Title2", text="Sample Text2",
                                      user_id="testuser",
                                      tags=["hello", "my", "world"])

        post = self.storage.get_post_by_id(pid1)
        self._assert_post(post, "Title1", "Sample Text1", "testuser",
                          ["HELLO", "WORLD"])

        post = self.storage.get_post_by_id(pid2)
        self._assert_post(post, "Title2", "Sample Text2", "testuser",
                          ["HELLO", "MY", "WORLD"])

    def _assert_post(self, post, title, text, user_id, tags):
        tags = set([t.upper() for t in tags])
        self.assertSetEqual(set(post["tags"]), tags)
        self.assertEqual(post["title"], title)
        self.assertEqual(post["text"], text)
        self.assertEqual(post["user_id"], user_id)

    def test_get_posts(self):
        self._create_dummy_data()

        # test default queries
        posts = self.storage.get_posts()
        self.assertEqual(len(posts), 10)
        ctr = 19
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr -= 1

        posts = self.storage.get_posts(recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 0
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1

        # test count and offset
        posts = self.storage.get_posts(count=5, offset=5, recent=False)
        self.assertEqual(len(posts), 5)
        ctr = 5
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1

        # test tag feature
        posts = self.storage.get_posts(tag="hello", recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 0
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr += 1
        posts = self.storage.get_posts(tag="world", recent=False)
        self.assertEqual(len(posts), 10)
        ctr = 10
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr += 1

        # test user_id feature
        posts = self.storage.get_posts(user_id="newuser", recent=True)
        self.assertEqual(len(posts), 10)
        ctr = 19
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "newuser", ["world"])
            ctr -= 1

        posts = self.storage.get_posts(user_id="testuser", recent=True)
        self.assertEqual(len(posts), 10)
        ctr = 9
        for post in posts:
            self._assert_post(post, "Title%d" % ctr,
                              "Sample Text%d" % ctr, "testuser", ["hello"])
            ctr -= 1
        return

    def test_count_posts(self):
        self._create_dummy_data()

        count = self.storage.count_posts()
        self.assertEqual(count, 20)

        # test user
        count = self.storage.count_posts(user_id="testuser")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(user_id="newuser")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(user_id="testuser")
        self.assertEqual(count, 10)

        # test tags
        count = self.storage.count_posts(tag="hello")
        self.assertEqual(count, 10)

        count = self.storage.count_posts(tag="world")
        self.assertEqual(count, 10)

    def _create_dummy_data(self):
        for i in range(20):
            tags = ["hello"] if i < 10 else ["world"]
            user = "testuser" if i < 10 else "newuser"
            self.storage.save_post(title="Title%d" % i,
                                   text="Sample Text%d" % i,
                                   user_id=user, tags=tags)
            time.sleep(0.1)

**-****-****-****-**
example/blog_gcdatastore.py
from flask import Flask, render_template_string, redirect
from flask_login import UserMixin, LoginManager, login_user, logout_user
from flask_blogging import SQLAStorage, BloggingEngine
from flask_blogging.gcdatastore import GoogleCloudDatastore
from flask_fileupload.storage.gcstorage import GoogleCloudStorage
from flask_fileupload import FlaskFileUpload
import os

os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "/path/to/credentials.json"

app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["BLOGGING_TWITTER_USERNAME"] = "@me"
app.config["BLOGGING_ALLOW_FILEUPLOAD"] = True
app.config["FILEUPLOAD_LOCALSTORAGE_IMG_FOLDER"] = "fileupload"
app.config["FILEUPLOAD_PREFIX"] = "/fileupload"
app.config["FILEUPLOAD_ALLOWED_EXTENSIONS"] = ["png", "jpg", "jpeg", "gif"]

# extensions

"""Google Cloud Storage configuration docs:
   https://github.com/Speedy1991/Flask-FileUpload/tree/master/doc/google_cloud_storage.md
"""
gcstorage = GoogleCloudStorage(app)
file_upload = FlaskFileUpload(app, storage=gcstorage)

gc_datastore = GoogleCloudDatastore()
blog_engine = BloggingEngine(app, gc_datastore, file_upload=file_upload)
login_manager = LoginManager(app)


class User(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

    def get_name(self):
        return "Paul Dirac"  # typically the user's name

@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    return User(user_id)

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
        &nbsp&nbsp<a href="/fileupload/">FileUpload</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User("testuser")
    login_user(user)
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()
    return redirect("/")


if __name__ == "__main__":
    app.run(debug=True, port=8000, use_reloader=True)

**-****-****-****-**
example/blog_dynamodb.py
from flask import Flask, render_template_string, redirect
from flask_login import UserMixin, LoginManager, login_user, logout_user
from flask_blogging import BloggingEngine
from flask_blogging.dynamodbstorage import DynamoDBStorage
from flask_fileupload.storage.s3storage import S3Storage
from flask_fileupload import FlaskFileUpload

app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = ""
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["BLOGGING_ALLOW_FILEUPLOAD"] = True
app.config["FILEUPLOAD_S3_BUCKET"]='quandldata'
app.config["FILEUPLOAD_PREFIX"] = "/upload"
app.config["FILEUPLOAD_ALLOWED_EXTENSIONS"] = ["png", "jpg", "jpeg", "gif"]


# extensions
s3storage = S3Storage(app)
file_upload = FlaskFileUpload(app, storage=s3storage)

dyn_storage = DynamoDBStorage(endpoint_url='http://localhost:8000')
blog_engine = BloggingEngine(app, dyn_storage, file_upload=file_upload)
login_manager = LoginManager(app)

class User(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

    def get_name(self):
        return "Paul Dirac"  # typically the user's name

@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    return User(user_id)

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User("testuser")
    login_user(user)
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()
    return redirect("/")


if __name__ == "__main__":
    app.run(debug=True, port=8001, use_reloader=True)

**-****-****-****-**
example/__init__.py
__author__ = 'Gouthaman Balaraman'

**-****-****-****-**
example/blog_admin.py
from flask import Flask, render_template_string, redirect
from flask_sqlalchemy import SQLAlchemy
from flask_login import UserMixin, LoginManager, login_user, logout_user
from flask_blogging import SQLAStorage, BloggingEngine
from flask_admin import Admin
from flask_admin.contrib.sqla import ModelView

db = SQLAlchemy()


class User(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True)
    email = db.Column(db.String(120), unique=True)

    def __repr__(self):
        return '<User %r>' % self.username
     
    def get_name(self):
        return self.username


app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["FILEUPLOAD_LOCALSTORAGE_IMG_FOLDER"] = "fileupload"
app.config["FILEUPLOAD_PREFIX"] = "/fileupload"
app.config["FILEUPLOAD_ALLOWED_EXTENSIONS"] = ["png", "jpg", "jpeg", "gif"]
app.config["SQLALCHEMY_DATABASE_URI"] = 'sqlite:////tmp/blog.db'
db.init_app(app)

with app.app_context():
    # extensions
    sql_storage = SQLAStorage(db=db)
    login_manager = LoginManager(app)
    db.create_all()
    # create test user if not exists
    user = User.query.filter_by(username="testuser").first()
    if user is None:
        user = User("testuser", email="testuser2@gmail.com")
        db.session.add(user)
        db.session.commit()
blog_engine = BloggingEngine(app, sql_storage)
admin = Admin(app, name="Flask-Blogging", template_mode='bootstrap3')
Post = sql_storage.post_model
Tag = sql_storage.tag_model
admin.add_view(ModelView(Post, db.session))
admin.add_view(ModelView(Tag, db.session))
admin.add_view(ModelView(User, db.session))

@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    user = User.query.filter_by(id=user_id).first()
    print (user_id, user.get_name())
    return user

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
        &nbsp&nbsp<a href="/fileupload/">FileUpload</a>
        &nbsp&nbsp<a href="/admin/">Admin</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User.query.filter_by(username="testuser").first()
    login_user(user)
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()
    return redirect("/")


if __name__ == "__main__":
    
    app.run(debug=True, port=8000, use_reloader=True)

**-****-****-****-**
example/blog_cache.py
"""
This example demonstrates the use of caches
"""
from flask import Flask, render_template_string, redirect, current_app
from sqlalchemy import create_engine, MetaData
from flask_login import UserMixin, LoginManager, login_user, logout_user, current_user
from flask_blogging import SQLAStorage, BloggingEngine
from flask_principal import identity_changed, Identity, AnonymousIdentity, identity_loaded, \
    UserNeed, RoleNeed
from flask_caching import Cache


app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["BLOGGING_PERMISSIONS"] = False  # Enable blogger permissions'
app.config["CACHE_TYPE"] = "simple"

# create cache
cache = Cache(app)

# extensions
engine = create_engine('sqlite:////tmp/blog.db')
meta = MetaData()
sql_storage = SQLAStorage(engine, metadata=meta)
blog_engine = BloggingEngine(app, sql_storage, cache=cache)
login_manager = LoginManager(app)
meta.create_all(bind=engine)

class User(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

    def get_name(self):
        return "Paul Dirac"  # typically the user's name


@identity_loaded.connect_via(app)
def on_identity_loaded(sender, identity):
    identity.user = current_user
    if hasattr(current_user, "id"):
        identity.provides.add(UserNeed(current_user.id))
    identity.provides.add(RoleNeed("blogger"))


@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    return User(user_id)

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User("testuser")
    login_user(user)

    # notify the change of role
    identity_changed.send(current_app._get_current_object(),
                          identity=Identity("testuser"))
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()

    # notify the change of role
    identity_changed.send(current_app._get_current_object(),
                          identity=AnonymousIdentity())
    return redirect("/")


if __name__ == "__main__":
    app.run(debug=True, port=8000, use_reloader=True)

**-****-****-****-**
example/main.py
from flask import Flask, render_template_string, redirect
from sqlalchemy import create_engine, MetaData
from flask_login import UserMixin, LoginManager, login_user, logout_user
from flask_blogging import SQLAStorage, BloggingEngine

app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["BLOGGING_TWITTER_USERNAME"] = "@me"
app.config["FILEUPLOAD_LOCALSTORAGE_IMG_FOLDER"] = "fileupload"
app.config["FILEUPLOAD_PREFIX"] = "/fileupload"
app.config["FILEUPLOAD_ALLOWED_EXTENSIONS"] = ["png", "jpg", "jpeg", "gif"]

# extensions
engine = create_engine('sqlite:////tmp/blog.db')
meta = MetaData()
sql_storage = SQLAStorage(engine, metadata=meta)
blog_engine = BloggingEngine(app, sql_storage)
login_manager = LoginManager(app)
meta.create_all(bind=engine)


class User(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

    def get_name(self):
        return "Paul Dirac"  # typically the user's name

@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    return User(user_id)

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
        &nbsp&nbsp<a href="/fileupload/">FileUpload</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User("testuser")
    login_user(user)
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()
    return redirect("/")


if __name__ == "__main__":
    app.run(debug=True, port=8000, use_reloader=True)

**-****-****-****-**
example/blog_plugins.py
"""
This example demonstrates the use of plugins
"""


from flask import Flask, render_template_string, redirect
from sqlalchemy import create_engine, MetaData
from flask_login import UserMixin, LoginManager, login_user, logout_user
from flask_blogging import SQLAStorage, BloggingEngine

app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["BLOGGING_PLUGINS"] = ["example.plugins.add_view",
                                  "example.plugins.tag_cloud"]

# extensions
engine = create_engine('sqlite:////tmp/blog.db')
meta = MetaData()
sql_storage = SQLAStorage(engine, metadata=meta)
blog_engine = BloggingEngine(app, sql_storage)
login_manager = LoginManager(app)
meta.create_all(bind=engine)


class User(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

    def get_name(self):
        return "Paul Dirac"  # typically the user's name

@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    return User(user_id)

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User("testuser")
    login_user(user)
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()
    return redirect("/")


if __name__ == "__main__":
    app.run(debug=True, port=8000, use_reloader=False)

**-****-****-****-**
example/blog_roles.py
from flask import Flask, render_template_string, redirect, current_app
from sqlalchemy import create_engine, MetaData
from flask_login import UserMixin, LoginManager, login_user, logout_user, current_user
from flask_blogging import SQLAStorage, BloggingEngine
from flask_principal import identity_changed, Identity, AnonymousIdentity, identity_loaded, \
    UserNeed, RoleNeed


app = Flask(__name__)
app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
app.config["BLOGGING_URL_PREFIX"] = "/blog"
app.config["BLOGGING_DISQUS_SITENAME"] = "test"
app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
app.config["BLOGGING_SITENAME"] = "My Site"
app.config["BLOGGING_PERMISSIONS"] = True  # Enable blogger permissions

# extensions
engine = create_engine('sqlite:////tmp/blog.db')
meta = MetaData()
sql_storage = SQLAStorage(engine, metadata=meta)
blog_engine = BloggingEngine(app, sql_storage)
login_manager = LoginManager(app)
meta.create_all(bind=engine)

class User(UserMixin):
    def __init__(self, user_id):
        self.id = user_id

    def get_name(self):
        return "Paul Dirac"  # typically the user's name


@identity_loaded.connect_via(app)
def on_identity_loaded(sender, identity):
    identity.user = current_user
    if hasattr(current_user, "id"):
        identity.provides.add(UserNeed(current_user.id))
    #identity.provides.add(RoleNeed("blogger"))


@login_manager.user_loader
@blog_engine.user_loader
def load_user(user_id):
    return User(user_id)

index_template = """
<!DOCTYPE html>
<html>
    <head> </head>
    <body>
        {% if current_user.is_authenticated %}
            <a href="/logout/"> Logout </a>
        {% else %}
            <a href="/login/"> Login </a>
        {% endif %}
        &nbsp&nbsp<a href="/blog/"> Blog </a>
        &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
        &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
    </body>
</html>
"""

@app.route("/")
def index():
    return render_template_string(index_template)

@app.route("/login/")
def login():
    user = User("testuser")
    login_user(user)

    # notify the change of role
    identity_changed.send(current_app._get_current_object(),
                          identity=Identity("testuser"))
    return redirect("/blog")

@app.route("/logout/")
def logout():
    logout_user()

    # notify the change of role
    identity_changed.send(current_app._get_current_object(),
                          identity=AnonymousIdentity())
    return redirect("/")


if __name__ == "__main__":
    app.run(debug=True, port=8000, use_reloader=True)

**-****-****-****-**
example/plugins/__init__.py
__author__ = 'Gouthaman Balaraman'

**-****-****-****-**
example/plugins/tag_cloud/__init__.py
from flask_blogging import signals
from flask_blogging.sqlastorage import SQLAStorage
import sqlalchemy as sqla
from sqlalchemy import func


def get_tag_data(sqla_storage):
    engine = sqla_storage.engine
    with engine.begin() as conn:
        tag_posts_table = sqla_storage.tag_posts_table
        tag_table = sqla_storage.tag_table

        tag_cloud_stmt = sqla.select([
            tag_table.c.text,func.count(tag_posts_table.c.tag_id)]).group_by(
            tag_posts_table.c.tag_id
        ).where(tag_table.c.id == tag_posts_table.c.tag_id).limit(10)
        tag_cloud = conn.execute(tag_cloud_stmt).fetchall()
    return tag_cloud


def get_tag_cloud(app, engine, posts, meta, count, page):
    if isinstance(engine.storage, SQLAStorage):
        tag_cloud = get_tag_data(engine.storage)
        meta["tag_cloud"] = tag_cloud
    else:
        raise RuntimeError("Plugin only supports SQLAStorage. Given storage"
                           "not supported")
    return


def register(app):
    signals.index_posts_fetched.connect(get_tag_cloud)
    return

**-****-****-****-**
example/plugins/similar_posts/__init__.py
__author__ = 'Gouthaman Balaraman'

**-****-****-****-**
example/plugins/add_view/__init__.py

from flask_blogging import signals
from flask_blogging.views import sitemap


def add_custom_view(app, engine, blueprint):
    """
    Make sitemap page available from /sitemap as well
    """
    blueprint.add_url_rule("/sitemap", view_func=sitemap)


def register(app):
    signals.blueprint_created.connect(add_custom_view)




**-****-****-****-**
example/deploy/Dockerfile
FROM python:3.4
ENV PYTHONUNBUFFERED 1
RUN mkdir /app
WORKDIR /app
ADD docker-requirements.txt /app/
RUN apt-get update
RUN apt-get install sqlite3
RUN pip install -r docker-requirements.txt
ADD . /app/
**-****-****-****-**
example/deploy/docker-requirements.txt
flask-blogging
uwsgi
**-****-****-****-**
example/deploy/uwsgi.ini
[uwsgi]
http =  0.0.0.0:8000
master = True
processes = 4
threads = 2
module = main:app
**-****-****-****-**
example/deploy/README
This is only example deploy stuff. Please modify to fit your needs.
To use this kit, just copy the whole folder into example root and run
docker-compose up (--force-recreate --build)
Use --force-recreate --build if you change any file which gets copied
into the docker.
The example docker-compose can be easily extended with e.g. nginx,
persitent database (remember, nothing is persitent in a docker container
as long you don't make it persistent). Best way making things persistent
is in my opinion with the volumes_from feature. If an example is needed,
feel free to open a new issue.

FAQ:

Q: Where is it running?
A: Inside the container the uwsgi is running on 0.0.0.0:8000 this is mapped
   via the docker-compose to the host on port 80.

Q: Why can't i see anything on localhost:80?
A: If you running on windows with virtualbox your machine creates a own ip
   You can check the ip with: docker-machine ip default

**-****-****-****-**
example/deploy/docker-compose.yml
version: '2'
services:
  api:
    build: .
    command: uwsgi uwsgi.ini
    ports:
      - "80:8000"
**-****-****-****-**
docs/index.rst
.. Flask-Blogging documentation master file, created by
   sphinx-quickstart on Fri May 29 12:51:58 2015.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

==============
Flask-Blogging
==============

Flask-Blogging is a Flask extension for adding Markdown based blog support to your site.
It provides a flexible mechanism to store the data in the database
of your choice. It is meant to work with the authentication
provided by packages such as
`Flask-Login <https://flask-login.readthedocs.org/en/latest/>`_ or
`Flask-Security <https://pythonhosted.org/Flask-Security/>`_.

The philosophy behind this extension is to provide a lean app based on Markdown
to provide blog support to your existing web application. If you already have a
web app and you need to have a blog to communicate with your user or to
promote your site through content based marketing, then Flask-Blogging would help
you quickly get a blog up and running.

Out of the box, Flask-Blogging has support for the following:

- Bootstrap based site
- Markdown based blog editor
- Upload and manage static assets for the blog
- Models to store blog
- Authentication of User's choice
- Sitemap, ATOM support
- Disqus support for comments
- Google analytics for usage tracking
- Open Graph meta tags
- Permissions enabled to control which users can create/edit blogs
- Integrated Flask-Cache based caching for optimization
- Well documented, tested, and extensible design
- DynamoDB storage for use in AWS
- Google Cloud Datastore support

.. contents::
   :local:
   :backlinks: none

Quick Start Example
===================

.. code:: python

    from flask import Flask, render_template_string, redirect
    from sqlalchemy import create_engine, MetaData
    from flask_login import UserMixin, LoginManager, login_user, logout_user
    from flask_blogging import SQLAStorage, BloggingEngine

    app = Flask(__name__)
    app.config["SECRET_KEY"] = "secret"  # for WTF-forms and login
    app.config["BLOGGING_URL_PREFIX"] = "/blog"
    app.config["BLOGGING_DISQUS_SITENAME"] = "test"
    app.config["BLOGGING_SITEURL"] = "http://localhost:8000"
    app.config["BLOGGING_SITENAME"] = "My Site"
    app.config["BLOGGING_KEYWORDS"] = ["blog", "meta", "keywords"]
    app.config["FILEUPLOAD_LOCALSTORAGE_IMG_FOLDER"] = "img_upload"
    app.config["FILEUPLOAD_PREFIX"] = "/fileupload"
    app.config["FILEUPLOAD_ALLOWED_EXTENSIONS"] = ["png", "jpg", "jpeg", "gif"]

    # extensions
    engine = create_engine('sqlite:////tmp/blog.db')
    meta = MetaData()
    sql_storage = SQLAStorage(engine, metadata=meta)
    blog_engine = BloggingEngine(app, sql_storage)
    login_manager = LoginManager(app)
    meta.create_all(bind=engine)


    class User(UserMixin):
        def __init__(self, user_id):
            self.id = user_id

        def get_name(self):
            return "Paul Dirac"  # typically the user's name

    @login_manager.user_loader
    @blog_engine.user_loader
    def load_user(user_id):
        return User(user_id)

    index_template = """
    <!DOCTYPE html>
    <html>
        <head> </head>
        <body>
            {% if current_user.is_authenticated %}
                <a href="/logout/"> Logout </a>
            {% else %}
                <a href="/login/"> Login </a>
            {% endif %}
            &nbsp&nbsp<a href="/blog/"> Blog </a>
            &nbsp&nbsp<a href="/blog/sitemap.xml">Sitemap</a>
            &nbsp&nbsp<a href="/blog/feeds/all.atom.xml">ATOM</a>
            &nbsp&nbsp<a href="/fileupload/">FileUpload</a>
        </body>
    </html>
    """

    @app.route("/")
    def index():
        return render_template_string(index_template)

    @app.route("/login/")
    def login():
        user = User("testuser")
        login_user(user)
        return redirect("/blog")

    @app.route("/logout/")
    def logout():
        logout_user()
        return redirect("/")


    if __name__ == "__main__":
        app.run(debug=True, port=8000, use_reloader=True)


The key components required to get the blog hooked is explained below. Please note
that as of Flask-Login 0.3.0 the ``is_authenticated`` attribute in the ``UserMixin``
is a property and not a method. Please use the appropriate option based on your
Flask-Login version. You can find more examples here in the
`Flask-Blogging github project page <https://github.com/gouthambs/Flask-Blogging/tree/master/example>`_.

Configuring your Application
============================

The ``BloggingEngine`` class is the gateway to configure blogging support
to your web app. You should create the ``BloggingEngine`` instance like this::

    blogging_engine = BloggingEngine()
    blogging_engine.init_app(app, storage)

You also need to pick the ``storage`` for blog. That can be done as::

    from sqlalchemy import create_engine, MetaData

    engine = create_engine("sqlite:////tmp/sqlite.db")
    meta = MetaData()
    storage = SQLAStorage(engine, metadata=meta)
    meta.create_all(bind=engine)

Here we have created the storage, and created all the tables
in the metadata. Once you have created the blogging engine,
storage, and all the tables in the storage, you can connect
with your app using the ``init_app`` method as shown below::

   blogging_engine.init_app(app, storage)

If you are using ``Flask-Sqlalchemy``, you can do the following::

    from flask_sqlalchemy import SQLAlchemy

    db = SQLAlchemy(app)
    storage = SQLAStorage(db=db)
    db.create_all()

One of the changes in version 0.3.1 is the ability for the user
to provide the ``metadata`` object. This has the benefit of the
table creation being passed to the user. Also, this gives the user
the ability to use the common metadata object, and hence helps
with the tables showing up in migrations while using Alembic.

As of version 0.5.2, support for the multi database scenario
under Flask-SQLAlchemy was added. When we have a multiple database
scenario, one can use the ``bind`` keyword in ``SQLAStorage`` to
specify the database to bind to, as shown below::

    # config value
    SQLALCHEMY_BINDS = {
        'blog': "sqlite:////tmp/blog.db"),
        'security': "sqlite:////tmp/security.db")
    }

The storage can be initialised as::

    db = SQLAlchemy(app)
    storage = SQLAStorage(db=db, bind="blog")
    db.create_all()

As of version 0.4.0, Flask-Cache integration is supported. In order
to use caching in the blogging engine, you need to pass the ``Cache``
instance to the ``BloggingEngine`` as::

    from flask_caching import Cache
    from flask_blogging import BloggingEngine

    blogging_engine = BloggingEngine(app, storage, cache)


*Flask-Blogging* lets the developer pick the authentication
that is suitable, and hence requires her to provide a way to load user
information. You will need to provide a `BloggingEngine.user_loader`
callback. This callback is used to load the user from the `user_id`
that is stored for each blog post. Just as in Flask-Login, it should take the
`unicode` `user_id` of a user, and return the corresponding user
object. For example::

    @blogging_engine.user_loader
    def load_user(userid):
        return User.get(userid)


For the blog to have a readable display name, the ``User`` class must
implement either the ``get_name`` method or the ``__str__`` method.

The ``BloggingEngine`` accepts an optional ``extensions`` argument. This is a list
of ``Markdown`` extensions objects to be used during the markdown processing step.

As of version 0.6.0, a plugin interface is available to add new functionality.
Custom processes can be added to the ``posts`` by subscribing to the
``post_process_before`` and ``post_process_after`` signals, and adding
new functionality to it.

The ``BloggingEngine`` also accepts ``post_processor`` argument, which can be
used to provide a custom post processor object to handle the processing
of Markdown text. One way to do this would be to inherit the default
``PostProcessor`` object and override ``process`` method.

In version 0.4.1 and onwards, the ``BloggingEngine`` object can be accessed
from your ``app`` as follows::

    engine = app.extensions["blogging"]

The engine method also exposes a ``get_posts`` method to get the recent posts
for display of posts in other views.

In earlier versions the same can be done using the key
``FLASK_BLOGGING_ENGINE`` instead of ``blogging``. The use of
``FLASK_BLOGGING_ENGINE`` key will be deprecated moving forward.


Models from SQLAStorage
-----------------------

`SQLAlchemy` ORM models for the `SQLAStorage` can be accessed after
configuration of the `SQLAStorage` object. Here is a quick example::

    storage = SQLAStorage(db=db)
    from flask_blogging.sqlastorage import Post, Tag  # Has to be after SQLAStorage initialization

These ORM models can be extremely convenient to use with Flask-Admin.



Adding Custom Markdown Extensions
---------------------------------

One can provide additional MarkDown extensions to the blogging engine.
One example usage is adding the ``codehilite`` MarkDown extension. Additional
extensions should be passed as a list while initializing the ``BlogggingEngine``
as shown::

    from markdown.extensions.codehilite import CodeHiliteExtension

    extn1 = CodeHiliteExtension({})
    blogging_engine = BloggingEngine(app, storage,extensions=[extn1])


This allows for the MarkDown to be processed using CodeHilite along with
the default extensions. Please note that one would also need to include
necessary static files in the ``view``, such as for code highlighting to work.

Extending using Markdown Metadata
---------------------------------

Let's say you want to include a summary for your blog post, and have it
show up along with the post. You don't need to modify the database or
the models to accomplish this. This is in fact supported by default by way
of Markdown metadata syntax. In your blog post, you can include metadata,
as shown below::

    Summary: This is a short summary of the blog post
    Keywords: Blog, specific, keywords

    This is the much larger blog post. There are lot of things
    to discuss here.

In the template ``page.html`` this metadata can be accessed as, ``post.meta.summary``
and can be populated in the way it is desired. The same metadata for each post
is also available in other template views like ``index.html``.

If included, the first summary will be used as the page's meta ``description``,
and Open Graph ``og:description``.

The (optional) blog post specific keywords are included in the page's meta
keywords in addition to ``BLOGGING_KEYWORDS`` (if configured). Any tags are also
added as meta keywords.



Extending using the plugin framework
------------------------------------

The plugin framework is a very powerful way to modify the behavior of the
blogging engine. Lets say you want to show the top 10 most popular tag in the
post. Lets show how one can do that using the plugins framework. As a first step,
we create our plugin::

    # plugins/tag_cloud/__init__.py
    from flask_blogging import signals
    from flask_blogging.sqlastorage import SQLAStorage
    import sqlalchemy as sqla
    from sqlalchemy import func


    def get_tag_data(sqla_storage):
        engine = sqla_storage.engine
        with engine.begin() as conn:
            tag_posts_table = sqla_storage.tag_posts_table
            tag_table = sqla_storage.tag_table

            tag_cloud_stmt = sqla.select([
                tag_table.c.text,func.count(tag_posts_table.c.tag_id)]).group_by(
                tag_posts_table.c.tag_id
            ).where(tag_table.c.id == tag_posts_table.c.tag_id).limit(10)
            tag_cloud = conn.execute(tag_cloud_stmt).fetchall()
        return tag_cloud


    def get_tag_cloud(app, engine, posts, meta):
        if isinstance(engine.storage, SQLAStorage):
            tag_cloud = get_tag_data(engine.storage)
            meta["tag_cloud"] = tag_cloud
        else:
            raise RuntimeError("Plugin only supports SQLAStorage. Given storage"
                               "not supported")
        return


    def register(app):
        signals.index_posts_fetched.connect(get_tag_cloud)
        return


The ``register`` method is what is invoked in order to register the plugin. We have
connected this plugin to the ``index_posts_fetched`` signal. So when the posts are
fetched to show on the index page, this signal will be fired, and this plugin will
be invoked. The plugin basically queries the table that stores the tags, and returns
the tag text and the number of times it is referenced. The data about the tag cloud
we are storing in the ``meta["tag_cloud"]`` which corresponds to the metadata variable.


Now in the `index.html` template, one can reference the ``meta.tag_cloud`` to access this
data for display. The plugin can be registered by setting the config variable as shown::

    app.config["BLOGGING_PLUGINS"] = ["plugins.tag_cloud"]



Configuration Variables
=======================

The Flask-Blogging extension can be configured by setting the following app
config variables. These arguments are passed to all the views. The
keys that are currently supported include:

- ``BLOGGING_SITENAME`` (*str*): The name of the blog to be used as the brand
  name. This is also used in the feed heading and ``og:site_name`` meta tag.
  (default "Flask-Blogging")
- ``BLOGGING_SITEURL`` (*str*): The url of the site. This is also used in the
  ``og:publisher`` meta tag.
- ``BLOGGING_BRANDURL`` (*str*): The url of the site brand.
- ``BLOGGING_TWITTER_USERNAME`` (*str*): @name to tag social sharing link with.
- ``BLOGGING_RENDER_TEXT`` (*bool*): Value to specify if the raw text (markdown)
  should be rendered to HTML. (default ``True``)
- ``BLOGGING_DISQUS_SITENAME`` (*str*): Disqus sitename for comments.
  A ``None`` value will disable comments. (default ``None``)
- ``BLOGGING_GOOGLE_ANALYTICS`` (*str*): Google analytics code for usage
  tracking. A ``None`` value will disable google analytics. (default ``None``)
- ``BLOGGING_URL_PREFIX`` (*str*) : The prefix for the URL of blog posts. A
  ``None`` value will have no prefix. (default ``None``)
- ``BLOGGING_FEED_LIMIT`` (*int*): The number of posts to limit to in the feed.
  If ``None``, then all are shown, else will be limited to this number. (default ``None``)
- ``BLOGGING_PERMISSIONS`` (*bool*): If ``True``, this will enable permissions
  for the blogging engine. With permissions enabled, the user will need to have
  "blogger" ``Role`` to edit or create blog posts. Other authenticated
  users will not have blog editing permissions. The concepts here derive
  from ``Flask-Principal``. (default ``False``)
- ``BLOGGING_PERMISSIONNAME`` (*str*): The role name used for permissions.
  It is effective, if "BLOGGING_PERMISSIONS" is "True". (default "blogger")
- ``BLOGGING_POSTS_PER_PAGE`` (*int*): The default number of posts per index page.
  to be displayed per page. (default 10)
- ``BLOGGING_CACHE_TIMEOUT`` (*int*): The timeout in seconds used to cache.
  the blog pages. (default 60)
- ``BLOGGING_PLUGINS`` (*list*): A list of plugins to register.
- ``BLOGGING_KEYWORDS`` (*list*): A list of meta keywords to include on each page.
- ``BLOGGING_ALLOW_FILEUPLOAD`` (*bool*): Allow static file uploads ``flask_fileupload``
- ``BLOGGING_ESCAPE_MARKDOWN`` (*bool*): Escape input markdown text input. This is ``False`` by
  default. Set this to ``True`` to forbid embedding HTML in markdown.

Blog Views
==========

There are various views that are exposed through Flask-Blogging. The URL for
the various views are:

- ``url_for('blogging.index')`` (GET): The index blog posts with the first
  page of articles. The ``meta`` variable passed into the view holds values
  for the keys ``is_user_blogger``, ``count`` and ``page``.
- ``url_for('blogging.page_by_id', post_id=<post_id>)`` (GET): The blog post
  corresponding to the ``post_id`` is retrieved. The ``meta`` variable passed
  into the view holds values for the keys ``is_user_blogger``, ``post_id`` and
  ``slug``.
- ``url_for('blogging.posts_by_tag', tag=<tag_name>)`` (GET): The list of blog
  posts corresponding to ``tag_name`` is returned. The ``meta`` variable passed
  into the view holds values for the keys ``is_user_blogger``, ``tag``, ``count`` and
  ``page``.
- ``url_for('blogging.posts_by_author', user_id=<user_id>)`` (GET): The list of
  blog posts written by the author ``user_id`` is returned. The ``meta`` variable passed
  into the view holds values for the keys ``is_user_blogger``, ``count``, ``user_id`` and
  ``pages``.
- ``url_for('blogging.editor')`` (GET, POST): The blog editor
  is shown. This view needs authentication and permissions (if enabled).
- ``url_for('blogging.delete', post_id=<post_id>)`` (POST): The blog post
  given by ``post_id`` is deleted. This view needs authentication and
  permissions (if enabled).
- ``url_for('blogging.sitemap')`` (GET): The sitemap
  with a link to all the posts is returned.
- ``url_for('blogging.feed')`` (GET): Returns ATOM feed URL.

The view can be easily customised by the user by overriding with their own templates. The template pages that need
to be customized are:

- ``blogging/index.html``: The blog index page used to serve index of posts, posts by tag, and posts by author
- ``blogging/editor.html``: The blog editor page.
- ``blogging/page.html``: The page that shows the given article.
- ``blogging/sitemap.xml``: The sitemap for the blog posts.

Permissions
===========

In version 0.3.0 Flask-Blogging, enables permissions based on Flask-Principal.
This addresses the issue of controlling which of the authenticated users can
have access to edit or create blog posts. Permissions are enabled by setting
``BLOGGING_PERMISSIONS`` to ``True``. Only users that have access to
``Role`` "blogger" will have permissions to create or edit blog posts.


Screenshots
===========
Blog Page
---------
.. image:: _static/blog_page.png

Blog Editor
-----------
.. image:: _static/blog_editor.png

Useful Tips
===========

- **Migrations with Alembic**: (Applies to versions 0.3.0 and earlier)
  If you have migrations part of your project
  using Alembic, or extensions such as ``Flask-Migrate`` which uses Alembic, then
  you have to modify the ``Alembic`` configuration in order for it to ignore
  the ``Flask-Blogging`` related tables. If you don't set these modifications,
  then every time you run migrations, ``Alembic`` will not recognize the
  tables and mark them for deletion. And if you happen to ``upgrade`` by mistake
  then all your blog tables will be deleted. What we will do here is ask
  Alembic to ``exclude`` the tables used by ``Flask-Blogging``. In your
  ``alembic.ini`` file, add a line::

    [alembic:exclude]
    tables = tag, post, tag_posts, user_posts

  If you have a value set for ``table_prefix`` argument while creating the ``SQLAStorage``,
  then the table names will contain that prefix in their names. In which case, you have
  to use appropriate names in the table names.

  And in your ``env.py``, we have to mark these tables as the ones to be
  ignored.

  ::

    def exclude_tables_from_config(config_):
        tables_ = config_.get("tables", None)
        if tables_ is not None:
            tables = tables_.split(",")
        return tables

    exclude_tables = exclude_tables_from_config(config.get_section('alembic:exclude'))

    def include_object(object, name, type_, reflected, compare_to):
        if type_ == "table" and name in exclude_tables:
            return False
        else:
            return True

    def run_migrations_online():
        """Run migrations in 'online' mode.

        In this scenario we need to create an Engine
        and associate a connection with the context.

        """
        engine = engine_from_config(
                    config.get_section(config.config_ini_section),
                    prefix='sqlalchemy.',
                    poolclass=pool.NullPool)

        connection = engine.connect()
        context.configure(
                    connection=connection,
                    target_metadata=target_metadata,
                    include_object=include_object,
                    compare_type=True
                    )

        try:
            with context.begin_transaction():
                context.run_migrations()
        finally:
            connection.close()

  In the above, we are using ``include_object`` in ``context.configure(...)``
  to be specified based on the ``include_object`` function.



.. include:: releases.rst


API Documentation
=================

Module contents
---------------

.. automodule:: flask_blogging
    :members:
    :undoc-members:
    :show-inheritance:


Submodules
----------

flask_blogging.engine module
----------------------------

.. automodule:: flask_blogging.engine
    :members:
    :undoc-members:
    :show-inheritance:

flask_blogging.processor module
-------------------------------

.. autoclass:: flask_blogging.processor.PostProcessor
    :members:
    :undoc-members:
    :show-inheritance:

flask_blogging.sqlastorage module
---------------------------------

.. automodule:: flask_blogging.sqlastorage
    :members:
    :undoc-members:
    :show-inheritance:

flask_blogging.storage module
-----------------------------

.. automodule:: flask_blogging.storage
    :members:
    :undoc-members:
    :show-inheritance:

flask_blogging.views module
---------------------------

.. automodule:: flask_blogging.views
    :members:
    :undoc-members:
    :show-inheritance:

flask_blogging.forms module
---------------------------

.. automodule:: flask_blogging.forms
    :members:
    :undoc-members:

flask_blogging.signals module
---------------------------

.. automodule:: flask_blogging.signals
    :members: engine_initialised

.. autodata:: flask_blogging.signals

.. autodata:: flask_blogging.signals.engine_initialised

.. autodata:: flask_blogging.signals.post_processed

.. autodata:: flask_blogging.signals.page_by_id_fetched

.. autodata:: flask_blogging.signals.page_by_id_processed

.. autodata:: flask_blogging.signals.posts_by_tag_fetched

.. autodata:: flask_blogging.signals.posts_by_tag_processed

.. autodata:: flask_blogging.signals.posts_by_author_fetched

.. autodata:: flask_blogging.signals.posts_by_author_processed

.. autodata:: flask_blogging.signals.index_posts_fetched

.. autodata:: flask_blogging.signals.index_posts_processed

.. autodata:: flask_blogging.signals.feed_posts_fetched

.. autodata:: flask_blogging.signals.feed_posts_processed


.. autodata:: flask_blogging.signals.sitemap_posts_fetched

.. autodata:: flask_blogging.signals.sitemap_posts_processed

.. autodata:: flask_blogging.signals.editor_post_saved

.. autodata:: flask_blogging.signals.editor_get_fetched

.. autodata:: flask_blogging.signals.post_deleted

.. autodata:: flask_blogging.signals.blueprint_created

.. autodata:: flask_blogging.signals.sqla_initialized


.. include:: authors.rst

**-****-****-****-**
docs/Datastore.md
# Google Cloud Datastore 

> To start using google cloud datastore in your project you must install **google-cloud-datastore** library:  
```pip install google-cloud-datastore```

Related files: [**flask_blogging/gcdatastore.py**](/../../blob/master/flask_blogging/gcdatastore.py)

**Required configuration parameters(environment variables):**  
  - **Config parameter name** - `GOOGLE_APPLICATION_CREDENTIALS`  
  `GOOGLE_APPLICATION_CREDENTIALS` - it's a path to the service account credentials. 

## Preparation stage
* Choose a project you'll work with
* [Go to the console](https://console.cloud.google.com/apis/library/datastore.googleapis.com) and enable **Cloud Datastore API** if it doesn't yet.
* Your project requires an active App Engine application. Confirm that your project has an active App Engine app from the [App Engine dashboard](https://appengine.google.com/dashboard).
* [Create](https://cloud.google.com/iam/docs/service-accounts) a service account for your project and download *.json file with credentials.
* Set **Cloud Datastore Owner** role for you service account, or more granular permissions.  
* Install [gcloud](https://cloud.google.com/sdk/gcloud/) or using a web UI do the following:
  - create the file `index.yaml` and write into it:
     ```indexes:

		- kind: Post
		  properties:
		  - name: post_id
		  - name: tags

		- kind: Post
		  properties:
		  - name: user_id
		  - name: post_date
			direction: desc
     ```
  - activate service account:  
    ```gcloud auth activate-service-account [ACCOUNT] --key-file=KEY_FILE [--password-file=PASSWORD_FILE     | --prompt-for-password] [GCLOUD_WIDE_FLAG …]```  
  - create composite indexes(`it's required for the tags filtering`):  
    ```gcloud datastore create-indexes index.yaml```  

## Usage
* Install all requirements for your project and **google-cloud-datastore** library as well.
* Set environment variable `GOOGLE_APPLICATION_CREDENTIALS` with path to your service account creadentials file in a terminal or in your code:
```python
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "/home/user/app/credentials.json"
```  
* import class GoogleCloudDatastore:
```python
from flask_blogging.gcdatastore import GoogleCloudDatastore
```
* And now you can use it! For example:
```python
gc_datastore = GoogleCloudDatastore()
blog_engine = BloggingEngine(app, gc_datastore, file_upload=file_upload)
```

**-****-****-****-**
docs/Makefile
# Makefile for Sphinx documentation
#

# You can set these variables from the command line.
SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
PAPER         =
BUILDDIR      = _build

# User-friendly check for sphinx-build
ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)
$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)
endif

# Internal variables.
PAPEROPT_a4     = -D latex_paper_size=a4
PAPEROPT_letter = -D latex_paper_size=letter
ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
# the i18n builder cannot share the environment and doctrees with the others
I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .

.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp devhelp epub latex latexpdf text man changes linkcheck doctest gettext

help:
	@echo "Please use \`make <target>' where <target> is one of"
	@echo "  html       to make standalone HTML files"
	@echo "  dirhtml    to make HTML files named index.html in directories"
	@echo "  singlehtml to make a single large HTML file"
	@echo "  pickle     to make pickle files"
	@echo "  json       to make JSON files"
	@echo "  htmlhelp   to make HTML files and a HTML help project"
	@echo "  qthelp     to make HTML files and a qthelp project"
	@echo "  devhelp    to make HTML files and a Devhelp project"
	@echo "  epub       to make an epub"
	@echo "  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
	@echo "  latexpdf   to make LaTeX files and run them through pdflatex"
	@echo "  latexpdfja to make LaTeX files and run them through platex/dvipdfmx"
	@echo "  text       to make text files"
	@echo "  man        to make manual pages"
	@echo "  texinfo    to make Texinfo files"
	@echo "  info       to make Texinfo files and run them through makeinfo"
	@echo "  gettext    to make PO message catalogs"
	@echo "  changes    to make an overview of all changed/added/deprecated items"
	@echo "  xml        to make Docutils-native XML files"
	@echo "  pseudoxml  to make pseudoxml-XML files for display purposes"
	@echo "  linkcheck  to check all external links for integrity"
	@echo "  doctest    to run all doctests embedded in the documentation (if enabled)"

clean:
	rm -rf $(BUILDDIR)/*

html:
	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
	@echo
	@echo "Build finished. The HTML pages are in $(BUILDDIR)/html."

dirhtml:
	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
	@echo
	@echo "Build finished. The HTML pages are in $(BUILDDIR)/dirhtml."

singlehtml:
	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
	@echo
	@echo "Build finished. The HTML page is in $(BUILDDIR)/singlehtml."

pickle:
	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
	@echo
	@echo "Build finished; now you can process the pickle files."

json:
	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
	@echo
	@echo "Build finished; now you can process the JSON files."

htmlhelp:
	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
	@echo
	@echo "Build finished; now you can run HTML Help Workshop with the" \
	      ".hhp project file in $(BUILDDIR)/htmlhelp."

qthelp:
	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
	@echo
	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
	      ".qhcp project file in $(BUILDDIR)/qthelp, like this:"
	@echo "# qcollectiongenerator $(BUILDDIR)/qthelp/Flask-Blogging.qhcp"
	@echo "To view the help file:"
	@echo "# assistant -collectionFile $(BUILDDIR)/qthelp/Flask-Blogging.qhc"

devhelp:
	$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) $(BUILDDIR)/devhelp
	@echo
	@echo "Build finished."
	@echo "To view the help file:"
	@echo "# mkdir -p $$HOME/.local/share/devhelp/Flask-Blogging"
	@echo "# ln -s $(BUILDDIR)/devhelp $$HOME/.local/share/devhelp/Flask-Blogging"
	@echo "# devhelp"

epub:
	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
	@echo
	@echo "Build finished. The epub file is in $(BUILDDIR)/epub."

latex:
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo
	@echo "Build finished; the LaTeX files are in $(BUILDDIR)/latex."
	@echo "Run \`make' in that directory to run these through (pdf)latex" \
	      "(use \`make latexpdf' here to do that automatically)."

latexpdf:
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo "Running LaTeX files through pdflatex..."
	$(MAKE) -C $(BUILDDIR)/latex all-pdf
	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."

latexpdfja:
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo "Running LaTeX files through platex and dvipdfmx..."
	$(MAKE) -C $(BUILDDIR)/latex all-pdf-ja
	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."

text:
	$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(BUILDDIR)/text
	@echo
	@echo "Build finished. The text files are in $(BUILDDIR)/text."

man:
	$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(BUILDDIR)/man
	@echo
	@echo "Build finished. The manual pages are in $(BUILDDIR)/man."

texinfo:
	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
	@echo
	@echo "Build finished. The Texinfo files are in $(BUILDDIR)/texinfo."
	@echo "Run \`make' in that directory to run these through makeinfo" \
	      "(use \`make info' here to do that automatically)."

info:
	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
	@echo "Running Texinfo files through makeinfo..."
	make -C $(BUILDDIR)/texinfo info
	@echo "makeinfo finished; the Info files are in $(BUILDDIR)/texinfo."

gettext:
	$(SPHINXBUILD) -b gettext $(I18NSPHINXOPTS) $(BUILDDIR)/locale
	@echo
	@echo "Build finished. The message catalogs are in $(BUILDDIR)/locale."

changes:
	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
	@echo
	@echo "The overview file is in $(BUILDDIR)/changes."

linkcheck:
	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
	@echo
	@echo "Link check complete; look for any errors in the above output " \
	      "or in $(BUILDDIR)/linkcheck/output.txt."

doctest:
	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
	@echo "Testing of doctests in the sources finished, look at the " \
	      "results in $(BUILDDIR)/doctest/output.txt."

xml:
	$(SPHINXBUILD) -b xml $(ALLSPHINXOPTS) $(BUILDDIR)/xml
	@echo
	@echo "Build finished. The XML files are in $(BUILDDIR)/xml."

pseudoxml:
	$(SPHINXBUILD) -b pseudoxml $(ALLSPHINXOPTS) $(BUILDDIR)/pseudoxml
	@echo
	@echo "Build finished. The pseudo-XML files are in $(BUILDDIR)/pseudoxml."

**-****-****-****-**
docs/conf.py
# -*- coding: utf-8 -*-
#
# Flask-Blogging documentation build configuration file, created by
# sphinx-quickstart on Fri May 29 12:51:58 2015.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import re
import ast
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.dirname(os.path.abspath('.')))

_version_re = re.compile(r'__version__\s+=\s+(.*)')
with open('../flask_blogging/__init__.py', 'rb') as f:
    version = str(ast.literal_eval(_version_re.search(
        f.read().decode('utf-8')).group(1)))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Flask-Blogging'
copyright = u'2015, Gouthaman Balaraman'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = version
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ----------------------------------------------
sys.path.append(os.path.abspath('_themes'))
# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'flask_small'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = dict(github_fork='gouthambs/flask-blogging', index_logo=False)

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = ['_themes']

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'Flask-Bloggingdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  ('index', 'Flask-Blogging.tex', u'Flask-Blogging Documentation',
   u'Gouthaman Balaraman', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'flask-blogging', u'Flask-Blogging Documentation',
     [u'Gouthaman Balaraman'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'Flask-Blogging', u'Flask-Blogging Documentation',
   u'Gouthaman Balaraman', 'Flask-Blogging', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False
def skip(app, what, name, obj, skip, options):
    if name == "__init__":
        return False
    return skip

def setup(app):
    app.connect("autodoc-skip-member", skip)
**-****-****-****-**
docs/make.bat
@ECHO OFF

REM Command file for Sphinx documentation

if "%SPHINXBUILD%" == "" (
	set SPHINXBUILD=sphinx-build
)
set BUILDDIR=_build
set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
set I18NSPHINXOPTS=%SPHINXOPTS% .
if NOT "%PAPER%" == "" (
	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%
)

if "%1" == "" goto help

if "%1" == "help" (
	:help
	echo.Please use `make ^<target^>` where ^<target^> is one of
	echo.  html       to make standalone HTML files
	echo.  dirhtml    to make HTML files named index.html in directories
	echo.  singlehtml to make a single large HTML file
	echo.  pickle     to make pickle files
	echo.  json       to make JSON files
	echo.  htmlhelp   to make HTML files and a HTML help project
	echo.  qthelp     to make HTML files and a qthelp project
	echo.  devhelp    to make HTML files and a Devhelp project
	echo.  epub       to make an epub
	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
	echo.  text       to make text files
	echo.  man        to make manual pages
	echo.  texinfo    to make Texinfo files
	echo.  gettext    to make PO message catalogs
	echo.  changes    to make an overview over all changed/added/deprecated items
	echo.  xml        to make Docutils-native XML files
	echo.  pseudoxml  to make pseudoxml-XML files for display purposes
	echo.  linkcheck  to check all external links for integrity
	echo.  doctest    to run all doctests embedded in the documentation if enabled
	goto end
)

if "%1" == "clean" (
	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
	del /q /s %BUILDDIR%\*
	goto end
)


%SPHINXBUILD% 2> nul
if errorlevel 9009 (
	echo.
	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
	echo.installed, then set the SPHINXBUILD environment variable to point
	echo.to the full path of the 'sphinx-build' executable. Alternatively you
	echo.may add the Sphinx directory to PATH.
	echo.
	echo.If you don't have Sphinx installed, grab it from
	echo.http://sphinx-doc.org/
	exit /b 1
)

if "%1" == "html" (
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
	goto end
)

if "%1" == "dirhtml" (
	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
	goto end
)

if "%1" == "singlehtml" (
	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
	goto end
)

if "%1" == "pickle" (
	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the pickle files.
	goto end
)

if "%1" == "json" (
	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the JSON files.
	goto end
)

if "%1" == "htmlhelp" (
	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run HTML Help Workshop with the ^
.hhp project file in %BUILDDIR%/htmlhelp.
	goto end
)

if "%1" == "qthelp" (
	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run "qcollectiongenerator" with the ^
.qhcp project file in %BUILDDIR%/qthelp, like this:
	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\Flask-Blogging.qhcp
	echo.To view the help file:
	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\Flask-Blogging.ghc
	goto end
)

if "%1" == "devhelp" (
	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished.
	goto end
)

if "%1" == "epub" (
	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The epub file is in %BUILDDIR%/epub.
	goto end
)

if "%1" == "latex" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
	goto end
)

if "%1" == "latexpdf" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf
	cd %BUILDDIR%/..
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if "%1" == "latexpdfja" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf-ja
	cd %BUILDDIR%/..
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if "%1" == "text" (
	%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The text files are in %BUILDDIR%/text.
	goto end
)

if "%1" == "man" (
	%SPHINXBUILD% -b man %ALLSPHINXOPTS% %BUILDDIR%/man
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The manual pages are in %BUILDDIR%/man.
	goto end
)

if "%1" == "texinfo" (
	%SPHINXBUILD% -b texinfo %ALLSPHINXOPTS% %BUILDDIR%/texinfo
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The Texinfo files are in %BUILDDIR%/texinfo.
	goto end
)

if "%1" == "gettext" (
	%SPHINXBUILD% -b gettext %I18NSPHINXOPTS% %BUILDDIR%/locale
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The message catalogs are in %BUILDDIR%/locale.
	goto end
)

if "%1" == "changes" (
	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
	if errorlevel 1 exit /b 1
	echo.
	echo.The overview file is in %BUILDDIR%/changes.
	goto end
)

if "%1" == "linkcheck" (
	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
	if errorlevel 1 exit /b 1
	echo.
	echo.Link check complete; look for any errors in the above output ^
or in %BUILDDIR%/linkcheck/output.txt.
	goto end
)

if "%1" == "doctest" (
	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
	if errorlevel 1 exit /b 1
	echo.
	echo.Testing of doctests in the sources finished, look at the ^
results in %BUILDDIR%/doctest/output.txt.
	goto end
)

if "%1" == "xml" (
	%SPHINXBUILD% -b xml %ALLSPHINXOPTS% %BUILDDIR%/xml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The XML files are in %BUILDDIR%/xml.
	goto end
)

if "%1" == "pseudoxml" (
	%SPHINXBUILD% -b pseudoxml %ALLSPHINXOPTS% %BUILDDIR%/pseudoxml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The pseudo-XML files are in %BUILDDIR%/pseudoxml.
	goto end
)

:end

**-****-****-****-**
docs/authors.rst
Contributors
============

- `Goutham Balaraman <https://github.com/gouthambs/>`_
- `adilosa <https://github.com/adilosa/>`_
- `slippers <https://github.com/slippers/>`_
- `Sundar Raman G <https://github.com/gsraman>`_
- `Arthur Holzner <https://github.com/Speedy1991>`_
- `Sean Pianka <https://github.com/seanpianka>`_
- `Matt Brookes <https://github.com/mbrookes>`_
- `Stephen Raoul Sullivan <https://github.com/raoulsullivan>`_
- `Alexander Remeza <https://github.com/agiUnderground>`_
- `Nathanael <https://github.com/roipoussiere>`_
- `Mar1ad <https://github.com/mar1ad>`_



**-****-****-****-**
docs/releases.rst
Release Notes
=============

- **Version 2.0.0** (*Release February, 2022*)

 - Updates to be compatible with Flask 2.0
 - Improved unit testing and build / release pipeline

- **Version 1.2.2** (*Release January 31, 2019*)

 - Add file_upload optional argument to engine's init_app method (#133)

- **Version 1.2.1** (*Release January 20, 2019*)

 - Fix broken docs and update Flask-Fileupload configurations

- **Version 1.2.0** (*Release January 9, 2019*)

 - ``GoogleCloudDatastore`` provides Google clould support
 - Updated markdown js script

- **Version 1.1.0** (*Release September 12, 2018*)

 - SQLAStorage query optimization
 - Updated Disqus to latest
 - Some minor docs fixes

- **Version 1.0.2** (*Release September 2, 2017*)

 - Add social links
 - Add a choice to escape markdown input
 - Remove negative offset for ``SQLAStorage`` storage engine.

- **Version 1.0.1** (*Release July 22, 2017*)

 - Expanded the example with S3Storage for Flask-FileUpload
 - Post id for DynamoDB only uses lower case alphabet and numbers

- **Version 1.0.0** (*Release July 15, 2017*)

  - Added DynamoDB storage
  - Add Open Graph support

- **Version 0.9.2** (*Release June 25, 2017*)

  - Additional fixes to ``automap_base`` in creating ``Post`` and ``Tag`` models

- **Version 0.9.1** (*Release June 23, 2017*)

  - Fixes to ``automap_base`` in creating ``Post`` and ``Tag`` models
  - Some improvements to blog page generation


- **Version 0.9.0** (*Release Jun 17, 2017*)

  - Added information contained in the ``meta`` variable passed to the views as requested in (#102)
  - Add missing space to Prev pagination link text (#103)
  - Only render the modal of the user is a blogger (#101)
  - Added ``Post`` and ``Tag`` models in ``sqlastorage`` using ``automap_base``.


- **Version 0.8.0** (*Release May 16, 2017*)

  - Added integration with Flask-FileUpload to enable static file uploads (#99)
  - Updated compatibility to latest Flask-WTF package (#96, #97)
  - Updated to latest bootstrap-markdown package (#92)
  - Added alert fade outs (#94)


- **Version 0.7.4** (*Release November 17, 2016*)

  - Fix Requirements.txt error


- **Version 0.7.3** (*Release November 6, 2016*)
  
  - Fix issues with slugs with special characters (#80)


- **Version 0.7.2** (*Release October 30, 2016*)
  
  - Moved default static assets to https (#78)
  - Fixed the issue where post fetched wouldn't emit when no posts exist (#76)


- **Version 0.7.1** (*Released July 5, 2016*)
 
  - Improvements to docs
  - Added extension import transition (@slippers)


- **Version 0.7.0** (*Released May 25, 2016*)


- **Version 0.6.0** (*Released January 14, 2016*)

  - The plugin framework for Flask-Blogging to allow users to add new
    features and capabilities.


- **Version 0.5.2** (*Released January 12, 2016*)

  - Added support for multiple binds for SQLAStorage


- **Version 0.5.1** (*Released December 6, 2015*)

  - Fixed the flexibility to add custom extensions to `BloggingEngine`.


- **Version 0.5.0** (*Released November 23, 2015*)

  - Fixed errors encountered while using Postgres database


- **Version 0.4.2** (*Released September 20, 2015*)

  - Added compatibility with Flask-Login version 0.3.0 and higher, especially to handle migration of
    ``is_autheticated`` attribute from method to property. (#43)


- **Version 0.4.1** (*Released September 16, 2015*)

  - Added javascript to center images in blog page
  - Added method in blogging engine to render post and fetch post.


- **Version 0.4.0** (*Released July 26, 2015*)

  - Integrated Flask-Cache to optimize blog page rendering
  - Fixed a bug where anonymous user was shown the new blog button


- **Version 0.3.2** (*Released July 20, 2015*)

  - Fixed a bug in the edit post routines. The edited post would end up as a
    new one instead.


- **Version 0.3.1** (*Released July 17, 2015*)

  - The ``SQLAStorage`` accepts metadata, and ``SQLAlchemy`` object as inputs.
    This adds the ability to keep the blogging table metadata synced up with
    other models. This feature adds compatibility with ``Alembic`` autogenerate.
  - Update docs to reflect the correct version number.


- **Version 0.3.0** (*Released July 11, 2015*)

  - Permissions is a new feature introduced in this version. By setting
    ``BLOGGING_PERMISSIONS`` to ``True``, one can restrict which of the users
    can create, edit or delete posts.
  - Added ``BLOGGING_POSTS_PER_PAGE`` configuration variable to control
    the number of posts in a page.
  - Documented the url construction procedure.


- **Version 0.2.1** (*Released July 10, 2015*)

  - ``BloggingEngine`` ``init_app`` method can be called without having to
    pass a ``storage`` object.
  - Hook tests to ``setup.py`` script.


- **Version 0.2.0** (*Released July 6, 2015*)
    
    - ``BloggingEngine`` configuration moved to the ``app`` config setting.
      This breaks backward compatibility. See compatibility notes below.
    - Added ability to limit number of posts shown in the feed through
      ``app`` configuration setting.
    - The ``setup.py`` reads version from the module file. Improves version
      consistency.


- **Version 0.1.2** (*Released July 4, 2015*)
    
    - Added Python 3.4 support


- **Version 0.1.1** (*Released June 15, 2015*)
    
    - Fixed PEP8 errors
    - Expanded SQLAStorage to include Postgres and MySQL flavors
    - Added ``post_date`` and ``last_modified_date`` as arguments to the
      ``Storage.save_post(...)`` call for general compatibility


- **Version 0.1.0** (*Released June 1, 2015*)
    
    - Initial Release
    - Adds detailed documentation
    - Supports Markdown based blog editor
    - Has 90% code coverage in unit tests


Compatibility Notes
===================
- **Version 0.4.1**:

  The documented way to get the blogging engine from ``app`` is using
  the key ``blogging`` from ``app.extensions``.

- **Version 0.3.1**:

    The ``SQLAStorage`` will accept metadata and set it internally. The database
    tables will not be created automatically. The user would need to invoke
    ``create_all`` in the metadata or ``SQLAlchemy`` object in ``Flask-SQLAlchemy``.

- **Version 0.3.0**:

    - In this release, the templates folder was renamed from ``blog`` to
      ``blogging``. To override the existing templates, you will need to
      create your templates in the ``blogging`` folder.

    - The blueprint name was renamed from ``blog_api`` to ``blogging``.

- **Version 0.2.0**:

    In this version, ``BloggingEngine`` will no longer take ``config``
    argument. Instead, all configuration can be done through ``app`` config
    variables. Another ``BloggingEngine`` parameter, ``url_prefix`` is also
    available only through config variable.

**-****-****-****-**
docs/_static/blog_page.png
PNG

   
IHDR       Z9   sBIT|d    IDATxml3`3&aBpzPZh78o&N:RG!
T=5R@>9QtJUt'R\;EqPlC6~pǟw7|{#""""""2EDDDDDdVR YIXDDDDDDf%bEDDDDDdVR YIXDDDDDDf%bEDDDDDdVr%Co_tvo
]=)bsg.[kxe
"
"""""_K}yV>CM3zP[&C(E=q
Iȗ
{}vN3Ro}ƑOI/*q$p)z7f
zp_M=XMn(Z\*"""""_E,xs{N&3ȁZ9n=߻MǸ_륏hINzq;7 O$JiX51strWfRt	JFXDDDDDJ<^bttŉfq!EM~%zG^29o\j,e˺{oTϣ?a^Bm}a"*W, ~4+hxbo>nJf/rdruU来4t
u.sn.-yx7̱CS9PP :	@yҀFǣ!WLn/A	:]PG<}wnݭr<Vg `SKgkkZzG
51&ȁu\wy'Qx߿*fr|MWWw׍c./xVڟXήxg9o>13qǃt4'W݇_gt&yԮ?uhu3C?0Gkh|;ez[ݿw: {.~c=i8X|)Rs[yb#yhmaO?
jÀC ͯ3	dY&ݣkU`/hj]LŔ[Mp~vhw?ɓs_Pdh?~.s\ElgN]{2~waӏiӧZ;MOڶOW]?Y;3'mTf8)Ϳ]8MaaB?<CjX3Jyߧ,͉}$T۪e-Kt
z#iW	.>ZM[S'Njߏ*%>Ḅ]^8P$Dgv
@$8enFVmQSQRw#B*XF+{h۩}Gln}[Ͼ=sm$h=/
K';-Gt`'r-y"St㶿.[i_÷@2g@bl\ND*&FB,"""""-)@խ6rHcK'km[:h8N,e?=ac|7Wy	ZOaR'cabf7bG~#ݛc_`\졲zoυUUjx}va7Gٽ{8ٗq{ٲ<Assy75r@XDDDDDSO]4ITx=Z(38i%3)=UdY}YjʝL]VלC<kvZmaE:yWU^.Y憅YM`W~lXD	y`"gN~|nnr\T9>ͳ񑥗jʠ+F{c(ڟU>}R(gc4]3)z*=:\w4!9n-P\頺.&HA\|{/dǞrE:R SuM\ojmf5N*%zZ).RMrsuAsEDDDDd*сh޾Z3M]t/Wy k#}4u&3l}=Xn 6'@8/s@bO6%vlHM3޻a7M@x.%O;O4xp3Z2qyٗ,߯7O,&EE3ߢ ^
y
8Kho@hBor$*"""""_7,}q"YH
͓N$8ߗ"mv&H Wx#GoF }b'9K[ΥNȌtmz<^5lRe?&M!ouwi
ET=:8s_:8vwpU?
y V,[/ľ~?Ǻ:Ɔ'[Qm]6-乺q;`q#PD[T+j5@H\c;\vb:2N?˿OĦ[6~m%b΋GAu+Ȭ9""""""2+)Ȭ@,""""""J
""""""2+)Ȭ@,""""""J}WM< W4sGC9:xg>^sX@Tynr
ٻKDDDDDdl@(mg.D!K/aS[0&w[caZu?
>!CnQ .$P5lH,Ml\A33]8s?^n8=o
g/ׅfpj32Q^m9OK+|-ݚHTۖS5Mq-ɧ8zc=&9/9	E|lWCulZ{(""""utGL}^~z	A[?#v1q'NCdh_xY6w|٥E
3y3{zn%wgiB>={pLݓχr7׋7jq4>$P~ &+$h08!۰YExlRzsn9uAQf)WQq#.J8n~|2?dEix~z stcI 1`k:C}x./Zja,/un|~>uwyo>pXE
.dt
i@z^TAݪ%ԯN?M/N^;!G8 `Ig
'Z[%i|;>X9ǺYQ8 Y'g[IfFMYvE4sGӱ8gⴟi
t&8#KsW
_9zϼ&2dO/4	r.OĺEз~J2^J|rOд`!{fԝαu,Q |?ûY\鵋4|W:0c~tba7kpO/^'úI.E'ɋgFo9sXOX4`hή0F^9f7Gީ+zA}.=存Kp#K(4@{x.lS~
_Ms'a+KpQ)d˜yգGAV|~9lzKhC'G}lymmF)ǞrỤvB4=}$};2<ULlh+v"Qڻ^*ǁT'wuw`!Aѡy:?Mb{p E r]|Dy\.3x볱0mAOrzq b
&nlG0Wz| ~~v$ed=_n4n|a,W}	'w=N۳wB|>?7UUI)[ ~`1
߹!
c°ṇ&a;>?2:y=n^xnW_yJj?<9;^:M迡߇}ʛ
7e]P(Av`2Mc= |NFqmLmL jHɛE/j:d0o2^hgUӟvl"
ȀyToN
 ynѳ~J4Ɔ/yx5{ U\q87q+:KgcOCt%:մ]DDDD
18 SYKHWNٹ;yܶPp4OŊT>jrH $2gܹ?<(-˧Z>:.s2[:24ɉ=l}ذol&stw٪6?0Kٲ<[*ϏZoxUYF[hI$hplȉʥ6#Kn-""""2@\e`h20[ sFs3t~<Vv-ƱٿGw'2p3IStEq/j_έns`kQ2ZuF	o35^Qw~
9"܉"""""3]ĐSJo|ٙLpH"C4|WycξWoN$茍=UOtr7;?[uJ{>7|:cF2B*AuLww惈LuqhZ</*x3}擁M4eĺ>-_,EK
e]:+w>ߊI}?mbB(
M8V]yn|>uT?Mk^vLIۮu=p v>[%OFLfF]MEDDDDd689@Vy.7a:b׸0`巖qU5=}y莛|~epu~"""""2@Xw^<]zkq3֚aѸ*e"|m҉^]G\O:n6ud]Վy?[pz1k8Dwqoc2nggmjޚ]-Lhf.F.fH}SmʵJE7׼?պq
]߷ bo]JDDDDD<0xU942	:ló=L=W+1?v"5ao/e [(m0꙾F6-n`Pϵ6|3ypuWqX5лUZֺh9J|NUPCS<s{:̊˷k>E:Z`q5:MRtƮ#@S_o߭z7zZu{X]S6p {gvi='?5B6~HpՆF`!T]݁iϻ8b4uK VDժyXEXCN;9tPi=H~n:ien7Q*ysU߃˼:xc~'ⵏ_pgq&Awx0\HkVqRvrbJ^*9~b~n7prX
4;4d69vz~p/ZJ|#&3lkdsΡnΖM3lR#o-?sկhjr؎ο{>MsOw_N<V>iCnMoہti0lX,Mdʩ<{ֲuB%voԭ`@OzJ!ލ^bkK/uE,*>><򮏵<=l
v6,V\y6W<ՌUely#e^lzE·.^O!ki1VeGG|7L=f6>W;hr_+d"=y^$8t~́iVĲo\+MҴﴞvjtlsaN^}*Z"""""2-'4pXBԖήғ_=<3FGZ.ZmUʇWs`|qA/^y%Ë]_SFRHqﾋxk4Ģ|Yvm&"oNLfW&>3;K0zݷػ*ʷ5ﱣu.V.~b4ZK'u_U#z
eNoIs^?90.N]s?P?]z
t.̟C{ذf!;lwy^C'{V-{leoy<sY{|USƦ}8!<j,e㪲[S,[8iBȬpQ}|~~sSycgzPť<7,a]ydNYp>ż5ϾߝHv8X 逸MS^kz^o)5UPn)U
IMtztt)Wl|X!:"""""""wJ
""""""2+)Ȭ@,""""""J
""""""2+ibT!YIXDDDDDDf%bEDDDDDdVR YIXDDDDDDf%bEDDDDDdVR YIXDDDDDDf%bEDDDDDdVCԯnpiMӺY?lKDDDDDDf<Ǎ!zb3d³^oq&/yFѳ=/.zp~v>e/{Rϣ9;?`ëacg}6?ZM}"l!U_|T/v;/{|?^-DҰyk+Y?G"+yCO$z|+<ێkٸ=ѳ4ÁNbz=[vfS7=g"ٻ*RmÎ}-ǝk/{{kn5`7Gy	ztHw><TO8T4fTxضu
%^n>31'on0E<iΆWNq/rD⤽O59"Why,{tlKGCK/u"w^wV$@SٺϽAc&jQI^0=0N[:v('`},;?9Gu,ӴY]5xVC}WpmO>ŭIEDDDDqsC]^|
***dٺv>'tG6=Xz5ճuq(Tqvo0lؼ)Rذ$M< Q:7P;
{ksqvoy~+ڧ+=^#l=u
4w |ͫkilڶyj6`A֑(*|*ʽ,[HCg NQ۬~mVkc4Ϸkpl8A&F@!UMitw%pͿc/]Ri>7#SԾ1@B{uDC:߳-4s!9?`_S9Ou}4l?@QM"    IDAT6gC4njv6ltףi
Sظ
˨$ ǏNpQ]WEw	}Cm9[%.py6[al_nwg!w{wPSEEe

Y5t7ss	[vn"XYAŲ
46%rOR@*M:ï?yTT8@kU#;p#"
};rw>o,uaNÉʝ|={ZrK 7>hf{`i;i{v+MgS@ŷWBW=-{i8pyƊ65kӴ5w`Śp͝~u%l>	ÙӉ<rl#^Y緯'[y2/5eE0;fm3q!걛ڇD{?IUK=3	>	
R?uR*3?x75,dWklͿ?4OӜ`=U #x(a W:c.yaeMZ3Z6mD'T`~Ρ46'^ր=76c_;U;65#/ZW;G:LMW/PE4ڶIETy!z[U%#ߴ)c!ؼKPz58ΑmV@f6
பc[GOMX4|Ul{փS{ohdSMলvVhi&mk4Tټ%k~ƫ޲*n2V|ak&WێxeS<@#|bP߯ab7nͦfXY7kH(J;*DÄ,+8BM1QG~81{{˩_4s~2@w<֖Al K*3ȑ-Wxy<O,"0ᐩ#DVm[Hhհq{-fƲ>k+!AF{#"1ڎt&{Ҵ}'LףkXhlfq?*mo\m%nT
茀{%|rh9J{s;ڍvvoh(#&iz7rR2Fnm"""""!N[=)Wc<&*IjƊ]n*WHj3uiViYBp]-54P\
L8ЫO	##!"	髬?Ŝ1~_6##aj7@[s'TMDz`^<dyٱWtTCR;Ruv/D˖L@I)8mhx۶/xhJW~σ;vjWB
M>hw71o5[;?tFR{\vFܠP4,v{#'Qjkn-,9d[G]
GtH\NÒ0'zhS"FqvoC{p/4WW~vM{9kw[[6v?9])&h9Tf(J6zp;h[5O^BÉm,=]YM̣	8ETYwXS=)9L1eh(JGw+:N]&]DOGy+r@4<H[Fut78EM/: .jCdS,U.~D9J_h
}ԦwܹMDݶMo<xtt7`Y=
K^f}ua~To>)@QTp:urTtS-U%#Ƈa7~m'b=	!
rWRSƽxW;Dđ 5~mkj
<66󡱠tO
ṉctW5P;Mh !j͡rw-CO>Bzl_y>hW".rR|c-T<#sq̟<9|?snjܲM9B	\%!b.7a ʊq,GCIg䫪67$B[UA{{uֱl\d	XqD7,=bߦMՄv|u
\Wmf֗qm?+eA:l	w.fiEi?։+X;iHLv˚jU7$́#yhMuTFS8[N0mݤU
NzQRT鵤[R'Ӵhl4E_:/=9rN`v/k!	MMTm\?R9z;P6i.u@eGhNbgj>G' 3:0UIu-s&8{{<EއX6-*GNKss^/5(N
NxOloD1bHpG vuooH*L8&(@%^Kp,Uk
vWKlQ ACD\XrFϿʋm~F=ݶҼc?vҸK4<z}HU+C49L{o٣b;G&GG
̹FÄ_ iNSRK"""""&L_CfaM<'
 k7_5Tܿ]{QH'cu;_2Re[y7ٽa/#ٽGj3|<9#/-Or3K=:͉ 
3JZRsKTQװ+ظv$3(r8"j'쾀bOl>6T7`2By!ӍǦ#l/>q.ﻗƟah/۔-/乺$rr2v?{<ؼzpck<ux9һv ^nqoV>ɏ ?Hx[]΃]e%e4^vʮe[vOv߂%?ٹ=lTUPAx6@];SvZ߼u/:4gyeK`m%
/@'sp2@<ԑQ Ox]%_EDDDDG>{g{9_D2n5l79Too;<H;ʻ-Cg'-+Hi?cul/`mhd%5
"""""3*Ėn5<I u*ÔgĿ_j/gJXDDDDDDf%
YIXDDDDDDf%bEDDDDDdVR YIXDDDDDDf%bEDDDDDdVR YIXDDDDDDf%bwDDDnֿ뿒fIRi2|


HRR)


p:HyPXXHAAEEE>G~Crp8H&\.4d" p8ikEEE0<<<l<LIaa!T
I"p0<<r144dOII	$	r.Br:N


]ᠰڗ X#vq8og-""r;(Ȍd2i4l
uzMa
Ǽn«٧ylfQQDb,ta[
sls>&r9<,L.l6k]K<tZawxxt:m
&Tt: 99Ѩk5[XXh`s>GDDdR +LdHRd2+_7\.7p8;aN@k	|l6K>B(0nSǾOsf[&HXclg:̱nyTop>L@,""3=@٫M33Wc~&F
'M{6dSu\r9bظ*r.6
G.8y$8q!u9+*=ě}g:MEDdr:*af}i*8lccikh_t: O5TS59NJsx<R)lބl6;e5d#é͐o{`+,,vkȴh
""2cPjLքE{8rVs@l2ۏa}H9vqq5d42_pT*E"jre!J(..P\\̕+W|2̛7r._<n^2a oZm[`}j{.""2(Ȍe!&ڇ0@<Tí!ѦŸr劵rYC6Vu^i6$>bn7P~̙C6pFVc-RMc.
UM:Z	&d6Uks/p:T
""2
n# g0a_c{"ȸ9Ĺ\/
H&dYΝܹsqV6sk.	Tx<n
ﷺK0<<̂^/nj.t:'
!7lieFnN
"""3XfjBk_JȾY̽5Ab5磠A._L" NF	Dq-%I^4===d2)--%Ǚ;w.L"^/eeer9ktYYU]`ʱXn$h3g
Xa|>0L&crβ:al֚a""2)Ȍe},
6C'ClkaWT3W\A"흗N'%%%TTTV`d2ZÑþpd3؄lD=NH$B" zq\V-**v[ͳ̐l{,{S:rۗ|jt
""2c:q!?Pg)_7!:ǭ0FI$ SPPqPvq\Ncp8LIIɸ`kv[5؄A+ 1?0l.=n9q*DXDDf,ISw5>l4WM(d2D"._˗IRV'h^0nC.chh`D9̦zN5æ].xD" }}}q\N())!FFVH6ks|Smwx?ǦnjL@,""3a&XPP0.LEuhh!58XÑ]٧~l_&i``rrʭ	p8f̙3}}}}~Νk͇NdYuf>? ~L0Z9{86ۘ"""3XNӪ;)V\\<n욊FlFZd3<<lD"1O"Bp67c%J	R)km~k>ŔX***dYd2V5\{5̡6'3fe/.N"""X;q'!l_bȾ/@"Gq%Vuloؚlv\75l{g`MM$qJKK)++ىDp8	e)--%LZk&rko5ݐjPoJXDDfs^')N&S
-..LT?s(x|\C*SmV6[
[T*ev3GTo\3zܹHs/Eyyjl9JKK)**~6Wa\o
`s"""3Q>evǭ?lWaf}]̼\P#W\̐iSqu:x^+PKKKk-Cr<-,,$HXTۍ磴%KH&\.N'>hxbkX,ƥKp:DQ}YSل^1p6fh-""2B,""3l: ۻ YTtx|>,B!
L&f;Em͒ 	&ԛjs&!
N%
lcb
L&7osεݜl``*YGz}\gLXDDfͭL 8T5'V3>.FY4̂
L/dfo&!HLۗ.2XSʕ+

zzX,fu:_|>.\Ȝ9sm_ؾ9Wjsl`7EDd2װ)VS8B(Ǖ+W'LL&'CY3DaڜȚ!ץx<+XۃieH2K9ُN#[mfdY<\.'%7؜y.JQRRBIIU6h'""2)ȌeL>>m$	7˾d=\ڛ^[xܹ8Za҉DZ.MR֒K&x%%%RPP+W xFZTʚv))):PazNe0uLXDDf!׾l87ʕ+qz{{`ܹYkӀGC,iW͜l6kuq6h4:U,chhl6%se2MjSyyS6k o_Y

c#ݱ2O"""3hY06ׄJ{ӄ7S3g]]]q0hBf
\.7n¸B]ZZv|rkR=<<<n^	ft*urL>sZ!{ʕ+8.]D__Ս:RVVrY354[s͏
LT
""2هHafn;LX9L`zb1Z4fV<g1r9Y`< {/

YâH$r9ո8{hh:t:`q"XE `xx~Z(//gε6=U~O{M7n3ybs0JXDDfh4J:BR)<|*zq\2<<l-dQ0LBdppd2III	|;ad2JJJd2$I^!0dҪ}It:m5L$q***k3g~ߪ6;N=<<ŋ),,dΜ9,^/d2iU흹ZۍX!mEDDf2bP`{83UNS5Q̐Y.>s.\`UM6̗5S{P,//ds=V4^ǃ:Ns̱6[BJJJz,^Oqq12g,X~+Wsy~\B /o,cܹ
n٫}NL@,""3nڻ$ۇfCp8F|tttD |V3M*<l6#ϳpB/_N0//(**:Sy
kohek6***!RUM$PQQܹs)))Y
reee,Y{:I0䭷;    IDATԩS|߶jx<95d?L\YDDdQ 5/X!Te8w}}}8N(**bpp"n7CCCV7\.tso|;[
̼T*L&$I˭c
y aצk_TSUU~()){ᥗ^-;HXt: SجlPZ""2)Ȍe0~%{؄T* ˜9si0Ŭ\56Lv˿KjjjXtչT%Ld2i/N3o<-Zd=gnqI~/^Lyy9|*k
⢢"u&aժU?_q=;h4:nȹien*jn-""2)Ȍe?fa$4i5|I$|a\.׸Q\reXzaa!^kZä

(.{9{_gC(R͋ñ I\Aɞ,vɒlI%ӢHqgk^" E~LwW[//O=<f' '1gY]QxqҒ`Nc%a\.ns84
/2^~e?O?su.5ϿHSbX<t  Ă Ba!KeOGL.-JeT6;۶XR
뺸x".]N Z$l9SӺzIhJRnl^u].㦟I P7=?lmmq2ݣ@AQElgU$ BhHA)TƝfHCa7;wݻ݅ihZ RyLt^/}KVr)pq <,j,R鰠Z۶a6;Jn^NZ
jf  PT>]ׅiFh6˿Kipve$~1J;sAȈC, aDLu^
`޽{z*8FȲ0\}Z{gVWW1qu ^\D (LʬrF038z_J]?p۶J{H.0gAA(*"A!(b 8{Ν; coogR>$I>1;tM X@'3VOt,Bٲ*JAT* _quܼyF)'I LPc PDD G$p$iu|l6`0yL&, sP0	l0 <txil5":`X$Ւ|2
'	dRt(7|7nU@M\\AA
&=*J0MY"Kұ0Ūn!Yt,/	OuQ)ϛGMf0MFarOŋQpI⛂5P@9ߴO PDD e6L/ri/֣# Nc ;4Z("躎ej=QhZdSVWEJU4Mu]|>j5,MS$I8!E78A" uA¢Yʗ 4
ڂV"SuTwz
uSV:Uj4GέZrPZg(BL>~(un0@L EF PXHD &ǓD/? {{{,r)5Dh?K^3E,t:&h88/UGW_*yVˠ°j:l6m|mc8lW^~z|^s7~ BǺ Ba!Q:T:1%z=t0gfZ(iV!IL&L&󸴘O֣IKrh*w&qk$By5}<dYS kqW^yڻ:y@ BQXA(,4S,ch4i0dQ[.1X1	?4yLӄ뺨jp]A4Mqr4
zay^*56M DZ"=عm^'7<r,a}@4xgϢV<)l^~R BQb Baɧ/Ќ]$ ~(l6cIN,	` ˲PVQ.$	(p*U亖J%ضVbeY(xT:7^N50˲c={ҹ/AA(*"A߉3r]:)SoڣK"0躎tN)SU*ec `K	jc,ӿtE/꘣|j4Hh) Ae$IL3myF##&7|8&^<YA D*j . ,^pI*@ɡMaNL& qrcǗH?%g'I½5ԱSc)So5<ollT*!I@1Or_ꭦoAA(" +P0aYJ|`0Ba,
XepYt<fEm(J<Jվ_sϳRe$|T!^D,ZꢫI3A A
oiUE&	0+&q/VES8Qqa\8l^HV	8t0|O1~KJIfYƮ13t\\FER2- Ă BaQG^f	x>*HqaZi.暦nzpȥ 4Mv)ҘI%$LJdi(}~1~t]XMئIȫקHʴ Ph䯘 PXԹjI:82XF˲0$	ĒKSLкstǅnم5G2eYpic*eVS黆aUg1H$qNjЗ84~CL%)ӂ BA, u	VU[$	&z)ȥj  J 8>>FEe Z
NA`0`uu.]b!MTL"DeEܟLsTB^m4KXu))߳me{) U&RSj PTD bIh=p* V<"qx (˨i,˂뺈Z
gKQ)ےha޽{NT*@|>d2ag:_NbZ[nZi)ElVI|c m!A
bAn)	CZ"cNQ^]]E!t]d2ADfZT8|>~,!_///#cq+JEjscb2>eY|=qg}ha|L/Mq||4B2g<sr>wDnAA(*"A¢MQ;
֪jO8j`6NOO8jNNN rkkk8{,hLf:(z2`>׮]1(b!MԵZ
gy^+++p]e=_L?q~8i}A,R`4&|%I響] BQA, uLɽsOpE,ϟGRkd'c*ovqHt:ihZh4eYLBU
0qppp|>8X^^p8p8xO?4^~e\|O=:f0DZ倭,ː$	$y jш0E:|G\ms,Â D %ڜOV ^ŋo""_t:mAZ`&|G߇yp]ﳃJצ\A}L&KKKX__G<Z
f <<x 7n/|z0Mٌi6`0pzz
19+2Z-lllmض#ȩ4m!];ǬjA"XA(4ȒSOӿi9p
}|_Ǘe͛O&.7&Gw:IsMZ 0L0izR0p||#(ԫRpV8s|!qpp#t:  qPT001۷oW&	@V6z.dRǘ=
A"XA(,$HR//:Jru޽юW~Jy9&VfTE#lʧvm""DQiTlY60
VVVXd4M}TUt]J%F#ܻw<{pm>'A Elooö텾ku^1/&$	vS薌^AbA0YNSKԚa0h4M[[8w*nݺj??D}abuu~An#$Ij1Mt
 <˗`=ܸqJmc2`:Bux~`ES|簮8Qבezx8+C8_B^s6Cr^iAA("WLA(,#$&K%:h4jQիxW/ܹsr
>#mb}  e!MS e*٦^]\.cggwޅamwAefah`<c4hrimh4xgY,?ƍue96ױ7o79̴?t4ba_?rĂ PDD EM~Rai²,c4
t:if} .\  XYYA^Ǉ~Cضzjf	ay\L=$ҁEw^I`yyr
8$IVmM>4MÙ3gva6snh40Nib>#";wFibI=La>&vio F PXh \Ki#lT*,f39s888t:Ee@VC{ｇxv/}K܄88==E\Fǈ#9֚!cDQuQVetP*pY韸J)(mۘfF eFzǃ/⥗^>SC$InxM|c8 \MgY*M.J"AB#XA(,TLNj2 %wyyϞ=˂ng}/~ ?<VWWtjd|sTD1c;wŴv_tx~ŋq-%v(B`!:02_[[[r/OO>>c޽{ >8Fe<:
 ;t=*4A""XA(,q#MSp\b08a9"F#
Ð/~|gկ~\pŭ8tKM&Ol6#ժchp]a0A۷oc8², ={A`uu+++x9:6:;Tjl6$	|M!MS\~j7jrK.0TUCviN1?9TM{  ED PXBXwDnqE4
ApIi mlmma8_*nooٳ(JG::9|߇m<7MSIDZ4LSuZ-F#Np{{{\L!^><σp]exX)NOOj:/x67710
\a-E}䰓'>l}iAhAWlzZ>$I,1CJNiի,~<ϸ@4t]4MeeL­,ⵘ	q`6Jj)>Z*,K/4M11qppfgҥKX^^fgRgݻ?3.~:gsZvMӄin˲x/)\^ٌhAc]Ah r,p T$p*Z͛(˜s0A\`&8뺸wGC)yGSe!fz7
qFf|tV~zz<ömvIv888X__?!3Su׃i @juaLCz/ BA, yF[>jh4na6O%úUӫUǔʴqv	.rZ-.LDN,Ї!&	.^}UxC	ujtX\Ec ,8CNK>A""XA(,j44bȖ*5Ma105dY]ב$	NS躎J¢1I>~3ՑEFe׮VqA c cB?nc}}/z.4a|?#N _ri->bÂ BA, j:2 fN.f58p~ag?A(lcU&I &QYVə,T*<q0&Iv
41LpttV^0!*
S4X"Mn3\`

S]awgu  
Ă Ba!1:꿪T$iFnN{{{YJ*~8	G5싄*D-ba:Lӄa|ϝ,µh~eYN(˘Np4mۏIJ%X[A A
:^I
Rş*H(ru:ܿC,x< VE726 \h]۫Pk]*$	ϲ,vcIR`a"c$I|0!J4Z=HӔ{Շ
^r A~. EF	 EM?·js|Z<Ͱ0> yh<7"i"v>eJS?auccLj.	~h(tl$T*i"ILS .r9OIV,1}VŲ@AbA<iF.fYcLٳ<qAJaYB,jZZ"M"±R97&<vJjk^p8D\FZv]׹x>0aQ7_.y"yW^AbAP`1Ge$<ϗeT,/cZF p8i,4f*k0Map]w`ugL:c^/$$H)˲,iz=A"|2}oooQٶa~CL?S2PSٵ  +& rV')n$좒0裏pxxg}0    IDATkkkZENd2Ra57&  XK"D9	YD"ʷK)(m!Gx<#C<x wp89`䒫^$Ѳ, `O%j8Ă BA, J]ISsj5	͛73gΠj z~_""D׉ϑOZ&$	;$s*َ㘿Kј%

A xXE!<[qhl4Mr-larM4zI ,bAȈ A
'SKjimYa0FQ*cdYme4
DQ 
M"J[UlR_.T:
 Ap0W=	8x<F`0Qr/_&<x,//m[}iԲnrIO`j  Ă Ba!AG=" lx}ܾ}>VVVpems!}RfTF<$ &GG/	fg:8<wyfm7nl6/S躎n-yB2_`!A A
' \EAiaۨjຮ=KKK><σi,mFǨV\6Lb3GX<`RUZu6qٳg:>CZ-9~W\AENOO
&RK}ur\\AbA"
x(|Gd2`0x<y<_!}+\r!Yvau]i%tMcLˍQbsEL&0{*}m/^|>o|; F#w:taH~b
:XuA A
a,1p=b8 ~81`&:&S/0*۶6XOSDQV!Y$"STg 0Vӝ `!=͞nYNNN}/"&	yt:X (QsMWm
բ=!L=܂ PTD Va2unݺ~$IE*
G$H
C x
LSj5"MSrUlmm\.u]ܿH8%r:X#It]Gh4;w00y,4kmۆmڂ8wNv%aq0Nyv:IQ5bwjbAЈ A
۷qU\~ϲ'4zgx<#"ض
aB8\:MiapH,þX-P4MCCeX^^Fwlۆ88::BVFxΜ9`Z%hS^79Ok&[u^;	~%AЈ A
˻ﾋ>&bwa "}DQfx0j
!J `l& XH\u/+A\v
WjW_}iΝd2p^c<_1cssi"CL#TKh,[xQauHbAЈ A
1|8MS&(Y,_wccf4QV9瓤IPR_2 Kc$A^GE4
^Rc(hZX]]EZ#C}9sm0v?f;Llu(Z+% ED PX9\PAbzcUK{{{|2(TKiV0[\*º|^_rF"S0XAF;p3S4^H7oބp]^&: `2pZt]_HŦhF2	dMx  +& rDp)04OVr0en޼t
q8*
81I*ǜRM3<uURp8_+WO>d2&VWWQ*MT*F_W}J%D %rISSiܴW ieAA(" D%'k3B,;rp;wl6Zuu]G^Gp_۶$³,[WL֣A!ZnQAubwwzކeY70jpMlnn__p;;a"Cܽ{	 6cW˺8f ǝ\dqA"#XA(,TL.eE,D0dO*a<v]_ºu]ԫLbҝĚ8>À8a[<T*8<<۷1Ny4d21  ____8믿 KOOOq],--:F-Qy[].z,CE,Հ0AA(""A2Ki.mK"zi`gyr!IzjxRnj
 <'G=t(XW*R˲t8(B\ŋy|߇ixWX[%܄m<'''<護BVp,	 B(hnL`S5]GAbADQXx9$_ &S26$RinR1Ff:L\ /Z8H{Ra!!9:)Å:ya4mY&,NOOך0s.h_=_UL%ւ PDD B(į*>UW8/Uqe\]y]86MF#J%8]XUDZiLӄimeq2	~͓oF|>eY0MFfjj.!zWuRlh}kM{SM	 BA, u2hr3)h+/bg&	5xqc>jq9qE<0ΥjH5Xl˿)#yJ%c|k_Ct:E[[[&I$n䮫aU A""XA(,$2iÔ`s
2MY3|%a:^hV
M]
a$Id9CضuHpVEipKKK  `&*F{=eiM={˺)(ʕ+ڂmۘN 0B}ЬbAA(*WLA(4̏0(u4ZNMжmT*ܾ}YauuN'''
GQJUI#;yM
R"cHLtjqPոDV<L&4M^K`&jf3G?4M.lۆ8TS	[VEp#D EF	 Eu+U=yHR!nݺ/899x<fw1Aj&\ׅÐ)˲,ضl4lYE52q8a8FTBA^aXYY
 LSΩ֕J#cضdn]׹֤e޺! EE PXHKQBbE&FF#ܽ{<677O>QA4aRZt
q)@Z|>yÐjemg$;Nm<FG,`<ܵZ
n^VoZ4E5^z J]0QT."KE"9?YoIAEA		2k9AD.:D6[$	~si˗D%	ॱE<ea)11L0L0N11sS0\;jv3gX]]L&8>> mȲV{yZyF$9Ⱥs6 vIRvǼ7t% EDbA KӔ{IN9$M4
wagu]<s.f1,˂y.S3MA,yA|>G Zȩf\."^Ν;t:phނ{NiؾsjeY,U_ô6.9 PTD Y>	P59Yöm\rXZZiĳ>TYt,xdS A<v̚z>c
iiXk9<^>4k  iشgi.XroC, Ă Ba!K¬|"5c!Cexw1c(5ca^䪆a`8n9^$T8p8ipm/<=;wu]t]ܽ{?`悐
 5Mi,~T{ ! EC PX8eu1ALJ(J~|;<#^_nݺӅCl"*}NӔ#<a`6&5mD"dzgyipuڴGA\.RR,JI\u_\=  Ă Ba!
6rCe̪atlEfh6\6l3կ<|h.l\a\lB_..A}}VZl˲x&1GX[[ùs0L?=AVR{욮Oۂ PTD ĥZ2M,i^2<wP^{
AyUK3IN39#"DQ|8!scL_ujF裏__<
SqtʢX&;3L"% EE PX9T
)9u1!&.XJ%ARFht^x Ð`#eق0u)EQ0¼7CiS}WL}t-4Q.a6>3{qLDh4BWKi,cALsIXlcz @\eq  +& ueY,:΋eJDr{w$z> ׮]ŋ9]ڲ,`mm
ַ8::Bui{{||F˲X\J¥ԦiNZv7o¶mD&!Je;z!"ضͩD~s$\M=T: ^j  IA
\E3S1CP/-%C褙o6 `I1ck_&>Uyx۶98X%762Cux|3g੧bK\.8&!,> 'ru]A4)LM}k*3 BA, uTLOj4ǒjYւx?1N:$A4;{,^u?aM0dNk&[*82o^3<p \jMQg#VW
̢P}K)iZAL %,
C_OQ1CerA`kkx饗Hd8y|֥Vr|Z
ro ?1Nt#M輴/$R(8؋/3A3AC, qBr &aHK|(fl(0NQꫯ⥗^(chzwgo\]聦0UP?Z-X_.[ujI6  qAB.g>܉D	Gu>/$VGLD19:8q8:cz=ض
Mp5S<1h6_~ }[[[xꩧx$:Ug0O4*IR2juchA A
:JEVG,Q:39|Ei\l&ݻׯҥKܟ>eu]_h4b4Vôȍ7o}[ ׯ??PTx1p?/BU8LS7	ocEԐ-GAA(*"Ab<̿HtrF4|	Μ9^˲f	q  mc<c2lŋȲW\i_WרjH؍N4∄-FKMK=q)oHGQ ^ji:OAbAH9$|ʡ&;P3^\8h48<<ĻﾋjImi#b x"ܹ_N `no~x7h4`&QVyCӦ5Mc7J(l6buhT
criG5<ΗA"XA(4V)䆒`~8?XmPPՐe&FǶmr:zΝ;vW"2\xpZ.޽ǁiܫLYLt_i.Yu::W4McgdI@u{ZK Ă BaQI!1HB~'B9Ln>~駟fG5"z=DQ(j`1:\s=˲y2|OSW\[o4MX7}gW-y6&ALJǫ8/1T7X=FAbAP*Ԑ|T^ԩ%Dg4Q*ppp۷ol²,$J}<G5^{a2<p#'?ￏxtP*1Y"\Dm>YZ/:Cr}\Nj1E-eӂ BA, $fK4&x?id}WU .}Y?ϷfeCqfV>~!^4M!raO>|><P/Z*^=5M:~1)1:\Wϥb BQhHAPiUg0N#9<߿}eضZqyܹ=]'pUaȽ4ز,lll,bSOi}T'<?I>ݯZ"10DE,(iru]_x XA(2 }~b ,$.UqwO	{4n0t^qG?nݺM`6JÀeY,Y!i.VCh}pg$=
Ƣ|zL4M1]RA9U- EC PXAX$ T:t6EZߡ~S<x mò,Z
o6>h,i./L&&a &$Yu5U
'X=xU'!f`PV7A""%ӂ Baٹr'DQZFL=Uh>-f<ea>cgga`<cii	W^1lsN    IDATTJVk,kAVE3ݫi슫	tc'EFSVH x, EEbAp%NSi2R	r$  ء%Al4QT:cc<~5Pϭi,$U!NA8 ,xc5(IJb]9,CǈJERAB#XA(,Ŋh!dJ|
XiQڵk|2)pulooC4mdYƮj~n/נI"!Mk$aKjy4 p>q_YMf.AA(*"A
DpjO-qPT09Wk6fvwwY 0"ǜl$I:$aKJ3x5p+罧&CuyWO{bAЈ A
EBR-)qBqsI硖S a"ܼy Z
i MS-5S9\>\՝)&gX-u}Ͽ}b0]C+M;+XA(2"AB_Q/q~lH;yG5cX}CLi;;;Ȳv,q4]W
L=a.VWMǫ3w*	{{QLW1^ 2U'InOAA, VT
E\Ui,8FmZnccc :Ԛ}r,hM
^t!@޹͗[iia~dZA(:"A¢
b4Y̥c,J^e}Z
e *F,CZvp](QHT^WZM&GZ>hԵޫZv)Q]}̳,eY<ĳ  K& 0)?)ҡ2X"A 'I,R	zYQZ<a.jрe&|3<*~^*Dl*&ԇ,|IӾgAt
uQx?GeG8WAA
KTRu1	DbUjb9?+	08.Μ981 mrjd5Vϭ:´&$)d֚ŷ:QKa*V* BQ  Pa,{^IS9_NLqnJ{ j^kkk(J,iM.uNVm.9˦i. .W~d'1OdYƁYIw
AA(*XWA(,T2 I!Sya<K?1?8Cci
۶qtt+W QpU\MruiQԪ3}r~U^uqQ&]!A
A
R|>g!<Rh*I\::sxԣK.-88.|ݻw[o!T*q <iܓm_;hi9iZo^ `AҚhKժbA_1Aj3~~C~w@Μ/?VH~7n˗q5ܿM¬  PlRz~&'_W~N2	[l:dZ2
1- EC PX(4** s
բ)5*.Q4 v
p[nw_k:g$R[Uu7=?jB4.VSad,dzA܂ PTD E-VKUGb7Ey}ՍARuw}94/
Ϣ $I8MfXHίID˲E_>cHeWAh A
W*h0Yf3Nz9"Z- c' ܽ=~ϲ,.%CI4!`mꉦP5򎷺4M9:S28Sb7$Iy^[۶yF  Ă BaribR
BS
Rg 9j5ѪX=zN5K
ʗ3?iLeY,P/{oF.>z9/DDMP kHsnY1Q"%Ɓ[fFDb\,%&tF$CwJ>g
Qe^]mkGdlkY~D[?o/#o6ݾ_{NZ@ |ˈ@ Y׿3{x;mΤuv)mv=klȶ;qk~K+u}Ö[dhm=u4Ρ\@ |@ Y9Op_:ٻOfe}-t[w Rj{t{)%s޻tփڃYv۳P3@ DX ,=_;^r`~7j ..Kalw
G͎:ߒil<lNz`X{_qnYVY[߆a?vdc]z; G~K3eX_d)mcǽvp۝v]ގvyjY;#kso'ߵ2Έ[;YOطe*@ %DX ,\;jw;)ߴ΢ZޙU펺n}pK{;[eO>A @ %DX ,ɿ/Λi0.uz=_7Ի:+lZ;ki.c)ϽknoGwztnkw/v}@ |K0@sl6~+گeh;탥ڿi~=Qw"oo;?Ï?عa]?c=?$!I?FQ['6
脷o}5??$I0?z>_:1nzX?)@ "?bhW @ !bX @ %C,@ !@ w@ Dt@ @]":@ @ .b@ @ |@ @ KDX @ %C,@ !@ w@ Dt@ @]/!HG|5]79F1I ȸGK18]Gr|aR__ xelp:]_̾m2D|*WrkAB;z7m덁vUjcز|µs-m|N)'H=ʗ~cpH1|:unT,1(҄ٯ(D]Fiu>CSrm{ug6'"~=s#֊~tZOp_EY)d)yT.Ưu#"2Q35aZB>Zlv<Xw}7c9Ew.e؜
+$n>XǍ_,~'6_gZoT+X'=gpY[1CRk:0
JQf6/ /^%Q{m+MQ"w{%Ϭ[>3_I b'_mHI^__Qa+S>+nW^bs?aui׿`Z镵 
t}=:nƽ׏++@/Rniv]|>{L|^b3֎2Xnьk>?wppx4yT̩_.3Jib9]FajDmx1wy^՞CjQJqq+޾{e$vOxtXoܛFzc
ǉ%ؗ~+u1;0DH@ Hl@,1_l&TWv4J,DHdm%Wɦ|W5JFrjχ$j"n5|n g?@z~x~xr}AGtB6#^0,:jJwEb)tC1Jx
[,TZ3K2qJn-G8Jvr-݉r3H}dYUDHeP}>b
ttD-u+4+łHҨe]T_vqJVIhp9/˺w9Lp*פ6׽fћ6z1CR
vUHyUR@K5r/8@S2G8uji*Oݥ2V
NS~ҳp?bXHt}"εip`C}X}u!QJCQՎ$DH,6M{"$39>zsV)#,4E@,xv9le",Riw"n[,.v/&˺cգ$YZ~|wW%W12=W@M6c˨NSN;t bNCӚ~QmD3b%JAKƉaRGm$#ri}mtAkǂ@ˏUXѻxwc~.prEg7mnh	|*\Q8񷫾HXfd؇oFŅIo[b^e׈ :K=;ĵ"+ G8^;=ppMI.8}C ];n BUlTO+,Wmpt"DZ{j,r/>Ǝ3}g0%R|Q.MBC֗T" H'ư^o.d.C2*K8A"t~dΨS$tr}-+&-d.rW@>yfvsލco7"؀*9'C{l$ tE+x- e#z݃={'305kxFt֖Hi!Royj7.'Ç,4P{+^bo? 4dm ql kdvBzvB-޽YFn,hؗwy(d>$[ʸAR}p˼|%n}q!o_۷<
Qﴭ%6
oyuFj eq1^o+ٰ5s2ɗlϻFH-Db}e{;mcaxȭL^^wXl!+@Y~&IݻZqsba2ꈍ,wyo_X_(ܢHqo_=Gɭ4]ʞ-^$i/>\Ğm3kt2j{PBj:7 ]ֽtrۏteXcMc\h]LAKԺ~RDw^'㔭H;޽F=aigQ}gz."?~+2j{I6nz˻D:mA>bãwdԞ5ZSr?heV_"%˺fʫO,CnſS#u-ߕWoy:MKlPw+C޾~Aq܌-#bXU9&{s#hFaD3b`?l(Q$wX]U6,Am^=Yl(nB1ZhUn!iVwD~ F'!cϒٰh4I*Y}ݔ]cm9_ll
cxG&ClPϳWQIgsf ew/
Heم*E W*Azvv	y<́-C+f[2|ǽK;M.=}fpt5oę~ǿVP/ʻY(n-?g)qLI\+c;'cOCa7kܾgYrC6gJlm䛲`<*<=ݻC֕"{FBmxttf{zL;Ub}3S;UG{1du<HQЅCQ	:([K% ;ayxy~8$dW&B_"v5I $\EgGաriYBrP6:2J{gX;Ρ9QAΔ,2jB!EZ.wY%6E،16$P"m+@pe!2Fx-dj.p;Q:R^9IvYId1RFe/}@T8+b%zNoy+_6@ٙ)d@rHf;@Rx;`7@rQSTF/$v%<`;W@vNcP%WHF5OAk}PS{P=uV#2TN3*NW)3弆ݯQau2{
DSF}0\ܳe""z#,G*T8ʽY$@r\.&Ցrey[
>WWǭ*ӴEc#e6,^TR
E@y_7Ԗbx	e$ySkbǠHX?ly!$*q̠8 gx!ΜQܿS"	lTtpF이
bAa`C7C9ʱ+qm>d :O5]98$▛r
eW9]#'eiM)hu~!Q3px	ݨӜPQPA]?k{
jscosϔ<>&S8!Wx~-Oz}܈m8X]pw~ܮx@9*cҏCuHlxFZ{e<ATKԍO6Z
wY4c;zcOGDlßP%dwI
2Z};a&w
煦HvSA)=fkV?k7#\9Qi	/]UNP}y=:
Mř6$h~'+1{G5a8ΖqkBм|K6rs!pfcm[ר4x&x*:(l$i~d
1*`/-.F{J;U\;7.èS+F\-f9[
`yu@ߓ#G;l켡N֪̐
Xms]u'z%FB6l
gqQoBP!w=q.ʞnJzOfVk
4e9C5'<y+6/*S91bٍ{1
:b-ca'd
=U7B4m̂0$xUj$@lF =d+_P/'=9FCb mfXnefz{:Ϟřn]_AbzTW۪2YNimvl4U
Ww"^Qęud_$,q;@fƏ?A48npUbm|[]ǿfݫiox~
Q~UF"6?"7Mni:37
cn>L{v<ΕNin$tI%VYJ?c71}n@vc3͍Fq3o    IDATo:ę^dI#7	6C|J^B)[rVYt^/ s;ar[0hcZIa|\OVq+ߓy#i_ $a޳e}
#C,
,SS [v9¬,oc]^<Kpdg^{Lzaq}Uoܦ^liwΜۄEeOfc<]:HC	o<S)3_H3Tgty<2Fȭ}+%`(A)vsD8Jp8urTo-P(㳗eh݇Krl?bWP)+:E7N엨j
JI4F}שfBl?lz;xy(t%g6d\ճ#dfG(_Yr홋
qneӉ}rEI;'QR5]3].id~XR]suf'Ar	iG
yU~rv>3t}
aԣl|֜m
/Y3MF:cArr*ӰȍCm[ކV;Ϡ<{
`s^rY^|Vmqy5s2jLg&f#qr(ۤm2+|M&dϖ'S뼯^4kA+h%~'Qv7.[rŲ4G&[^r!9ڡR>RԆ,TqA£g*՝nȸ0/1Sgk	cJrtnyxX\*ejD !3gto[֊d3ˇ j)'v@jMBAݸ8N?=ʺܯѴOtszMGrLTm7;ǗcSAIu塛/cl(9QYhEm
8Uǯ{ MBGFrq!<xT'fS.5]WhE*ݍ@ ߭- ],Y}D{If}mU!Lf}
s%%dGbC[e2$vLȕ&ެ\wXtT^o0嶏d%F"{,hG:5@vHgwYvmW!lv7n˅3U
h	F՘$@;:P1dYO6M5_+<^NYn0DOǺ6Fo3ٿOg͡.=l|3ifOs{bةSř)]:iC04wݘGq)C|̓^"n3m>IF]7~ǩ4G]+~R︐]?:[G5VL!8H*󄭭2h{60YNuh:">mwDF5C*{JMQnU}=_Ie*5}K48ETuJYXX>FJVV$ :`6ȧ+Vk~Ye#!]J/O,^)9ߍVtr_Ϗ/\(],:491Z̜̫~?t\Q밐ZRYg4{(۝JCHQl5lW|-v+T
[r4 lC5hUtfNUO{dut? 	(M)x45?/
:I({vR4]#'v.uQ<,{ØJmmbB	:vk:qOqAPnDc?S䆣tDl)Wuzòsͽ>[:XڶnڪQ9bgbvvR]FS0
[Kv.knZF-?vZVQUNHqbSP==?VMNgV|Nb_
IoQUwVv[xak(mSݿƯCƥ5R)Pt-ƎT
F8|jeszZFӠA
*
&8ԨX8F_/Cp'Vٍ}Ԩt$<?S'[vʔsc*2zqr67"TyCsϗCcl3J
SS`:4b^7(`hlYsW@j#s/J,[HqZg=2Z{DC؋~ȱ]`-w۷Fѻ%p~hu&scmVn¨:zdO։42ܻBJc:V7C;?1wk{;
"뛨QpO~0ï'6FQ&h_nE";E<>tIuossݾ½
rg<zژ'CG	L6q[s?<^nx_DOnr)Br%Z >>FCdݮ-|Ķ>fKlLS\m2 k_$\^HnĎgs=XAqlrYymK9'˛+;OxF
/}":D}T
{_G doY-]3HvJTՇIfy	-b|nةXߌ?OFKy{^Mxl,f8A'/8>xr;&r/M%rmp8C3u"s;Nz3N[>e@}+m[i٪޴՛ݍ9dRAhy/vu&%__8Ig{L
+<ZƖ~cgfnn,^=ʳul	bոD	W	|-qEy0IsƼ=_nہ:O.l|"rΒ]O2Il2kJP{Oc*N!1РBkdku{>YٞFybAq㧦,:-_9Zh#[qҨϵ:^͍>g^ǈ\3P}W )+݌`qv
3nWR,q+oB-IW4/~ūOwgq-u0(&QD.3R.a$/-Cd!GU+,*|%^>+ϋ5^gs$a'juW	olָ}Oa!)Ko*kSNh*C#,B -k966q/EgX .`j.P)٭<^!\)ӂqȨlwz<7Bgǎwϝk\)nD.;斖S,m]Q\d[ɗ]2-@ WX2-@ !@ w@ Dt@ @]":@ @ .F:CVW* xJ?//\WF?Z"\htO#:5lmD-G,mkk0n}a?^/aG:o5}%G2Sh~08]֯®CY]oG~bg3L_(~3ĆvHg]W'3geU
Y$?|=N$4V-Q}]a;{{%ϣgDݟPqz/@(~m^?%#ƒ얾5x|}@px"J>Û<vi|+SN\tNȷR?S*_85#bCZڪGFLJ;Zv|Or
U2 ']B:;gH{n/ы줳>uv~r8zq]Ue#c1N}/0edEE7g/9x_Z:lj4_/LʟOcp㫲oiw}VO\ӕ:ۏj+rNi7lΖq+iĵ]3/AbYN
?UfxR%G,!]CT
)"|>@CYkq" jnX$L$*^
":@k*߅rquN
0kk@p<eIɡO]e4}eOid"b1p@ B2aPa7v_ޟq|&:`TY?Оkol*Ni.i04:-*XFmK-;h6҃\dL%'tg%Rc2,5,xv9~˙lRm*+Zp*N3	Ԗ|AdB
-Z<ܺwD5WlIhֽDm8!kpL>hKj]ԉX&J8 ..3\Sqȗt#Q*)DWPn./j2ʍGI<ij`G0*_$IVO2-?5[A?J,qh5!K #y-Ka="	Ջ z1CR
vʤ&w/F<5u&KUtqJ*#q"hhYm&`wP!FD:Mvm]'~ZZm4,^5weգ|{/CbN;siTn"]K+Y_$M#*V^єi^fL"vCc7 Qa\=78]_৽:3Z2nێiڡo6G R޴L/F'tE 
q^jYZ&D&h0oM4PłW]YQZ#苓tw?5Qr}VhS!^/9^@;Jlg)*rfOqM/z3~hx'Ch{%ӃYcZ/FNjc]ґ6cЫbNȇE?liʼ۹iO?Ƹ>3}87?|2GGb><7Mx`U3tw|i?3(WM<<wnۓ(w̧~4M鼩(i)QYԏT_?W˳}i6~m.;yѐb*Ms<+~3Wi擐b?},9tյKdԋw/(z`nM|4w\~ۺoߜ4͏/`_5?|4MeT?]_6_4'k۞~0k*w6ͷM`ݼc*n(w_LS4}hlC97}4k*w_7uM3DW_f^qn1b}ݔەY}*Ө]1}4ߞ!|w;zs[Qo>x
||ؼoߊ+>+zy>R?wJ7VB)nFʇWfT	"k>/[[s߼2n^ǫel3FP>5]5Ҍ.tO}dζr鞭vZ~;GiWwʻv4LFc?L[o.Z*`>0}=|xeF}aޖyfny\Uws<(Oo SoofH1Fcly˿u2[拺muĵOƋWx)!ɯx5g^j:8"V|0_UL|xg>Κr|i0(f֭c*O[3̕ݦyG5znvrso懏K(dOϞDs͐D[:ӒAQ[~5wt_{vI]Y35[2;mӜ/?y_懷O̐jy\oˢקwL\j~ڡwSs͛}Z3Q=΋>[#/;>m+GfHQЃvlk&ι>ew-N>4?,>r2?4_>jDΚ	=rx-<9?;o<m=zx{	cUpƛEjH,Tg{GF\y~8$dW&BEnZ.{gDdTrXy+F_*W$6\!7 8PLx8^YM0:RjQQl(,.*8$	W0򌭧tQos!Q/1&YW)Pk
coTg=rud"\ O>G.Q0n98$鐊QX1^nqrC(gu:mxF d<ATK
z6;S,PH5rG	$\xu(@peU%Q`l6d{S/JQi	G>b"Kq(o>"bYk aZ\aU'<Ց:Lo MnmGp\zp[F3SSSMuHf.l
EsIA:1Ay,<WO?ыl屫IB)L<Ԝ}=0yeδ
:#hƐ omd^1#_7y-Y+,Px;`7@rQSTZ}Fׇøreڇqlwz1A-#ӄutNLb|׎Sڹ^[(I]Eoy+wl`3/?{cGE{
e/ ev^(BB¡gʖ'r8d78Mz4|5r;{&؊Y+ogi
n.BӇO̴yqH%V陇E.$Ɂ79 i3o]ިim=nD}bo<,/Q~8>֎shyԎmyF9ĆG
bAEiܜ{uP!s5S|ar}Ըn<`DЌr9\-!eQTTF	߼˸1u*u>_;Nú qԵuJN~Lt0@ES8]PcP)8	׌eLvJ	͎
Jr3l
wUS:GpÉx6ronɬ2m	^66gi5Nxxl.ֳe)iFvbA߹,9aoPq
'ٚn Pg~'42Db)_Vv㚢$SOEG
-Pظ 3FL˭v3	w0Zb@l6{찧Q8J	%d/q+%d^U	)a26e7K?RC̫,Wg,2iZEK7G[R˼ƛA9p2+-=,ҡO]%I wlQꔯY!v4LFcȯ]`[Q҃(-gOpZdmw1:
pf,׏b._ǖ2m
{?05EZ!뗐X٨S+gF\ъ43g^Cz:v<_cKh͆рVy={,R&nנnL3)R`:(r7
S :ٵ"Uh
P3[up6l\R_iN60uv菛PN$rc#eDGz?KLɋd%FЖ`F02Nu
7q    IDATXl^k[mgM͹GK18KKJ2g@'0jqmO'FQ?э'F~B;3<AB:WVR81L!nYyŮگ#V{$mQdciRp樍qCG=|e6|Ӫ<mTu>ĨޫFa5/(/5Gj9bs[>j%t#z.ra=ų(g$D_$!!B!O>O[^V^n3;m`X5 H6J@>gk9;w]9p[	o<S)3_H3Tf<D_H(+LܿYjriCM}x6ʎ1d*e(ٶՋQ4.8!sϣ7rk_==$>dXɰ!_CiǪh*kP_tiOkkI=zAgH>ɯ['M1/*ߓy#i[ gfK7J$^	FGo-Lr#<n㲄=4JYUa(3-E:ߤ1xh^4C4$wLMlٍds}O{OGPo<'׈x۟i6όych{jpV
+NU'AVA-jqfz?WdK%'^;T'庌eS\tMꖛءb=%͠rR6Q-Q:s[K0ЊZGEe[=/9
<z$r3uvʩ FeC*RO4ZqaShhp;ǘV2ttCƥ}>{\Ɏrr8v֮JY:8ZG:5@vHgwYv5devap)sOuR\^Ð\x1^>|[#9		ֶ_ěN^?Qްr,n1~[/R݄#,v%v3<6hF˯EU+q-!櫺꼯^k%1թ P:٠
g\2iصRs0ʰU:edlNL`#}~R$'ӗڨ5p{rbޜelѨ/rDqqx~zV@K~Fqc_o<HLqj}P$zލv-2ǔ5-*	MsdAgq1Cx\{3oqv#Hԫ&g
3ct'hIcмH£g*+N$i j.GnR?~hT{'>2v\&<uH8kC&CO#Q
0,-,;HF\++D6Si*:V 1{T$YU}QQ͒5lxba
lϕ:$OEv%⸉h
]AE'JTiFO,,_J*j Jqmw(0j(NyG9Df9ա9@RJ14k^}'ٰS.s;5tí݋hp/:,,rXs9lyC]+Qp9<*!{_tJq;=6]fw@ R`'[zǑ,eQ>hݖ-	-Fʸ[⤎{KZRYgt8ϊ;dK;e	1jj5jfۨUP+婺Bݨ}X!B~[э	aGddC~xc
FacYl~Nsϰ<dY>Uxa:a=k3)<.;InF#|$:MruǓ8*4=h[<d^u0yWFK48rSKa8muJ''W
<?()C|^"n3>< Y!yԄz~vhmZT?2f*{C=kv32LQdNx3>֕ۡM@/Sew3:F'jbUT	[[e07)M\Q<˱5n~X9$m&C'۸u:{<m%	z
2AdɔdJɮK:d.y;J5!ï	y.z(zWxEBf&^|C=qқvbu/S^e#m67}X9Y\ay$GRG!{b)k'~wQˡ]7LFF
/Ti:"vˇVz "z铇|D(+xsm[#s7ݜ£Kidwˇwr
G9C3u"{&e6n'{i-	<f_7nNOvK䉿/|܊@d'aH^ۏk,ܺDb0"ɑUJ<]Fb
+E\>|7X-NxyuEA&+Wos\}Ԋ!|[G_Pb%s9q{kZ\Ygn5# }nGc"4ʼIy;AF^ R +뫤@t_'v8Q<﷈-^.յauGAm0{i*!d]æWZ1m&TXZb5Ӏp)L
ciWL\ʾimK+sWMH	L[RJ!+4"P+1lq ۀU9<_g9mu/~'7l5"2S$*C|3;]ۮoH
6LM2x9msI!@O
?'6:!1_bz:,zBAcvHNj9E1?>TQ&Y1bRNzg}}z>e]V2`?50Ay@&^> <p6dTOɾ6_ wjg?_ކשmO<W`@gꑁ6!N101p5i4٨dٰn9I5hlfvm\˪8>7GK90&߃*Yb2tlGbPXDB6彿%At8J.v@:ޚD?a?I4uBh^s2PxĤC?cgA)b==0*䷖ٽq`noe)5_<گV\+lŝ?Z2qB1NLJ,۟VZP9$o>X=,>Md0fɴoY2mbbbbbbbbbbbb[bNMLLLLLLLLLLLL~K	o9!6111111111111-1'&&&&&&&&&&&&&%#N
~X>Sl=;YnJ8SsVMp2o<^2y 4!50~'?2{ap{P9Y%UQ~qz?`p
*dF8(W~LO&9(eITT5LUiG6&2mCIlysmy1<_;|/ĥ\[G|&7GC!ml?fn'up.pku?N%v~!ʷwB~eK~F6[h&_&8~wȺ	[1/j.*YξS[<·4o#?xXyIy;C//lL~ɆroMm?uw[?u|7ջ'%r[[n<[?N7񻚲fzj}ˎ/vAw#}12ѷԩ`u~`wN6?o;|Q":Vo=ηz
l`cq+ /:mϠϜߘN6j;~gwGQͲXꄫwgzc*h؋>97qr֢^|r(
&T1<TelTUTOt5w-qFv5<.
!XϤH^e2M6NxdR1jyK	Aa57%>O4E?#s/~˙ֲ@²{1BA?^ome@*!o]neY
'8 C^=^chda
LgY
u0HUg)j?UrCUtlJ7D*&
{ό.:Oze4,̟]
MdȬ6WYΞQK6MK廿QeD8߫mYoJ^vy1K-O'cZ{n߶ϸYSjohpUg; 2DNoD!Qs^ΏTNH\ڂ7DbMfcLc&[daYj!Wc'LShQU!)?/A7
n]j~lR>:I7Jkn Cp5F{yyRakC^=AuQJ787eo~fV
]Ox޴rȼ%yR		IYPn%1-&2ͬzc)W'0")|]!SQCcz9.<L2'zN->U(>ፒnK>!7mzCf?7mc$/'kKzƣunOL u,aT/YYbKd*zdǙn}ln@nn<M
m肋7lt?c־Q\?rguvi^f7ioDDM_	E	ZM|}&X|{.8ǋ>l_kBP|N,z<bmqbNQ/&?G"܁7E@
Y>LYJ@	!%DwMY=oI;r"(3B|+<£Dd\.bXȲ!y31*ˢOx"Ļ5qXM+"^'tZ3/XQ|m=w@joŢ#/?s!D[93/tb-ʱRB<oS|ͶӳREs!jf@ms:Jx^8X	%R|iՑr\}W:ҩ=³V\IZ{'|o(`sfz:-'^|5!D(K7]X8hv,<PWW!*<·NԄ__ǅǷ ^*/kbZ/?~O`'}>;oIMӥןyx".<9_^ez_ỴN)X:"j&3W:3>9Ex/s!wO(ʌ覮#O/DK@,<""|+:EQoZxtF(O(6=bzv,n>Q|bճ|y_<3bG\OOŴ2-}jx.>qm>}}6۸PElBQ{/6X{?n2"ς8Ԉ_	gA!:퐾1.ٻ/6p[^MV_V,z<"~|m[[cBoK>E̵k;&>nNe4SqǁnyP;kGq^\̥o?k-svc![iߜxlቼ_5DĳL.3t >Dkxeo}r̀P"M?@D@ܛWNe/.ܦx88 ts||'ք}9+EL?mܭ_<|./蝿Ǆ=gϏfV?tsqŷveuЙg:ȍ~yNC!
˭<@'muyePWm˳n[u': u/v_>nl'ayOxq#o<rq~7~$vB@uؗ hS%gVg?8JS%cX!%|4Lǃ8mr50Q
 ɮniO2b~,zA.07qs^2 9$3'd3U'XX7d7K>5%NH1.B&ynYى?2|`qqH'2 a p"Ӌ70 ]x0ؚe.:<c
'mgaQFà<rhq$Z܋ѽtLf`YᎮe1`2&Kxx\.J~Ɋ߁M	_P(xq)_z-Og14ްgb&ǰKzƔ8qIKhzvUdv	/N#Wk99Cenz,3DALy(9D:mxus7J$79ʃt{&!ܐ!Y//
gW@y(}&P\~e_M4A$`,:L?7,y."qvwY-=p1\]$
8(:u@xa(8,ֆ)1'YǇ('х㲄v[(
'N]n8^
A7GAJ5{IC3F9/
ql=wAFxtk_4f&<g:Bw{yN[._'{c~rJQ:}E`>wz8z23nu]iYG#[(UW5Ju+GY<ɗ{W4=~	F~Ǔu\*tS<+-XraqG+3q?An12ٿVLv1T]ӸsldJbՀsk**X]CO6ir2X-3dtғ,H}gb2AF@v^ d(sVYԍ:X#-fsAoF>3(p
oC[$?&qy<L7'f V Տ2U(pb>1Pࡺ~XPkbB}qQ_Sjvr
V{pL!xX\7I b{7Y<tIbno4{OejT(^h#ԩcE Lqirqn!+2e9KA%O`51`c	wxȕDقL`7uow6%}
E=+&:O?0i2ʂ!U%MI(l<	b~ep[y,
    IDATq[6~
0q/}Pg
'l쾡JTȉF	mxdp2Xo?;wڲJV-	O*p)bqF3^9~~7i'_xݾqc맓)\jq1fu%No?C+ݜ&}զw)0ىxIohzҝs׿}X3N;J͗Sn荎덑gc~<$_CE\K셻Q0
̀{gw5ƳlAֳ^'qsxSJ?s_fq'K-Xc7Kvtkq^e6qs0`pK08֖~q"Lㄳo0tj8ow`F}LzVR
T#|x+]}=t,O3m+n0
˼*긍y΄я?xNH#ʐ|އk(Z.
9b	#WwbNeN /Ix됀vB.wQf?,ܡݤ{z-hӿ~rrS[6p;(cJÐrRx4=CS~iH@f~gڟGw{m5
dԻd}}2n,1N¦qJ#i-;]~qsj
V3b:YԣjieD-VKjR6U>7t
+^ՆŉRl,K:cÀ+ufsPdNg3ovOol2#;]i6\AmP-lT5Ē-(]\pa'k`[O-z~}}B{= q[oߙR/Uwɤ{3	
b˛tcCG7dJr+L_|@ir_vk1;Vו@Q=hQSj*P$;]qVB/uG҇2]{Oĭ&sGz|}4u
]V':@wF\+ihtʒvF;&@>[$S@Ir6Kv?xtܱ|]:I\We;qQupt*c'}m
;dP쿕_n,xJyO,pknbR#8~߼@m7l`-fx*-LtWn_ݡ;厖APf#o2aBaXCn5gwq	qds1!'0pKbQdkX[QTC$YS,\v'N')vpXc`h=4J"-NJ:c'n|hPͱ{tݿ1g{R<}6ч1R'4JBQgOrEXloNR`?vN5ˑc1\(犍*iA)?@:Ti		\s|B9y}R*-ggyB(~^9#2p>k
&9W(d6XqABe8ӡ`{ e(6]/HS6V3([sh~foQʱ}I\51Pv!dn*\}󍝢a+Xb;[
Y >½f[m?*Co݆O0J9v_9*>Pt-Ʈ蔪' }HEJȸ
FnS	_{iixEp}~?VSjsW.zJBSN0!NvͷknY 
8)g))m4[5?/4<gp؜dZ|Ղ>噣A>n/t.ƈϒv,Tȧ7T!wF	N0'i2|xE_j.\3ʍvV ۴)3M=ʞomzǱn9g71%7LPUy8c.ŒŻŢIɇ<^jIN|g`_UOdK"<DUHdƈm9ɳ[H?NΒ*YJAQ/%)fWɻxg"޿uodԿ}K1L>LI-)7)I6x4>L/^&"SLb
"#-J04YZT61N1ĴOfzQצ2sSA?p}Kin\ggCTuSɝ-VD&x?HivבܵZqé<ޭZ$\['TOxJEU'Miֻ-JǗ1?Φ8PAـ6LM2x\NՏ8<}A3L>ڠYakaLDXOxӁKqYY#pMtJE[
m
gQTi?递MYk/2!ʒL>ZZd3=sZc_<TUBSM|9jaDz髆>eU<[/Y¢7 6x&lfy^QB'xÇ
ul6G_v5cJpyQq/V&jՊGi* 7Ygv
UUBhn*#GA>^s[.V۰,ɛd) Lz`Wy|RxDX@?S^0ZL,d
8'k&<p? D<#|e}s~w<9Dr멃toŦ0l'p-zmuf!ď⧠vMyq/.rzQ`5mmɏ%(/C\k
-HbCYN.![wOC $ԲUn|_
HTWȦ?GSF~±͹]ɴ7;ęvhiL
B~k݋ ֍
<DGK7M#\Wc9AWcψ9!6111I0NLM&5_!ɇ̿4^N*I%fJ
(RG1O7M$:e|)E/dBlbbbbbbbbbbbb[bNMLLLLLLLLLLLL~K	o9!6111111111111-1'&&&&&&&&&&&&&%愸,ɐIk?Z dOJ8S0(Qc9w;_%z:Ix&Ԛrv|K)l*I7{ATU%o觯w%I|˱U
axIN%*S|pcrww[ƫ<^2~	W槚r%Ugx4o#yC;$sRbB	?cgO)mIτ3ų!yS}
m(s%^^ￋolaa&=
W=k,\>ٽV9,&R~	q{zݭ[yzV
6GEv3]u'CvqtoFg~Cשprol;UtSF!a8.<աζ1vͨS!uyНbŏ_C]F
vp[Luac.g՚IF:%wV"J8
j؋>97qCCxUUN)&x\~(`>7<yZ*KNYدB	{LWNRĂP덷=jR&ڢ'27D"o3(&d牆x~9*fcLc&HUlY%[Qz
n{U-!aB~/PLw)KjPЏ
=lȦo*31jodZ>ZX1t[zasL]]{>k]{Po5J唍c-=,u
-MHR^u)ei/74>Q{_a32QMyyR]'Iy[UW$Ot04WcI}(242ps<$Nu.lw B:Ay,
cqz?AbQ{z_Jԕ\**pz=̱Mlq9|z.o-MTQje7u*^.MX
J+z<yU2]ʥylu~חrNQo޾*'[$Z:P礷dzakg/C6j-:اĴ:rW\^?Gt@kgoL1NhXc)`Rczt2toJ0uvB
Ѹߴ$2Tja<Ϗ5J6J,"lvz$²{ˍO}S#2UhF#/0,̟4cχ	U{ggdcMfGuP>_0ifLr.1>z#VzQnI7r'K(:`0_c#TQs;Jj~\62q_ʫ̅*(ޫ\*W˼t罄Rg@]S9fNek"FA\x|ǯvI,2T|B|9gN<{./+"x1%(˳ ޞ!jĢ#kGL/5!G"B|}-|>\Gt#f~5!D(q{Y7BE"fB/D<%)>ք_^eZ<3BnQ㦘VbnS(>r쵀PiڧgbF	4s>
("жs"KS"qDq0wv̈~tZ(O̽k"D%Dw_kBӈĻs!DX(bfr~.{*"G,_鋬Oke1wO"fB߯G.xx=ԩg3:Щm^<bykb7-M\=b'!jĒOӛך/b%4	!fǗ[[_sV,z<"~|}u\x|ݹ_^FYy1'<8&ޯ2w,-ħg3B-/5!j_ڌ(k>}r{oZ@Ń%1(³]w߯k&]ӊG,=S1f=]\{y&ޟׄ8$|BlT?X`岽ų9ϕ	ŷ"׮8D
xQgx^ҌO(ʌx:c1weBOČĹ@,1쓸UόXzQ|=TTqv酈xb*w:epon+W;]XyDes,31} O(3m}o7}/f1ZskG񈙥&j_^+=~?_Ĵ2lC':O~WP:eD(V[i/7b%^.
sQ1ȏ5%Ҕt~1M7uLڧ">.
6O_y&-zgﭽK>=x95^hv>_Esvwm]wI^3kM9kӊA0bnu6.E39ZßQ}CF{c "kmqu{g6߉FZW}z&f<sW~ӳ5\4'R37kɽϏd/CLېd'-^,F<@[$8UdWo<1ƿmnz	OL38i>
`d#Ev}"ǇX60YNcnd@vY
ہH~Ɋ߁M	_P(zm
*Z㎃0 ]x0 d\n
0f?ٽ.,8HbDjg?8Ml(<{EQuxC)q7Wٯ5OwH8i'T~[B#ɍOIp[|W$'	\kH9zB04d$k
6	$gr^C@/_XC`[r)5MB!s\'o	;>$	q֋~/q5'@rp1}ۻv9^ 	?Va76Iwɿ0!dɜQ".c-<N,RS6[XlH%tew=^ [I%dgŸsH@fl5J$g[yd/sz-Og14|^b&ǭ@:u':pxIfND7$x(5'х㲄v[(Tx<5$ngaQFǔ8qI7u0мRqTu;n05xMFy ."<H..BKI K}uh{7F3
4ꉠ;ᲂ5%gL׆,1.ȸ+d\=:d&!;$67YCè帻	P=Qk$0_)5[Qn
Mp,L\׿Fȅ
ܨ).pEP>KKoc#L,Hge
%FO`0
J[&VNb: du-,@Kk5vS
lG<ٶyo:Am?zL}̅%n(?aUzF.)`%	1,N-kF$,+֫?X./j|~<Q-\%~s8Fİz-˥\KO@2ByxLǽlt+D*Vr~uB\,9%|
-͆O4ta|n@o3twԹ
,ݏ<Dm"G)h4N+JfUUZRv:hpA.k:8\VTؕuh2R:nQۻI,M/&W,sKN⻖^W9[)'X5hZn'zj*V{ȠT2N	;dT
Z]XG2^ZBqF%c獼Wo(f?s~:VLv۬Q[	8Zb灵N|	Ŋ!XQ7(sVYHm|z?1{ytK5sǭUNK9cXu18&Y[mMF6}]q7cr+Z}dzm[P`!c{+\r-c)	hn5Rne{]Fh]J1oZ)X֮s3qy
āASDFʅ$	i*i7Ϸ(T`pJaB$OcR\ [	l9_46!f0ⱶT-X\Vt!    IDATl}y9>¶@̟/%i՘%{?tȋ$dg_ٛdmi#石;|^Q,9*񻬸=Vs%w%qK#\+iCNڛ卂g,O8:<h1x,q̫ȐLH@rv^>ked>ܾEZS
N
/DjL1N8ûN׼ȳ1AN㫏q`V{1x{۾2DR69ߛcG/AuX3N;J͗7&k逽p#OFr{A׵7G>w;&MtqwmHzwM
vG%2}	dX Km:5
ts!DY;8'a} 2G֣v!ti<Ds2G!W`܂fiθJa+y2,gt9FMc}`Ye3Z+]
8]%#/lCac^{4lr;2ו|	:UzC(ZNePt]Aͱ^)X]8,eZ74Lv:(hin=Y?5+?Jr=˧>ssd
^1MªC#
k)1?ΎUŖ g膌C	[Nr+op(V -p) {O0
u\H
ϧM%+.+T-~vw[V(5ZlyV3l|Y'y9b
#ݓrpY׮~z"ULX%V%[|7d̊*Ŗzهe}ݑpPjՠv{U%*nۍr6?`u%f$ޜ(Z,U
Y\[;Ͼzre%<GU7flcuyhI-:S6}7
,z?+.茘+X8,U-eIgZNMZfD0_:
@ZT?SmKE}jFʅl R\[.W(rTQ<Vӥr6Kv?Wj2bB(~^9#2
I>)46?ۙ;0:NI++BTM#f>Y	.?ec$YS,7nrJ%n:O0ͷnRдRVdP5~B/HSm
QKpQ֨cP	*oiC"jSe+ E9DuJ]r:Ly>[$tx
SYX:$h;|ɉmpQc$G)C Uk;n1,R 25|!O+2fTn4'*e R&YQv]4tACܷUkΠJYfAa+礋cxC6.>½ٱR4_S^"c۹FS)Qo`(prKImO͍Wh!ۻgC_yPΰqb;[m |^8aceG<>+[;uIHc^gDH4+0*E
E1'Yactk| 6 !*Nlx<ԏ>i:_o1?;˓l&$N7)+^;bn3^>s > &Ts]ހNx
JX'5c2:s0R +D<NS[tt-_O/XSfoRWe ˶G
#%:
@rpg7S@o<x80#BVE.7wz.Mpl.)FJ8l6Jh31.BklEd2GL=am':Itom0M$'>3K04mS*Tj(4w^mFhe*':'?"{s;)YYApr٭HVBBr)~OluCb<Č)u6Y`<Nxe&"'<
ũnÿ-$xR KuK"<DUHdƈm
m٩)%ƷX*tkSeT9ᤊ:8KFlC|3М.|ʸ7M?&Q\Mt:zS*:lJ÷N*Dy"^UPei%7βx|Ew)`#W!kiz?{IY"5GLNxR訃E/TUKR&+Qc`
4wgiQAxĤ:|<MrRtأIa} 6@4#c
(LholHC\r"RI܉pPqeJUzS[;v:pDy4gJU|Aѳ0, ٌA:@n'#|8F_Kl._~Ĥ20A't'Q'JzoIbn':;NN<LLhHᏺ':ۈL'VG߼eD$ &">.΢6-3g?%'طDZn+h_|GSLͮw/tɍtW{eCԕ%T|Lf`G
H~	{X_	`>fJb>c%6גw߼Fp\HrwCL~Qb<!u! ?+T!BTQn+8H%&&
,Gi{b-E\FaG5s1=璄6l,ȭq*[?omO	.['➁teZ:l6A/~Y4(н`/&&&&:~)4%δGK3QpT,Mb`gdNpYOe8}ɰi&.DS'g2lTo-{ eB_w61111NL/O)nSǂU	}_Gƴ_{{˫hXqMwޏ?;CbM~.̒idĜqlSwwmiQoάvg;5̽wW"~vKgR	C%^RT# ṏpg;i.yTTe0CwpVCL5V	HMB69s|9iH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
ia{>X^]Ϯ̙,QX&,wv sGDDDDDDv_=o.g06JfO[5x6/}x;n`cJ:l 6.
Z3(g80E|]8AkA-mN}no].^Z""""""5+ۺ6u/&ΰ;
gz&V]FB7?xt7O0qqI}'=ǏX[pٴ{]M-:'ٻk'VU1-Ko%;^Lŷ`""""""d꫽f4ucL}oCl|rlbشfeg+װiqFotئfZxqR뷒ܿns7[\[2]>=[d5ܲhY|9+{ؙvAǻ|9˗{YuU6W{kTud`s/+'qs ўW{{wҳ|=S?d[wj{ƳɋͷJew7m?L̙h+7>֯aJ/Y%ӣ;5:wjWl?Ǵ1^]>`Z9
ҳAG~vLy}/k+Yٳl(;L43y~	F9|Ne"""""_ThR1Y /'yH5tyCl>i9sj<mf`6qױ?l;W|Qm(3uqqGifg=3<C4x֘IT	Oҿy7C+wy{7_㥽&xyc:ZY«H^#m&A7|}¦d*55ĉst~vL@prn{p'[g_|^HF~t=$׽φѻC2d{+s|[Clϼdؾdg6N&&F8x8=̎Gΰ{^U7FnFc};Nm-ek&F.V?a`<t،5<,Eb06صY{0`:C-@]{1&8y'y+6{/vճH˯}8ôو1j>n^=anֱ͌44<8p{Mk뻚ִ^࠽+%˶n6a'&x~;Vy8g(?&VlꥫF7|6UC<9;2p|_ȂwFۀtcDCSzK7Lo{Z7Z&{5[DDDD䋩1ĵkZ[S'(364C_Is5v1TqsAMq'o7ML0A+ c&&ZYz-]^znp7Ѻ(14KZtˌKcc	&&˜%\9u@6W;&[u[n4%Y
{Π+ww'X9Xc#ъw\MLmZyvk2tDWL~.~{f%a	@-3k3=@7c>?IJ/ON}ܢ@,)uRsFq&tjc7`M6=o6dowM͝M̒ҮW˦W$L}֬7Pȳ48v$?U;fw>ZhlC]M	&κZ<]^ӡZVnf{8s"ˑ#G&{[o"""""e%3ѱ̓\5W9F[6}lG֭`XZ!{f%MByĕV1])H<HrͭklkeI+
]<fbNb&(OLK]>	FWO-#5Z\NN{@P܇#оyuuǶo&{fm{1ͭ2дF/[pI(ӽn2.i!s2nS 㣔m,g$oCI^-"""""w9ѻ%c8S\݃O`5qQFGG9gr|`;Ϯߍٽzi'쇌A8&u+8sύ3nf6iqbl9]-t{;#8qû&jfIdalr(yrrKk;Mp,L3Pn &gfsd]K֯
wdsgi6:=]oE{alfwn3xbu+'HuK'زufNsrq:9Vs'ٶI'gʣ0h5XUEDDDDqJgӱ7c[ Zy빮䕧}jj]wX1ٺc[_·;WyVZ+?Mt߻Dx1e듏sf:Wo-Kgmȁ>>0Jf6šq5jcx_|C/mIoz]/'O01ٲz|MtΎKxݬk7Vv?87͞i71ƶy|4b7=g6غcǖ1m}]hsFvn"g^맩s57r,ӆ񄗖_K/'V-x
ܹ(=-;7uf|KVeFf=Jrg<=J#R\\>gM^<1N_DDDDDp{ɴ4Q`3e>#k^ɴ4`;>n&h{5YDDDDDd!dZDDDDDDJEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDjR$R͸kYInL')[@,"2$+:ܕ,q?$8t /Hʼ5iD
""7T$sH]
u($n F[ŦkaSrh%Qz	gkvwT"
VOȂRTnw#DDLoK6í4\R6ǟ'2xޥ4y6xbe˭h篔
YiΚ"vˇe¸tŐzEDfQʄG-"ɨ(80@z{Z;h0hmZ6F/GclO,E֘vRLJYNP{T*]"ijF9׾F9ymw(+f,H%lY'
$<;EDDnu,ra+n1=wR&d093qbWŚ;C!crZ*<[s*r~@,"rB7=+Gȵq 37t}xm_D<Yrk^V>ѿYͰ(fӤr&8]x}~-LǏ{!rrN>C.""3bDc
1wb*6QaC|K$EpX5ah:&cnxB^.]$	aVP<1""3P LymKs ymgt|jQL_I`Ud}E%'S,-N|[8Á!*
XAbc"9,.Fk.(\fE9M'&ҺL0,$й#ߚm狙'B9mhvNʂpzsi$Qq'[Dy|S㎄)EBED@,"2#:~Z&]G/{f k֬ x^lH9S}mp>E\sgy28D|V_$#<~4Rl4A⪂
@6'v
W{yT  \%œ`JFL
;,xO\DDȤR.NtlDc kt^F;E\ кğ7Jp~Ӥls]رȇ"?n{d	.0T\>E\CaOF#    IDAT$R	b2l`:"
"" %2iXR$8t|1w#Ngr-O"NS"\qHp&EwmNJ%;EB<nn;Ēø<W{-|hA0`ǩH.=H{y'""w "rG(Hd`WM(Ih5ڲLZv7X]^;M:Y q`eH,|>ݿT)K$3VX%
%(ȝg"r +"{9Y6YmKCͷw)O:o^5x(|)Pɕe>\w?KV7lgǦnQ<<_n/Forf^
 N6Ns>ƞvn_$)`jrSB6|i2Xԋ=4]@L<~N,
,|L=3)S,S%3f͟ko7YǙ%4$L \@׳k.,V{dXŹ7,Ͻ2<P{UH]֢0RPu#ywj 0zXAZn)H	'T%.ZK* 'Ex}.Vdj@ԦN7
VD lc8~uf6.?dO],Xd`ܡDDnb1w`3޵z^Wn$dݬˊE|`H%{X4	$o7Sd^_v3Gs9\ y#vp/HK͢4rQ	;}>8\.M%i6~E.$adtZOMc/^2Pgr$#i\ ^$lD"I^7ZBdM)t3bEDDXD$p{ƚftc\
N).T
?PpRֶM~U_pe;`m؀sf] 
d]WcIdAB Xp6GWv{$$B!",e;daVl6Y'+"G(	vH$J(yN{hpE%Ȼ|̖o	D>,"2]EDэ*'7S}k{*Onj+/n1rr'XTY{vJ_'|uP9q]TTw]bIHeck؂_K~NBԟGy1utSѴ=Z9}*ͶaVt}#O-ϥS֟؆w*__bix99>oM@	DN-,[=I秊w΄ZI^%~@F:F#ݜFlXW؁aTa}"Hǆ߈8<x8x]?~2bYC`rcF'dG"B񔓰DRn	9Gm@,"
*p}
pFN&
pnLẽG`s3
[-nhR,8(?$[ڬwYK]3\KqLBbB<H![e"9,.FלͧTP
RR>J t])rB͍Tb-\bAjн%'#x@'""EXD^ɜY:+O,V3UHIIB5.Sѓea<|s5nkcXTO<
35
I}x#qLM\4G	ĝDׯg{{Dy|S㎄)EB>LlQ%JAC:!N-
c;<bowrx	g@,"
κ펺lnA_ JgOzq"yR>A 3Ea)018dp D`Q6<=Yq^juL'X$'H&"qfTE]3&Sv|gqd($ŉiL3nǛ+Y8A!ypY
;zʀK>Jpn&q=%&鰟`,MT"MPU
dSqnpLp
7K'9v^BFhPތRTć\5yl4E ^$=ӎ;nR)o1Y@{urbâ$FO	~.UNY:pyK*mtV^CחUXS*|E<VwJ*'P餳򩩣~R*]&'Stʲ?Y,.<u`g_tYy{'`1V>9ɕI^>5I.?wtrª*vUlsM5er1*e*T'9,קn#*A*s4ͥ9T'yjpz
GTV٦&BWV*ʥflWS*8U9{DNlWcwJmw*=6*V;'*G_c_DDdf!g]ت$)O[wײ&oZ3VR
`sx'S)ChϞ%2<kW"GI&튐9#6xȩg/obC(Gl1$SKx{qU S 'D_]fa,HqAg.}ݕ0K`(oqpۡ%()\k^/mSD7.qۼzMNfrV>{ga,6iV>E܆QL'=}""db2P1]յ<0D&]lwp-<x{<aSW!t\7q>Yyµ?/<pGy5o3D޴>#cO,I_j{Cg_^RhbhϺDtj8̐I  2M.`,pՍhY5?5Xby0v,,\Qr){*)aØ%]>ܶ$<e-Imx׏ϭR;"dow O.,#L 3X˗u|p "r)@\Wʧ=.4drf0#XR2m0~gt̲d!3.1^Vx,carIqo^̦8p$~f*B<X?=r>qUg-H]>%,Έ7ʍh^nR>iw9y:XYη4v;eJr,PL1cb5ݳV!M&6MSYcSO.L$Ek'ϣ'%EDT2-"
JZآʃ'Tq)%zA`!2՝iɝ$HM1KvrU2)ǂK;NÅ5rcvc\\3T[*a8hSmf陜+1ʋzؗo\D	Ǵ^Hce;ˁU^E+ZьdM]G{]¢>%^'3|?tciV/+G"e	1\û3|t]iU`1	[0|K,9kjb t[r'~o""rWS g\k
%܁rQ3E041O3̃'xf6`QPXgϑʘ`xq.LZ"\icx,@zj@U vGu\%iؐ\7vN.[d*eDL?/,ȥR$f
{pI">O컦
*eީ4W"v3$^\:f.M]ƌ3.&˒K4y"	@2:&Q_YӸϐHFҸ~I4E.
pߖ(dLݔ2YJWϢ/bZvWٳ땍ФT0hs2&R.$Rmr\XkϑLݚDDΡiipS_^>hR̒G>C2Q$-I&{ܗK.RyoYpXdN;d@ć'p#QaP7N ǅ#|Q'ͽpH!7V$g![ xP$LXtq$$)4;8NE'O;%{ކ3&(9BW]ex)!w>ez*zs3mIB,el4L
^:ELܸC3L	vI$JdR.)yN;O4&^J]XhUe	ܨ~JN2a1'`Q|,DU"N|8iEDnOޙ\6J-XU݂%nw^lEePe~;T9UTl~XY]|S:+kT*U^UF<Vm㳿T9'KS/,}KGVlu/cU]6.5N#O-}ZQmɩJ_;k+mxrpt}2r@ީs.HCPɴ4<E@PR<g9q&?\)G+(%
]Dό)t]̐%P/fIk걭/|7<A8I* ΤT4czf(i1urc̱G'dG"BzbxI_bHM<kǱq<!
s{}oP	F@,"
nx\Ĝ+QMC7=ݠjM})eAx!\Mb:?CI?V@2ɛVTLƟUHsUhA>_qxZE.W!i0<7V!C7ۀ> 
ƐO7.B`mJY)p勐ƜI$k.""bwIδޠw%H_FT3Nm`/M5IycOMPVRh$#>@ls't4L<2oo8^l-(懫m#^Y	Љuwc¯yjz/ponN{4M
$C~By%C,"bwsۀ7{*yҲffbQx=$v"lǞa'[Zne)U*Yɚ mx<u$R枣mvqJ!\[)|.,3O&'H/*RLR0sBٗ@,"d+\^HxʅM\R6o uײ|e~>ob `#[tgǭZH\܇`xD{8_0D8%I&B.K%""7OXD+B]xYru,	4b|UHS:E!t=wT23)Τ{]8ݾ6z?nz!"r(pMT
(j&@.6Ql\`["z[4Yh,pbaf9姞y&{[yRAzdZǎK|'WrK9;ϣ5$Nפ#US{װ
)2Xԋ" m^aȝJXD ;EoI6iY:9}azl8I<5.pJP̒"PWN-Cg@cL*VN<Ǿ[	'~'26QJXࡏȝG%""6(gj[sU|í[1gD25-wm(MrQ	;}>Xf|مϑ#ي"
""SnN(gI(H6ΓNolデ9loÑH&3"0j߬#)ò0!u] L8H( +HLm T
|Z\D䖹RTnw#DD$^Yy1
j޺ߘkUC1sko9J:(p}sZ_C1OS$q"""uSt `,܍\Oat/͇
c0>c.\< ˈDjP ;!ߓ/bDbx,{[~v_h)έ!<Oۆ8AJA=&I
""2B$q0	v7.dwN@`% nwl>C"Kq;<aa[ba۟"1ydMJ$*Y
""3puh8ת%pug	pQCW
s&9+KehfpHO<\[LG^F,"""@,"2heLpF~}$hs|2ێ.`=
I2M֑K¡S(DDDnbY1	7`ep$Dw[yRyp؃TA
v;q:gx^b_i3$lHuId)a;,""2_
""7`SyB$n]
NIBL
'
)r >-8;xH8g̹9dN`9swZV>F 
to]D$kI0uEDT"!F6^ϲ82⏻If4|o1MěJr~7a|Q'tO՗
""5)Ϛ^wu]\ۇO9oRty#CEDDDDD!i4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!Wϛd/Oؓ|kxu?t`[V,z'&+>@_p7׼8m=[pYP7U2x}ߟ)P(;Mё1ʌqnd/WXDDDDDDxT*JoܵgؓH4XDDDDDDHuMUs>@_$wxvz@Ӌ>K? tO_ø?l;v ~ϙQ=84wKĸ_?k_bU
(sxQ^a)3Q0ʕT=g}엌}û/w/|/{N~Jߙ?8j>]ɻOU9<o25Uln'#G49DR6<g=ߺz]~K|qoZ'h}C؀sǎ o1y~e>g :l|Om>g{vπ7S,=#"""""2J`u5icʧd-vgM?5Y]?OCSlf3Kx`ٱ=z?pP~    IDAT8sn16kF>3?!ۿʖ
նmf_}uKe>V2v<-}?Ƿg}z~f4׵SooϾX̋keGy*ҟ8Mv?MKt?]~`齜|""""""n6'@3t=ŻǦ2޳Ѽ]O}ڛ,Ϟ~diM9@0G繧Wڴ!G?LiZt B}LRMpcӇ0F	G'p
h-ob8J;cdzɞ+#֗Xr~zvo<Ē/_O+㗪k\#FXl$~χ׌/!0ge~`ߏJVhy޹/MRP\{OIk^.r2;LEǵ(@׷J8Im~1C<@*u/9}ӖY_΢6:/C2Q_a<ĊKȯ9Yk??{}t	x o7+A÷<^9g;)dira/K0p7ԯȎ|v#"""""2?75tu{6ϾUokLhP6'}vgsDW:#Kg	o?7KȻI1AAhFqC??S⯱^ӋL4W&_g5w_^.ޱi?ZA7]l\<sǨFm]$`O}>Fc/4G7Pɺ=Ik=_cUo_C<fղ}e10i?Kxr?M/1v9}idQ4g{^֦>>Dvw^])1jbs/;\&	.kOg*?+{z3xڙ}Zb_]Ct/
K#v^fzro\?X~\N^O?7ёr|^{/-ceDDDDD䖨ofS<\	;kgӣiGx>f?_,T]giZ透?fG͇Yr?axb^Ǘ2'NЧ]v/]b8Vs!8/o	ޖ2ٟ~ܷr0Fk~Ջeh]%`{L|=]oz9s|7?''o|^[3Ufəx95J<ǬvN$>~'\Bo}kv[b~fpa +gMNnʞ'aۑahkGŖh"_	~!ɽZQ>L?ml^ ?m7(*pOsh^

0m,mq;+s_ø9qz%o~ö7sշ<=(3ҺKyno7:=9O=3Jնt~lw7L ;yt36P )-g49T*ʂi$^wQ^9͖W`܊.OǮq޴ŵKʃt}a!mPA#NZwyT^+""""""5ͺYEDDDDDDb
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$biH
""""""ҐEDDDDD!)HCR @,""""""
IXDDDDDD4$bۻOrxSn!7%o}ZXZG[2itsZM[aIeW(H7PL/f@	^k^X?Z[DD+)W24tG^:DDDDDDD.J˖-OuuueEDDDDDD䚥)""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""W 9){9S}E5&|Zq]\ghjWS]]]}>{xvg->C]@,"""""r
޹3ӹ|O7C,"""""rU7,]ÏU?b}{
?Jz*װ }nσ<̈́E{p_b~Eqy6K&
ΝԹ37=?w ۗ?Cʰ[T][O*dۃy<[}GfҾ}KGNep=Z߂ߌ?_}<γb/<4>%xt[<C{xٟ4";xX^l2<TmfSY8&6F݉9<H+a9TE5FW8%0y."""""mex>>Gw1RW(u[{1|j~ۥYʭrNCXy?C
&i07
d{KcYPuόfʆ^{;PF _0i[ݾW3'7V`zMy0s<UdƢyϐ0:
gϜyUb8OXIf*e-bFl}{6//ϡ	p?xF-xaeUX<ss-M,љ`vǜ76}	@@d2q\ì*u?ٍe:6SC++	#F0<eQ=3
Z`ޏni `cO/k}uSDDDDZql'?wVQ©|:0[vR}g[|.[?clG<KHFr*V8mw*zM~7)8i0Dǂ	\<vaRWI0Gnpܞ
ڇ ^V lv~9#A |ua/!VŦd̊[>?"ɰ1<2
=w׌ggȄrk	k"wGB}ON	h`@*lSjMf`pr<WTyyhflD}H_0ά%^sDVa<WS @8wOy'̟ǃ?"X6	m敱HW16#.7k롷
!%ъ0/|Řb<iRmn(_-~9!`۶9p3tx5|n>7J;)""""r>tvE]\M%J݁<3V.|%nŷeeJhk兞!>~([ .qP˖pU駟npQۮ7\[Ӊ;}JJݮW 	{2Eof/Z,@21Uf7yո
ό]e7f
Bed>݀(}Q8};ipO'XLd;w@sK>< 3yDb7?d]O`֜ȋ&2ҋ((#~w
V?p/
Őwr܅2 UjnK`)azo5} ],<z!Ym$iʾ --1!@F#]GBiIܭݸZ?@DDDDJ4]{_bw1k;n,v4tr\_1tl*<Y}0;Kqq`踑$;ι)/ɧݍBCC~~CCCҥKLn_sq	NȺNzCZUx i 8}F֤I`̀yf: f\s(# 2&\U@Y* ;s)g_%t%<fk `Ju&0.z3op4q}3y$/?ʨbvL~7Ɠг_o9F/ASچ[i3J"""""d<e`׵6P|u
HH1t
7
JXLk-Ƴj׹Mr ,uA/5ະthcZ/`eکsf@.ͦ*:Qӡ;mlK=nv-ɋfwΙZZ.P0ɺ47=̴2ֲ;u%vR1+ w%18b%#bh~Պÿ6<js
iToyע=Ocg'o׹kTgދօb08/vm3ٝ^s>Od=2b>k٧ߞi?fO௓GZt0I/V;92_^2
I:G|IuJ9/.]IF NzֵqE7 L Bn@˃dGI1M>*f>k&b<{s)>SmDDDDD iݞ껿0~ɻBi?aNnVa ㇺ/nke	#ԺHnRvp1OxP҇󘒵GFlͪsS7psXӛX:C 8
9hDL?	C,";>!"Xb@Ge7y*YE|1{ھ~u>/˞ğ߱=w`*ckV`Ctۧ_c4`1 $/mJB]5
Y3ط%#'OqS)+^ZNOM6PaA1@hOVEyn$t|F.~:O[WYh2zW>Av4!}IƟ gRh,ܓ@[_='Y.pKޥgӈ#geͥ9g)pxHzPi/ ; [e01'K%H9GEcsX8&s3Kgfiq#^癔}K,#񥊢Iv2ibӧl2hIܰhn;뷕Ral@.3q%6/L%wd_
i,[mGi=NU3?᷵ lK竽'.nAAN0Dc;	ncg3~
HɤX
|VxWep#`k}ldlɧ,/ɧZW޳״`b|e*/]Mpr	ܭ83^e]:	^L*qm64GXE0$\͟X5G S4B~[a!J-.->-TgO傯Zbr+Bݥ|O)Дc>jq
""""""r1]
x8u
	1.%FXDDDDDX9՘i|)W{7V)WR @,""""""^IXDDDDDDx%bJ
""""""
 9˧{^DDDDDD~S^߲AC,""""""^ɧj!""""""rC,""""""^IXDDDDDDx%bJ
""""""EDDDDD+)WR @,""""""^IXDDDDDDx%bJ
""""""٨4f[Ѥ@	.<SY?1G:XԕƑK^eGjx47^DDDDDiH[˚m{9yJ\0ߠ+lXoo͠>?{aY&ӟ]$^},?ΔzԀ%<IHY|c]?MTG{G<>Q[()(nH8U9/Pxc+,2E1{Opfk1%@^)N[[awWvl	6ԨNV7/Cx<{bt{(og}V,2n0.&TXAQ(w47 AC58W-ĩc];ߺB8G
bxl:mYx|﫜xc<x^F͍?RRj @ծ͈MAWmyi)<
[&Wgg?ЌШxI ټTДSgfy8h?4#~n؞YjK<5l	<G14iDM+zG
 &G$|v`#Gz>u2
d4e6m w)gWOk=	?	4wkg)75||FwpєОw0.AFp哺3' #tO[tûz@.m8'(SM4 i3_TB?-vK㌲*]sBdveU|YHCq./\NO 
禳ZĨ+/"""""И@;شp){FsST#bH֮RE/Ӗ^>Y/y<?0@7p9C/A9qcho9 /RKdE9+Rnb<aqgDrrF<wDpVPz<D;E+Vs#ZT2KI"rbXoRb^Jdbb{ڞ#FWﲰ0:w|/
sٶ5b^L&?CeME~c  /IDATfm9'j<QG^Jb=`>A`p	pS:VhJ$J ͷfڳ/m;6WSB{%1c!,N)%vg7 'K@bGCBZYL![ƌeLpQu-+JQ0vt'$Ss-M˘[bɎ, .C:Q/Pw^ZGzsP>b>Q:Lޞlx1]Ţ`
̈́k>|*>)0[{2Pߙ ߘAA<k"""""r>zK!9[`m ƍeo;=`m$I7a$3g[!s5vV=HIU\5ߛ-	auV=Hэ 4.9ۊɶH7]6rwQ:,))}~]]ki)[,r>chh~Xv&8ARuoi36*CAKB[sphh(/Bqc04*ӆ{4z:NФy:.'8ʎRj+@SBQ .!L|*⮝8cDƧ5V]kyivM׿5/xm8 YOB'IJ2ō$t-k*8FJr4eKXAJJW< b7TcGuѝtB2a\<c䤮q3ntڿPWQ\\O)UgU}}1pӭ݈8}	>Km}%\m<6uk
On<۾ח<_>Q}Z>k"""""r9sO͜[sqXVJy K]0ĈMS N<%EzY²f̊r[av~'0E
adƏKf\ ly,qW8 ؿ)<̓ȚCLQ#%dc0Yj_6
J.]~axЬEp    IENDB`
**-****-****-****-**
docs/_static/blog_editor.png
PNG

   
IHDR       )3   sBIT|d    IDATx}PTw>L}a2dGn[3JfQ#&a5LDS	~݂^p+hn$ $hCMO'zDh䩱?TN{۟=sΤ{C!B7x B!xdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!ےdX!B	o{tR֞K:jظt)KӸtglB!ǔ;\d^NoK٩Ǯf0`5{LPB!Ąb0y6 Wu`Ƴ<	CC[NpB!bT^dߋ[/^gK19_[&p_ua-TZ pKK:E_a}T^۪SϿFZFx7B!g;RNbS1}Kْ»,<z~˹7ْ>:d!B2&x23E0gY4+Cg;u`ɯbQ/b#H6,B\LbtܾzB:u.\ڹrҝB!;rd{d^D~\Oa!Bw5$1P;`΢E,Z9t22ۅB!#Hz*ʹ}{8yog_9@RrNrH-)'>
!B$Syvk<RV^[vL]Y2`5$wH$B!֤{ B!̰B!Ga!B$B!nKa!B\.\B!Xdɨ% L4iB!޽{455gd23yC!B~a>%ɓ'3eK&B!!rB!p[.MB!X.!B1$B!nKa!B$B!nKa!B,w~7;q]!ȝ-T>}zcO0kBBaP Edra~H7*QD-^
TF7ΫԪD1]!bxDa}ZQlgugx/?<߿f.À $9~k4L=ʉ0^}#g~T8|w!Bh%Ú̚=`|>ˎ78[xw~/7VL_us=N^]HơT?7
%;Wg]o|tG͓6AϚ˼yN|?9Bpxb~$C{U}+C6G鯰8@TV筓u|
Emxy!ry-o?TߧAnw
;onZ'⅗wj<̯~CWYIWomH#9k]!b{kt-G^E+U\	M[Xg)$מ867%}Z=o8D*ϥap;?o:[R@T©^=In'&'NPZ7˟>SQ
saZx-^5|
os	|uh
h@c3[:[N瓣G!B!zf5/W۱ex l{V2#r|
:񣽦ksW6 pR\NoQkuC>g۪@F6=~sL[t@YIȬg|RqMXhk?]˪^U6fx3}3Lu'<
!BL,nV@a ǟNr7X5Zav><6_3l
O1i󧃓0|Õ8R97n{s{Ε0+rt͵vo1ϣyt4XZ_B!D'4܀'f? t?^=IN~-~۲9>Tz$fplި&6dbE˧/B!­=57NRYG
~s3n>C*ڹz
+,Μhf;
 W^7ǝyOUKJ?2u|}ʓ~8.Byak;7o~W?H&9~/
'F>|vOTY5~v`^x$soVqv+^=V:orƍke~85WxhWU?{|ny<i'l)k'teg?_slO	t^kG
y}NOWZw;kOr,iB!xT<Ze׎׏v`0.<WCoqR$,A6?r~{ߤO٫HKI~kYJUgfr;?'{} O<UOq/yFfb3YG~||^'"r[*;󛣿7O7"Br^~ই[)NZA|3X'B!Ǥ{ ]pŋѸT^{g!k#
!YV.^Ȓ%KF2	!B!@a!BG\NwB!AfB!ےdX!B-IB!ےdX!B-IB!ےdX!B-IB!r_xqCB!n`ҽ{wB!B)B!nKa!B$B!nKa!B$B!nKa!B$B!nKa!B$B!nKa!B$B!nKa!B$B!nKa!Bᶦw }}B!pO?% z~CB!d2HB!p[!B%ɰB!p[!B%ɰB!p[.y5	gܽ{Ʉb~p֓O>^߯u$#3vp?}|;ƑML34_<4";!0ak׮1yd~3mڴq,Yd\>bPUL&sνyw_G>3NV7rG8D8=klX1	[&сϸ%Ea޼yX,~wu$#1v^ܝ8&Oع17iN~;!0aa5mڴ:h;$a);0NB!nB!CrOhg{~<=˾͗RPl0:B! Zu5ӟ0OzzX]JAǝB!r+:	Ls	77)E_a9<;wet}v&ïlǌg7w0ET[dn!+@˳/ichyXO̙9Q>;_B!c6bbäͶf?YV17~I2<=Gx_W0煗{ۍ稬6Lc]ɞ#
#ҹu?,$RH;zۀvI2X6ܥ#d!_J`42YyeO5ΦBzm_ +lTrdh-nw?u3y篤Fs[3xy͟~a^zغb/8F#zȺI%m&p)Rzݹ+ϓ}cڏf}Z̝3>x*
1<ΕϮ`V07|lʙg!As=xlߺXa$ 
S,Z:;Ln'i6FO޹)hӓ%IvgnN{"l{nƝݍZwrDxLZ'KeRM"ٿoL:%g`5N}0lWX:z~[unbܪaKڧ`n
qwnaG^oTm?u2P/qVE'#?Pɴ+g`.dϿC8XZWdnL	R龃B	1zE?m23={RݩX4L{}x4\nǓ3C1KGn3Z=:$<c/.sgLF+tݕ.r\,c&gYן3
Vq?SjG+?+mnBT^W"~~1I I'Uo#98KieGoؓ虼~wH{w,Q}ÏM1g؇3nڅwSc9/ҳc]{]Y2C
ݪD8ۧi?r$!޽]~CɹFM.m<H'vzظh>\LOB㔔x6w֒m3>udX7.?
ǝ[nĒqΉYＸb6~SxSvnίc5g
SƏ>#)zOqegoM%'p%_P}/Lܞ$R+fg7%_B)7L-Tn	9d6']%~G ׯSΘe#}d:
ɢXr_Xyksufy(~ƯLUjn+GT;lɫw
/lfl|/;?~y̸eށ`2KCwlrڏtYM11]ǳuΓ̙bošqi
!@2	3i.V)
a-Qϒd*Wk8»[~팃>:ƹ@uߝq}.	g#r4㝜LɃSewNiY%I<,^:giSϑ&QcZV
eR3|gqoi-+}낵:VL?\2}&^x/=s;.u|m;!rwG_sEDy_NLG]t=gX : i7sxg?UYL5~ͥ9Ie	B鴢c~<"_{4]&aO[e\(uPƞ_8;~MYi/9ɋct؝
Ԟ8gnpn%%)K{rv[Hk̘1 e.q}hJn;>U%hh\LUj=Yv<˸;גr$]]/`§AE#P/05'dwe獤T/${
Ӧ~d/|gKصM靜nGǘ1m2s_C>-YL1Pq^3
eƏpB+/.a\iS8NˮYV<[' xe&\ËctK lsCמǓ,y@ǥ}ly(3{aT\&'FTz>P?-zi!2	W.{"<9nX;Gr$1GFnx΁Fg/ЏDVI70j.6SyYw.O%3͗>6|KL?לkz.;~u\ן>.[]61[j2-,˸ӺWt/]elD@nwp!llss-~~8usXT,}'e3~;𑾚}nS*U:WWr2	W$0_Zm˶K:󧷳ǲ9 LeQOs8뼽o߸n_K4+Ƀ9SrM}l΢gX;랇N];)ļG
):urR3S,s.|7gCqJi3>ߛy.׍x3!/B1ӟpE˧{:I;s<VvF.6E wv4.rGe(uW2X~=]!1W(pai
T~sQ}n8Au%78-~$==~Jǁ:`|˜}χi`IBv&2gnkq
$}v)p疉7ķnqiD]o^u<2&h&w 혛Z<g@|v42I2|lgSuVxjwZ(߾ctÏ.Pl;,ߗ37\=IIzSdDXA垧C_5GΏil0]ڋ.軿sn);guic"|	{U߬!-P!sdiϿݰ-x7MVLl7!SOmdʏ!I2<'x</{$ gn=8!bFּD-ϙcyy*gB+'_O;x?ywB&ɰX9s"M	!brZ!B1$B!nKa!B$B!nKa!B&t2ʷ~z#iጁӸib=:Mdȷg#16TU믿F+:l;?F!ܽ
+>5ޡ!&Iݻ7A8/ݻ\vo~a"y'<U}sN 
士89c揦2ď"w(Ba0L<ӣ96B!J'lB!%ɰB!p[!B%ɰB!p[!B5edWqy\qy\q7y|,D!BLL݅u0nݒK!呛(5
ھL囈Xİ#rk}M,h`b٭"Ot5.Ҟj"#IgJmϚ/2#О"crd\ԓu솉)OcW|INN`n蟠>LEEE	Deq|21>(9GJ.|
[3
5DhOae׺l\= ⒓VϏ%`**(p)n"|us8<]b䨆le]3ܔK²8~\Em.b{LT#FAT]ˢcEAqn% "c NQ_c)H]cdnj&nhO0:"	Ơ2Q(
F3Xhn0a#ў0N1b̆fj r1Ml2C⁂ǻ4
٬PIܬɂMm;3ܴcH[ZKAE`tеn1[L?*eve0ZvO9V6	p`
%V2 |H(:LOi6    IDAT};YvѾ@&`r6\n?I	~\r
^JH%yɘ.M#XıVD%gC.RJjE*9;a!{)DJ-gRM	qb>O#5&][(\@Iݚ<d\
*/	$9Sr
/D$^ən{a39j|O!!K/
ƛQcH7,W%(e]"
D8ў]}-@ٔ]nI(:a.m+fuгs=7j^Mb6Ems=3)	X9`/\l7Z0-nCR/-wS&⋌ =赂'vsggs)LTb{8clͣ2~}00}`8z2VQg.o{ׂEǌ>5Qt8](68?:v}Qm`U>EpnHԾJ_O)Bzb3M"6_Kݶy#h^CrfB0>ضc1Q6bstT*A/|Dcuq9Vs Ց,{?qb0ղ?Xkn#5uFL*Q䤆 ܎˖IJQP̙=[2E\L)q-+xN8meۧ}Th^EIEEx[pJ_FMaE(PVr0&b2***iCPUQAYAl\J<@YE\!ԃYsIo"8UOǐBe'
X~Sx'J9ٜ5;Rb;U0T@KPl^˨q<TIџh[M.4WFUUe1ˡgDed.o&H0:=	{˨(awҴ,
dCʪ8NpsA:Lάw֚239UQB^ӽZgYŉ*$$m|
^=X{cR)*)$rz|۶ İD%{S*L+o2h[XϦ޲*Nl÷#8D,s)Pr*lTW"L{Sȫ%)ؙMmW?
2TTPQGGa@t;asD`q*!d) |}'ASKPLrR
Զtm󃮓a	틊W~6[֏.R_jp(0QWv_iTjcml/q1sRvTECs(Tb/cuve<fhWF^,Hľ>Na1´L*q-l1j)im(`|T8ř8ʮ^ጉCL}G'"؃VC u9}hX^EV*v%%N7h06+Z|uf\@jzzZ/ҵk[)C&VgB}q-jH2|*Z!L&]>
ŵ(XCAAj
C+g}/:B548Gwj½:in=LiyװT^yj»v;[ހڠ9^I (leABZEGp\:Y)1t^5cNPtl>p}Co3]Ob/ZEGpt4>V#{Rd+. t7Zky2d,tlnO 7^tHz\:-:']ρFmVH쿘jS9z'GSPtDf-f*:YG>~6f&
}W Ѷ}^RS؏Fblׯwbx>Lb۞znO5Q^W5ӹ gl~y['Ìs}Q珷ƌUs5ֱ0we~#$f1ֆRVf,o%!qZ@@tb4w2lQ[k!&v$X]F|Ϲqj#XgjS9F	Ђ
"zs}+=
藲ԫf?rÆ
eN»oҩ1Kӽ-z&3*b?F:6@
PfL=B?*şf[C~t|Ö;.jvVTy߄`x$AZ/|tPj{MWWέZ։Ҵ~4SVs(G	';9)Z҈(bl3,F^,;AOc6ͫug1!K#"D?Zxڷ6	ZH,./uF+RJ[
*u+V+,?6Ӧq#竃Ō:TapC>Lf|q௃y2"}`O'9%(ojiZ zũ!qi}Q덿BɂT-=)Y3HR)Wi@mkfb#6AdmǷ͈/3֙:SSۻ-thu)
6pqe'ãi9x%TLZ,\Mv?/zykޱ]uKi]H!ٔSKX1 !KI('>bz-SccvtORim2.gt`:AZؼ#5G{Cm&Ce\c}FSRLefR!k(.4.= o1i0 Z%f-#m01!
|(/o;& F`K]LNBs ێc1f<wB<$F`lWX0jSmƖo0:DtZgsA>Z
8fKf
>Cą+ԗVS[ڀ6|C%EU9='Li5Z|<h69~3TtEE}'(XW/z08@[L6s
G(Vik
fɏv?^Vk,MNmNVNӉa[Z
$<s%*fSOcߵ>xk:iiqV||6^|H􁱈NJ5
ԖPb?+QF/4Ri&*8(V*khQGZcP7TROLxl7F{]҂Ķ僖6g־j!m:v13Y`0'eAY2ɰjd2ajDEjd2cYzU6a,R_ $v?EjEv*X-|Ptxiڸxٌ&N[TKmRWzjT_HN^1
gQ~]ZX@A֞
Zڡ
VC1
f@5kY*Ġ'>gJf~#b`(t}7s7"[,lrգg6զ7Xf']5.7[U`*duC]
eZC~a=fTS=S65eC5vQ_oMtuՊGcXA9MDyn6m<|rmrQ1&Z3:F
B:c-w@m	LKS`g\l{VM+FP3z)|@wZ:}ƩK4͘M-45:=m^%-1A}"28:^
`oTC
(uZý1V^7d?R	(9Ve޵վQ_bkܭl~Z7#EմX,J9vw~JKu1
;N}W/-ko1c6hjj55ИѵΊblt5Մ!:z/.[&a v= JR)SސO!ML'^,XN@bx+(!$.d-33ٔ~8$_LZv 7{RKL.; a (6$\rYцjyduE%V'ump*y)ĳ"Ƕ{H
Zo
@=ȋmOTj:C>E"sr	$9@7KcH
u2++ X]pm
AF6[Wc_jw*+5l&ks.VS	Oz,j൚؇MRZElb:/D%<H{ii{7יs9dV\&eu5AD'f2_r}u~r✯{-"#2ZLlB>kz'95E:ʛf{Y]esh)4^Kٖ_g)W	x:(OᡜXV hB;ES}``l>
y+ȣUũ#,q5$#*:δgWfXAy\%3Sdq/*hF5	@y8̾ 97lq."5o=NIdQH̊ŔCj_Ab,B̶4r׭@?|51
Tv%N~WߘrI4x-!gfg_r21uuVv;u$Ĥ{ }xy
>Bλ̜6Gmb'^Wh\}/*&S)KB<6չ_gXɓ'?{oݺO?=u$ģI5Q_C9Q$T35RbN]!ed*gk|>ޡ$lvp807ףgU$B!`ܺLB!B)B!I2,B!ܖ$B!mI2,B!ܖ$B!mMdXmbHG.,$EFT;r}0U,U-u[
/u
#ў3gFnnY<DcNLndyohL6gMd$DF&Q=_uDӍ
,D&Hr/k5&Jb(A%'bn%6ᦦ/CbHL#x=[
7a_ 7u@du>ajfSa89wrG-ŬK(!/p⒓	lTf,l2g1a1I;OsL4ShNlu[_,ET_nÊIO@߽![h*'N˟)$G\TܢJ.ZAłR;R)W
n;m}O*>$';)OJ%SBX|r+:, .HgWw$PEGwOJd!&@~aF`<:ChaЌY
F ^zPFΗ䒿3{X676Qf"*'X6ϗR-{9-4QƌQSTOuwߧOɣ6(=Cj(#B[[I7`ZB)҃h9FJNAi(Ei&?%1wQؼ8qju)Naor0ZE;0 =hF}M9#V8F;\LDuVVEF|]+,b2a5;ߨuZmfժM
OZc?̲I#Yv~{(BC*"7kI5&u]4gfm9k=p8[<M#\ΦRՇ8̣Zh(i?\L:K79EAס	&>kV^{j=WsJs~|K_[`/d:{{/_CRYZ6Li&C8&iegrd2(C,
wny$FmKz6i{Y"W`_ܭ݇ WmEamp]O[[&ap&Vٷu;SUݞ"/0bXPc֣REʻpuB5*r'=rWT (xyLD\{Sc.O&:h{(ߺM-ͶH"\lfd$kޠOPJvm| ՗ϖ璴i
/gM~И-M̧+W+m'19 }P4K1WЬ-D%,ޗb|:16b@G0ah7ښ#޵z=z_< E^^5Ҵ˓ʩ޿Mְ<r[skJў~gLBmz5+Rl,qEz
#ZH.NƐP
|J:3ooBXi?J
[@}QŐuok*l~v[N+N1V\66&ڃET}8ʩn2vFgq	2IqH t
JQI%%yDw-@EeyDy@KPLrPJm1XsIo"8UOǐB~WRJf~>ǩ:CN֡7r[VPʲɯ⌍r5QS%F8J5S~ނOR&מB֙b'
***0582
! eUUTH'޿5e4grIhi'(++`O=wK)%Se\KA%849f2.{E:6e*!߰
P]@OI/OTPQQFf;[(Mˠvd/qJ%i=q=D+#/Qb_gљwsu69
ʨ(awh+%m1>ta1qf3X{[TOfB㔔p<5^js3(fOYUeQIvCRo&{g!tUPV>!Ԍ!ç8sfe݁TUbߎTaaCQv6c0(f_jHϑ'Kf=
bZOiuRʂeAݝQʁ8SZiN҆졪~g~8?^[f=[ͦ7UTU&Q_Gn;ػS8n7-ePeoYUeϱ<NC~
y$ǌF
v:&EFl֐w\!V}~blh2lPyMz|@Gp\<A0ՕqQGbmPFOkCƋNIWE>((J⿚(V+:z:]\:aIXj܀
.Vb
'>Lo>8hMׇjч'޿J#*Lilu%ūq:+l{+3LzClϮ-C5cNg)5A$FUtGGc5I`Y6QxkuՄ{ubD,6Pܵ1)m'&[)dEV.ԩTzS?MTNq] ѩY8F=60:
Dma5m=ݔMAQKlyΗEZt6b5ʲ =:Z²NQGVm XDTwhck$d5Aו1aR'"؃VC͸*>k.sXmD:ڰ`M,R`s=3-#=+VǥT:`xGRzu<RʃκW~o͊a'8326~>gq~^f_D'F\48P6$&a3'ف"NN|頳mzH)F1.ȫ'S)^*mY^L 	0P򦬦P(WYb0chvq;+*߄ ښ,gu!i    IDATݓd%	_LaA)Mw@3eu*!aC=фv  6uپ	0s$hCؼZGJjj}4(BöあZ9|{ZO
@G-f«kqZW.|H
ARNiQ]+
1	'aE1G:S[ix]0N. nk$!?=1PZK4@Ň4H8s"ZEp&rg"EH`!)BS@
fb
l!ORW@sCqTMF5+vU4ܠ}:tދeB
`0^mb+2ZLR9tu34BqMu8LY	
sʴo
++ R2Y7FBk*Ȱ;gCKxekFڻuw*ƃؙ̟tM21F\߲^KN:Y׾7RmkxGa[&MCh˺WK(#SSsO/ǻsvF[>y}X8ibifbu=Gb/Ivm?~J.?T!n]7tYm`ۄBLnYGĹJYqSl[I	sia=KEubΟ:CEi'$dI_>t7-YľxL R)馇n =Fw
uI~yUIER<Μ),+=CrUTUCE&xxlVɼ;솙t4,u2ѹn07Kv
,M3ifCųSxAv} LϽ]ܤݿwRN&!a6l_u	j唯y}*L᳷9=PWܾYpX
k)4E-5
l"(r[3imjsщZ-RV>[n>4:?y
!X|yHzA|,В6p5$7X|,NKjό5j9#L'}71uZ4_\)=zG|wSݍik.
 Swz}]GƩTE|KQY>LGu)UmӾ2Jڱ)Az͖<GʈɔYJ(h4eέn]dǤ$w7.˸@ҠѐaWT4цsۻ&Q;
f;fk s
4}NmQWXwM>:qT4A1sL.mZdR;%WFѺ+^m&LzKڅ뿷00zqUd׿4'1~L.hh(#=zDo>@Tj22'5T@qɈc+C:K }ǱC"+(LV&H0w`Or5EAjih?x)GVjOu6QuxrW(Ҷznx
Ϣz*),^G$Jȗ;+pZ.3W~:OMДDIQԧ$Br+ZctrhrQel`r`YxҹxNZ
@n(l$?afo 1ѦV{7}yZej	Ti"ٚpe9oz%j_F3&SSWs*K˳lxZt;*g\dz4'./'cLUevn,y6P5r$L6?ԑQvTe>b݅)4M4Bڼm,UPYY߿V2JrF|#	
[2%KwYN[qo$,(i sH3lhHX̝&=!aw`dWH7>/2`"vr	Nrq$|4/lUtInHF;S/_e:T*	"8=]K26&&	}Fh8!6]9#z4m<&daS\ "X=%a[e{5An9SlG?h嵐_@`"ۏ3} 1ޤH2xQ{9sGDX0>dm̆?GMX_HyG<9O/,A<p
0U8"ŭ(1ۧ	#Xd֟"o&Xdk!1]3j/	%qrq$`v/"
dLXo3"$Zbvτ`#$d㱑qHslhHlٶ;C.+	r1KLrhF+SECt X ՟D3Dr#E"x0a0,@ҍ8%F{ZBO}#^tGtX Yg)LwضH]H=f!=iׂ/GIxڥ	ÿkI6:qRKD}P2<Qځ+?w!dsxA3xsiߍZB);6Y~߱^GGGGQYܳ<D>}o{24LBh28y<!@SP7S7R/ɘx{Ƚ
йrK))B<@k,D?b=%]A)C#[ޢI0	{cѝa,3EwuttttttttgX-dv']zV!,VewEj5^=IQ,mD.fyG힖]}ϻDCf?~~{V2W<}@l#W.m}wsHyݟ;_~8Up\I蓿RzO+q,P(a95Vx-$Z5ƣ%mBvnB
}/3L9,sAB,SYgiQqm`,
2>mwGZ㈕Y8ZLGuRG<<zX??_Źn^ A،mQzERhٹeZrS+]ar;)я[gi3H=Tj鈽t&0vˎ[}h#J޸vƋUMFF,)/_gXy$ޟ/WFpU$-ӔUkWk2铏`Q<]!%߰z=aLMQR'u
f&}~`QV/T>C%Bv:zL@Q-BQ6ldDIyLq䣜xxVe5j0		]1L2W	24ZX]Sx"qPSF;!B>G6փg#Ǽ՚ZI8:}ݹ3jDꈳ9LLx׺ZfM8
xtu]e]$NF+S6}W,Z|mR)~SШZa'(rpDni<aae#,z-U)>Y 	 lO>&}c JD|yǀyK0{hK~{j(X
'@5~gI*8 }\Nj!'L>QO]d\pvTI6`N
ml 9L
D}uFc:WlyPR&HkװoF%:Toĸ'@84.u2wB M>!zi:Z4"a\XOm:|.!w *1>S	to,Goyn %^]Ӫd8}MIVCl V#%@uԨ&ViXTTLl ̫X4>Ohw}/H|hu`b|溌oJ%k?UI<Zpja\qPb޾}T+G{@AB`'GpsJ6(Ww1E#<v6V
9_r0СyGXx2QNXQ	7qh诖lqnRx_ d 5tLFuoG+l{.rTGp\!SKi`
f(

+G@0cۜɨrgQ<9.'@<kwA@k~]v*Dk]
'j7VO4U:EA5eRtjo;69(xf!>»3/OmƏv Sէ򎭧Ghmw)EػDde{uKGN+x~Xp_8!٣񅧿SÃ
XڵߩjpD\d'lmb6BS~KՏ/lLl\Q9A%qRI6cgQ$:hsp]A#K4U>-qON]S&ss/~RĞ!Oo:W 	b)'H]
fyh;L8qqs&#riL%Rѫr*D3[ׅ/&h9#_]dn( e"8zu
a?!x=o_owIBEG܄_<'JEdEo54Z6.)٪
[νxKXO.
XvɽOpg=MR7]scl9%Զչ0]:V|K`giUmuDr|b<`&"N&>#fTO>ap-	ӿ_Wz\Z3X:MJ7I&:DL`
Y9*!̬W	L6hU'
*n ӷK/\!V6DAZ%
BwG*EInH78ϲ|=|$DIjS."%K"fw-{|HxҭE3-f|Kn,22M4cA $suW%?A	m3vZ}\J]\MRsTioxȒFm䳗o
MKmsD@"}hm6W|-TH|t6d+;@ަףo%4TYA$
mn7o8F=7~SBxB4͒.>CySEo_sP>^B>'Q@G	N[4c✺9Ȧ߅M$`nLB`lgOv`2#u
!oz^m	ʧɀEDͰPo`7HQ+7q}\GkIɌ/oilhwa8$8o{
I?Q q9f4$IB[^z/}o`_cj?U*2L[aCa'
 \,өM&ƯuXp͍2Ha
f&.+E2
vq/юnPjC:'}eQq^Ref?zEVsd;	FFu/f8nl =ۀADd4> CN/r9b|Y)>;ijjt۬]!0G&ڌUm0co<̈2O9uZI.Βj[kvà6}Ar:!yGϿa-<I?>5pvMiO:L%u⋿w19qwg4]ss]Ļ_:Ͽ`jjB404M6dΤkiY+0|q튓&P5UC+Aņ/-
F>IS~#<RHfDjxe'/T^kIQ8 buAb#@:krσ~G [^icZlYc"ɝῇ-9[;5/b#78lZh2~Qѿ/m9<hUbF&78ޝɜӝ {kMZl;aDS/N(89=$$sHzw}?dxv|Vb6F`Npe6`Dvm;d?M]KTJgNIosv
Jgh*8	fLěJ˸:jwf@*Hs%Dk)Ί,1yv/`qXR·_&qD+Vc?/S<:@0\lJ}ڠ>? DLFP[}!hUh2|<hn<ZeJ _.w;"[909$PEl<k0bdԻw.r19juRCnTN4	2¸PlioL{%iRUЕ1FʸrMUsV
:Q
ks^FO#L6ZL[Wõ	Hcn8|MYSVި<G

e]EF.u߆&p}{4j1;d,2~g#kaRj
H(fv&]4%OeT{l<;Ũa Jmb7sѬ?T
`ƷC"g+ylL᳷9=PWܾM_{wa˵\p6)P4Q~r"}`.u
loH,☳)hjbf77Ѯs8D3v:#NZw
0D~7ƏiE

rĳGE_й^N΂Ls?E֍c<^y۠$O!/h\#<"bA.}((rZmn2ȸz«|PkyG->ϐF]gWϼC"q䏺Hɜo4"NIQ426Vx?_hyJ(2ZZ-ƼMyj'bO7귓ϋW0|PGVFڅd⳷ɧtYY!l(}PneF!d(fxCBV%^}+
-$<	Yfg{b9.`>@Tj27'r1vFjڋL-2VP4
Q$"[n#}JZ~sCOGl_f&
;HBƻ/kG1}@E961MM_GM=yֹ2LH~oP+z	%4UEUUT&5 ь6zWNM@ks1jS.bs*&{o=l
/YZG=*2sw}iLvet" )oIsk;D~@;*y	]׏ 481|y>yp"a:-1D≰Q
.6Z
1tyD0?a	Cֆ8*Gx'e2ԗp0ɍqhgjawتj!}u
puܒj @$m.BD&Pdbv7P5R	wpVb
0bl,slo7Ī7N7|ǘ?Ef&<3[0/\:f|&;L{BC׏txӸUƄadǆ?N    IDATGMX_HuܙOF>'dY 3S-`$R<]N.0ͤ>Zeg}NuֻJ5=PtyLZ$w8Hա$fTiVt yO8ʵPEY{Sv]mhN4`!i:F`JBoP=NlqKo03&|1'ͱM"bGvC>qY8< ;Zm#tm?EhK"dWLBLM1Bgw$tTbHd8s0O^/8XnV!`hO{ij>MYxo,fUDPpHj=vWHzFvv1jĳ2 FSl{2>Pw@rq$|4/&_wLU:`3~`}@ywmѹ1=NJfM8{VMp]&{Wtt#,͗a:Y]xi?0G{oz˻uN;utnRtGXGGGsO$taV%-љDx!w3KpNxU::G~ƹ4s^	󓡇I0	{cѝa,3EwuttttttttPhxWC^ۏJ,{Fc
76]Sxp'w߇V%`'%uF^C{d]2OgQ&ȓ7wgy籫ZefWF6}ί%=m{-`
`A"
c6_L}MP 0|jGOK܅kR$
LEs|K-8BEBK(`^+䟬{t>=2ѪjRgW&Whc{s;_T(CD6Xc?{$FTbk5)75~4+T}VB~Yt=;!' ^:õW~,>H#l5jɽSrMإQ*1nil(b>3!~G+,e l̟vdgwB7j!'HqTƻ"Z0ڙ^9zC)J9H)a|-T	g45>i޻7^h2n9
I|0.z>{~1b'AZ1҅Oy_xU՛*=,Z0	dzD"\o1	Sѕ~ONV@МRjTRMr,ead]4dWzvNiv8gi[t0`
mګ֫~"gM䖆&j ]TK<}qRTj|ab"Jι̤?\y#̯39d6##κJ$_jS_$q$NcvPb㧜7չ]*NN0Z'POY|bi6;]J-jO 'C7*[<؂oq~fk^
=N̓F]y$ޯǣ9^÷":٭8{gM:+ӡ8sCjZB
KdkMaj{Xx"Λ0v<xZz2T*GlA_F !^v>	C0%8ڶ	/n(ŧ<JluY,X+T&OJȎU2(
vN&O.BA'<q}aCe2["uOK\x䘗3=O[~ƫGA>2'il7""&# XY,}z>Lkso$N.A|vnT7'*c
Px_ 젚K@:Mt8>Nɜ\tqx@PpR(8}9A-'XOUqwrlNPO?%1tFuoG+l{(%>=o2=9j|;k:
31=*VYHqudnǨcO39y>x+eZt,K޿p&qr%*[OмOn7teco
U	6^87SMnQĞ!Oo:W 	b)'HUz"3/s$=Fp\	Y@Χ_p; |q-tHN=|Zҗ @>0ox(s.
iq&y
*.Fhd5SvRNup
[&`PZ%,C}b{
 Rz]fbӽ81/2bțH
>|TuY8 Dr̛AOv
GRT̓K,'7H]f2H`r`9o}aUMUWn:s)Ҭ*SE.#9v
$2G]Z9QI4bchST˥YIE\@Xf:cbǹcw\Dtۭ@.ř_aw6cba'kt}$ǢӧY;!ߴwuPv[JRL8x]xk3Z-9*)ЪdOU&  ЦR$:CTN1d04Z6.)jWxy4f36+\:04kYO&rC~m3߅EYP9ivmC3]<8-Y4c✺9Ȧ߅M$˵Q2ACTG%4WUZ%
vZK=QpWq[$5f\*$-TDLR˷j"ۦU9>i10c	
J3X[hMG I39~MAt^~a4$IB[^zӕr|$@iLR9*!̬씺^%0RW ωEm3QӦNBޮsfN'faA%,R9i2& :`Ccbi; X&4S#ϡt/.ӝ\qz Whk|Zc 	juN*/qKW݉$`sCҺj3A&A9NxӇ"!Jx*WRMϷ}3b a@6͛e0{!?WyЦ,zm)e-dlP4Pl<Y^d-0;flAc8gGZzهa%36DAb4p`nLB,{05OKc]Qة6k3cHd)(|}xvY
1~klEרOP&0z4v`2#u
!oV)Ejr`Vq[XD6#X숒AJb!IXv6ьC0vW2	_)E2:VUw0	 ,NvCb1r.+h[OTۀC6{PouL}Och?UiwG+sSD~:Ȍnڤynbϗ"%ss ZTr9zexDJ	\3x|\ChWehef>p
VuO>.]Q߷Y.<Jki^فնN1Fo]Phh	`^)m}z$\>\܈܂فDIQ0 FګxAafg5-<I?>5BL
gDlV#M' h.TdESEwMTوf+6VsдnO1}$Ɛ8h 	<Y;^Z:&Kg-urg
2
Faazil<I$3Nad9,*lhA0"
 A/%D0^
5
yu2\])bG.F<Β{S{7m9<ڴ*=`Dtx!0[<2g1{v/
:646?V)Şnztg{<
=#\{MWtV䬸Odikgn%78ޝU'b^ZFߑ Z`FQCE6<}"L9Q)=] GEޮLC1gqw}pl4rSNA2wWG4tD[$f864[ؗ,櫁H܎?cz;=H.?T!n]#ѷf69t-Q)Q<;%q́'nՕY4=5&يgqM|g|߀o!"Υi,Չ9+PeT E>hha|HQw7)v3VQ$wGdKC
5=
EVjҘ&/_|"{v蟱P
Xm%S<:ӧT^_fX=j356_^9;.3ܪyVe_Ca5Ъ֯)JOLN	Zki<Gʐ`c괨֪"ca߮>Gf#(
7%$9r|˸Z48_h%a<0n9M;"bsͱ~I2m%]Ri41Zm#X	jIӌcoqRS.KVhj
	$mщZ-RVn^3ϑ鑦6s~~09Z.K]'9JTm>Av~tc>|
G%O5\~TCi4hă~<>/RC״YևF>X JUJEQhj\qպmZ@],Sgi2"'Ņi})Yi׺qJ|+.7<|JGUu4MzqZ-Q7mS:Ci
2ڨf{rhrQr/KO9V|wkI^EM.jcr.
zK1~L.hh(#=zD2ȄzB*[A4FVlM+$BrCAQdjІV69ʼTɾ*M,05hܾ>G"9;6(fieYEm߯^_$diRihtC?2|Р7/	mNd_+>`%QBֺ/+pFՈ|=TQPi3df<͢
Xf)U$b6<ytRGqOk(ҶzpJe{z&CȊܨQXR>HNOi9ܧ^>GGjzwa&d/:LsB"0=#L"ȥEnPtfóhJp4/H`#@ z]n"#2ݽ"\G?;;LUKh_$[ccda=g<1G_@/:UUd`0M|MqסY_(t<ς$JL,1ߦ{Z(I%COt82G`l5IDK^_ ۳&7J'8ߍi5mvL2MhCeȥcm1ҏwzG=3dUSJC,fl&`MY*۫	ȜN-t)H3lhHX̝&=!NzǾdw/a)%k[/$[,fzyGY^N/,A<p
0v܆?EIxӫ?@]tN≰Q
.6Z
18=DMDr``1/o˸
Γ5YqDC"(+87]7vDW"=ܯp3M*4+Q:<'&{< Hq<$#ܑ#툝3IGz!]Y"(<amC1Zȯ? `Nz{viЌZBO}#^69	,Oɬf;l[4aq<CoO|DDM/cҚ=C>¾+hpo. #V6;aFBrq4}oӪ=^p'Cz/~nϟ]~b2h="ttttFβ;W\G狨e.Đoљ?ƫ
C`Bפ{rLxax;Fxˑ׿ ntJ!~Itd{qxzOJ&Q_aMrCq/x_g40	<^JQ7O3VJb_g",4`;tP,po$ttttttttt~n0	{cѝa,3EwuttttttttgX-dv'_R@o+d_nwwgy}WB*ߝC{w]p'.]巭^mYfgcQGl<wߞ
Z5٧MWQ!_Q"<<rK^;t3,8B{K(`;ol$cVx+f+䟬[)]q'.2"~
rq&
?lQ,CżNcC_}YgB2$O>b?un^]Ar1ݯRt~JML5)75̃ynȝnθ}2ݿ{ _PT[F\a۽/RtnKwsO.;Vx1Ix4aW{$RY>:`01> cxx"qPSF;!B>-0rW4-:0OWqI^^v98k"4l0̠r,D><xٍ:*lshej9B7-VfAiT"Ǽ(F- _Sq<09Ub<e`|
-CO Qf&}E,qY$-~Svk??{>o6l6@b!4h2sRh+wF)XH
PI)	`K,-YfYYWW5gM}wΞ󜳼h&uu6ehZmpx\d#F}Xs\lP,N|}>ޑͶd7VI$k-&+#_ՖVkPJ.UvImJӸyRe&ɍN,}l}dJ;	R4/d%๺:;/4;3mq}j$,~1=vO_}ju>%㤋5Z>?ʂw$'?ǷյJk/<䂗<ceK2[:Ҩ&^T{EEN}g8R*Hš})xL3:`qHpnʨVZ .><Cqy?W>\q
k`}NXy;^N"ElU~/-Y]_FN)RfC
RsZ:JFuk    IDAT j) ,YA,	\	y w0({?1NHP]bE3nrvFGXO0mg4_)nrBBn+kRy&wtD`w-EC-'XJVqr쯎PK-.ڪQQȽ%e]uf{8#l|cz ]t)zrT(Kd]챱qttDe/~S%xX"h{(MPP(
h`彌{Q
ɫ:$ASc~Ƿ5s$/"2.ǦQ2kK@@ᴨԚ_R
.%7Vv~`'r{b	4Orc|(dI2yZKFr)-%1`%YcduZ]?:@-K rǼ(T>|_<i{	?qΑKGq7ҬTkrm.+Z-2yW/
S[9
o|*7+

9b#_q$cYtkC>|duL[AF~y{(Øm}ށ0*G8ijURF(CXJ=GF@E6Jl7,E1V,ÙBƙ3F&Ai<vI-9Q}嶘&ڵM'9E[9r\̍@ |P䬯{
EtB7cM2k1 @I1'<6]}kھwqi薀Ͼv!o_RTpRȥXTH%}sVeX7B:# !vs4ǹǔS
%k
%H폼R)<aDAY zRSlؙA]&0o'Q36@2jVS'  
f.X+,8}nMrXBXd-! `.0?RW{6	tx'n3j>Xv_F+.	
/dnF`;o}J!4@$~?v=w<!|E)XYy-J}>wڽ(bL1nVXU>Y&w!cмIk,qDD3;M%̬81$JH6OZL<ApO~"ߴ>8Nק*+ HXDq<_]߼Hb`wv_to"dՍ$wBҼq8&p>DXLuU[!Z]Hx́c||9HW6VC8
M7>> }vt* |yP{AxC	oeqvgE>'Z,E<(~1:` 8R]WXf
:!H6>ÈrBvm2',$!zXXNQѽ@lcXz:d9WcLYeyP.l4Wג:v,'Kă?0:#vOVmZ,~SFux֞6U/p
\#h54$u5=i4a1`qaL]@@Z{fDv3>nRz:\X϶h24?K#KgN7V=>--4hitNp׻vUOA°7(lxY{!qڵ{?ѧP`w1!α1&tTҌ-BzF4Sr0ni싯ݕ?	ܹI0#v\$`PnZ5>czӂ׮ ʕO=q4>
I2aNLicBJ3ޘ
rkYc|3v'D0][.Y~W$Ӟ$Bz<̌O2͓#^ܥR:=xc]ֿ\S>(szrqv'w`alhcT3JJ
An
@sZ~q~Sދ<W>m~|^.Q<9^x3,}0!BD<NLzC:G5⹷x~ ïd>ML#&@}k`7_pI]!h2#ߺa8Rƚ/xp<2>h`s1Xd)LYgޑpZAUql[lubi7,wh*26\VarvR5iȋaldOV2J&ڭkjHA2ǟZ|n<25U}}>mrgH8%+QnJq_S#`|FQ(ݴnwHhnnQ{=Z}n(v^}j8<Ya ʈ\Y~s;%$%r.f+us|yZL&Smpk45A&V[G2 QSiLtڨr[ߗvPỈgwwÝb*u|`t/_,sX[s^S8FD<c)2"woR
C~OUД*h#Sgh?9jꭿ_Wd_{* U	WrEA\\(ן?Hhh(C^|F^-"4N(E⢮.ljbӉ)"'+Eꂝ[$,jȊ\B|e(huJ\:}% O;
qt͊/){x9{$OQNEM.~eWqg3Rf?26D
]vE`y*q]E*$h=3Wдkn٣Q'Wvp3srWVK R8M)*j^vW,.l48OR
sA9'͙mUoG"6@@;j8-,UP'^1שw10}^l@w:|p+8$
@I0!=*&xXkw<߿.g8Ԓ	N'lLvnTxI q- z%,!ANaEh&J"ɫMk_Rɩe*yoR M`l';u&+u"ȯ%	يt69+I6S3L;:=8y|	'	p[˻+mjQF5ݜ !^b&Xdu۠F`a<`Xhzp'z#	%H]2/B">%`a&vs5y؋8Kγ>;vhkq(^Mo>ϯA|I([	ejTEF~g6&kqd@t#e_qէDdJ"d6`пy?"*k	39a??mp𘵵,J\~|Vjݲb=Oh<J24Ib3!YŘۈ)]q$3M2!V4#{ӄ>lqDtnn>?k,M 
ٷOӡpX"Q%KHFsUu>!yq'c4]uOBga``ߟ7Y@~fwA27ŗ>f),  } ǽż/OL))U7vPo0OL)}]4l(000000000.eOc0l````````m1[ߖ0y=ٳg<5~1*klxg<>;*lԕOUesi
tCWv{{ɢ_3KO5*k?E}%^'6^	4Qo8Sci̏>֨75\Sd22?xO8<xͿKP =o`zܬ@!gv_npw	`mw%0GGG||핦
yr/Ӽ舣>#7~zryphwzaVr鞯w+A.O`ϐdؼ/P.=`PD<<kA@x\ѷ3݆J"~|UaE~Ks><CGn]]O
ZCScwׇ/iUAf߃<E>	K7%܁F5e竵ϬA{6Tf$Ni\f;cQ"USIlY4ژc,W;U" W0HWUYCJm,扄sՄZ^f*m;]	U9~ApN0YG	DVYcLY61>	60ӹM}g`1pCHrQ8N_h.9f
 V&O:hdW\@dLc|\w_Z9^&XɼJEVf(m|g?G3:f9dx_]7iK-bMc0M}g,Yb{:{gX
uj|c^xg2Fۄ}lwG⷗,B|x7[ds3>rZO8b`#NkVg4fzZ=$RhBD~o'}Ez{P$ηqs%v70dfL'z/SbL=4k*<}ju>%]m./YCd=F:s,Mk_9/FS16φ	\7IW\MXG"xGNŒL$X{ETK,Hae
f!N|O
nR5vH,[_NZ*α\}"Es6&<A?
ɖI+#
쇝7WHV5@H&dk0EP{ ;
GGGQ^E@t\E{d,{\q\Y\!y<n@.Vd%yS*zrT(K:o/
̦s2kYKQh* rdr#Ougg;G>Ъ^)QH6Iomӻbcs]~M

9b#_<FM=B+mFc6<L=N6NpD$[߫Rɖ[r,ptwq~d{gT0ѦqGÿ
[('S7l,d{dGٳN$vHkRU؝9AIVGY8:ʱ(n#NZ,6?؏yQ
	WQ>|_<iuzrw:Xq-NvUr}ޫYFfQ8X]KĢĻ>3GteށS\a ͏
R˽y&
8n(o8	u&}U}Б?rdWh\!2u5xsPbZ(^`
@Nh7)d|UWf&B\|iU#b&B=^g'(N;{K@]멵}ya)XY
wygR D#
EMTD,R'xDWwwa(aiYY9,!L,2떺r.0?RwO9nl \$׃XxC	oeUhFx!6QJ-	 HLP![չ%dՍ$wBҼYg_&1s;NJ9gF	x$}mt	ϴJ7BaEd<e;s@dgns&,=ݠ?seU01,Jj%sҠI95TYA"
:>Dw]g=Dgq%zG4gi߅	BN'{mrӓA@V ␠&m%ҕsj
%H폼__]]Oq<螝g[y&o")y^uywJ	u 
"6X3EÚٰ$ HC#DgЧĀB'~m<r}|x.vC~DD	yή:~nЗ'Z&!Sk,Dv3
7x\3L;"=atGԙeSB٦y;eT\*
X]H=A*yZdr%h>DbckLM-:ų/>65P{$O-D
ދ{ڋy)ϙoS(g?cnt32..-+x'$5[#g)J+tLҦ݆/%Y{v	&4n)DBi%VzT 
NOddN')0]L2?yslq?[H.,W퀵h24?K#Aq'&y$VS#xF'|xNx>FbgNR܆vRY.feS
O;8%g?OZcX
8ϯWKfɊ$7W<97)10;%@|߹Y0FjKo}yG0.ʜp`~IhRURX&wx96@ߑ>T[="[>\~9Ÿ%DT7vF܂wq3WSd(:ihMp󠳺Ux࣮tBQV0vMѰ5$VA6?o>S/(PLHIm/0g~m9Wl?  ZWĽK!PtzљƢYy>c;rƓ S]$R˺gcHݛ;nЏ'Z&!ᴂRmRo\b;8P5iȋaldO{4)4	$ .fv(],n	UZsF"Tjm@g jwK[w"_:Sk&7T~4TOԬL}e/%_Β]~m	NUjͤ8DP.z|\[36FHU`5K- ؝HPqxyAHXQg4z/ʷD`wDN3e}yQСOюtIޓ&5ń~Afz\= Oݯo~S!RQ:4z~BZ"+i<" w+zf.1Ot0,	!ث(hԏӤkV|A|+^zOYzTQVi
'>RGNc

r/6Q$MCZKnZgY[H6P M>&u׿,/j2@L4/T:}lj57j^]3 H6Fg;͙mU=w.JUJEQ_\ЛJO    IDATn_Ϗ]β߆Etƅu..&H^f=
g4_2hq%z#:H
4:GiӟP˖	uTMST?)(6щϥpRRV]r*/\ՕRDeau' 	ɝ2Q~˕4w7^XTs^S8{''
"sqQYitg\ iDqLwͲ⛇TQ!?{TUCS.'6H[>9
NөCKξ}ZJ;k'*hJc)ƞ_'Z&7PZ%,,pNvLVFDnF5/Ld#_##l$L0N)=gmDb`0<ekr/S1{$0%npX"Q%KH7}i!dQ6j	RKS$#칹}\ )&<($YtXXd)cn#S0V}t`q%\oeEJxq4ɚxo6$)kIB$`[g+"ݪcwO{1Nb58y|+W$= 4*=M1fxUK+^vy\G#Yb<S&OTIȝVDTet8\TqwL)1YH17
#"1c~>\7}aa:H+̽X* `	H_ͲG`i	`2 >e'[MVq3 sf{T;|lƹaׇ)ɟU6	63L$r}ӛqD1]雓Ji'<fm?6)Z~v_;ߤj_Ӯs1DWS&4J*?Zfyjinc9(̥]l}H/OKҿ@;&	hU/#G<Z/v1dp߹/?\<2	z'|uR8Ӝ&SމOLQx	O~cF{f\ǛΉ̾->D\ԕ+ɛB300"y5f##m`I|2	'1600000000b
a-`o1օo/x=>V3=ⷋ?HYOWrZ;J˳gRz5ƃypj-૨C~~zwqFwyYqXC-³Q50:=M`9"w
+!N7*P5f/Kٯ.a866>t/B}g_wFutL&|5c߉3V73#'/݉~1:]]  <`:/tJ
iCkPnhXv]<ѥϿ*LHģSmPmD|OqģG;g<>Z;nDArO^҃~qߙ'<Vf$Ni\f;cQ"!D@lJ(l%*P<Ӹ&5	'i^>l$B?%IsllpxRuodo*LQU|-ZbEM8bKayw>J)H?kp	hpd*|͝j=^
u/SbL=4O;'^7zp,ǻT6^R&;}bJ_G6@-$9 ̧wvr˄unތQ%Kou5.ϱT&:fp"#zgu{V=r2du}kzAfI&)Z0'~8O) ]qU6xZg4dgbGNQNϒf]ɽ6XG?w  r~Ճu:Rxɚ< 6\}"EsYg<f+thê7*eޯm;0^>'Xpt_,Droz;/"2DNrYGUC=f$u
Q7b	ٵ@]&}xZaq|◹.*ϛԱovc{zH"\k6Yi_)$H;yd%p+So_ONC"/bq 6""3 pl=~8Re*+uc*kXo%~HR<oubqO(WπP'c)~~C[>v׃+eޯ%ȝ2#>} 't||c#YNޛ[d$=6v9Ƚolg8mȥivݚ\
vB
}
;7(urdWh\!22W#Bk
EtB7cM2kVb8i~\f*F(ArG嶘&;K)؏b]5L˱3pL@P_	Rzv@!D\/FӞZ)Բ;tЯVB@pՁ+9,+!{21v8qF>4Z1AZus6r+jA0 +l, +K7YIVn(fA
R7q )1w?[ƚ9S`6+$N,qt/줺B[gG;+$eT@-'IW]]ى(l(вD`@!e3|;F wlvYz6NpD!R$QzGhQۍ`?KlLB:p.k9#{hdlGy|bmͿy+;W1qBVB!J6;h 3tȩUHmafUܵTHᴨԚσJ*7U:8*H,NrzD(iZ|L9vu>vW)'ȵ}x]q\~} 'Z48#>DG(0l"b:]
.y?n`&`uVt\ZlQZk@pB*'̂Y&,}1vW4̇7".(ADDVmd<s" :% ,ۙ"6lnsj7݄-gi/^EJ%[r8x(6w0]"fO74,e<Lgeά`erIv*;x(pf`.s&	D1A8#4n*-CLt}=;(g8N`;K&8pܢ	_Wa	abY?*ía\OH&8ë<tGFSlؙA]&0gO_~Q\2`.mۿ^NhT7;H'6haQc1iUFFlV"^hs -.4gi߅	BN'F%Jdx㟂 ^e}%|;ώN3ȩ)ȗ I" Hn?k#KfCd/[+Ѭ(N$*VbE(o䀏o ѰvAwfn]m5}`ǜ=Hx̸Q ˓-\3L;"=atGtXqTKv(
Z8TeZtg_mmt"lcXzx$.D6!`̞8V&56ؼjKïS*V[M
Ãz$"CZlYc$#4,'3od
 j	mgXp(GPsFpC^&4h8m=8%8i(gZ|E M.6KL)4A$r\lm,nYӚ5Z&+^}[](#*ȗfl=m	VHR#J`k?ML[X)&[cLf"кjCUfYZ:%jƥ^ĆoѣS)%	|'[8j*7Eh䩪.Z

g.7mό,:208SdWPqҲ3{
AU_Yهjb~6:/;FbG|eNON8n0$@h0AkRX&@wx9:h1~;#so{dihMptUx]' {b}[#Kms@lE·wq f
vƿڴ5m ECCxK-.DTJSl|ԫ?d?r~;d)^ܥR:=xc]'~J.ZA=ÌRCPN	4ʁgJR+}q#6ƦyRQ]áU?_޻2}_[&	HC^=%d;'[pJjO9hd" jP䫥	ޥ\4.>-tCMRkc:
*>?4Չe׻UdEk4Ok0$p:mIB)_E?cwփZQ:Pukv%hVZstLD;V%zϒڤAK&ڭz5EU]dh%v?`0V'vZOk*26\E	t,ܙڬ~sP`Tk&7F_MέSi<Q[g4n|㯢EML>x}SS5"HMf_ayh#(e?px-Tej*75Mt~>ͯlgGN*+ee**o{uO74~P`XξūTUpF2ΆɔJc/IS#|i⛇TљiZ@;p]+W(&:laBCn}r	8[Y:u[9 \+SF0[%huE 
\n-"4N(E~aBϭk\yZWOTE_hCZ|>!+
rUD4I긦un~.ߍm,ȈZ$hjZUit&SKq&x	)F"\:BQP:gi/)R2J/_qKO`/(.Yϻ
ӟ)UFԸ_ps8ORUz*
N]"H6Fg5͙mUq$biv
ɣ?K 	ɝ2\6x
.Si*P9 WF=Lw.~e|Zs^S8gB:{+NʝȲLMNYx~`Y]2ŦSDrO V;v	}ZfK>]]WQmIN\*	x}#~Wyލ=*&w}cnp_BV5j=ɖI1µ8Nmh`7-p{q	ygQZ$%H-MlwoY_j?Ye3`31djM"#yqk,M 
9^Ɍ9N(ŞX"NzjKt="$,OlvxH( I~5f+Sǘ.UV-QxmM>w >]`H͐&vac:nӸ6c|*aنf~vhz4`2b["Rso$~vׁ-5KdEu7YiILq{fHxCSגIݷVYHtG\Ia2-%#K
-j-nzuat0$ڤ,o"]EYer-At&>'7_E	ϔJ[V,	GI&Zx#"KsqvW=:E+aƣIf~:j3fxo`Ѕ4\?}aawneԫ)o"-)>~r
C/$H"}	to=4/Ϋ%
833|őJ}ilQ1EMpu771^HbjU˰p|~{zq<r[nO7ٻ6yNvcF?
^p
8q\ 
)J@(RDH	(v
pib)ꄥ-lOqW؀!L&dxgy<3ǣCX^\4~K	(NCICۃGF:Ej'G'ٟlvϟ)DslŽP36ǳ}KBqw/ -~௿_G.EeG$B!ėeB|ձ 
2A!B?2	!Bq2	!B!0	B!Ľ%B!$B!B!޺0}ɯzݤӾ>f~{Kz`_}}}
iz,GKL>>ɋ>֏.lS">G|fs/qT#x%0'ym
;}j3O|]j1BexxǽOτ	,D;K1j
ɧx4}Ll8٠\|JHf_ R֗Bi»z!س77HLGVpk7jrw~>sew`<$)JԮ3+^wIїTEj6?v~;1"٢G$%:q<Pi=vZ׺&/dփ|#Bs֯#/#LށH[Y#U<a8du8o+;<`_yL+F%"OTe=!+r\3ayBnp&ǧr
	EE	d`I/V#I{}09AGd'p:Ƴ[EJegn4 #Yj>W;͛ɡ
4=XH<	d<K8̽xivYC>VP&-^)f?6/IBq taV)fYADrrg-k@2nÁU# xiu2QJ.ct2<
!>Uk`~g|)׸P}u,$x٭G+7ԵESlAǉ8R]q1|-OU0?ѨM|P8NPfVmhT	|(dA83[U Yi!Dk!6'iMD<ML2Ej&=eZozlQ6#d    IDATP6	OBvfx+L(]pLX{XW/]Y?[jG-(ex&JcEY<
6x]!^Nv<*E(0hGgTׇy2z[hNDtl\j:C9+F4k/6qxt;eRomF,svk(Iu"rJ;>b2aڳAOf֪zeoFT]eblGgIvT5~%:'7alg<T
)B'kJI?ߤyA,KbmuVo*(
>mam7'	U,0d[`T*E*:4 R+x.;lX|_UN:]
/+Kzǈnvɾ@ud7#38j3:	Aτ"b+ 2MP4lR2BBaD#wq`fu@vL69T"9G$G$7!WKOә_&:Fy$0:YHn#3"Jql2D	6޿cΙ'>]kD''Q:'70?.['k[׷FRFHڞUJ˄맂s=X"j1;R?	
=KX~8LF>ȳ>As.f;FXpUח=,nHĶXnԍkgz:{%AަvM%`= Π7a-J=l'bCzyB6׏GV[ںX>Sޝ VZ!Rkbq-u

UrN`!\u Cfum&,`8GhyMN&FXU{1tQ'Q8K|^Zpz_{]E|\蜌$тѠhxgq :hdێX,,q>>'!^AZ.Fz\k'c
{aRVƟ|O4f6r37gqqi
訓%I9IZO>F0((XwT?iԊU<3<tZT
vkc.}(]CQPHQh	.	;u2|?8j:yqw14ژWqyPQt8U@uu<~|N4@wPobyqT(iX{5̭sSI09GQ
׋V$(`h
ߍ(\X503eP5+Zz~U:j
lAwtlE7V?FN8]OzK~<jdgm󺧨m,MЬڍꨵۅUbo[Ua67]׎GX&Qb6ڪۃLYC"LrVT6K@a9nԣ$F<οPHa#`F
`aTMlͿg\OBmnH@|zG~bmVig1kƭ?[VhèP:6am\XKu[b	ZcK]7(kt
/ר~|ƣ9NPNBֆT-N|	m\:~M[2ܝx|VÀV}jmJ
Q>ZDǌ)VP1ms?df~yU;jt;u2YQ48(rm:׎G-RՄV?+҆(rѷN>"Q<T_I5҃,NNwaI]A[n:)"Ek*pa_`OSm[6؞G#[q4.~e0}"%˓9`oّuf߲J{~߼ Ku%\U?o)zvwOd:ƖgY_u!it|L;fQڙg6Vche~ȳ4L*.uIT
MDtJcgWJ5Gt?Clw %r6>z1Oi\+SlU[ph8,P:YJP1;Q`vjP7n_V,YDxmP4Jәܱr.?uǴ?<=ᴙ(4W
RcvT541YrWtXbsKTZ
2Zh
^lP9eϗI>lCdr&BymtUq=+={sT֋ XRԖyxtrǣk
`|@GKUw;>β>Dا6GӅϐB8>=9o05֪E*Q#b X{يlFFdhHXwD̖0Rv(XxYMq$-yK)?>6
W*fJV*TJG
1[@ﭯo4)&ynkg!N@(fS
*JGZ
"{%*(χYʴVNŁe&Qʲy5>,R1&/Ƹ~[ʋks۟~|)5G|*R??>Xn+P
*$n8~,5
|C;?QG*az,N<g^ǣUC9ΓɕT*r-GZ
m
c!ɍtwGI490c}bchGi~\>_?bo~6,3Bx6ݎe=@N+_9V!VB#<RZpww>dqH(<@&e}'{Pp
3b9coy 9&0ڰyy=R">6B C<0u~uJwpBg,q,ok=Ë@c0]a_<`v#BkW]3LYhhs5\pu@9xe6OZ׷S{fG!GW~:h̽
-18<Y6?y][|IgLi~V#V S2_Q'Xz>14tpJ`I`q#ih{H'
.?[ZHu
O2R??sO1wblN
m<3sй6׏G c#$ '+/xyrx亅<m'sY'ynzˋoG'ٟln8c{x߾^l%n(x[|BOw%_ ?Zo_ů^&q
'N{;{UFL,NE\`q/݅>X%!ķ$gXcŠxK@80@hs\!Ŀ]郥_B|B!dB!wB!ޒ`X!B[!B{Ka!BqoI0|Rrx;##R#
}n凌_yƈB!=_}K*bc
{|:WLJ,id%Sj/BOҍIQoyQ$[4pOCNB!ķ3G;!ח<d)GoBE{\W{F9^jj1^z:HFM[b<]Ra:K<ls)#N怍W>L"aQ.J콚bq})yy]B';}Dt/|~G,1v,y\ْKI{5>g1ּa)0%6'\0?jL>&w6ܡdë}f+uԭAv8ji OJOϷ^/&exY*{Sϓ;jY#BCw6ֳ!8k$R	:(DeC)T</vI/3&xI8޲讐1@!J?	{&	g[
D^-&b+ 2MWiix JJo?كA~}G
ϗȴ8<?%o$|^y͢PJYH("5:V/MHD.L_'H[AHtU?/qf盂?łC̆aq+F"rwcMu
#Gd)	#k$vwIm*D[	A4ZEQ&_ihp[p^/f#$Ssҭd6_	y:C]X[?!B|;dwn;buOszh
{-IN' M*CMbS1*٬ɨߍUUGyP#.^\4Q{NL2$4)%k<tW`n^r-+>I@hpLSQUEV♝ӊjX3UQ/͋B:x*jw|[&Im^UPT'މ^>%p**v
pY5T͊8dK~B4MC{x[,n\)P6@υ~"ECeQ>Zl^k^=䋍2UyTӠZB!rGW(kX5
9
h@H(&LFSdua;T6Kq̗kT?>QG:.
k.|d)Vϋts8;HT#Htd9j
TN3|8٢\jhJbqb%Cj*	hs?Y\_-QLhLuබ"[tXQ9t3w()!"*`Qc_YZ)r!B܊;_Ұ4]᭱m=UdCq~}5wxX	A#Jn_UTsۥ%Z_w\Oޒq:]oYmAcS*y
y3"@igX]#k=9J4<kλ#I!➸$4(M?R28܉ϔ SJrSV)rhRzJ6b@ᴙ(ϯ5*K~\G1=P)nl|L<37_Azi~V/Rh_\+ShrV-Z<OYybu{ܛm"*<qY
4yNg/N=NbsaP>(!|F](_ܑF= #oqoʏ}BotGa fa蔲,D5֫ZxYM֟0&D8|n4G{e3}XG>֧6=`00h4Rqi!W|x_)fS
*JG<@q0P<$OƓ_45Sp|ha4|۟alW7ySGZ6J Df3F9^|"эt0*y{trWڨ~l+dOÃSDOdG|*g?6<BO'VՁYa?,((Y4(!ɍtz>,W]~zHs4LGny]!wvc%b%4£*'ɭCSDj`]fw
60}8̃9c)>6m
 xӫfXr=]/nTn<cd0Yy͢U'V5BD
҉oq﹎X'ۿ ==`p%z|j#" g`vGM6&FX9A;*0+h5ʋm\AzfÌGXmt<݅>D6F:.QP4j:V@cx?V?vGأc<˳$MoyqƊBjӁ[~8'B|o?l6c3֚(+ձim^t߁_ay^
?HN-
`{F!w_ ?Zo_ů]&!n(]_&m(ř|c^N	/s!@X!2	q$#a
.eIpcɈ<i[f: QY'y$BzB!2	!B!0	B!Ľ%B!$B!B!ޒ`X!B[!B{Ka!BqoI0,B!-	B!Ľ%B!$B!B!ޒ`X!B[!B{Ka!BqoI0,B!-	B!Ľ%B!$B!B!ޒ`X!B[!B{Ka!BqoI0,B!66!MtJ=$'w' }?0?&C!t.cC>Ks|67	92<Am}Nԋ*N 8>0>K>\&Ss>FȺ݉T>tY~JHf$Bw2VֶF 0
<[]YkQ 
WjxW2W)|~k>qL+^Jy$2y>W`r%jWOًSA{!_N(*Vk=d364kS e4[ͮ4SC-N:{!6?R>6[337mT0[v.\)WVTvZB7/#Ycm>gd+YV$?.NvvG;aB[{|*נAh+OłjwK,Pt'ʪ>ǻnT*LFwڠ#͓vKDR&K'9&N
2xip#fcm	z.J(x&3 3OzQѭ=C<K7Ml?ܗu@Yf|e}>Dc{-m|OX'ָ5aZq:a~6&=Oh9v0"Sxg6-18oPIƳK:܋'g:LXYߧДs.ex&J
/'t_wQ$B~5uLNؘY5>3ȯOh#b7cSaQZV!k
K͢PJYH("5sdB$LMDf)d
,X#J5A!2E6Yl}ϊHB3Ǖ%
	vS1^tGȟ,tU,0d[`T*E*:,%y|.qe7O]Db42w۠l8BRpμ'Jt\qzJ]/T69~Ɇ{XHcD7TkvT*BUnڊIid6|zxgCLpmڭO~epQ(lX|_UN4mbnՏ1$YH-q`6n-YB!~<Ც^|.|>y
V
	aV4mP-7IQP/mZgvN+aNW^|GlŏSU@m롕Z1O	 l42mGUT	x/rg FZh0mEA=8޽kWApz:1(4_|(J}洑gY:(i    IDATI9PZ(~frmLZ]XkE7Rbz⸌YONo޿e/2gqqi
訓wO1\&>:ur,6?A}¨Kk:dx6|#hj;kGfQw\me9قP_37!B2q6@1%5
]Xo
/J>(BcLP٨HP(װM3
wdͰ)APibtEa#`F
->lJ'hNĊT,Mʊ	0h}jsCl<pj2*MXg_Pm.7YXH'9}B#5q[*5(}Ỏ:F]0ciJ MJd$Q<8JH :ݝx|zu!s?y0|Pچ;f8z0VmFlk/bWdh6{k/I7k,M)zXX{]?Zgx䏈vo9r^|u7n|raEIM`-f}ednB3lv}ȳ4qgNc=B.s>[ef2;,ɗI\Ah;&޸Am+8LNzUfz|YEb\s
w3{J
f
Ӊu(Q(
0djؼz cn-N
*yWT
e8|נ@7ns~KAkm
FT,7.Qk>GtL2kᛆf/pT*Vנ|PCNfz+
mcv\J^l=B{aBq3LPtKL='y@/Q::$1	/pIqrh1^`J]gsU.Sʮ%pNͨP*K5F]On\'ꧏB&**v
J"(V1aPҍs1P|RR:Ui⁞f5G$hse#WU㸵zjiJI'W5<y݄BnFħXTrl??ɋ~JMby_#T\n>F00<f[~EzDhhP@QC;qrY9j"/`B$>¬"lpEz窤fI&
GF)6m<# S+q]7ثnNf#qǙ
l6^=J0JhGUV0a0iȅ3~}@ a'O/x0#Q,VC~:NsX	7PGYlgl<B[{ 9&0ڰyy=և,.	dûׯMAS`Z@
 [`>+V2KCkM:}tZ&*<a
l`t2:Ǳ?I+gx`fqvǹGVìDFx9xLM}e >.1=Gŉ78ǜygI⡛Pxzx.BG'ٟlXw~Cݽuel<w->yB_~?o _H{IqUǨ)Z踽I[!B\_LBM@80@hs\;!BdB!G2	!B!0	B!Ľ%B!$B!B!޺c~lo75a/@B!dY(S=5̌
%VCl?RGAAB!zwtf^h8~^ǖu1Gg1H(X>_bƣmYVf79B!?px{hW볼L ʹm./vJo`B!-bB4Jt٪NO|.T,.+(|{CyB!h/?:ͪ*Ow[~ډ~mXX!kTj;V;fIW93xF6
!&W犭&"T39eB!w7nP6T́q.*uzYs|8l%B!׻Qy2Vm.4VY}:ɫATt	B!f0lubv8`Q9dg#JQՊZ"Q=b6j
U;B!ND?ٌQc5Ac`a|	VCva6ҟ6kt0~	!B ~ ㏖o_믿#jvgSF8E\>&BgoOjB!w_`X!B~`nB!;`X!B[!B{Ka!BqoI0,B!-	B!Ľ%B!h0\bi?ë_F'󴏾WWm{5=e~PTy9{M_>?o3w͹ȿbB9~Q|kK(㳺<~9d}zJ;k*d_Mi?<N+8`<~jVl[)onrv/yƈߴ,S}YtGdJ~^Y}^/o }4ɷuF~Ƣz|Ga+O</$*oRR1r#K,ވ^Gc<M^*,M_{Kl\I߶y'TY߹A6,%seܖc2o8X)rxz[ۛ6|:ꕽ21h;gal-ap:.O|J<(c}}L]7
زDW1(Rf'L.%9<9vMS%rRVڻ%%S~ۯgx>ėHw0Jh	݌U2-\+XzC/5KOe<*N&<+Ŀb.p# qHPP[:'H܆i4
MS7+Qr'-Ru3l?oW+#D3Գayllmm2j!&5W!ïmao
֌jnFk~FlsdKtFFR-RisPW[lz=z+mPb;^XBcR3αc(lHB}Vqh(_[+oo[47 xuM`ǍMN6/Ug/^'@@%_rM(Q#67Bw6ހ
H`{5pc<I>G9fmK2?O/&(Hq`GIB{ב%7fK9:DZIQbSO?gns0c!t1VO[NÍt>d)`}4AWtl NV;.8>1ͯ|ܥ
VYw OC;nv֛ݛ?1z90ǣg󑅁eSzW>L"pR?ǈ^+^˺Q%2뿘ޭ07ؘ<":6%&yL9cx|Ƴ!]%?g' |M>~-C/c[ejᥳ vjXns>\ҭA^Q:) =T $Kct̓lyTi};)gy>0|J,]m_;pU{or
+3VwѥKu}r\2܍w1Ihp:L${S
PJ$'[#za^Yfq?ωSr}t>L=JY8tl٩{2	%t }O84ǧ9	L?:[곀3DG5Mb$p1V"9X)}=6 :[y2{'ˌg1֜)W>F"Ej8NL=F9I8à! 1ȯOh#b7cSafgb;E*6$HRR)9띪f}!0[ʐ;a<)Ɛbc~gD/CNBφ^-&b+ 4[B:+{K,F7b*\ڨ/(0kN*9Ewt^>z6ĳpg`D*\LSi5ԅLrxvq]U
0nZ:9&R$6X+LsMY+կ0?.Kbm`CR)]L,$Rrew\ޚƁ'-VQO0zp|!9"KIY#Kj{W!B(ৠP%WdE?_>p[vw߿ Yy+ڢdPV1X{##sz}];jгTÜ6R7x^K뎺IFmOlYg>U޲x|zf^[Hi'ek|͌Aō_y"7(t,K`άܠ
@erembn'-Wu&ֶ~ÏzG	(&(ǣ~H//qqUV&(]w9DV/n|:-
12_KĈs%˒QJ fyFz~1X[RŃB'.Ow㼬Ah.z5re#sŘ͢PJYH("5j;{R^PʄuԻez
D:\Uz$XYb?_/mÃT ]
`4ɍ% #O<]۪=\p}E%J=0^S6p|!zW41hMp#ɼ'4wdM5z_{]E|\p@ۡ94P<T,6cf0A&=BOӨUF;|tk!MN6b_yD-+lA
NLi3*|X GODT{/qUR=)9C|NήhGF1h
(^Q/avaU@lMG
sN754#Ar|[uWE[NMf1pcW-858ַm]_f`r赣*.[HAOωjȸB9<7#d]CUz0b{V4+Ve&/U3*g~eL=b:%O	00PXv]h
(n(7nוU}63z?j+.Fz(b|LAmxeD:}8Fq *.J92]Q5jYIo;]\UrimQvo˪}(]CQPxnM_n?{U}p`hs&[v"q0bGh&ۊ%Sf
8h&hFl*i&L$E׈^L2ܠm$qrqD@~Zggޟޟmn7/oi⩭Ǒ lVAK<%Muq%YAlJtb<!L-wgέ	nP׫ bht$ow+p;mP
uA?fݘFv pW2U7@
չ:'Snv'nzCbr$7!:Vksmba5㢺CPD@:2Z*uIYa-a7{~CwfD
uMAYSے<}-b@&(oXm8a[NJA}I ;MԻ/=66.4d&sq9?ksbP]SF$/V0ȧ+]e~~-,# kH:0001RW[iVmB֞oLF5.lgq̧8:G̀g{Fx
;=u׳Ѻ-	mF"U}EAֻ|9˨t<Dv;tU'E
M+Ã{[T-{1veJGVMϛ~m9*muy~7NlD:BܵnٹuhbmΈ!R`PqO#tJem; #(ϲ[&u3[{vXs]X?{f@bw?[p6{߳ A$EuI7)0>8cAo)ZO^tw9ɭ.,C)b+VmPd<!m1J_M1;;6ۋ'#+ؼ;*CXI.p[Zg cjIqq(l_g71(G#+k^$ڡr˗K3ceb8քkbk?zu]n.r篦/ŦVI=wF0b!;Ω]xaʌ,_S{.R!6ɘm]UP:D9Vu񃻩]A÷ݜ-~}:y06k8WQWhuujX<=
`f@dW~/k(vF*+DYb]}٬,_BE;-9Z+7f*\К.WϷ餢CHl7eԎGl涵Iա6BW)mlly}pRylޑFtǐ6bf30,  umuWQPT&6"z{1f83h3퓺f`g~dM0֐mymoglƬxJ}SUVZLw.l{9t3;ۛ3+&5;S\]׻+ێ}AEg5]]]A%M'};jO\xsϺƾε9k9>{jw
2\TWLo:_@1w#hs:֥ ?p׵讥_oA
֠FaXmb2= 7iYvW.EU۪,V˞+Vp嬡p]0=T`A5DHy*
(pyY
pح(NWUQej3.iX	`:K+ǂ9QǮr'YTt,X7nw_?Ati)!/=}UFWFhIfK{3iE3<Br\&roX6a#Rωc8].5UT9[FXgeO#9-]O|@w
C?Oh]?`s"HXYYs :;:;:\Lw;:q6۸(}=ܣmmb[mUT%бS{sy:"	INA95.CQjHH=En؂RQcze_>Lݭծ    IDAT^'~6;ˬ(nn$OIU.[GwCn5ׁt1x돰{ެ9ߧXmV8q\TUQan$ 4^#+콻[0Ҫ
P\m{
M=ByIUUǣ஥e!!3"4Ĉ"rqSuGZ]6Wc_$!`ͤ9[L,sE'xSKR|.G#)[
>(pBp̍0,/*j
S
 vc:<~vb2[^a
Oa\6-'&j)m*몜AK$=~瑔JH:׭ǶcmO5"9lYNL7_qrx 7q1-+ވ2ԓN|~#TvzJTb(v .)l.&  {!Mږzrr߼G2ɽ{<Ǚcy>`	$2e+A7JÎ'fͼ~u*2W吳q1 ~D % <1y,_X@`PsY7ks싫zGYwY@ff-9YK 3cɎkDѺEyDK;u;cVhGZWDF7PQ֝JԻ1u3 '/|=2-)ѝubIIJnRBHH!#ʺVfebZ ԄdbNdaq	~a&ʺlȦcEQјV3D=q~~R.TcmXCHK&={91~I,*'=UlO]~057ھ
JjKXczJ҃:5+YվQ:oCHn^"ȑJry*cȵj9lNnU	KQCvB8.JHkHk7nܸ1؅hO>!  `K&U;Wtd{Vu8ְ]!=1YĖ=)_$W.¶uҺ.g>?nVt7!/I_5<^Ƿ?
n7.%,/8
gVܲuT'g[t\_F5==ޱQFx)fҥK})h!`j\EYı^Bc ).y$WrUdwz ),}f
¨M؏2'A}q:󮽝k0z?Kr-vve"9%
W*\GٜL)fW?wIك;z.SvmYRz;o0+w_Jݩ[ͥ$<Ri tE*qe`ǪӣcLM sKBϧ[N#=T_
,ިH\f-K@sZ#eݏ)lZ0إ!c*+RVPN|tLRJkxq SYeÚJsS)Hð0+ٙUb+q_[Jb8I$DDDDDaȈ`XDDDDF,""""2b
`ɡYw+w	kgm靽U΢E)׎,\_D_8ٿE_Ovqhk;)XzP&5EY^4+w@	o,brnnGR-%b_	WfE:d_vgʖz}
q	'Vgaz6عr!+wR{7+پl!+|{)뻙gw?
WsKh-ˇvC4"z(ҁ,0IWJ-Ǟrwv{2VJDr294(-}ޞ\wQhl]ww2q{KB6),,ds
sK[ρÇ95(E.֮d{UaKrr"sžȁOnVf.O&9׻ʦЌ%u٬b.^ƪ4]k8̃>|j7SY#jvdmQ%{:-1g^?gnsi.2h0F
*SCoDTl,Q}ڤj_e8Ҡۦ.ҭQ$D.*[d 1Fi~q''3I 4Ȇf6q;m5'ǁfR^ۃVa`AlT߂eF'O+ScY1UJ>'sVܵ*quF
jؕE#⢲
'&gzRN+p\
H`lD'BQ^ifEnСZn1/]_@eYá,mhFv:nO9M¬fQX9ֳpQznʳpmoq9V#li.:x3^6tS~o[e{v]^&Yf5ٗ3jrJm~_:5aJ
nv.cl\ּm"#46N*f9A[m}vsRz!+Ps--euWrQo:5mhRs(-밚}-`$4'bt~RWPEbu]9lI1YIA׷j݆޻7 %jعV{,MU^1#WO.Jp["M,ϫs*7Ҫ&+"0
(kik;QG@,'}bOy]~تLFWe~"a謁`9#$TkIykZgQ6sH+<oPw+-`ǁؿYJEcfB\{INA	/?cHx_;j'Hm/V^dݷW:8EAqgª)h{;#=99]d;%ʼvEPX BJ	IJB
w$b١$]Iy[ώbCz=p--h,%cA/dwJ$eV1ꙙ8́$J7^<u%`NIuzrzyH$U@~Gn_A91[93|݅/MvWԘ{voN oV/:?/o"{e՞8NJᦲKڤ4js9L*wfQdME:mσ": RMqvĈ <!$)}`[j]A9EF!X0'1 +hǅP7ta#j VBd)mH0][I%{AcҒ	+!!rsʱ')"zM+v55ei؂
ֻށ~؞{ Z=.B]e]ǳ"*FxB"s8Aͮ(CJtAlbXmyay&kbڰv[ A.O77UK[_Om=aQ{
L86(bP[Qx)/(ŌHfUT(VJP*22q?p[;!b_출a%II#<Ȇ&el͉F'y&=]# .* (,ArZ4y9$(U	Lyu5C]u߻
LNօٍbD+gcj+]fX@n}b	 W-&SV^KbLH͋=6ݍ``&%+36cF.{XqXv]ڄՠ}bc@H0:7`T!g=`60 ;wXWpW2Ul#:W.rvQ]<DEuV 4jAtwpEZ#tJվw/vWNo,_ĂJ꽇d6R..ÓH
'\+7h
;ڹ6Osp'W)Q
Ƴ"d؈J(RP,O~v"su$r'<~뼽Hx]_~Ul$C7[QZ[?ID]h"5b3ya|YN$6*5g *
:܇:T(5){d8Lu^ź>>6PD%]φoӪ}#U?+ySjf͚㿁6ao/LR]T/ܵ`Vg+X2Yݫ
;=٘Uiu+#cggeԋv9û{3:k[4uY&ue0=W5Yv,_BE~'rWWPk	'!6,N*ZOa6)$&U
WmdO
ۻ}@0ȑD9d`F_ EYVGL`qwu7nu'EYړZ*%k}~~q]Dd(0XJZھ#KOٽy(Y98OIમa-g%yޖ.0@O-UqcE
,WMKgig[mV8q\TUQMuu#Amtrg{YwSQ@ApSU
pح_
y3(?wIc
w穥{5c&xmn%"!,]NLӍ|'ٛhh
%:!{	*+&Rωc8].5UT9[͡Mw{a|u\ef4}@ڎ/Edm%:-	4+.JgҜrU{.NEpRhcZYKiAĊXߎ.+Vp嬡U}7UWF5a$$D(EBI0&dW~ytX:TlyZFtJ<Vg2'% )boNe{0[t (pZhT`q-OqSXaPf80שc'!㧽
{<"(u9NDG'W%5~lgk{WL<@`ص˃#-e(SaBH#mqx^Xbh{DKau+HGVfy5"vN,'&f1˳N`OLZḌQzP fym"ŞG$+Y:7/*ݥIQK^bs{\[]H̯|S\2ھ[d)KeqL11K[pJÎw(װ/c;u4½{)9%YKY5[Agq8ld'bwu1-}Eph؈JZ2x◯#{`ޖ6]=)7nB'tfeK9Iٿ۞p&U;Wtd{Vu!7뗒E
{D~}Y^0{:zM#Cͼ=xCk_\-\޷Rz@N%!2E=p%뗑kdOfDH0ٸ(ۖ=ttRpfeK׻H{c:5jT{%~,MǆOf05.Hv=dRVk%jEԝt.'W
3W(1lX\W:($#- *vn=;L5+w_JBbaL\T{uR榦Fk`TdxQ0_lQ$'GPś:᪠`yb<7RRmd
'iMuˉ?zD,+R37T|^_l*ٙUbCn3H_1o8Bdb;0xn|_LR#Y+224	ڔ&!""""2)KX
EDDDdR0,""""#
Wv37%Wz3Hݡ\e߱:< 8¬d{'NARj2B50`j}$'}$0ȐHӘSƼ
LYAvIB|Cٜ.C36]TV=vS^^#()I8`bRW/<P"
KI)$TƄ P]P@Vdk
cM\8VÃh,/ջm$ZTeIHBV__4oOj:>Gٙ(:m!$wK]wsGM`	(|~?O ]3
0¬Tƶx+;ք
xU@q`TiObǖ8t
j=ّvRn55 s3yqªwRI""""ҽctJm?czW׮AՎjr+
`8(w9r`P~L
""Ɂx#f㢲8PA^lΰ,a{N>'ntBL)k2Pn.ŧo%pq)
0<rl0¬ }>vdCqnJ֯2ik4Ȑ`nEDDDdX 
EDDDdR0,""""#aȈ`XDDDDF,""""2b)KX
EDDDdR0,""""#aȈ`XDDDDF,""""2b)g """"#ÓO>w/ Ȁ,@ jf 
EDDDd;""""2B 
EDDDdS0,""""#aȈ`XDDDDF!s}>\a_|qG_qƍ]b7>.]_ƐEDDDDrEDDDdR0,""""#aȈ`XDDDDF,""""2b)KX
<l(wAL=]| P$>;ő.\ǌ}ۿm(ѯqo}o,[ʖes6\sϰd)ζȰ1Z0<3,}w\p^T,Og"3Sd{^Cg{ys[i1Lxq8v_ SHa	㋇;6Ŕ|f')=S;9
|y?b܉Xw.{7?z,ԪǙlʩ}c Ir?>,\@/xwx->x^0>]m[mg9p3o-M_;;xρ1w_҈蝕E󳵓(Wji.Ismΰژ%^Ìi7.q
JRx^AAO_O
5<2{Sv腏	mp}J' gV/G/&`=_ƦP>:E8~K1H1~Wwޱ3aLYK'%ish<-^y`_+!>|-"""f{f^!O\O7mf?~UAvuKRٴy?øJ~IMgra֏yZvd-iϖoRYg`mZ:I$4%)B?v}޽ܤfM~g"{wYoy|sG?dT~fnݭ/ޟmW͢_bk5>(o]βob󦟳~*}I}&K7ECK?G0Z&ΡX    IDAT
^/~>`(DGF/~W.9,d
jk9 \b+ŷ(+Jqen?`{zc}8Q<}f1{}׮?Z2޹"""r]09.7L}w2s·]待iӆeV|Yíq̙̽1>,7M$=>,L |'as
ߩgwd_GivZ]z񝹓bDsxUM<`~1G#w0W{ͳ^{>Y2u͂<zʼGb\rqC=)M%rh[ǻ:6%{fݰsn3}ٱ!pO?bp836cqO=Lz".q^?şykYDDDa&q>o:K7k{Q]Rȁoh6w'
 ߉R"||񡉖ϭ8<#
`*6>@7lݯ_^Ϟ箫45Å?&j>6&7Q}Ld{iXb?\g{8^跘bm3]Õ<Yj
ǶmfS#/{|<voۇ:q/0sM˸oG1)d4ep!9RK7x*N6!<|-fܘ>ZSDDdv0 >?p;xRy|МAq{;3X\~}}:*{uv
wVEBYOG$[MȦ8ΫLJ9iL=˖߅{_<;oX6ӏp~9=ZpWy6ƃzEDDau;q"c.: U\<NngFI?mમVo\MO0$zj5c"68wUBx&<7څIߘ8&h7'?ec@ܘg<ىs>=.^?
l{4pe/8W{c	@&]qRv
f-yN=̞DDD{wpz̓eR4){Ϯ>|/;o>(>^;;{|~7Jo٫?H f͝arw^ַ}߿z{n9C>||SW=qqAj<-Dk#s|:J 
Jzk<_|)2cG?qsyg?{G܄'Yli`Sk\jƹR>O@ŔGcZ4 
ky=i`1Wywט6ӟ@~g94G^(6nŷؖVJ"}I?-^!>l%̩C?7ķ=<6_x5lOԅB?9?HbaGo YEYx'X2ۣpNA{]jf$)y7;C余0A僒&<eL:Jɶ:i}]fvX(uƅ"{~`*fwq2;ƸҾuCo>Ijx^@ů7'i2[/ݘ0m?h"&/Ǘem~NTwFO$|iL|h_qƍ.`i"""""waȈ`XDDDDF,""""2b)KX
EDDDd
5<r0se;swaw,q;;EDDD!:fGv6|Uyq</'_eڨ*ʖe?g?e_>¯x""""CN?:m?0Fژ1Xo0ʶ8:s:z/^?}O
=x dYۗ{6)<hpI}y|6c*M
8[|ߔ+83^;}3Wd7b\='
ߛ
d{\^ͶoXv[	^ZΎ粠42er+Q:o/$Z^||tc9ç߻ČɡtŅr <^9M
<re E6)?3
̨=ņ \9ņwcˊ&{jLO?j<s?!|x(.\i
lyM~8BG\kW8rŇ+|Мp
cA g?a+oQW>=u\|e`8Óf|>Sa.Z%]0HQ`Mc?wZ,Hͫ'0Ƴ>m/8\?ŔGdlW7ϣǎeƘ&\xLcv,b:s.j=LGC8m_yt5}Ƥ~ۂ_pw;>r/	_r刈=7Mٸ`Cv&i5*cBǗ/9~	?fӡ:N^ihǗ\7ߏq-?n
6ʭd{0|/}sMM?LqL7?-78}m2>!|>j_r~.l1N7L_r5QueLt""""Ԑo&MRw?:-yC܋s/\nN1ӏ>1<6f#MW^g8ɦ{Y?4=M>v>	t6=޿_DDDdIä`.q]åOϛ^kmaR@h:\/o}t{2.ΏS3mMNø	>囿\d_&e鋭#lWς8YYGQ/`'Ldu	L"_:֏eJ	G1)x4Ի8z{7\ !bJT69YʙW('Yׅ75UӞ|9!x2:/s3'B,[Gc|K
W(^=>iq|m|?̇*9Tp{C
6ӏ>6f|e4#<Ly$iT^o"""""7$$eӣx*2~)n3l}lB[	wSkgභJX\2==pff0t6gyّ3ǆ_~;|0DW&{6c?>%qI|4:~<O=9[n?$)	 < >hl}:o#K9m{Qvƍ]>igHcqDDDDdi"""""CX7MBDDDDgXDDDDF,""""2b)KX
EDDDdR0,""""#aȈ`XDDDDF,""""2b)KX
EDDDdR0,""""#aȈ`XDDDDF,""""2b)KX
EDDDdR0,""""#aȈ`XDDDDF,""""2b)KX
EDDDdR0,""""#aȈ`XDDDDF,""""2b)KX
EDDDdR0,""""#`_O6;dVJ~JDDDDX0"5/p(=i8A,|u|ƍ79
o>h x&2_(ef76 P6m؏foxd~^ʶe/GϺٱ<FʊȀv9׏o'9c<}y.p
mM.gF{Keú97yp|i?yoDDDDd4n?ɖ_.~F`}ipy/094`XfR#a$&NpIXKx}.f`a7x^>~[
&\M S098g?ySO@I""""#0Kh,'<iyY7ᕍz73X߰uq̞k28pwJ-""""C0/s	c1cJ0|6<4G
9jXO/r[.й&""""2Y))~y/Ӧ}K`-'&'gy;uK>[opuŘby7OS1`La8%J$ìgx<y,rl)6/q{wkSS.lf&^̤xzf578w2\?9%ۘW׉Ha&ѽs{gOCMCmf+Vz=\ȖL=y0lܸ,""""|afЉ!3|.gϾr0ԩS׾6Ap
dYC23fFb /lYC25j>>Ch""""DDDDdF{2@P0,""""#aȈ`XDDDDF,""""2b}lxW_`G1,X40?zyc0f^aͯk=R2~GiFK㇛_`
j4Ǽ:[Agcg垼r8C6[Rٓ1|Ha.kf9?$"R_ e_y]8@/svғ<\/yeMxEvs?&CDIyhYYIuo/Gx ?̬yÓ(
<K3c_vXHݓ<}?,tai W+z?\ 6)yOD2+¯^NX&@wS"""2|u+\fʌtgxૼ%?GJѬ<XΛ5bܛ9[)OB<sW3r93?`7P,`Ym9ggA똴#'k~#h@3Lz	&}xxu3wf
6oF},A޿(Wa۾c83W%Ĭ)5/7x)Õ#=>^!# ~M&+!&yrWIscoEDDd&2c>܊UcCxߟ!sxV
z(G8ÄY<q&7n@-7Jyu2:
8f#X8;IyZ0Wu9zCxWU&{6TNtHmлFk?4*9]vI\rx1ΡWP@)
[`%ďK霛	`s`	)\^ė<J3yG53j7:FuJ
ñ>:]Uxza,nrP~P'',Z߉0gLd*6Y[kqfyŠ?XHq)L4mil2;B8(щJ>n[lxpǺ9#22D?Ѵvۨ{HDg>]p·#RRQbTd~^Vm)ƒabF=*~Y]lZP-s60 [0=cJ]aP	S\/q-K,|N!'j ͏Mh I-zb[,jHof-A2m]7~;@
DcOPBzHAXtxp\E*G=E扞gy'=s8	Tw^k'D4u}oS$'\vUMÓoبPWWgEDD4o0{{dusDI8O7H[S|Yp6e8q0>v7Z+(qgc53lb*.Z׿Ȍ{'*i]>n1>Y_|jS|Wi#02žNڤ]ia%K,6p@
̂ò4Y,׾>	1'y#7Ι7euѸ}ډ[q<Zl,"[v?skxg0A}u!jhqY!ga,$
x1H.<31b)p.bprM"y>E8;{cMc^{N)Ǉ#
<A=/퉈H1*a#F3C}y	`5vpp~ܟd(4v5j4\yK1\Hϙ*5:Y*^Fx<GFqQnޯ0O51zCəv6ΑPzpwY6~jF,ڞc1kob9'ǌq"B.4GN,xMkn&"""_cmjchi'<'JpHnZ|개8́F	Qpl
^Hwz[jp98ݪo&;b467{:"\
TgqP8#G;yMM9{u o:J׈zrRpe*ų,I7F=OIE=hD|𫴴nG55^}Us݉ka,4bmf{
|?0ecI[9b<"J=ſ&)N1&`xNg?Zpװuo KwO'"_p [k
 C<fQO``x })<6n0پ5̎yz^8h==L1{hiO	xm}qх#P%ctޑ6*+^ts75[sJ2aKuAX'`b3\_ku`__j^aCEO_{zfF65ׅdfffEuq>,7cJj_eMDDDDY6ɓlܸ?WIgl/Qt^1
`z'IcǓ;l""""b33WWCDDDDUvEDDDDnDaXDDDDLKaXDDDDLKaXDDDDLKaXDDDDLKaXDDDDLKaXDDDDL(>ydKX2333S"DDDDD
Ac""""bZ
""""bZ
""""bZ
""""bZ
""""bZ
""""b;  IDATZ
""""bZ
""""bZ
""""bZ
""""bZ
""""bZ
""""bZ
""""bZ
""""bZ. )^kwN']mol.GDDD-)ts%Oe"}r+Ke^%f.Ose:{Gf-Vtct.*,YZe6ΥB#"""R.seBQPeV.CDDD]蓋Ϸdi9hVZDDDP..
""""bZ
""""bZ
""""bZ
""""bZ
""""bZ
z~C<Xr0p6oiN}&X~YFXDDDH)d><d +ｗ[js_CDDDDhHL+cP{ǧbZ6{G^zO5>V[kacR.}<x3ӬP[[hG3Xwg)Z釿A>mw?nwP}Ϳ\)H^}nxw?mSV`]	Q_z~ww~r`X?hzm$˵izyS\){.q= ,"""RJ#[ipCѣdyˇd.;ky4op̯9Jpzt`""""R,J#_?~4f㣛xgW<r/g$ĥk?e&LbU1<K|Y ˹k?Cf%2p""""b&xd
o(EfOo?X򥷷<)J%XmX!k;ƮPi-|uTuoe|ڵVة |EDDDJYIa< owQ`۸U<2n/MdQWg$SIUWeXneXY1
S-_<[@gh}3h}j~ZG4	AypCj?Oߠzw9:ƮMy""""rs,)tsGTmɏ8ʶB!"""RJbLBDDDDPRRRRR*0\6)f.O.CDDD]~[\2<B!"""R.o>+-pҔ:3|iPrDDDDJ^] y~99Bs۬c>
]e+t9""""%(ðPtc"""""°°°	/ <    IENDB`
**-****-****-****-**
.github/workflows/release.yml
name: Publish to PyPI
on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

**-****-****-****-**
.github/workflows/pre_release.yml
name: Publish to Test PyPI
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository testpypi dist/*

**-****-****-****-**
.github/workflows/unittesting.yml
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Databases
      run: |
        sudo systemctl start mysql
        while ! mysqladmin ping -h"127.0.0.1" -P3306 --silent; do
            sleep 1
        done
        mysql -uroot -proot -e "create database flask_blogging;"
        sudo systemctl start postgresql.service
        pg_isready
        sudo -u postgres psql -c "create database flask_blogging;"
        sudo -u postgres psql -c "alter user postgres password 'postgres';"
    - name: Install dependencies
      run: |
        sudo apt-get install -y python3-dev default-libmysqlclient-dev build-essential
        python -m pip install --upgrade pip wheel
        python -m pip install flake8 nose2 mysqlclient psycopg2 flask_sqlalchemy moto
        if [ -f Requirements.txt ]; then pip install -r Requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with nose2
      run: |
        nose2 --with-coverage --coverage flask_blogging -v

**-****-****-****-**
flask_blogging/signals.py
"""
    The flask_blogging signals module

"""


import blinker

signals = blinker.Namespace()

engine_initialised = signals.signal("engine_initialised", doc="""\
Signal send by the ``BloggingEngine`` after the object is initialized.
The arguments passed by the signal are:

:param app: The Flask app which is the sender
:type app: object
:keyword engine: The blogging engine that was initialized
:type engine: object
""")

post_processed = signals.signal("post_processed", doc="""\
Signal sent when a post is processed (i.e., the markdown is converted
to html text). The arguments passed along with this signal are:

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param post: The post object which was processed
:type post: dict
:param render: Flag to denote if the post is to be rendered or not
:type render: bool
""")

page_by_id_fetched = signals.signal("page_by_id_fetched", doc="""\
Signal sent when a blog page specified by ``id`` is fetched,
and prior to the post being processed.

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param post: The post object which was fetched
:type post: dict
:param meta: The metadata associated with that page
:type meta: dict
""")
page_by_id_processed = signals.signal("page_by_id_generated", doc="""\
Signal sent when a blog page specified by ``id`` is fetched,
and prior to the post being processed.

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param post: The post object which was processed
:type post: dict
:param meta: The metadata associated with that page
:type meta: dict
""")

posts_by_tag_fetched = signals.signal("posts_by_tag_fetched", doc="""\
Signal sent when posts are fetched for a given tag but before processing

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched with a given tag
:type posts: list
:param meta: The metadata associated with that page
:type meta: dict
""")

posts_by_tag_processed = signals.signal("posts_by_tag_generated", doc="""\
Signal sent after posts for a given tag were fetched and processed

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched and processed with a given tag
:type posts: list
:param meta: The metadata associated with that page
:type meta: dict
""")

posts_by_author_fetched = signals.signal("posts_by_author_fetched", doc="""\
Signal sent after posts by an author were fetched but before processing

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched with a given author
:type posts: list
:param meta: The metadata associated with that page
:type meta: dict
""")
posts_by_author_processed = signals.signal("posts_by_author_generated",
                                           doc="""\
Signal sent after posts by an author were fetched and processed

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched and processed with a given author
:type posts: list
:param meta: The metadata associated with that page
:type meta: dict
""")

index_posts_fetched = signals.signal("index_posts_fetched", doc="""\
Signal sent after the posts for the index page are fetched

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched for the index page
:type posts: list
:param meta: The metadata associated with that page
:type meta: dict
""")

index_posts_processed = signals.signal("index_posts_processed", doc="""\
Signal sent after the posts for the index page are fetched and processed

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched and processed with a given author
:type posts: list
:param meta: The metadata associated with that page
:type meta: dict
""")

feed_posts_fetched = signals.signal("feed_posts_fetched", doc="""\
Signal send after feed posts are fetched

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched and processed with a given author
:type posts: list
""")
feed_posts_processed = signals.signal("feed_posts_processed", doc="""\
Signal send after feed posts are processed

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param feed: Feed of post fetched and processed
:type feed: list
""")

sitemap_posts_fetched = signals.signal("sitemap_posts_fetched", doc="""\
Signal send after posts are fetched

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched and processed with a given author
:type posts: list
""")
sitemap_posts_processed = signals.signal("sitemap_posts_processed", doc="""\
Signal send after posts are fetched and processed

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param posts: Lists of post fetched and processed with a given author
:type posts: list
""")

editor_post_saved = signals.signal("editor_post_saved", doc="""\
Signal sent after a post was saved during the POST request

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param post_id: The id of the post that was deleted
:type post_id: int
:param user: The user object
:type user: object
:param post: The post that was deleted
:type post: object

""")
editor_get_fetched = signals.signal("editor_get_fetched", doc="""\
Signal sent after fetching the post during the GET request

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param post_id: The id of the post that was deleted
:type post_id: int
:param form: The form prepared for the editor display
:type form: object
""")

post_deleted = signals.signal("post_deleted", doc="""\
The signal sent after the post is deleted.

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param post_id: The id of the post that was deleted
:type post_id: int
:param post: The post that was deleted
:type post: object
""")

blueprint_created = signals.signal("blueprint_created", doc="""\
The signal sent after the blueprint is created. A good time to
add other views to the blueprint.

:param app: The Flask app which is the sender
:type app: object
:param engine: The blogging engine that was initialized
:type engine: object
:param blueprint: The blog app blueprint
:type blueprint: object

""")

sqla_initialized = signals.signal("sqla_initialized", doc="""\
Signal sent after the SQLAStorage object is initialized

:param sqlastorage: The SQLAStorage object
:type sqlastorage: object
:param engine: The blogging engine that was initialized
:type engine: object
:param table_prefix: The prefix to use for tables
:type table_prefix: str
:param meta: The metadata for the database
:type meta: object
:param bind: The bind value in the multiple db scenario.
:type bind: object
""")

**-****-****-****-**
flask_blogging/__init__.py
from .engine import BloggingEngine
from .processor import PostProcessor
from .sqlastorage import SQLAStorage
from .storage import Storage


"""
Flask-Blogging is a Flask extension to add blog support to your
web application. This extension uses Markdown to store and then
render the webpage.

Author: Gouthaman Balaraman

Date: June 1, 2015
"""

__author__ = 'Gouthaman Balaraman'
__version__ = '2.0.0.post2'

**-****-****-****-**
flask_blogging/processor.py
import re
try:
    from builtins import object
except ImportError:
    pass
import markdown
from markdown.extensions.meta import MetaExtension
from flask import url_for
from flask_login import current_user
from slugify import slugify


class MathJaxPattern(markdown.inlinepatterns.Pattern):

    def __init__(self):
        markdown.inlinepatterns.Pattern.__init__(self,
                                                 r'(?<!\\)(\$\$?)(.+?)\2')

    def handleMatch(self, m):
        node = markdown.util.etree.Element('mathjax')
        node.text = markdown.util.AtomicString(m.group(2) + m.group(3) +
                                               m.group(2))
        return node


class MathJaxExtension(markdown.Extension):
    def extendMarkdown(self, md, md_globals):
        # Needs to come before escape matching because \ is pretty important
        # in LaTeX
        md.inlinePatterns.add('mathjax', MathJaxPattern(), '<escape')


def makeExtension(configs=[]):
    return MathJaxExtension(configs)


class PostProcessor(object):

    _markdown_extensions = [MathJaxExtension(), MetaExtension()]

    @staticmethod
    def create_slug(title):
        return slugify(title)

    @staticmethod
    def extract_images(post):
        regex = re.compile(r'<\s*img [^>]*src="([^"]+)')
        return regex.findall(post["rendered_text"])

    @classmethod
    def construct_url(cls, post):
        url = url_for("blogging.page_by_id", post_id=post["post_id"],
                      slug=cls.create_slug(post["title"]))
        return url

    @classmethod
    def render_text(cls, post):
        md = markdown.Markdown(extensions=cls.all_extensions())
        post["rendered_text"] = md.convert(post["text"])
        post["meta"] = md.Meta

    @classmethod
    def is_author(cls, post, user):
        return user.get_id() == u''+str(post['user_id'])

    @classmethod
    def process(cls, post, render=True):
        """
        This method takes the post data and renders it
        :param post:
        :param render:
        :return:
        """
        post["slug"] = cls.create_slug(post["title"])
        post["editable"] = cls.is_author(post, current_user)
        post["url"] = cls.construct_url(post)
        post["priority"] = 0.8
        if render:
            cls.render_text(post)
            post["meta"]["images"] = cls.extract_images(post)

    @classmethod
    def all_extensions(cls):
        return cls._markdown_extensions

    @classmethod
    def set_custom_extensions(cls, extensions):
        if type(extensions) == list:
            cls._markdown_extensions.extend(extensions)

**-****-****-****-**
flask_blogging/forms.py
from flask_wtf import FlaskForm
from wtforms import StringField, TextAreaField, SubmitField, BooleanField
from wtforms.validators import DataRequired


class BlogEditor(FlaskForm):
    title = StringField("title", validators=[DataRequired()])
    text = TextAreaField("text", validators=[DataRequired()])
    tags = StringField("tags", validators=[DataRequired()])
    draft = BooleanField("draft", default=False)
    submit = SubmitField("submit")

**-****-****-****-**
flask_blogging/engine.py
"""
The BloggingEngine module.
"""
try:
    from builtins import object
except ImportError:
    pass
from .processor import PostProcessor
from flask_principal import Principal, Permission, RoleNeed
from .signals import engine_initialised, post_processed, blueprint_created
from flask_fileupload import FlaskFileUpload


class BloggingEngine(object):
    """
    The BloggingEngine is the class for initializing the blog support for your
    web app. Here is an example usage:

    .. code:: python

        from flask import Flask
        from flask_blogging import BloggingEngine, SQLAStorage
        from sqlalchemy import create_engine

        app = Flask(__name__)
        db_engine = create_engine("sqlite:////tmp/sqlite.db")
        meta = MetaData()
        storage = SQLAStorage(db_engine, metadata=meta)
        blog_engine = BloggingEngine(app, storage)
    """

    def __init__(self, app=None, storage=None, post_processor=None,
                 extensions=None, cache=None, file_upload=None):
        """

        :param app: Optional app to use
        :type app: object
        :param storage: The blog storage instance that implements the
         ``Storage`` class interface.
        :type storage: object
        :param post_processor: (optional) The post processor object. If none
         provided, the default post processor is used.
        :type post_processor: object
        :param extensions: (optional) A list of markdown extensions to add to
         post processing step.
        :type extensions: list
        :param cache: (Optional) A Flask-Cache object to enable caching
        :type cache: Object
        :param file_upload: (Optional) A FileUpload object from
         flask_fileupload extension
        :type file_upload: Object
        :return:
        """
        self.app = None
        self.storage = storage
        self.config = None
        self.ffu = None
        self.cache = cache
        self._blogger_permission = None
        self.post_processor = PostProcessor() if post_processor is None \
            else post_processor
        if extensions:
            self.post_processor.set_custom_extensions(extensions)
        self.user_callback = None
        self.file_upload = file_upload
        if app is not None and storage is not None:
            self.init_app(app, storage)
        self.principal = None

    @classmethod
    def _register_plugins(cls, app, config):
        plugins = config.get("BLOGGING_PLUGINS")
        if plugins:
            for plugin in plugins:
                lib = __import__(plugin, globals(), locals(), str("module"))
                lib.register(app)

    def init_app(self, app, storage=None, cache=None, file_upload=None):
        """
        Initialize the engine.

        :param app: The app to use
        :type app: Object
        :param storage: The blog storage instance that implements the
        :type storage: Object
        :param cache: (Optional) A Flask-Cache object to enable caching
        :type cache: Object
         ``Storage`` class interface.
        """

        self.app = app
        self.config = self.app.config
        self.storage = storage or self.storage
        self.file_upload = file_upload or self.file_upload
        self.cache = cache or self.cache
        self._register_plugins(self.app, self.config)

        from .views import create_blueprint
        blog_app = create_blueprint(__name__, self)
        # external urls
        blueprint_created.send(self.app, engine=self, blueprint=blog_app)
        self.app.register_blueprint(
            blog_app, url_prefix=self.config.get("BLOGGING_URL_PREFIX"))

        self.app.extensions["FLASK_BLOGGING_ENGINE"] = self  # duplicate
        self.app.extensions["blogging"] = self
        self.principal = Principal(self.app)
        engine_initialised.send(self.app, engine=self)

        if self.config.get("BLOGGING_ALLOW_FILEUPLOAD", True):
            self.ffu = self.file_upload or FlaskFileUpload(app)

    @property
    def blogger_permission(self):
        if self._blogger_permission is None:
            if self.config.get("BLOGGING_PERMISSIONS", False):
                self._blogger_permission = Permission(RoleNeed(
                    self.config.get("BLOGGING_PERMISSIONNAME", "blogger")))
            else:
                self._blogger_permission = Permission()
        return self._blogger_permission

    def user_loader(self, callback):
        """
        The decorator for loading the user.

        :param callback: The callback function that can load a user given a
         unicode ``user_id``.
        :return: The callback function
        """
        self.user_callback = callback
        return callback

    def is_user_blogger(self):
        return self.blogger_permission.require().can()

    def get_posts(self, count=10, offset=0, recent=True, tag=None,
                  user_id=None, include_draft=False, render=False):
        posts = self.storage(count, offset, recent, tag, user_id,
                             include_draft)
        for post in posts:
            self.process_post(post, render=False)

    def process_post(self, post, render=True):
        """
        A high level view to create post processing.
        :param post: Dictionary representing the post
        :type post: dict
        :param render: Choice if the markdown text has to be converted or not
        :type render: bool
        :return:
        """
        post_processor = self.post_processor
        post_processor.process(post, render)
        try:
            author = self.user_callback(post["user_id"])
        except Exception:
            raise Exception("No user_loader has been installed for this "
                            "BloggingEngine. Add one with the "
                            "'BloggingEngine.user_loader' decorator.")
        if author is not None:
            post["user_name"] = self.get_user_name(author)
        post_processed.send(self.app, engine=self, post=post, render=render)

    @classmethod
    def get_user_name(cls, user):
        user_name = user.get_name() if hasattr(user, "get_name") else str(user)
        return user_name

**-****-****-****-**
flask_blogging/utils.py
def ensureUtf(s, encoding='utf8'):
    """Converts input to unicode if necessary.
    If `s` is bytes, it will be decoded using the `encoding` parameters.
    This function is used for preprocessing /source/ and /filename/ arguments
    to the builtin function `compile`.
    """
    # In Python2, str == bytes.
    # In Python3, bytes remains unchanged, but str means unicode
    # while unicode is not defined anymore
    if type(s) == bytes:
        return s.decode(encoding, 'ignore')
    else:
        return s

**-****-****-****-**
flask_blogging/storage.py
try:
    from builtins import object
except ImportError:
    pass


class Storage(object):

    def save_post(self, title, text, user_id, tags, draft=False,
                  post_date=None, last_modified_date=None, meta_data=None,
                  post_id=None):
        """
        Persist the blog post data. If ``post_id`` is ``None`` or ``post_id``
        is invalid, the post must be inserted into the storage. If ``post_id``
        is a valid id, then the data must be updated.

        :param title: The title of the blog post
        :type title: str
        :param text: The text of the blog post
        :type text: str
        :param user_id: The user identifier
        :type user_id: str
        :param tags: A list of tags
        :type tags: list
        :param draft: If the post is a draft of if needs to be published.
        :type draft: bool
        :param post_date: (Optional) The date the blog was posted (default
         datetime.datetime.utcnow())
        :type post_date: datetime.datetime
        :param last_modified_date: (Optional) The date when blog was last
         modified  (default datetime.datetime.utcnow())
        :type last_modified_date: datetime.datetime
        :param meta_data: The meta data for the blog post
        :type meta_data: dict
        :param post_id: The post identifier. This should be ``None`` for an
         insert call, and a valid value for update.
        :type post_id: int

        :return: The post_id value, in case of a successful insert or update.
        Return ``None`` if there were errors.
        """
        raise NotImplementedError("This method needs to be implemented by "
                                  "the inheriting class")

    def get_post_by_id(self, post_id):
        """
        Fetch the blog post given by ``post_id``

        :param post_id: The post identifier for the blog post
        :type post_id: int
        :return: If the ``post_id`` is valid, the post data is retrieved,
        else returns ``None``.
        """
        raise NotImplementedError("This method needs to be implemented by the "
                                  "inheriting class")

    def get_posts(self, count=10, offset=0, recent=True,  tag=None,
                  user_id=None, include_draft=False):
        """
        Get posts given by filter criteria

        :param count: The number of posts to retrieve (default 10). If count
         is ``None``, all posts are returned.
        :type count: int
        :param offset: The number of posts to offset (default 0)
        :type offset: int
        :param recent: Order by recent posts or not
        :type recent: bool
        :param tag: Filter by a specific tag
        :type tag: str
        :param user_id: Filter by a specific user
        :type user_id: str
        :param include_draft: Whether to include posts marked as draft or not
        :type include_draft: bool

        :return: A list of posts, with each element a dict containing values
         for the following keys: (title, text, draft, post_date,
         last_modified_date). If count is ``None``, then all the posts are
         returned.
        """
        raise NotImplementedError("This method needs to be implemented by the "
                                  "inheriting class")

    def count_posts(self, tag=None, user_id=None, include_draft=False):
        """
        Returns the total number of posts for the give filter

        :param tag: Filter by a specific tag
        :type tag: str
        :param user_id: Filter by a specific user
        :type user_id: str
        :param include_draft: Whether to include posts marked as draft or not
        :type include_draft: bool
        :return: The number of posts for the given filter.
        """
        raise NotImplementedError("This method needs to be implemented by the "
                                  "inheriting class")

    def delete_post(self, post_id):
        """
        Delete the post defined by ``post_id``

        :param post_id: The identifier corresponding to a post
        :type post_id: int
        :return: Returns True if the post was successfully deleted and False
         otherwise.
        """
        raise NotImplementedError("This method needs to be implemented by the "
                                  "inheriting class")

    @classmethod
    def normalize_tags(cls, tags):
        return [cls.normalize_tag(tag) for tag in tags]

    @staticmethod
    def normalize_tag(tag):
        return tag.upper().strip()

**-****-****-****-**
flask_blogging/sqlastorage.py
try:
    from builtins import str
except ImportError:
    pass
from collections import defaultdict, OrderedDict
import sys
import logging
import sqlalchemy as sqla
from sqlalchemy.ext.automap import automap_base
import datetime
from .storage import Storage
from .signals import sqla_initialized

this = sys.modules[__name__]
this.Post = None
this.Tag = None


def _as_int(s):
    try:
        n = int(s) if s is not None else None
        return n
    except ValueError:
        return None


class SQLAStorage(Storage):
    """
    The ``SQLAStorage`` implements the interface specified by the ``Storage``
    class. This  class uses SQLAlchemy to implement storage and retrieval of
    data from any of the databases supported by SQLAlchemy.
    """
    _db = None
    _logger = logging.getLogger("flask-blogging")

    def __init__(self, engine=None, table_prefix="", metadata=None, db=None,
                 bind=None):
        """
        The constructor for the ``SQLAStorage`` class.

        :param engine: The ``SQLAlchemy`` engine instance created by calling
        ``create_engine``. One can also use Flask-SQLAlchemy, and pass the
        engine property.
        :type engine: object
        :param table_prefix: (Optional) Prefix to use for the tables created
         (default ``""``).
        :type table_prefix: str
        :param metadata: (Optional) The SQLAlchemy MetaData object
        :type metadata: object
        :param db: (Optional) The Flask-SQLAlchemy SQLAlchemy object
        :type db: object
        :param bind: (Optional) Reference the database to bind for multiple
        database scenario with binds
        :type bind: str
        """
        self._bind = bind
        if db:
            self._engine = db.get_engine(db.get_app(), bind=self._bind)
            self._metadata = db.metadata
        else:
            if engine is None:
                raise ValueError("Both db and engine args cannot be None")
            self._engine = engine
            self._metadata = metadata or sqla.MetaData()
        self._info = {} if self._bind is None else {"bind_key": self._bind}
        self._table_prefix = table_prefix

        self._metadata.reflect(bind=self._engine)
        self._create_all_tables()

        # automap base and restrict to the required tables here.
        table_suffix = ['post', 'tag', 'user_posts', 'tag_posts']
        table_names = [self._table_name(t) for t in table_suffix]
        self._metadata.create_all(bind=self._engine, tables=self.all_tables)
        meta = sqla.MetaData()
        meta.reflect(bind=self._engine, only=table_names)
        self._Base = automap_base(metadata=meta)
        self._Base.prepare()
        self._inject_models()

        sqla_initialized.send(self, engine=self._engine,
                              table_prefix=self._table_prefix,
                              meta=self.metadata,
                              bind=self._bind)

    def _inject_models(self):
        global this
        this.Post = getattr(self._Base.classes, self._table_name("post"))
        this.Post.__name__ = 'Post'
        this.Tag = getattr(self._Base.classes, self._table_name("tag"))
        this.Tag.__name__ = 'Tag'

    @property
    def metadata(self):
        return self._metadata

    @property
    def post_table(self):
        return self._post_table

    @property
    def post_model(self):
        return getattr(self._Base.classes, self._table_name("post"))

    @property
    def tag_model(self):
        return getattr(self._Base.classes, self._table_name("tag"))

    @property
    def tag_table(self):
        return self._tag_table

    @property
    def tag_posts_table(self):
        return self._tag_posts_table

    @property
    def user_posts_table(self):
        return self._user_posts_table

    @property
    def all_tables(self):
        return [self._post_table, self._tag_table,
                self._user_posts_table, self._tag_posts_table]

    @property
    def engine(self):
        return self._engine

    def save_post(self, title, text, user_id, tags, draft=False,
                  post_date=None, last_modified_date=None, meta_data=None,
                  post_id=None):
        """
        Persist the blog post data. If ``post_id`` is ``None`` or ``post_id``
        is invalid, the post must be inserted into the storage. If ``post_id``
        is a valid id, then the data must be updated.

        :param title: The title of the blog post
        :type title: str
        :param text: The text of the blog post
        :type text: str
        :param user_id: The user identifier
        :type user_id: str
        :param tags: A list of tags
        :type tags: list
        :param draft: (Optional) If the post is a draft of if needs to be
         published. (default ``False``)
        :type draft: bool
        :param post_date: (Optional) The date the blog was posted (default
         datetime.datetime.utcnow() )
        :type post_date: datetime.datetime
        :param last_modified_date: (Optional) The date when blog was last
         modified  (default datetime.datetime.utcnow() )
        :type last_modified_date: datetime.datetime
        :param post_id: (Optional) The post identifier. This should be ``None``
         for an insert call,
         and a valid value for update. (default ``None``)
        :type post_id: str

        :return: The post_id value, in case of a successful insert or update.
         Return ``None`` if there were errors.
        """
        new_post = post_id is None
        post_id = _as_int(post_id)
        current_datetime = datetime.datetime.utcnow()
        draft = 1 if draft is True else 0
        post_date = post_date if post_date is not None else current_datetime
        last_modified_date = last_modified_date if last_modified_date is not \
            None else current_datetime

        with self._engine.begin() as conn:
            try:
                if post_id is not None:  # validate post_id
                    exists_statement = sqla.select([self._post_table]).where(
                        self._post_table.c.id == post_id)
                    exists = \
                        conn.execute(exists_statement).fetchone() is not None
                    post_id = post_id if exists else None
                post_statement = \
                    self._post_table.insert() if post_id is None else \
                    self._post_table.update().where(
                        self._post_table.c.id == post_id)
                post_statement = post_statement.values(
                    title=title, text=text, post_date=post_date,
                    last_modified_date=last_modified_date, draft=draft
                )

                post_result = conn.execute(post_statement)
                post_id = post_result.inserted_primary_key[0] \
                    if post_id is None else post_id
                self._save_tags(tags, post_id, conn)
                self._save_user_post(user_id, post_id, conn)

            except Exception as e:
                self._logger.exception(str(e))
                post_id = None
        return post_id

    @classmethod
    def _serialise_posts_and_tags_from_joined_rows(cls, joined_rows):
        """
        Translates multiple rows of joined post and tag information
        into the dictionary format expected by flask-blogging.
        There will be one row per post/tag pairing.
        """
        posts_by_id = OrderedDict()
        tags_by_post_id = defaultdict(list)
        for joined_row in joined_rows:
            post_id = joined_row.post_id
            post = cls._serialise_post_from_joined_row(joined_row)
            posts_by_id[post_id] = post
            tags_by_post_id[post_id].append(joined_row.tag_text)

        for id, post in posts_by_id.items():
            tags = tags_by_post_id.get(id)
            if tags:
                post["tags"] = tags

        return [post for post in posts_by_id.values()]

    @staticmethod
    def _serialise_post_from_joined_row(joined_row):
        return dict(
            post_id=joined_row.post_id,
            title=joined_row.post_title,
            text=joined_row.post_text,
            post_date=joined_row.post_post_date,
            last_modified_date=joined_row.post_last_modified_date,
            draft=joined_row.post_draft,
            user_id=joined_row.user_posts_user_id
        )

    def get_post_by_id(self, post_id):
        """
        Fetch the blog post given by ``post_id``

        :param post_id: The post identifier for the blog post
        :type post_id: str
        :return: If the ``post_id`` is valid, the post data is retrieved, else
         returns ``None``.
        """
        r = None
        post_id = _as_int(post_id)
        with self._engine.begin() as conn:
            try:
                post_statement = sqla.select([self._post_table]) \
                    .where(self._post_table.c.id == post_id) \
                    .alias('post')

                joined_statement = post_statement.join(self._tag_posts_table) \
                    .join(self._tag_table) \
                    .join(self._user_posts_table) \
                    .alias('join')

                # Note this will retrieve one row per tag
                all_rows = conn.execute(
                    sqla.select([joined_statement])
                ).fetchall()
                r = self._serialise_posts_and_tags_from_joined_rows(
                    all_rows
                )[0]

            except Exception as e:
                self._logger.exception(str(e))
                r = None
        return r

    def get_posts(self, count=10, offset=0, recent=True, tag=None,
                  user_id=None, include_draft=False):
        """
        Get posts given by filter criteria

        :param count: The number of posts to retrieve (default 10)
        :type count: int
        :param offset: The number of posts to offset (default 0)
        :type offset: int
        :param recent: Order by recent posts or not
        :type recent: bool
        :param tag: Filter by a specific tag
        :type tag: str
        :param user_id: Filter by a specific user
        :type user_id: str
        :param include_draft: Whether to include posts marked as draft or not
        :type include_draft: bool

        :return: A list of posts, with each element a dict containing values
         for the following keys: (title, text, draft, post_date,
         last_modified_date). If count is ``None``, then all the posts are
         returned.
        """
        user_id = str(user_id) if user_id else user_id

        with self._engine.begin() as conn:
            try:
                # post_statement ensures the correct posts are selected
                # in the correct order
                post_statement = sqla.select([self._post_table])
                post_filter = self._get_filter(
                    tag, user_id, include_draft, conn
                )

                if post_filter is not None:
                    post_statement = post_statement.where(post_filter)
                if count:
                    post_statement = post_statement.limit(count)
                if offset:
                    post_statement = post_statement.offset(offset)

                post_ordering = \
                    sqla.desc(self._post_table.c.post_date) if recent \
                    else self._post_table.c.post_date
                post_statement = post_statement.order_by(post_ordering)
                post_statement = post_statement.alias('post')

                # joined_statement ensures other data is retrieved
                joined_statement = post_statement.join(self._tag_posts_table) \
                    .join(self._tag_table) \
                    .join(self._user_posts_table) \
                    .alias('join')

                joined_ordering = \
                    sqla.desc(joined_statement.c.post_post_date) if recent \
                    else joined_statement.c.post_post_date

                joined_statement = sqla.select([joined_statement]) \
                    .order_by(joined_ordering)
                all_rows = conn.execute(joined_statement).fetchall()
                result = \
                    self._serialise_posts_and_tags_from_joined_rows(all_rows)
            except Exception as e:
                self._logger.exception(str(e))
                result = []

        return result

    def count_posts(self, tag=None, user_id=None, include_draft=False):
        """
        Returns the total number of posts for the give filter

        :param tag: Filter by a specific tag
        :type tag: str
        :param user_id: Filter by a specific user
        :type user_id: str
        :param include_draft: Whether to include posts marked as draft or not
        :type include_draft: bool
        :return: The number of posts for the given filter.
        """
        result = 0
        with self._engine.begin() as conn:
            try:
                count_statement = sqla.select([sqla.func.count()]). \
                    select_from(self._post_table)
                sql_filter = self._get_filter(tag, user_id, include_draft,
                                              conn)
                count_statement = count_statement.where(sql_filter)
                result = conn.execute(count_statement).scalar()
            except Exception as e:
                self._logger.exception(str(e))
                result = 0
        return result

    def delete_post(self, post_id):
        """
        Delete the post defined by ``post_id``

        :param post_id: The identifier corresponding to a post
        :type post_id: int
        :return: Returns True if the post was successfully deleted and False
         otherwise.
        """
        status = False
        success = 0
        post_id = _as_int(post_id)
        with self._engine.begin() as conn:
            try:
                post_del_statement = self._post_table.delete().where(
                    self._post_table.c.id == post_id)
                conn.execute(post_del_statement)
                success += 1
            except Exception as e:
                self._logger.exception(str(e))
            try:
                user_posts_del_statement = self._user_posts_table.delete(). \
                    where(self._user_posts_table.c.post_id == post_id)
                conn.execute(user_posts_del_statement)
                success += 1
            except Exception as e:
                self._logger.exception(str(e))
            try:
                tag_posts_del_statement = self._tag_posts_table.delete(). \
                    where(self._tag_posts_table.c.post_id == post_id)
                conn.execute(tag_posts_del_statement)
                success += 1
            except Exception as e:
                self._logger.exception(str(e))
        status = success == 3
        return status

    def _get_filter(self, tag, user_id, include_draft, conn):
        filters = []
        if tag:
            tag = tag.upper()
            tag_statement = sqla.select([self._tag_table.c.id]).where(
                self._tag_table.c.text == tag)
            tag_result = conn.execute(tag_statement).fetchone()
            if tag_result is not None:
                tag_id = tag_result[0]
                tag_filter = sqla.and_(
                    self._tag_posts_table.c.tag_id == tag_id,
                    self._post_table.c.id == self._tag_posts_table.c.post_id
                )
                filters.append(tag_filter)

        if user_id:
            user_filter = sqla.and_(
                self._user_posts_table.c.user_id == user_id,
                self._post_table.c.id == self._user_posts_table.c.post_id
            )
            filters.append(user_filter)

        draft_filter = self._post_table.c.draft == 1 if include_draft else \
            self._post_table.c.draft == 0
        filters.append(draft_filter)
        sql_filter = sqla.and_(*filters)
        return sql_filter

    def _save_tags(self, tags, post_id, conn):

        tags = self.normalize_tags(tags)
        tag_ids = []

        for tag in tags:  # iterate over given tags
            try:
                # check if the tag exists
                statement = self._tag_table.select().where(
                    self._tag_table.c.text == tag)
                tag_result = conn.execute(statement).fetchone()
                if tag_result is None:
                    # insert if it is a new tag
                    tag_insert_statement = self._tag_table.insert().\
                        values(text=tag)
                    result = conn.execute(tag_insert_statement)
                    tag_id = result.inserted_primary_key[0]
                else:
                    # tag already exists
                    tag_id = tag_result[0]

            except sqla.exc.IntegrityError as e:
                # some database error occurred;
                tag_id = None
                self._logger.exception(str(e))

            except Exception as e:
                # unknown exception occurred
                tag_id = None
                self._logger.exception(str(e))

            if tag_id is not None:
                # for a valid tag_id
                tag_ids.append(tag_id)

                try:
                    # check if given post has tag given by tag_id
                    statement = self._tag_posts_table.select().where(
                        sqla.and_(self._tag_posts_table.c.tag_id == tag_id,
                                  self._tag_posts_table.c.post_id == post_id))
                    tag_post_result = conn.execute(statement).fetchone()

                    if tag_post_result is None:
                        # if tag_id not present for the post given by post_id
                        tag_post_statement = self._tag_posts_table.insert().\
                            values(tag_id=tag_id, post_id=post_id)
                        conn.execute(tag_post_statement)

                except sqla.exc.IntegrityError as e:
                    self._logger.exception(str(e))
                except Exception as e:
                    self._logger.exception(str(e))
        try:
            # remove tags that have been deleted
            statement = self._tag_posts_table.delete().where(
                sqla.and_(sqla.not_(
                    self._tag_posts_table.c.tag_id.in_(tag_ids)),
                    self._tag_posts_table.c.post_id == post_id
                )
            )
            conn.execute(statement)
        except Exception as e:
            self._logger.exception(str(e))

    def _save_user_post(self, user_id, post_id, conn):
        user_id = str(user_id)
        statement = sqla.select([self._user_posts_table]).where(
            self._user_posts_table.c.post_id == post_id)
        result = conn.execute(statement).fetchone()
        if result is None:
            try:
                statement = self._user_posts_table.insert().values(
                    user_id=user_id, post_id=post_id)
                conn.execute(statement)
            except Exception as e:
                self._logger.exception(str(e))
        else:
            if result[0] != user_id:
                try:
                    statement = self._user_posts_table.update().where(
                        self._user_posts_table.c.post_id == post_id). \
                        values(user_id=user_id)
                    conn.execute(statement)
                except Exception as e:
                    self._logger.exception(str(e))

    def _table_name(self, table_name):
        return self._table_prefix + table_name

    def _create_all_tables(self):
        """
        Creates all the required tables by calling the required functions.
        :return:
        """
        self._create_post_table()
        self._create_tag_table()
        self._create_tag_posts_table()
        self._create_user_posts_table()

    def _create_post_table(self):
        """
        Creates the table to store the blog posts.
        :return:
        """
        with self._engine.begin() as conn:
            post_table_name = self._table_name("post")
            if not conn.dialect.has_table(conn, post_table_name):

                self._post_table = sqla.Table(
                    post_table_name, self._metadata,
                    sqla.Column("id", sqla.Integer, primary_key=True),
                    sqla.Column("title", sqla.String(256)),
                    sqla.Column("text", sqla.Text),
                    sqla.Column("post_date", sqla.DateTime),
                    sqla.Column("last_modified_date", sqla.DateTime),
                    # if 1 then make it a draft
                    sqla.Column("draft", sqla.SmallInteger, default=0),
                    info=self._info

                )
                self._logger.debug("Created table with table name %s" %
                                   post_table_name)
            else:
                self._post_table = self._metadata.tables[post_table_name]
                self._logger.debug("Reflecting to table with table name %s" %
                                   post_table_name)

    def _create_tag_table(self):
        """
        Creates the table to store blog post tags.
        :return:
        """
        with self._engine.begin() as conn:
            tag_table_name = self._table_name("tag")
            if not conn.dialect.has_table(conn, tag_table_name):
                self._tag_table = sqla.Table(
                    tag_table_name, self._metadata,
                    sqla.Column("id", sqla.Integer, primary_key=True),
                    sqla.Column("text", sqla.String(128), unique=True,
                                index=True),
                    info=self._info
                )
                self._logger.debug("Created table with table name %s" %
                                   tag_table_name)
            else:
                self._tag_table = self._metadata.tables[tag_table_name]
                self._logger.debug("Reflecting to table with table name %s" %
                                   tag_table_name)

    def _create_tag_posts_table(self):
        """
        Creates the table to store association info between blog posts and
        tags.
        :return:
        """
        with self._engine.begin() as conn:
            tag_posts_table_name = self._table_name("tag_posts")
            if not conn.dialect.has_table(conn, tag_posts_table_name):
                tag_id_key = self._table_name("tag") + ".id"
                post_id_key = self._table_name("post") + ".id"
                self._tag_posts_table = sqla.Table(
                    tag_posts_table_name, self._metadata,
                    sqla.Column('tag_id', sqla.Integer,
                                sqla.ForeignKey(tag_id_key, onupdate="CASCADE",
                                                ondelete="CASCADE"),
                                index=True),
                    sqla.Column('post_id', sqla.Integer,
                                sqla.ForeignKey(post_id_key,
                                                onupdate="CASCADE",
                                                ondelete="CASCADE"),
                                index=True),
                    sqla.UniqueConstraint('tag_id', 'post_id', name='uix_1'),
                    info=self._info
                )
                self._logger.debug("Created table with table name %s" %
                                   tag_posts_table_name)
            else:
                self._tag_posts_table = \
                    self._metadata.tables[tag_posts_table_name]
                self._logger.debug("Reflecting to table with table name %s" %
                                   tag_posts_table_name)

    def _create_user_posts_table(self):
        """
        Creates the table to store association info between user and blog
        posts.
        :return:
        """
        with self._engine.begin() as conn:
            user_posts_table_name = self._table_name("user_posts")
            if not conn.dialect.has_table(conn, user_posts_table_name):
                post_id_key = self._table_name("post") + ".id"
                self._user_posts_table = sqla.Table(
                    user_posts_table_name, self._metadata,
                    sqla.Column("user_id", sqla.String(128), index=True),
                    sqla.Column("post_id", sqla.Integer,
                                sqla.ForeignKey(post_id_key,
                                                onupdate="CASCADE",
                                                ondelete="CASCADE"),
                                index=True),
                    sqla.UniqueConstraint('user_id', 'post_id', name='uix_2'),
                    info=self._info
                )
                self._logger.debug("Created table with table name %s" %
                                   user_posts_table_name)
            else:
                self._user_posts_table = \
                    self._metadata.tables[user_posts_table_name]
                self._logger.debug("Reflecting to table with table name %s" %
                                   user_posts_table_name)

**-****-****-****-**
flask_blogging/gcdatastore.py
import logging
from .storage import Storage
from google.cloud import datastore
import datetime
from shortuuid import ShortUUID
from operator import itemgetter


class GoogleCloudDatastore(Storage):

    def __init__(self, namespace=None):
        self._logger = logging.getLogger("flask-blogging")
        self._client = datastore.Client(namespace=namespace)

    def _get_new_post_id(self):
        key = self._client.key('PostIDCounter', 'Counter')
        query = self._client.get(key)

        if query:
            counter = dict(query)
        else:
            counter = None

        if counter:
            counter = counter["value"]+1
            key = self._client.key('PostIDCounter', 'Counter')
            task = self._client.get(key)
            task['value'] = counter
            self._client.put(task)

            return int(counter)
        else:
            # Create a new counter
            key = self._client.key('PostIDCounter', 'Counter')
            counter = datastore.Entity(key=key)
            counter.update({
                    'value': 1,
            })
            self._client.put(counter)
            return 1

    def save_post(self, title, text, user_id, tags, draft=False,
                  post_date=None, last_modified_date=None, meta_data=None,
                  post_id=None):
        if post_id is not None:
            update_op = True
        else:
            update_op = False

        post_id = post_id or self._get_new_post_id()
        current_datetime = datetime.datetime.utcnow()
        post_date = post_date or current_datetime
        last_modified_date = last_modified_date or current_datetime
        tags = self.normalize_tags(tags)
        draft = True if draft else False

        if not update_op:
            key = self._client.key('Post', int(post_id))
            post = datastore.Entity(key=key, exclude_from_indexes=['text'])
            post.update({
                    'title': title,
                    'text': text,
                    'user_id': user_id,
                    'tags': tags or [],
                    'draft': draft,
                    'post_date': post_date,
                    'last_modified_date': last_modified_date,
                    'meta_data': meta_data,
                    'post_id': int(post_id)
            })
            self._client.put(post)
            return post_id
        else:
            key = self._client.key('Post', int(post_id))
            post = self._client.get(key)
            if not post:
                post_id = self._get_new_post_id()
                key = self._client.key('Post', int(post_id))
                post = datastore.Entity(key=key, exclude_from_indexes=['text'])
            post.update({
                    'title': title,
                    'text': text,
                    'user_id': user_id,
                    'tags': tags or [],
                    'draft': draft,
                    'post_date': post_date,
                    'last_modified_date': last_modified_date,
                    'meta_data': meta_data,
                    'post_id': int(post_id)
            })
            self._client.put(post)
            return int(post_id)

    def _filter_posts_by_tag(self, tag):
        if not tag:
            return []
        else:
            query = self._client.query(kind='Post')
            query.projection = ['post_id', 'tags']
            proj_result = list(query.fetch())

            proj_result = [dict(entity) for entity in proj_result]
            ids = set()

            for entity in proj_result:
                if entity["tags"] == tag:
                    ids.add(entity["post_id"])

            return list(ids)

    def get_posts(self, count=10, offset=0, recent=True, tag=None,
                  user_id=None, include_draft=False):
        """TODO: implement cursors support, if it will be needed.
           But for the regular blog, it is overhead and
           cost savings are minimal.
        """
        query = self._client.query(kind='Post')

        if tag:
            norm_tag = self.normalize_tag(tag)
            posts_ids = self._filter_posts_by_tag(norm_tag)

            if posts_ids:
                keys = [self._client.key('Post', id) for id in posts_ids]
                posts = self._client.get_multi(keys)
            else:
                posts = []
        else:
            if user_id:
                query.add_filter('user_id', '=', user_id)
            if include_draft:
                query.add_filter('draft', '=', include_draft)
            if recent:
                query.order = ['-post_date']
            posts = list(query.fetch(offset=offset, limit=count))

        if not posts:
            return []

        res = []
        for post in posts:
            p = dict(post)
            res.append(p)

        if tag and recent:
            res = sorted(res, key=itemgetter('post_date'), reverse=True)
        elif tag and not recent:
            res = sorted(res, key=itemgetter('post_date'))

        if tag:
            res = res[offset:offset+count]

        return res

    def count_posts(self, tag=None, user_id=None, include_draft=False):
        query = self._client.query(kind='Post')

        if tag:
            norm_tag = self.normalize_tag(tag)
            query.add_filter('tags', '=', norm_tag)
        if user_id:
            query.add_filter('user_id', '=', user_id)
        if include_draft:
            query.add_filter('draft', '=', include_draft)

        posts = list(query.fetch())
        result = len(posts)

        return result

    def get_post_by_id(self, post_id):
        if post_id:
            query = self._client.query(kind='Post')
            query.add_filter('post_id', '=', int(post_id))
            post = list(query.fetch())

            if post:
                res = dict(post[0])
                return res

        return None

    def delete_post(self, post_id):
        if post_id:
            key = self._client.key('Post', int(post_id))

            try:
                self._client.delete(key)
            except Exception as ex:
                self._logger.error(str(ex))
                return False

            return True
        else:
            return False

**-****-****-****-**
flask_blogging/dynamodbstorage.py
import logging
from .storage import Storage
import boto3
from boto3.dynamodb.conditions import Key
import datetime
from shortuuid import ShortUUID
import copy


class DynamoDBStorage(Storage):
    _logger = logging.getLogger("flask-blogging")

    def __init__(self, table_prefix="", region_name=None,
                 endpoint_url=None):
        self._client = boto3.client('dynamodb',
                                    region_name=region_name,
                                    endpoint_url=endpoint_url)
        self._db = boto3.resource("dynamodb",
                                  region_name=region_name,
                                  endpoint_url=endpoint_url)
        self._table_prefix = table_prefix
        self._create_all_tables()
        self._uuid = ShortUUID()
        self._uuid.set_alphabet('23456789abcdefghijkmnopqrstuvwxyz')

    def save_post(self, title, text, user_id, tags, draft=False,
                  post_date=None, last_modified_date=None, meta_data=None,
                  post_id=None):
        try:
            current_datetime = datetime.datetime.utcnow()
            post_date = post_date or current_datetime
            post_date = self._to_timestamp(post_date)
            last_modified_date = last_modified_date or current_datetime
            tags = self.normalize_tags(tags)
            draft = 1 if draft else 0
            r = {'title': title,
                 'text': text,
                 'user_id': user_id,
                 'tags': tags,
                 'draft': draft,
                 'post_date': post_date,
                 'last_modified_date': self._to_timestamp(last_modified_date),
                 'meta_data': meta_data
                 }
            if post_id is not None:
                response = self._blog_posts_table.get_item(
                    Key={'post_id': post_id})
                r0 = response.get("Item")
                post_id = r0['post_id'] if r0 else None

            if post_id is None:
                post_id = self._uuid.uuid()
                r['post_id'] = post_id
                self._blog_posts_table.put_item(Item=r)
                self._insert_tags(tags, post_id, post_date, draft)
            else:
                expr = 'SET title = :title, #t = :text, user_id = :user_id, '\
                       'tags = :tags, draft = :draft, '\
                       'post_date = :post_date, '\
                       'last_modified_date = :last_modified_date, '\
                       'meta_data = :meta_data'
                self._blog_posts_table.update_item(
                    Key={'post_id': post_id},
                    UpdateExpression=expr,
                    ExpressionAttributeValues={
                        ':title': r['title'],
                        ':text': r['text'],
                        ':user_id': r['user_id'],
                        ':tags': r['tags'],
                        ':draft': r['draft'],
                        ':post_date': r['post_date'],
                        ':last_modified_date': r["last_modified_date"],
                        ':meta_data': r['meta_data']
                    },
                    ExpressionAttributeNames={'#t': 'text'},
                    ReturnValues="ALL_NEW"
                )

                tag_inserts = set(r['tags']) - set(r0['tags'])
                tag_deletes = set(r0['tags']) - set(r['tags'])
                self._insert_tags(tag_inserts, post_id, post_date, draft)
                self._delete_tags(tag_deletes, post_id)
        except Exception as e:
            self._logger.exception(str(e))
            post_id = None
        return post_id

    def get_posts(self, count=10, offset=0, recent=True, tag=None,
                  user_id=None, include_draft=False):
        try:
            post_ids = self._get_post_ids(count=count, offset=offset,
                                          recent=recent,
                                          tag=tag, user_id=user_id,
                                          include_draft=include_draft)
        except Exception as e:
            self._logger.exception(str(e))
            post_ids = []
        return [self.get_post_by_id(p) for p in post_ids]

    def _get_post_ids(self, count=10, offset=0, recent=True, tag=None,
                      user_id=None, include_draft=False):
        # include_draft is not supported yet
        kwargs = dict(ProjectionExpression='post_id',
                      ScanIndexForward=not recent)
        if count:
            kwargs['Limit'] = count
        table = self._blog_posts_table
        if user_id:
            kwargs.update(
                dict(IndexName='user_id_index',
                     KeyConditionExpression=Key('user_id').eq(user_id))
            )

        elif tag:
            table = self._tag_posts_table
            norm_tag = self.normalize_tag(tag)
            kwargs.update(
                dict(IndexName='tag_index',
                     KeyConditionExpression=Key('tag').eq(norm_tag))
            )
        else:
            kwargs.update(
                dict(IndexName='post_index',
                     KeyConditionExpression=Key('draft').eq(0))
            )
        if offset and offset > 0:
            kwargs2 = copy.deepcopy(kwargs)
            kwargs2['Limit'] = offset
            response = getattr(table, "query")(**kwargs2)
            last_key = response.get('LastEvaluatedKey')
        else:
            last_key = None

        if last_key:
            kwargs["ExclusiveStartKey"] = last_key
        response = getattr(table, "query")(**kwargs)
        return [p['post_id'] for p in response['Items']]

    def count_posts(self, tag=None, user_id=None, include_draft=False):
        try:
            post_ids = self._get_post_ids(count=None, offset=0, tag=tag,
                                          user_id=user_id,
                                          include_draft=include_draft)
            result = len(post_ids)
        except Exception as e:
            self._logger.exception(str(e))
            result = 0
        return result

    def get_post_by_id(self, post_id):
        try:
            response = self._blog_posts_table.get_item(
                Key={'post_id': post_id}
            )
            item = response.get('Item')
            if item:
                r = item
                r['post_date'] = self._from_timestamp(r['post_date'])
                r['last_modified_date'] = \
                    self._from_timestamp(r['last_modified_date'])
                r["draft"] = bool(r["draft"])
            else:
                r = None
        except Exception as e:
            self._logger.exception(str(e))
            r = None
        return r

    def delete_post(self, post_id):
        try:
            r = self.get_post_by_id(post_id)
            if r:
                response = self._blog_posts_table.delete_item(
                    Key={'post_id': post_id})
                self._delete_tags(r["tags"], post_id)
                return True
            else:
                return False
        except Exception as e:
            self._logger.exception(str(e))
            return False

    @staticmethod
    def _to_timestamp(date_time):
        return date_time.isoformat()

    @staticmethod
    def _from_timestamp(timestamp):
        return datetime.datetime.strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%f")

    def _table_name(self, table_name):
        return self._table_prefix + table_name

    def _create_all_tables(self):
        response = self._client.list_tables()
        table_names = response["TableNames"]
        self._create_blog_posts_table(table_names)
        self._create_tag_posts_table(table_names)

    def _create_blog_posts_table(self, table_names):
        bp_table_name = self._table_name("blog_posts")
        if bp_table_name not in table_names:
            self._client.create_table(
                TableName=bp_table_name,
                KeySchema=[{
                    'AttributeName': 'post_id',
                    'KeyType': 'HASH'
                }
                ],
                GlobalSecondaryIndexes=[
                    {
                        'IndexName': "user_id_index",
                        'KeySchema': [
                            {
                                'AttributeName': 'user_id',
                                'KeyType': 'HASH',
                            },
                            {
                                'AttributeName': 'post_date',
                                'KeyType': 'RANGE',
                            }
                        ],
                        'Projection': {
                            'ProjectionType': 'ALL'
                        },
                        'ProvisionedThroughput': {
                            'ReadCapacityUnits': 2,
                            'WriteCapacityUnits': 2
                        }
                    },
                    {
                        'IndexName': "post_index",
                        'KeySchema': [
                            {
                                'AttributeName': 'draft',
                                'KeyType': 'HASH',
                            },
                            {
                                'AttributeName': 'post_date',
                                'KeyType': 'RANGE',
                            }
                        ],
                        'Projection': {
                            'ProjectionType': 'ALL'
                        },
                        'ProvisionedThroughput': {
                            'ReadCapacityUnits': 2,
                            'WriteCapacityUnits': 2
                        }
                    }
                ],
                AttributeDefinitions=[
                    {
                        'AttributeName': 'post_id',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'user_id',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'post_date',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'draft',
                        'AttributeType': 'N'
                    },
                ],
                ProvisionedThroughput={
                    'ReadCapacityUnits': 10,
                    'WriteCapacityUnits': 10
                }
            )
        self._blog_posts_table = self._db.Table(bp_table_name)

    def _create_tag_posts_table(self, table_names):
        tp_table_name = self._table_name("tag_posts")
        if tp_table_name not in table_names:
            self._client.create_table(
                TableName=tp_table_name,
                KeySchema=[{
                    'AttributeName': 'tag_id',
                    'KeyType': 'HASH'
                }
                ],
                GlobalSecondaryIndexes=[
                    {
                        'IndexName': "tag_index",
                        'KeySchema': [
                            {
                                'AttributeName': 'tag',
                                'KeyType': 'HASH',
                            },
                            {
                                'AttributeName': 'post_date',
                                'KeyType': 'RANGE',
                            }
                        ],
                        'Projection': {
                            'ProjectionType': 'ALL'
                        },
                        'ProvisionedThroughput': {
                            'ReadCapacityUnits': 2,
                            'WriteCapacityUnits': 2
                        }
                    },
                ],
                AttributeDefinitions=[
                    {
                        'AttributeName': 'tag_id',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'tag',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'post_date',
                        'AttributeType': 'S'
                    }
                ],
                ProvisionedThroughput={
                    'ReadCapacityUnits': 10,
                    'WriteCapacityUnits': 10
                }
            )
        self._tag_posts_table = self._db.Table(tp_table_name)

    def _insert_tags(self, tags, post_id, post_date, draft):
        for t in tags:
            tag_id = "%s_%s" % (t, post_id)
            _ = self._tag_posts_table.put_item(
                Item={'tag_id': tag_id, 'tag': t, 'post_date': post_date,
                      'post_id': post_id, 'draft': draft}
            )

    def _delete_tags(self, tags, post_id):
        for t in tags:
            tag_id = "%s_%s" % (t, post_id)
            _ = self._tag_posts_table.delete_item(
                Key={'tag_id': tag_id}
            )

**-****-****-****-**
flask_blogging/views.py
from __future__ import division
try:
    from builtins import str
except ImportError:
    pass
from flask import escape
from .processor import PostProcessor
from flask_login import login_required, current_user
from flask import Blueprint, current_app, render_template, request, redirect, \
    url_for, flash, make_response
from flask_blogging.forms import BlogEditor
import math
from feedwerk.atom import AtomFeed
import datetime
from flask_principal import PermissionDenied
from .signals import page_by_id_fetched, page_by_id_processed, \
    posts_by_tag_fetched, posts_by_tag_processed, \
    posts_by_author_fetched, posts_by_author_processed, \
    index_posts_fetched, index_posts_processed, \
    feed_posts_fetched, feed_posts_processed, \
    sitemap_posts_fetched, sitemap_posts_processed, editor_post_saved, \
    post_deleted, editor_get_fetched
from .utils import ensureUtf


def _get_blogging_engine(app):
    return app.extensions["FLASK_BLOGGING_ENGINE"]


def _get_user_name(user):
    user_name = user.get_name() if hasattr(user, "get_name") else str(user)
    return user_name


def _clear_cache(cache):
    cache.delete_memoized(index)
    cache.delete_memoized(page_by_id)
    cache.delete_memoized(posts_by_author)
    cache.delete_memoized(posts_by_tag)
    cache.delete_memoized(sitemap)
    cache.delete_memoized(feed)


def _store_form_data(blog_form, storage, user, post, escape_text=True):
    title = blog_form.title.data
    text = escape(blog_form.text.data) if escape_text \
        else blog_form.text.data
    tags = blog_form.tags.data.split(",")
    draft = blog_form.draft.data
    user_id = user.get_id()
    current_datetime = datetime.datetime.utcnow()
    post_date = post.get("post_date", current_datetime)
    last_modified_date = datetime.datetime.utcnow()
    post_id = post.get("post_id")
    pid = storage.save_post(title, text, user_id, tags, draft=draft,
                            post_date=post_date,
                            last_modified_date=last_modified_date,
                            post_id=post_id)
    return pid


def _get_meta(storage, count, page, tag=None, user_id=None):
    max_posts = storage.count_posts(tag=tag, user_id=user_id)
    max_pages = math.ceil(float(max_posts)/float(count))
    max_offset = (max_pages-1)*count
    offset = min(max(0, (page-1)*count), max_offset)
    offset = offset if offset >= 0 else 0
    if (tag is None) and (user_id is None):
        prev_page = None if page <= 1 else url_for(
            "blogging.index", count=count, page=page-1)
        next_page = None if page >= max_pages else url_for(
            "blogging.index", count=count, page=page+1)
    elif tag:
        prev_page = None if page <= 1 else url_for(
            "blogging.posts_by_tag", tag=tag, count=count, page=page-1)
        next_page = None if page >= max_pages else url_for(
            "blogging.posts_by_tag", tag=tag, count=count, page=page+1)
    elif user_id:
        prev_page = None if page <= 1 else url_for(
            "blogging.posts_by_author", user_id=user_id, count=count,
            page=page-1)
        next_page = None if page >= max_pages else url_for(
            "blogging.posts_by_author", user_id=user_id, count=count,
            page=page+1)
    else:
        prev_page = next_page = None

    pagination = dict(prev_page=prev_page, next_page=next_page)
    meta = dict(max_posts=max_posts, max_pages=max_pages, page=page,
                max_offset=max_offset, offset=offset, count=count,
                pagination=pagination)
    return meta


def _is_blogger(blogger_permission):
    authenticated = current_user.is_authenticated() if \
        callable(current_user.is_authenticated) \
        else current_user.is_authenticated
    is_blogger = authenticated and \
        blogger_permission.require().can()
    return is_blogger


def index(count, page):
    """
    Serves the page with a list of blog posts

    :param count:
    :param offset:
    :return:
    """
    blogging_engine = _get_blogging_engine(current_app)
    storage = blogging_engine.storage
    config = blogging_engine.config
    count = count or config.get("BLOGGING_POSTS_PER_PAGE", 10)

    meta = _get_meta(storage, count, page)
    offset = meta["offset"]
    meta["is_user_blogger"] = _is_blogger(blogging_engine.blogger_permission)
    meta["count"] = count
    meta["page"] = page

    render = config.get("BLOGGING_RENDER_TEXT", True)
    posts = storage.get_posts(count=count, offset=offset, include_draft=False,
                              tag=None, user_id=None, recent=True)
    index_posts_fetched.send(blogging_engine.app, engine=blogging_engine,
                             posts=posts, meta=meta)
    for post in posts:
        blogging_engine.process_post(post, render=render)
    index_posts_processed.send(blogging_engine.app, engine=blogging_engine,
                               posts=posts, meta=meta)
    return render_template("blogging/index.html", posts=posts, meta=meta,
                           config=config)


def page_by_id(post_id, slug):
    blogging_engine = _get_blogging_engine(current_app)
    storage = blogging_engine.storage
    config = blogging_engine.config
    post = storage.get_post_by_id(post_id)
    meta = {}
    meta["is_user_blogger"] = _is_blogger(blogging_engine.blogger_permission)

    render = config.get("BLOGGING_RENDER_TEXT", True)
    meta["post_id"] = post_id
    meta["slug"] = slug
    page_by_id_fetched.send(blogging_engine.app, engine=blogging_engine,
                            post=post, meta=meta)
    if post is not None:
        blogging_engine.process_post(post, render=render)
        page_by_id_processed.send(blogging_engine.app, engine=blogging_engine,
                                  post=post, meta=meta)
        return render_template("blogging/page.html", post=post, config=config,
                               meta=meta)
    else:
        flash("The page you are trying to access is not valid!", "warning")
        return redirect(url_for("blogging.index"))


def posts_by_tag(tag, count, page):
    blogging_engine = _get_blogging_engine(current_app)
    storage = blogging_engine.storage
    config = blogging_engine.config
    count = count or config.get("BLOGGING_POSTS_PER_PAGE", 10)
    meta = _get_meta(storage, count, page, tag=tag)
    offset = meta["offset"]
    meta["is_user_blogger"] = _is_blogger(blogging_engine.blogger_permission)
    meta["tag"] = tag
    meta["count"] = count
    meta["page"] = page
    render = config.get("BLOGGING_RENDER_TEXT", True)
    posts = storage.get_posts(count=count, offset=offset, tag=tag,
                              include_draft=False, user_id=None, recent=True)
    posts_by_tag_fetched.send(blogging_engine.app, engine=blogging_engine,
                              posts=posts, meta=meta)
    if len(posts):
        for post in posts:
            blogging_engine.process_post(post, render=render)
        posts_by_tag_processed.send(blogging_engine.app,
                                    engine=blogging_engine,
                                    posts=posts, meta=meta)
        return render_template("blogging/index.html", posts=posts, meta=meta,
                               config=config)
    else:
        flash("No posts found for this tag!", "warning")
        return redirect(url_for("blogging.index", post_id=None))


def posts_by_author(user_id, count, page):
    blogging_engine = _get_blogging_engine(current_app)
    storage = blogging_engine.storage
    config = blogging_engine.config
    count = count or config.get("BLOGGING_POSTS_PER_PAGE", 10)
    meta = _get_meta(storage, count, page, user_id=user_id)
    offset = meta["offset"]
    meta["is_user_blogger"] = _is_blogger(blogging_engine.blogger_permission)
    meta["user_id"] = user_id
    meta["count"] = count
    meta["page"] = page

    posts = storage.get_posts(count=count, offset=offset, user_id=user_id,
                              include_draft=False, tag=None, recent=True)
    render = config.get("BLOGGING_RENDER_TEXT", True)
    posts_by_author_fetched.send(blogging_engine.app, engine=blogging_engine,
                                 posts=posts, meta=meta)
    if len(posts):
        for post in posts:
            blogging_engine.process_post(post, render=render)
        posts_by_author_processed.send(blogging_engine.app,
                                       engine=blogging_engine, posts=posts,
                                       meta=meta)
        return render_template("blogging/index.html", posts=posts, meta=meta,
                               config=config)
    else:
        flash("No posts found for this user!", "warning")
        return redirect(url_for("blogging.index", post_id=None))


@login_required
def editor(post_id):
    blogging_engine = _get_blogging_engine(current_app)
    cache = blogging_engine.cache
    if cache:
        _clear_cache(cache)
    try:
        with blogging_engine.blogger_permission.require():
            post_processor = blogging_engine.post_processor
            config = blogging_engine.config
            storage = blogging_engine.storage
            if request.method == 'POST':
                form = BlogEditor(request.form)
                if form.validate():
                    post = storage.get_post_by_id(post_id)
                    if (post is not None) and \
                        (post_processor.is_author(post, current_user)) and \
                            (str(post["post_id"]) == post_id):
                        pass
                    else:
                        post = {}
                    escape_text = config.get("BLOGGING_ESCAPE_MARKDOWN", False)
                    pid = _store_form_data(form, storage, current_user, post,
                                           escape_text)
                    editor_post_saved.send(blogging_engine.app,
                                           engine=blogging_engine,
                                           post_id=pid,
                                           user=current_user,
                                           post=post)
                    flash("Blog posted successfully!", "info")
                    slug = post_processor.create_slug(form.title.data)
                    return redirect(url_for("blogging.page_by_id", post_id=pid,
                                            slug=slug))
                else:
                    flash("There were errors in blog submission", "warning")
                    return render_template("blogging/editor.html", form=form,
                                           post_id=post_id, config=config)
            else:
                if post_id is not None:
                    post = storage.get_post_by_id(post_id)
                    if (post is not None) and \
                            (post_processor.is_author(post, current_user)):
                        tags = ", ".join(post["tags"])
                        form = BlogEditor(title=post["title"],
                                          text=post["text"], tags=tags)
                        editor_get_fetched.send(blogging_engine.app,
                                                engine=blogging_engine,
                                                post_id=post_id,
                                                form=form)
                        return render_template("blogging/editor.html",
                                               form=form, post_id=post_id,
                                               config=config)
                    else:
                        flash("You do not have the rights to edit this post",
                              "warning")
                        return redirect(url_for("blogging.index",
                                                post_id=None))

            form = BlogEditor()
            return render_template("blogging/editor.html", form=form,
                                   post_id=post_id, config=config)
    except PermissionDenied:
        flash("You do not have permissions to create or edit posts", "warning")
        return redirect(url_for("blogging.index", post_id=None))


@login_required
def delete(post_id):
    blogging_engine = _get_blogging_engine(current_app)
    cache = blogging_engine.cache
    if cache:
        _clear_cache(cache)
    try:
        post_processor = blogging_engine.post_processor
        with blogging_engine.blogger_permission.require():
            storage = blogging_engine.storage
            post = storage.get_post_by_id(post_id)
            if (post is not None) and \
                    (post_processor.is_author(post, current_user)):
                success = storage.delete_post(post_id)
                if success:
                    flash("Your post was successfully deleted", "info")
                    post_deleted.send(blogging_engine.app,
                                      engine=blogging_engine,
                                      post_id=post_id,
                                      post=post)
                else:
                    flash("There were errors while deleting your post",
                          "warning")
            else:
                flash("You do not have the rights to delete this post",
                      "warning")
            return redirect(url_for("blogging.index"))
    except PermissionDenied:
        flash("You do not have permissions to delete posts", "warning")
        return redirect(url_for("blogging.index", post_id=None))


def sitemap():
    blogging_engine = _get_blogging_engine(current_app)
    storage = blogging_engine.storage
    config = blogging_engine.config
    posts = storage.get_posts(count=None, offset=None, recent=True,
                              user_id=None, tag=None, include_draft=False)
    sitemap_posts_fetched.send(blogging_engine.app, engine=blogging_engine,
                               posts=posts)

    if len(posts):
        for post in posts:
            blogging_engine.process_post(post, render=False)
        sitemap_posts_processed.send(blogging_engine.app,
                                     engine=blogging_engine, posts=posts)
    sitemap_xml = render_template("blogging/sitemap.xml", posts=posts,
                                  config=config)
    response = make_response(sitemap_xml)
    response.headers["Content-Type"] = "application/xml"
    return response


def feed():
    blogging_engine = _get_blogging_engine(current_app)
    storage = blogging_engine.storage
    config = blogging_engine.config
    count = config.get("BLOGGING_FEED_LIMIT")
    posts = storage.get_posts(count=count, offset=None, recent=True,
                              user_id=None, tag=None, include_draft=False)

    feed = AtomFeed(
        '%s - All Articles' % config.get("BLOGGING_SITENAME",
                                         "Flask-Blogging"),
        feed_url=request.url, url=request.url_root, generator=None)

    feed_posts_fetched.send(blogging_engine.app, engine=blogging_engine,
                            posts=posts)
    if len(posts):
        for post in posts:
            blogging_engine.process_post(post, render=True)
            feed.add(post["title"], ensureUtf(post["rendered_text"]),
                     content_type='html',
                     author=post["user_name"],
                     url=config.get("BLOGGING_SITEURL", "")+post["url"],
                     updated=post["last_modified_date"],
                     published=post["post_date"])
        feed_posts_processed.send(blogging_engine.app, engine=blogging_engine,
                                  feed=feed)
    response = feed.get_response()
    response.headers["Content-Type"] = "application/xml"
    return response


def unless(blogging_engine):
    # disable caching for bloggers. They can change state!
    def _unless():
        return _is_blogger(blogging_engine.blogger_permission)
    return _unless


def cached_func(blogging_engine, func):
    cache = blogging_engine.cache
    if cache is None:
        return func
    else:
        unless_func = unless(blogging_engine)
        config = blogging_engine.config
        cache_timeout = config.get("BLOGGING_CACHE_TIMEOUT", 60)  # 60 seconds
        memoized_func = cache.memoize(
            timeout=cache_timeout, unless=unless_func)(func)
        return memoized_func


def create_blueprint(import_name, blogging_engine):

    blog_app = Blueprint("blogging", import_name, template_folder='templates')

    # register index
    index_func = cached_func(blogging_engine, index)
    blog_app.add_url_rule("/", defaults={"count": None, "page": 1},
                          view_func=index_func)
    blog_app.add_url_rule("/<int:count>/", defaults={"page": 1},
                          view_func=index_func)
    blog_app.add_url_rule("/<int:count>/<int:page>/", view_func=index_func)

    # register page_by_id
    page_by_id_func = cached_func(blogging_engine, page_by_id)
    blog_app.add_url_rule("/page/<post_id>/", defaults={"slug": ""},
                          view_func=page_by_id_func)
    blog_app.add_url_rule("/page/<post_id>/<slug>/",
                          view_func=page_by_id_func)

    # register posts_by_tag
    posts_by_tag_func = cached_func(blogging_engine, posts_by_tag)
    blog_app.add_url_rule("/tag/<tag>/", defaults=dict(count=None, page=1),
                          view_func=posts_by_tag_func)
    blog_app.add_url_rule("/tag/<tag>/<int:count>/", defaults=dict(page=1),
                          view_func=posts_by_tag_func)
    blog_app.add_url_rule("/tag/<tag>/<int:count>/<int:page>/",
                          view_func=posts_by_tag_func)

    # register posts_by_author
    posts_by_author_func = cached_func(blogging_engine, posts_by_author)
    blog_app.add_url_rule("/author/<user_id>/",
                          defaults=dict(count=None, page=1),
                          view_func=posts_by_author_func)
    blog_app.add_url_rule("/author/<user_id>/<int:count>/",
                          defaults=dict(page=1),
                          view_func=posts_by_author_func)
    blog_app.add_url_rule("/author/<user_id>/<int:count>/<int:page>/",
                          view_func=posts_by_author_func)

    # register editor
    editor_func = editor  # For now lets not cache this
    blog_app.add_url_rule('/editor/', methods=["GET", "POST"],
                          defaults={"post_id": None},
                          view_func=editor_func)
    blog_app.add_url_rule('/editor/<post_id>/', methods=["GET", "POST"],
                          view_func=editor_func)

    # register delete
    delete_func = delete  # For now lets not cache this
    blog_app.add_url_rule("/delete/<post_id>/", methods=["POST"],
                          view_func=delete_func)

    # register sitemap
    sitemap_func = cached_func(blogging_engine, sitemap)
    blog_app.add_url_rule("/sitemap.xml", view_func=sitemap_func)

    # register feed
    feed_func = cached_func(blogging_engine, feed)
    blog_app.add_url_rule('/feeds/all.atom.xml', view_func=feed_func)

    return blog_app

**-****-****-****-**
flask_blogging/templates/fileupload/base.html
<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    {% block style %}
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet"/>
    <style>
        body { padding-top: 80px;}
    </style>
    {% endblock style %}
    {% block extrastyle %}
    {% endblock extrastyle %}
    <title>
        {% block title %}
        {% endblock title %}
    </title>
</head>
<body>

    <!-- navbar header -->
    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <a href="/" class="navbar-brand">
                    {{ config.BLOGGING_SITENAME or 'Flask-Blogging'}}
                </a>
                <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
        </div>
    </div>

    <!-- main content -->
     <div class="container">
         {% block message %}
         {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                <div class="row">
                    <div class="col-md-6 col-md-offset-3">
                    <div class="alert alert-{{category}} alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        {{ message }}
                    </div>
                    </div>
                 </div>
                {% endfor %}
            {% endif %}
         {% endwith %}

         {% endblock %}
         {% block main %}
         {% endblock main %}
         {% block extramain %}
         {% endblock extramain %}
     </div>
    {% include "blogging/analytics.html" %}
    {% block js %}
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS_HTML"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <script type="text/x-mathjax-config">
          MathJax.Hub.Config({
          "HTML-CSS": {
          styles: {
          ".MathJax .mo, .MathJax .mi": {color: "black ! important"}}
          },
          tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']],processEscapes: true}
          });
    </script>
    {% endblock js %}
    {% block extrajs %}
    {% endblock extrajs %}
</body>
</html>

**-****-****-****-**
flask_blogging/templates/blogging/page.html
{% extends "blogging/base.html" %}
{% block meta %}
    {% include 'blogging/metatags.html' %}
{% endblock meta %}
{% block title %}
    {{post.title}}
{% endblock title %}

{% block main %}
{% if meta.is_user_blogger %}
    <div class="modal fade" id="confirmModal" >
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Are you sure you want to delete this post?</h4>
                </div>
                <div class="modal-footer">
                    <form action="{{ url_for('blogging.delete', post_id=post.post_id) }}" method="POST">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <input type="submit" value="Yes" class="btn btn-primary" id="confirmedDelete"/>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <div class="pull-right">
    {% if post.editable %}
        <a href="#confirmModal" data-toggle="modal" id="delete">
            <span class="glyphicon glyphicon-trash"></span>&nbsp;Delete
        </a>&nbsp&nbsp&nbsp&nbsp

        <a href="{{ url_for('blogging.editor', post_id=post.post_id) }}" id="edit">
            <span class="glyphicon glyphicon-edit"></span>&nbsp;Edit
        </a>&nbsp&nbsp&nbsp&nbsp
    {% endif %}
        <a href="{{ url_for('blogging.editor') }}" id="new">
            <span class="glyphicon glyphicon-plus"></span>&nbsp;New
        </a>
    </div>
{% endif %}


  <a href="{{ url_for('blogging.page_by_id', post_id=post.post_id, slug=post.slug) }}">
      <h1>{{ post.title }}</h1>
  </a>
    <p>Posted by <a href="{{ url_for('blogging.posts_by_author', user_id=post.user_id)}}"><em>{{post.user_name}}</em></a>
on {{post.post_date.strftime('%d %b, %Y')}}</p>
    {{post.rendered_text | safe}}

   <br>
  <!-- article tags-->
  {% if post.tags %}
    <span class="glyphicon glyphicon-tags"></span>&nbsp;&nbsp;
    {% for tag in post.tags %}
        <span class="label">
          <a href="{{ url_for('blogging.posts_by_tag', tag=tag.lower(), count=10, offset=0) }}">
          {{ tag }}
          </a>
        </span>&nbsp;&nbsp;
    {% endfor %}
    <br>
  {% endif %}
  <br>
  {% include "blogging/social_links.html" %}
  <hr>
{% include "blogging/disqus.html" %}
{% endblock main %}

**-****-****-****-**
flask_blogging/templates/blogging/index.html
{% extends "blogging/base.html" %}
{% block title %}
Blog Posts
{% endblock title %}

{% block main %}
    {% if alert %}
        <div class="alert alert-{{alert.type}}">
            <strong>{{ alert.type }}</strong> {{ alert.message }}
        </div>
    {% endif %}

    {% if meta.is_user_blogger %}
        <div class="pull-right">
            <a href="{{ url_for('blogging.editor') }}" id="new">
                <span class="glyphicon glyphicon-plus"></span>&nbsp;New
            </a>
        </div>
    {% endif %}

    {% for post in posts %}
        <a href="{{ post.url }}">
            <h1>{{ post.title }}</h1>
        </a>
        <p>Posted by <a href="{{ url_for('blogging.posts_by_author', user_id=post.user_id)}}"><em>{{post.user_name}}</em></a>
        on {{post.post_date.strftime('%d %b, %Y')}}</p>

        <!-- post tags-->
        {% if post.tags %}
            <span class="glyphicon glyphicon-tags"></span>&nbsp;&nbsp;
            {% for tag in post.tags %}
                <span class="label">
                    <a href="{{ url_for('blogging.posts_by_tag', tag=tag.lower(), count=10, offset=0) }}">
                    {{ tag }}
                    </a>
                </span>&nbsp;&nbsp;
            {% endfor %}
            <br>
        {% endif %}
        <hr>
    {% endfor %}
    {% if ((meta)  and (meta.max_pages>1)) %}
        <div class="row">
            <div class="col-md-12">
                <ul class="pager">
                    {% if meta.pagination.prev_page %}
                        <li><a href="{{meta.pagination.prev_page}}">&laquo; Prev</a></li>
                    {% else %}
                        <li class="disabled"><a href="">&laquo; Prev</a></li>
                    {% endif %}
                    {% if meta.pagination.next_page %}
                        <li><a href="{{meta.pagination.next_page}}">Next &raquo;</a></li>
                    {% else %}
                        <li class="disabled"><a href="">Next &raquo;</a></li>
                    {% endif %}

                </ul>
            </div>
        </div>
    {% endif %}
{% endblock main %}

**-****-****-****-**
flask_blogging/templates/blogging/social_links.html
<p class="small text-center" id="post-share-links">
  &nbsp;Share on:
  <a href="http://twitter.com/home?status={{ post.title | urlencode }}%20{{ request.url | urlencode }}%3Futm_source=twitter
{% if config.BLOGGING_SITENAME %}%20%23{{ config.BLOGGING_SITENAME | replace(' ', '') | urlencode }}{% endif %}
{% if config.BLOGGING_TWITTER_USERNAME %}%20{{ config.BLOGGING_TWITTER_USERNAME | urlencode }}{% endif %}"
target="_blank" title="Share on Twitter">Twitter</a>
  /
  <a href="http://www.facebook.com/sharer/sharer.php?u={{ request.url | urlencode }}%3Futm_source=facebook"
     target="_blank" title="Share on Facebook">Facebook</a>
  /
  <a href="https://plus.google.com/share?url={{ request.url | urlencode }}%3Futm_source=google%2B"
     target="_blank" title="Share on Google Plus">Google+</a>
  /
  <a href="mailto:?subject={{ post.title }}&amp;body=I thought you might like this:
  {{ post.title }}
  {{ request.url }}?utm_source=email-share" target="_blank" title="Share via Email">Email</a>
</p>

**-****-****-****-**
flask_blogging/templates/blogging/base.html
<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    {% block meta %}
    {% endblock meta %}
    {% block style %}
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet"/>
    <style>
        body { padding-top: 80px;}
    </style>
    {% endblock style %}
    {% block extrastyle %}
    {% endblock extrastyle %}
    <title>
        {% block title %}
        {% endblock title %}
    </title>
</head>
<body>

    <!-- navbar header -->
    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <a href='{{ config.BLOGGING_BRANDURL or "/"}}' class="navbar-brand">
                    {{ config.BLOGGING_SITENAME or 'Flask-Blogging'}}
                </a>
                <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
        </div>
    </div>

    <!-- main content -->
     <div class="container">
         {% block message %}
         {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                <div class="row">
                    <div class="col-md-6 col-md-offset-3">
                    <div id="alert_div" class="alert alert-{{category}} alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        {{ message }}
                    </div>
                    </div>
                 </div>
                {% endfor %}
            {% endif %}
         {% endwith %}

         {% endblock %}
         {% block main %}
         {% endblock main %}
         {% block extramain %}
         {% endblock extramain %}
     </div>
    {% include "blogging/analytics.html" %}
    {% block js %}
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS_HTML"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <script type="text/x-mathjax-config">
          MathJax.Hub.Config({
          "HTML-CSS": {
          styles: {
          ".MathJax .mo, .MathJax .mi": {color: "black ! important"}}
          },
          tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']],processEscapes: true}
          });
    </script>

    <script>
        $(document).ready(function(){
            $("#alert_div").fadeTo(3000, 500).slideUp(500, function(){
               $("#alert_div").slideUp(500);
                });
        })
    </script>

    {% endblock js %}
    {% block extrajs %}
    {% endblock extrajs %}
</body>
</html>

**-****-****-****-**
flask_blogging/templates/blogging/editor.html
{% extends 'blogging/base.html' %}
{% block extrastyle %}
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-markdown/2.10.0/css/bootstrap-markdown.min.css"
      rel="stylesheet"/>
{% endblock extrastyle %}
{% block main %}
<form class="form-horizontal" action="{{url_for('blogging.editor', post_id=post_id or None)}}" method="POST">

    {{ form.hidden_tag() }}

    <fieldset>
        <!-- Form Name -->
        <legend>Blog Editor</legend>
        <!-- Text input-->
        <div class="form-group">
            <label class="control-label col-md-offset-2  control-label input-md" for="title">
                Title
            </label>
            <div class="input-group col-md-8 col-md-offset-2">
                {{form.title(placeholder="Title", id="title", class="form-control", required="" )}}
            </div>
        </div>

        <div class="form-group">
            <div class="input-group col-md-8 col-md-offset-2">
                {{form.text(placeholder="Blog text", required="", data_provide="markdown", rows="16")}}
                <span class="help-block">
                    Learn more about <a href="http://en.wikipedia.org/wiki/Markdown" target="_blank">MarkDown</a><br>
                    {% if config.BLOGGING_ALLOW_FILEUPLOAD %}
                        <a target="_blank" href="{{ url_for("flask_fileupload.upload") }}">Upload new File</a>
                    {% endif %}
                </span>
            </div>
        </div>
        <!-- Text input-->
        <div class="form-group">
            <label class="col-md-offset-2 control-label" for="tags">Tags</label>

            <div class="input-group col-md-8 col-md-offset-2">
                {{form.tags(id="tags", placeholder="Comma separated tags", class="form-control input-md", required="")}}
            </div>
        </div>
        <!-- draft input-->
        <!--div class="form-group">
            <div class="col-md-offset-2">
                <label>
                    {{form.draft(id="draft")}} draft?
                </label>
            </div>
        </div-->
        <div class="form-group">
            <div class="col-md-offset-2">
                {{ form.submit(id="submit", class="btn btn-primary") }}
            </div>
        </div>
    </fieldset>
</form>
{% endblock main %}

{% block extrajs %}
    <script type="text/javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/marked/0.5.1/marked.min.js">
    </script>
    <script type="text/javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-markdown/2.10.0/js/bootstrap-markdown.min.js">
    </script>
 {% endblock extrajs %}

**-****-****-****-**
flask_blogging/templates/blogging/disqus.html
{% if config.BLOGGING_DISQUS_SITENAME %}
    <div class="comment">
        <div id="disqus_thread"></div> <!-- comment app container -->
    </div>
	<!-- Comment BEGIN -->
    <script type="text/javascript">
        var disqus_shortname = '{{ config.BLOGGING_DISQUS_SITENAME }}'; // required: replace example with your forum shortname
        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'https://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
     <!-- Comment END -->
{% endif %}

**-****-****-****-**
flask_blogging/templates/blogging/sitemap.xml
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">

{% for post in posts %}
  <url>
    <loc>{{ config.BLOGGING_SITEURL }}{{ post.url }}</loc>
    <priority>{{ post.priority }}</priority>
    <lastmod>{{post.last_modified_date.isoformat()}}</lastmod>
  </url>
{% endfor %}

</urlset>
**-****-****-****-**
flask_blogging/templates/blogging/metatags.html
{% block meta %}
<meta name="author" content="{{ post.user_name }}">
<meta name="keywords" content="{% if config.BLOGGING_KEYWORDS %}{% for keyword in config.BLOGGING_KEYWORDS -%}
    {{ keyword }},
{%- endfor %}{% endif %}{% if post.meta.keywords %}{% for keyword in post.meta.keywords -%}
    {{ keyword }},
{%- endfor %}{% endif%}{% for tag in post.tags -%}
    {{ tag | lower }}{{ ', ' if not loop.last }}
{%- endfor %}">
<meta property="og:type" content="article">
<meta property="og:title" content="{{ post.title }}">
{% if post.meta.summary %}
    <meta name="description" content="{{ post.meta.summary[0] }}">
    <meta property="og:description" content="{{ post.meta.summary[0] }}">
{% endif %}
{% for image in post.meta.images %}
    <meta property="og:image" content="{{ image }}">
{% endfor %}
<meta property="og:updated_time" content="{{ post.last_modified_date }}">
<meta property="og:url" content="{{ request.url }}">
<meta property="og:site_name" content="{{ config.BLOGGING_SITENAME or 'Flask-Blogging'}}">
<meta property="article:section" content="{{ post.tags[0] | title }}">
<meta property="article:published_time" content="{{ post.post_date }}">
<meta property="article:modified_time" content="{{ post.last_modified_date }}">
<meta property="article:publisher" content="{{ config.BLOGGING_SITEURL }}">
{% endblock meta %}

**-****-****-****-**
flask_blogging/templates/blogging/analytics.html
{% if config.BLOGGING_GOOGLE_ANALYTICS %}
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', '{{ config.BLOGGING_GOOGLE_ANALYTICS }}']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    /*Update Your Analytics Tracking Code to Support Display Advertising by uncommenting the following 
    instead of the above line */    
    /*ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';*/
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
{% endif %}
**-****-****-****-**
.git/config
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true
[remote "origin"]
	url = https://github.com/gouthambs/Flask-Blogging.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master

**-****-****-****-**
.git/HEAD
ref: refs/heads/master

**-****-****-****-**
.git/description
Unnamed repository; edit this file 'description' to name the repository.

**-****-****-****-**
.git/index
DIRC      Ed 1ϗd 1ϗ  n"         \㘶.ɮBޫhFGiO !.github/workflows/pre_release.yml d 1ɡd 1ɡ  n"         ;|n٤jNGT  .github/workflows/release.yml     d 1wd 1w  n"         %):
 !.github/workflows/unittesting.yml d 1̱d 1̱  n"          \S"^QT 
.gitignore        d 1d 1  n"          j{ION!0wx .gitmodules       d 1υ2d 1υ2  n"         'ST]H⒞ .travis.yml       d 1 d 1   n"         ?VCeWwCJZ LICENSE   d 1\d 1\  n"          IS&'y[g\H- MANIFEST.in       d 1d 1  n"         @^{fc!kt: 
README.rst        d 1gd 1g  n"          1OVeLJImKf޴ Requirements.txt  d 1ו#d 1ו#  n"         	]#jd2SDB[N docs/Datastore.md d 1,[d 1,[  n"         kYe͝Ƒ`e) 
docs/Makefile     d 1!d 1!  n"        F@a3ZtI'N/ docs/_static/blog_editor.png      d 1썎d 1썎  n"        d)S@(.b5T]S docs/_static/blog_page.png        d 1d 1  n"           @F|,B{} docs/_themes      d 1eId 1eI  n"         D/5F/@r docs/authors.rst  d 1Od 1O  n"         "^2ƾFfΥG;4O docs/conf.py      d 102d 102  n"         YȷjJS+J\ % docs/index.rst    d 1Kd 1K  n"         K$X)sęJ;I5 
docs/make.bat     d 1hd 1h  n"         [ADD(tػ] docs/releases.rst d 1ad 1a  n"          #]	X!q
;:Q~yl]p example/__init__.py       d 1d 1  n"         
Gƹѧ:,#=J example/blog_admin.py     d 2d 2  n"         
1%Wݞ-h| example/blog_cache.py     d 2!d 2!  n"         \#ٔ@
NA䎟 example/blog_dynamodb.py  d 2d 2  n"         	
Sρ :1 example/blog_gcdatastore.py       d 2ed 2e  n"         ̎M1+2zH NN\ example/blog_plugins.py   d 2d 2  n"         
QBիmc example/blog_roles.py     d 2	d 2	  n"          h0,S/` example/deploy/Dockerfile d 2?
d 2?
  n"         m$h;֒,$JzC,5 example/deploy/README     d 2d 2  n"          dWg&A/?Hp	 !example/deploy/docker-compose.yml d 2
vd 2
v  n"          "nEgY*r
 &example/deploy/docker-requirements.txt    d 2%d 2%  n"          V|嘌ɶ/UIN< example/deploy/uwsgi.ini  d 2?d 2?  n"         ;'@Z7i example/main.py   d 2d 2  n"          #]	X!q
;:Q~yl]p example/plugins/__init__.py       d 2a9d 2a9  n"         K^l;.*/%յw"G $example/plugins/add_view/__init__.py      d 2 Rd 2 R  n"          #]	X!q
;:Q~yl]p )example/plugins/similar_posts/__init__.py d 2Ӊd 2Ӊ  n"         ,5SG
RºS㬀.L %example/plugins/tag_cloud/__init__.py     d 2d 2  n"         7+J˃>+Rv?z^ flask_blogging/__init__.py        d 2pd 2p  n"         3Џ	@#O,/F !flask_blogging/dynamodbstorage.py d 2d 2  n"         G:O]$B[@$Һ{ flask_blogging/engine.py  d 2Fd 2F  n"         3/c,r^TdO3) flask_blogging/forms.py   d 2 d 2   n"         _;f6lsH~	@ flask_blogging/gcdatastore.py     d 2"/\d 2"/\  n"         
0mI]ȬOuU flask_blogging/processor.py       d 2#xd 2#x  n"         %[It?o<? flask_blogging/signals.py d 2&od 2&o  n"         b507!4R flask_blogging/sqlastorage.py     d 2(qd 2(q  n"         cpBtW._6=8 flask_blogging/storage.py d 2+d 2+  n"         )Ǘ 5.
J 0flask_blogging/templates/blogging/analytics.html  d 2-d 2-  n"         `l+0@1Ra +flask_blogging/templates/blogging/base.html       d 2.Ldd 2.Ld  n"         F`bqrh5Հ:e -flask_blogging/templates/blogging/disqus.html     d 2/d 2/  n"         
K:AB!E9*wC7h -flask_blogging/templates/blogging/editor.html     d 21Kyd 21Ky  n"         DB扒V%]Ayq(1 ,flask_blogging/templates/blogging/index.html      d 22d 22  n"         ? '
GUtg /flask_blogging/templates/blogging/metatags.html   d 24*Td 24*T  n"         
F<q@ .Z̜wbf` +flask_blogging/templates/blogging/page.html       d 25kd 25k  n"         LvOܑqm$w
@,N -flask_blogging/templates/blogging/sitemap.xml     d 26~d 26~  n"         Ak6rZڷbC 3flask_blogging/templates/blogging/social_links.html       d 28^d 28^  n"         +<&GC?bZ`_ -flask_blogging/templates/fileupload/base.html     d 2:"d 2:"  n"         .D]hdWֲUbTM flask_blogging/utils.py   d 2<'d 2<'  n"         JYǅOuQbTB flask_blogging/views.py   d 2=pd 2=p  n"         	ܧ?f.N setup.py  d 2?d 2?  n"         nxL82piSh`1P test/__init__.py  d 2A^d 2A^  n"         "YL`Naj#t test/plugin.py    d 2Bed 2Be  n"         $h@Jv;t|@ test/test_core.py d 2Dd 2D  n"         $/v(ȠJ5|6kϷ test/test_dynamodb.py     d 2FOd 2FO  n"         "YiT*GqׅhL test/test_gcdatastore.py  d 2GMd 2GM  n"         l6 'ԸBy test/test_signals.py      d 2Id 2I  n"         FdF^Jvx[V?8 test/test_sqlastorage.py  d 2Kbd 2Kb  n"         C5z/'\uo test/test_views.py        d 2MQ_d 2MQ_  n"         $6X7IC,ԂGK2 
test/utils.py     d 2N}d 2N}  n"          3UBm!G,Кn9[y unittest.cfg      TREE   69 5
O.NZ}۰i7docs 10 1
㼯qN5(O3_static 2 0
\hl}7qOvtest 9 0
Q\7;{Jx`!@.github 3 1
|r_s:G>gǯworkflows 3 0
o	{Db'Qexample 17 2
f>!nl!s*deploy 5 0
T]&Bn>plugins 4 3
;ns5|}add_view 1 0
cdR[67wbp:Htag_cloud 1 0
/s[禗asimilar_posts 1 0
jX
L>>׎flask_blogging 21 1
PI(/Zʓ,50$96templates 10 2
(nՊ~m{blogging 9 0
5xzofJ{bLfileupload 1 0
 He{'7k*vcq2:v ~,:ō
**-****-****-****-**
.git/packed-refs
# pack-refs with: peeled fully-peeled sorted 
5b69019c70d0cb1893687799276abb9743f61785 refs/remotes/origin/master
760e4aca4e9636e2645df16cace7e6c176fa15e1 refs/remotes/origin/optimum
ce92fcb21cb72c52bfa90d98c4bf8b5979f77683 refs/remotes/origin/plugin
f66e3bdc6a8e9ab0c5b3ed4e941fa7c1cf8074d4 refs/tags/0.1.0
8b2884853593d128ed47975e9d9e64f940213622 refs/tags/0.1.1
^d942e738d4c868b969145039676cb9dc82880675
b73b682c3d4d524ee0827dbb7deb034627a5ff48 refs/tags/0.1.2
^84e829183237c7b917edeb0721726a7f2e5a3999
2d717861f02d97cefd75320582d02a112e02d6bc refs/tags/0.2.0
^ef1cd3d5946f742f32bd991f74cc46ca377e77c9
f07fcf581cc04dcbaced3617b226e5a008b058d4 refs/tags/0.2.1
^7e38cdbc87733b76158fe354a8e64d5858a708e8
64df3c8c77bfb15f3e6d6380de6b00ea1e0c9207 refs/tags/0.3.0
^d247a01a7a2903bb68e85c993d1c1c8067f4380c
b170d9e6f10e4bec415fe26f212aa0e8f727a6a1 refs/tags/0.3.1
^9e5adb8ac96960b739f5bec8ce1b249c282fe5b4
a613258b9408f48d32631a6f70465f5f4e04d464 refs/tags/0.3.2
^81fa9af0d9cbc766a2b98c6041dd0ce169143c8b
65f3b74db98b4b8fb011aa521b47ef384531f5b9 refs/tags/0.4.0
^45bbe5c5ca9e59e3357c21ea2b7956ab6d7a113f
b7728451c683545a61a4a0759b32ef8339ebb52a refs/tags/0.4.1
^e5e32466610a917ffe5d027077c82825a78744e1
57ddc30ff7fdcbdbc6257fe6077bb84ea916f4b4 refs/tags/0.4.1.post1
^8ac00d691befed4fc757b4310ae0df1f552b7ec7
ff2d05cb7d9f84b7877d1b0818f15e03cea2d555 refs/tags/0.4.2
^da6b88dfb27d1259c63f4b36df9f2ee3b6bdf2fc
6cd0ec89a0ee28b381924dbe85ce68142ec1ef44 refs/tags/0.5.0
^5e06738ef69d610713e5ed48ddccc56df7551618
9eaeaca92844ee134e1d714d18d71c84efb2bee7 refs/tags/v0.5.1
^38ff8be2dde8989a7ed915cf569caa31f9fd1b6c
b25dfa6abdd319115dada3f0139c40098280e4a7 refs/tags/v0.5.2
^7eaf66b4f7b4ad22307c344483e92157d60b9f87
e493855b5c9e7c80930ac1dafe9e10a75bd6df7e refs/tags/v0.6.0
^fcd98395f19516472307b071ba0adf1a6237dc5e
e2ec3b50677b5cf567860d03116ff887f09b2e65 refs/tags/v0.7.0
^5b0232fa8ca2a80c5d4a374c977b31652cbe3e99
eaa83a4e6a2a50e7ec9bc20f3c7028586626e423 refs/tags/v0.7.1
^2a56ed77456bc5a53d9c160d619dd03ddf53cf4d
ff9809253ba5088fe0b9a6cb2d42c0f00a748e2b refs/tags/v0.7.2
^bff8994985438474f7c37d81d94e298f5cc38e95
cd95316b549e1daeb81f94d11595a02d498e421a refs/tags/v0.7.3
^2d2a4bfbfc355c2eab3fa6485bdf5579cc0c7f6c
dca314ef3bcfc20978bbd04d037ddc8135aea728 refs/tags/v0.7.4
^201e07b778203226a1e9fc5549a00589010cec77
fd566dfea466ac63fcfbfa589a25c7b98c091e2e refs/tags/v0.8.0
^2b71829daddd2f78fe47ce85279178a3c344f55c
39e24f10a9b4f10577b14a7e80bb8e193341c571 refs/tags/v0.9.0
^a6d131bf892972fe92a67d5f45836469f2b6dc42
9e4df94d20d12a047173620a8db3eda1bb3c8ff4 refs/tags/v0.9.1
^e6a3a41c2125c91f8fe686ae75b35bf0c8377f06
bb1da39c41fcf47280c94a72b43fe2da959a4241 refs/tags/v0.9.2
^348da6c94071af6251c8da0956bd107b6a9e1e98
4e1157ac19418a20b8388bdb93c2e563359f62f0 refs/tags/v1.0.0
^5ad58ff7981c5eb6e155d1f940facbe7e8110be5
4f110ddf52de643ed8dca1a767349ed610f5d0a2 refs/tags/v1.0.0.post1
^3b75c5a444760d83ea0d6e383c9c753d4b432b12
5166d85be2a1714ecd0b9a36f4ff0f1f93215023 refs/tags/v1.0.1
^6978f3f12b7a0aabaaf9593296e15ff1f308339d
78d927002763a371637ab3199a74a453f3066130 refs/tags/v1.0.2
^e92d2362a39c49b59dd85261045c02e973fc651a
fccfa87af6abc3580588a2e086661458c76d0174 refs/tags/v1.1.0
^d486e8945d54ee3b94e017d90cec8cf3f3e53b78
e3203c9e6bd4ef57a13d4347925c7c0308ae6608 refs/tags/v1.2.0
^0507f33ca236d1cc8c268e83739094b177f25796
5f6b97278cd982c804849a75fccf9a266a68608b refs/tags/v1.2.1
^d313456fb5bec16b99cd3c8472da9e6b19063e93
ec6e4399809948b04c70e50961a4623f2b23c63e refs/tags/v1.2.2
^700074a769a51e7c39d63753888fa1144e6d5cdd
c09cda8c26d24609df4f052bfc33d0c31cd29548 refs/tags/v2.0.0
c09cda8c26d24609df4f052bfc33d0c31cd29548 refs/tags/v2.0.0.post1
5b69019c70d0cb1893687799276abb9743f61785 refs/tags/v2.0.0.post2

**-****-****-****-**
.git/objects/pack/pack-dbd4d95ec8ba244b62bf8dcb5dba57e9d32e7654.idx
tOc                  '   /   8   D   N   R   ]   j   t   x   |                                                           (  .  3  ;  E  N  Y  e  n  z                                      !  (  3  <  A  G  L  W  a  e  l  s  }                                	        &  .  :  @  I  S  Z  d  i  m  v  }                                          %  .  6  B  I  Y  d  q  s  y                                              $  +  2  6  A  M  R  ]  b  g  l  q  w  |                                          (  /  5  >  D  L  T  Y  `  e  k  y                                        &  *  1  @  I  W  ^  g  m  s  z                                            * QYL3u@_#9gT~ aYJmjH@
ODO`j[co6EVˍ
5,pȮ4Y6f=]u^#"&YZS-5}|wNvф_TIeg%ٔG]_70[jx<2ʲjq 9gS%cF->>ƶ<PJXwABUV
T gpnܥ+i|.'%Q<ĕ4l׸π	jb	D!6KNh#+{{|ˢ7@urm;`P,u`GSsdxyxL-ЋOzw)9L
|_ȟ<GcuKq~㑹^zqO/s7``um
6B$`(E`ˎ?Dg(o;SA ud ۺupEe;|;F=

vB@wd\wO5N.՚ERWdDRSIET\TICgo63aKr/2|RjtL-ٺzg#-su`1L]VS}2Z7^	5,q?@	+V{r>O3n<6̌&swWKN0^@\hl}7qOv[It?o<?h5?/^ƪ;&
Z>MFΰ Zc7q񮑯n_X_Y˿M!Md,gpiT)5̷x 4"-BPM	qBhk(nTCk<Df?/%8vK4E^y$;GځXJQ'z/'u&3r~xtYsk ,;w;-hu&issUvcMm/^diV񢺰(-eQ7)C|fcǃYWL6YwᱮyP
["l2'(\odOww0U(6ƃc(mMBrArUI@jw+
QM2D.oZ1Rשgtr?%
nE#5<dd"(ė	b4AUʈrOU 峨>r UNq{h7q{!%ҡI*O.NZ}۰i7iwĈRigS3/)j~o"88Ho[x\<ix^޸/L0LkwfLR],[YaUT
24}			U"(^oN	!=hTbhFW	$6yӖx4~O
0fR@	Q>*KPB2`
ut
8dUkrr{
.Ѭ]N@)
J nVmUqI)	
_w^(r5>,듏
oI<|pˍ'xW-
zR®oyf@C
S,[hYc5
I/')C7
3\*>O
H:DZ3
^HBKn6NtF̘U46ǇTsv|G$BCU),Sj MX;ףŶwFsVIz:(:#1LRXpv!	TW}f<>8chkbM彯>gϱwxV|H K7#I:gk;c`b%~)UEXq$OPYx>2)_Vkh$q0=%zu4\&'DNLGJЛUI(i
g@mO)n)HcE筬ugڕ5e<4k}]2C	rqy=53i>v$Q?z+*7
Z,>1__xcoCC
ZhRyk0^cc4r}#\9
Jչ{VQGQgh
T؊}P<HuD>
=p[	gîkG3
ýGȣW}j%]ugX%:xJ<.0e#Q֖Qv=B@{S̓PtE
w
Hpۉڣ>}SPW|<&GC?bZ`_Z_=W Zxi	zd
Ap?n3?:-?Ɍ%d<o=D^w3'>>D4Hp̃̷~צlRZ_?ڙT'"صUxSBx>v5ᄳA2O#ZKDs}_Hs881TME{I% ZpbGQHPnJpH7?
V$Y=>skzSgC:-=nVG=z]lfVxL82piSh`1P#jd2SDB[NKa@/2jZ^S\xtt:;i4Fq9Jejd2d+ϷFMj8uE;Hyg;(\^Fi(k{"(xu?TLEζʝL kc}

>aAl``N8OFB`äP ƀUo`5ƚfS2 ^[}r.x(YaŕcLۦ5ڱ4?!X2/u! U491b6!߭!Kyb3ve+4N,:~E.^1JYsIq㫓#YIʼ#ged,Oh@Jv;t|@O&JxF[XQg.u0*|M6w̾%ks'P)$m}hpGUZ2*qW,b\fI{J8c&_FPqy"|YmA pΝXy_dR;h(WvcOs me fJgFsS 	yɸUE#$nym6lnEcIkqQDI	~J2]XqWkhSL%*ǻ>[gD,	>QZMNDlg_LQq#jG*Q
˵ZIÃEfCD}1%oǀ^.:2~]Na<pܓT#16?[GTqX	MItdD8'QoMG>'{ۙcڑJYzcK:HqJg~v5KBPqo<N!+rts5/V#ٔ@
NA䎟5BLűSUYf^z]|K Sg0a/]# ZôOe=ucy)V&ܰ{p-sFn) [O-h,| BXxnmx^}4VSP*@tàA]m'@Z7i9ꐖIA@vT2u)$bX.ݭ93ЃrKW9|5<lvn)J)RҲ@lo7'ZeHAQsvn+'cWAәBzK	K_&d> %4'}kn%Im	m0"*Jnb<'drH(#uo(bEe7o<,S1QJ?N9-/HeMIcPh.P3-%޳>W(?Qzśz{Jr,W3}e=PRk[aUЌZֱH`yL۞DVd+t;&3F.ᄠ@yXYE:	LL/'^SK	@ s i7]ՅJjjG-&ID ?kUQA~`s!JjCӢC-?P\ByEB6mTi|auMOrLl:v8WLE?^:ː`RX?uΨĈ$0嵲ܧ-H;}\b}țc:!s*C] h?gf5#HkTtTt[ľwْy6Y"kiO54Inh&,BZ<e
F߱O;KC9fwtlDڵKIpVU*/imJwlmkqz_ޱ"!o){j*mR8n?GF bHSv_nH!ZOβ\pfa=kI7:'G߁jz{8q;`Qvے9~&hWc[ΑIـu 7&aTu
BjehF^Jvx[V?8ř*i42RpVNef[4ntI|JlrSW=ƈHy]TQ@61b?b:d,)85)zs1@ޏ4h_i5 8ҧvjU fIYkBl VTFWnʹ!= x 2&UIw &O<Pcst (fc)#Y!V 8IHUSj3=W9J MQg"{^G}ligZ ]qGntU";x=9 ({w?n+, F
GU
>?} cy1F"3!l_ʈlF4/!
I+A0Hgxb_ct!-ǴpWFp͐f9!`̫n{=LeE_]e!E<Rk
q+K0!<:w9Z
[!sS/9`T탞:G`!nx S":	! $1ыݵPQL!>*	C
s111Pń!:I)UAnHL>V"/:mS0.""7b{c"1_ܹhUEQO1?""YL`Naj#t"nEgY*r
"A۫ŴzǢ%h"ҵ/ܷ.m"ۯ_VM:r;/RQ"7xR|5Ű
X\"q2|*4Vl=z^"/ҿZP~paffE#p]fh
H08V΅#SaOIzVwVO#W^6S9N?':G#R wue#HyRxYiy
#E>FZr̹#bpҼ0P4#؂S.sTWX$#ullנl,O$$i7D;+$1S"Z&C)cxیoQ$<Hι@¹Vm@$X)sęJ;I5$Ʀf<?SچS%^Yb	UB)@aE %`*n#{Yw7%C|=1GjHe%+NF'%`KZ$#F%wXw&;Y:;&MG[Dhϑb1&OU"t.NJf&XF$IԺFq%Jq&ydo:[8?MZ&Ifh4W?2jy&8=~t#o&Y$H
qSzd'Ǘ
ޞ:ۑድI'1=ԧU+p'3%b-Z%v'EitM: I'QaGʹvr['ST]H⒞'_89jˁ?'j9/J'?3d|H'-IV47~)=\<(ȾċyV( 6?7P^fV/(!][if3rpgz (6Y!NA?6PL(D%ji xơ=^5w&(^/Md uF\}B_
(_őCzQ}?c
5R(}BF QII:^"(*{`
MAG9I)@0X<Tc--fc`)
bG|7QLkK)\tm!Õ\z2)ek37fůJN~Q)ѭk|l=i덵)10fDB\;_<)Ne{0Wٰ )S@(.b5T]S)Ӿls,B-b=5)7SaK1)1{)|ɚOn
n*$@"Ή5*(Ԃwޓ|s>k*/Po܁m4g}"X*VwEkť=
a=SM*n0a|VdV*|jc.8S9G*V#Roz9
*XJ]?0A*[x="u]"S,I@Z *Q(8
C*ͨ=5c 5͟*󁘵Rt=$Rgka	+ ţU<v0OU&ٞ+?Wq^ɨ$٤"+AH1X~&jtn9_+C7QnPAs6+M"yg=p+q/xG΅'xD\+|j%D!tf'+M>:;WZ{+meWORBC޶`$,21l#zҹ,6H-=nA,Lq[wJVol,n.p b*,u3.cFժx#,ζNRHÀ,b-J3s,sPRX@&V,Sqըo)6S,K0f;`LTQ,aJWyZ.,F(anQ4#u-D#
ѨHBwYR-*K5\.?H[Uyl-No &(TS-qxa-u2*.ּ-KM,6-Hid?%-i7HE|fذWt:.A)NiM)6#|ti.E7z]|t[	@7.gבyeغ()Pp-.hAU'L**dU6;.hFe%NVܥ ::nt.,{q>~%l\.ʃMJNOT^/%|^*@_:K/_Ƭ)E0/p?!Yc/(OB/xP7ӕu51z /7.pdy0]RԴ;&GzqO0$h;[fR
2%0*Oa!0kN	ј%-
g0ymwa$q
m0,_;?%=n"
s01O۾E(0;oLu}&30jw{2UJ-
0A*tD~6}0<L7m:58oYo0IgHVj0*:[0[-.$"*SH1 WeW~Ԡ7ˏ1%ͻ_@wUPez1F'03en`1:~Ҿ
96t1:x6{11ٺ6ldyGۿuwj1HMYNDW1!B2 hoZ7wdm2#kGCAiz"2^iԱsHw\ź2A"/V&:q?A2͊(it=2LvOa<EL3/	`$Ԇ/3/c,r^TdO3)3<I?8liU(uw"3|Avb灱3GƾzSF3s8{8q4r33i^q#A`˷%4%-|N
nS(kW4%Wv LrfpZU45Rci?G<ue4@qbQ	V{j4.?|5qcr8
4-_0bE c?n@{z4ܨf9?J\%~I5~ ?%#0
'5- -Q]zV*5!@'[붻5IL0z^?R>M
f5SҤJXc͕5v?6kDp:h58屝+|5Y4D}_|5w*bcY5"{"@;-]5 A\81x7o¬6ۚ
[RBTx ()Pq6*x8b򶺏˫Ry6\	_J|t6zʼacFϯ	;6NI\w3ϔ\CcU6N0V	
5"ǯ6tuhPsG|6JԳ[舗7o26.A +
>Z>+dp7TA}YX.AP7+J˃>+Rv?z^72@봏@*
4>73eᡊ,&+`Z:7>zⅫ 8Ξh{>7G,WC^}
7H)eNXRNzDG7fMߜ'yJU7v
2w835wX70颕HqP	7p8F+Yw)l7*tɱۜS9ji978gR|Q`PO7*2YCyAK	s7w⧖my7nN
!^7C$x? |8_*J_i>fi%8')S|I8ǥ9&Co̥8v~}r7r(6G&8蘚~V1l9.BǆIED.ǣ9GۈHƯf&@nAo9eP	nQLJڛ~9_xDU09"!6"fytʂ4;96xwB{*9Jh-m=9 4$n(UW9OwJ~3Aq9AOY$
Sv`H:&rgdav3p2:-U6Hfݭ͙cI:4#dU%sᢎU]:n}	.KBU눂:ʞ+,
֥@==jm:WܹD	lW:Wk@gԱn;/<E%4?3;2v?nϠOA&;;%( ǉ=ٿ;F7rDbRksR)>M%Z;f6lsH~	@;iLkpSz 
Fl9;rۚ
$Vo| ot;uŤDv

n8<u=KC+;S=&tFJ?;ns5|};9/<&R;Ńэյ-;o嬴r iaN;V[s<s;#!;]	ì~Ѐm<Җvt&<)u"=ĢNsrY&<1.$rk:{ˮ[?(<1I!Dv貓a<9lf-I<OB}za TW>B{<[&)D:wocAg<cmh]!d<e穄C;q~<p"VK#4f7bY݃<q@ .Z̜wbf`<tI.63J<A=s_FG89 ~<Fv3%*<ˤȹ~_V];@lA<תȜ5*=P<sI\ZQsTL"R<D	C	tђlH[
=0ND 1hp=Ra22)2ۍ7D=,lbzkl=dq|W=Üq=!߹B/.ZAwW=mڇM$	<8-?>
K@FTbMSRM>'5_
XK*>Xk|LR6+c>`z!' N	nq>MYHK)v?P
}Kf=:<Y*X?j	P~FA\b?jDkCV1?]2~·??)
WAe˰#?!lpI3 \@	F09hyĴL
@+e;=#FhP9@=9TZݏܗ1q]@k`rc)!{@tXKUc%@z`iKkɒwk1G9c@37vD3L}kA"$-Q⩭ctp7A>}ĝ|TUl8aK]ADD(tػ]AQ-Ȩ?c8W AVkm*4	u^IAb}r3{{tbAj} 4,		vxAk|8~^-8>A#aMhI:AAC@Aæ.9ŕ9ª|tJB0O}S1`5BVt]HsBaS+^S.(Rj	&B6@
/s3tVEϾB^0FM	(B{%ia1/C6kgr,1BЦfPY i»B4`JkYB=*Rr_A]iJCdm&hDol#gՅWCrl9ZO2FN^Cr}	S;{CL0'}}}04%Ck>["l?E~P8ҐDb	|~|]8tDU{O<1"{!ɭD*ԡey(
DD?
sdI
e]Dx؏SbJ`	D?IZ+6'Jn\E	b~O="E
6שqA3 LvxSpE
ӛ.:Y3^b[
E&pKUWEʞY5|!+yVmz?F4O92Lo=c)F5jR~n6?#`FFR~z&Q<)#FN%zW2s
?F\s=s`SFk-/x&%̇meimF򷬆R<-@vKF`bqrh5Հ:eFA&(.PF9&  Kh4ZwFOCndɋM*Ghbݢf^͜/P{ޠG0F̌|6[4oG/zyẎw GHyTY&<:_GLfu0Q.GMW	[W_K	hGf=NLCܘ+ZG^w+I73axGjp/L1=㛺GnGD"]I$hH27-eŅN閜T˄H;]wh֬/po/{H@8JMXH|G;Ho.o$H{YGYI+m^x
~y	aIFDĠ稜oBIS&'y[g\H-Iflixc8.]K0Iw[K
jB@XI%Qj
ڸ; QII-E
J=o̐RJ)BIY>"
d	<J)5;3ڶiJW_ȌhxBk`W4Ji.m|mJzѭE&	C-{3Jpͷ|#x''o\qJ=gC[OTAKO*Rz0KYT,A%6SK?Kd-*	Gؒ.~%;K{v}T8/tsR-)suKP[i*I=!.K;OgS<oLK9xdQr q\@K:2;BKoaO`rK]~y
kz/L$aab"Ķ8L&"=`!κL(u0r -L0;*QSiiLDjE1LG$LUe6J$ELZǐ	zQ~t[f;Ls42Y[~̓Ldaƀʳ-tL79WbC,rLGA-\yGaM3QĀGj?8MF=-Yy9RI#ML	V=uOMN<. ?7Mv3
_<5(gGMQ+3Y7|J?{AMC?v5Ioa;z)+MC 8mzRN/C)MLP5|0v 7MA@#*-![NWA 8ۓc5bNe߀KZPnB)*?N )"13˨JwGN:1g.]C
~N[7>N^ ie;NoBG%eg9ca{N
r첽pj^ꘒN;wɏz?
N7f45G,NO ,{x\N\<	W9i[kO
Rd>ܡg4ТO(?9׏|z.aO..M6MZ:G	AO1||`mOB1"ƆOa5aOm&vxqb?ERO}$<"~G(O>v[wfb
b0MO~C/ǣw(n	PI(/Zʓ,50$96PJ6a:aE\d69P%	Ϡ-UH<{sPب 0|tQk{
0hO2yQ&:ܯi؇㖿kVQ-gC= Ѥ3 @4WQ.!5nE|_*Q> M
J_2fHQ\d4d~-
e"=&Q^I3K= TQf[qN6!P#Qt1ڤ|،Ta?kwQM`IyԖxQ0-}7)]Q<*[c^١-%2QƮ9E4mQ,b%oDQ;yO!l'۳ygRWמ|4DcM5βRdGD~-DRDVS@^V
~6RQ.5
kORYkx>27J#JRnِ+NB/t͆R, 8?+Rc{5
tN24R!QgĽARi }h5uxRD{m2U]DS+6r`_eB5S+TG4 -h5lSSH	T,*G7;S\\@^hoqY0'}So6['o밡SyOAטVSfYTN$!(E8-AmWpQTe@cSiX,F@TeZqe\^v;TuQM[A-DUTT]&Bn>U
F:)s4>=	UF钸-	oNju iUgw|52rIGUèRnۦc{UUhbڣxeUEOVDUBm!G,Кn9[yU_O-}HpﴵU,U$Ltẗ`VeB/V
aE=*bty3V0/9w3V,?1
MVhOrt4V`A1GWVt=X4GsSjĕV8;bʫ@_
VygFkVVaؠ{+хnV'Sٞ!mDR/Vy*lq1VFgVCeWwCJZWg&A/?Hp	W	uvntV#q'W,
%BYF!ݸNW>_{6.uAxWJ&Kmh
_K!7]W{kBlQq~*WT`Bժ01(V!WÄ
ojBЂ5!W%{NWlaqZcS zW!GYYWA]X
cDe*ӱXXEmg\>X޵MoRUU+女puXD0>ˬgGvddX\̎%eQxˬX\$0JUAz.Xxy3=LYj#vKX7Y:	C]pOӝ<!!Yq8)4yU(
륲YX%٪2LgZb_aHAajYZ,}.0SZ7 ۰>Ȯ㧟o#UO{NZMBJ{ZfoO#wcN-ZmON*tD$
&>8cZ
ƶ^ݷ,FmZ)s}ݫ67HZՏ^U@[2]J7L{1e,>[DBE:w%*mź[iphw'jC[<U:/)6![_s[cmv>32'\X =w\.hd0<	!Z?%Z\3qogL>4p\D"1XCDH\VC{_"]L@ǳ4 \gt{ 2ÆX\Xayns/[Z\- 9-3GZx\3 h~ O{"ex&\1$g)cŖ9"!]/#ͥ1{]4gW!bj.u]`1cZP.B=Y]	X!q
;:Q~yl]p^saHmU^ U6k'hBE^:9^2)~ٺk^A*͙G-f'%^n9Y4kߒS^|g qOJ16D^љ>)7;?F|_uDsz/q'Il_jmrK_{u*͎bWU_#Oq]M=R^qX;_+9bTI1ɗ=~k_k'قuϚ&jh`_۱ۛVGҎ]m?_N˫sCFV<`)
LI퓑Xh`JjſaF`t
ϩ'(5t`y=KL/	b=k`~!:2ES!AvH8U`pGf4%|`P%c!MȽ`@Y~Ba
;a5xЇ7]
aTm {O<;ga&̝Yϲf*!|vaOZ%% /a_<OĚɑ7z5al{5n;#Da|IĤ]FmCa/T,.1(Ԭ>am";KAaܚj(:@zaܬ5d)w:q|a,Rkd_T\	b,mٗwM_JH
7b9J_)eXykpbVgIeLD5Rؾt8b57I:5=i2hwb˩JeDKb3 &vD=	+c xG3`5-\Nl#xGSc'D:Nz>(c4O~v䋠 c4KvPݴA'hcD%wfL٨s4/jcL-ZU[quWsc-/Q-
8c~5|[
!Q/s@Ucu7e
d4rqN,K~d`VD.ƷYjdelړ(ݟO<͢dp|td<[+
\dc=M"0mg<@dHjh<#dzYyXk<d\7Q@'=}c'#d܎xPBOqF|]a82d<w_>mck d$h~0
eni\%[tZ--ӷeP&̸}&76%e7<m#AHK H#e]N$X (p$hoe}zEP)0Й?i~eWwzIQzR +eMKRG8E1f.1S&.f6uj2!kfU(yhcҥDfW)@q9QƧ]Mf'B@\V$W@fO3к`E[\	c$f>!nl!s*fG^|a;`:S~fƃl (Y2nf3X³Ug|g/d(SLX$mG0eeSgI}6vD|,A(qgZ<#J3@~!gy7UF gF(}}b/Bbh R.!g;ARhߚw>'T_k?h%־CAhAZ,VR;M4Ki6BXffG%1͙hi8rwļM ϯGiD} !AeGTiJDXCIK*iOlCИAo)p[ix+z
Y2_3iRfLr͉tʏNi"RB)ndKqAI&picQ\j)kXej3\dC zo|:j(´ #awɫOjeQ*]:hNaj2AocD_>jK/;D1.ʿXjXy"c\Yf!{j4V_M0Ww g,k6kYIo
ei(kRA̎ov	e"knk{Z1=k*??kvajuekYe͝Ƒ`e)kđyfzӬkZ>l>:[&0wl'&*"
Up/T*ll2#*$)xl|* J[y!$֭2lxu\BbjX
<wlEL[Ok"`z}lMkU)LW<l.č-d(c"ql쉠(Mh.DlR4UVf@FN`ԣmKV`IRz p`!i*_mMu)	qt\.</mZVdmHO
bas:@/m$h;֒,$JzC,5mI]ȬOuUm6
qW<ݮ>4mx&О*	FĻߪmJM.DWqu-ڌm~-q9@{эS8ڋn ܆up6nbѧ(n%r!"PggFn(QE"w{A;n8;BT f]xZZ0z1nR+q$cn~2xinnw<ҽ+.Qq-%n4 ~pnĚ_cno(WH$6փ!0nG,gHFǞt)nbo[ŐVfA'tnCRo	2QowEwp*m 8o[`W6
=o4̾^lx|c
\oWh]ӶȬ{kqo6J78lRo	{Db'Qo,q@;|p"Iol^Vp ti|97SNm\p)2;o
a!dpd
|;#@g;+\pJPW_܃߈EOpÏF$5
[@+
p"ʼ$~kq,Ac&^eO&Aqp)c7[ݦՉvqt٥}־Z4XdqO>k!u3]q泎3gaqǡ52@0f#br
KpdprJZϚ%.[Erflf7DpMnJrh9Gi54,.3s
˄$zL'uF
s##|kQ];S^sG
BF^^sh2Ui4Ձ sv=3:t]UЭs-oա{=Q8s_?]J0t)t	e<|vCT	6ߙtotѩuF2п%tAEcVavXr|7tA5;coH(btI&_G"-ZO]tJ=ĊASΜ|Jsth%J6tBWAž;V(ƒt*Z~){(4t+</7}Ixu]	>ԛX&7pVTau`*XFaZ&a/RuA8mܽt͚Ҡ_u|ե5P
?~u/L-OxxvJN6d]lvv2,miͰÆvJWB:9
}[H6xNv4"L@x_1 vsOv(ȠJ5|6kϷvD$Ŷ=oz[$w @	!ܖpzF!5w F>R5w$`IawKlA@Vcw6E$&qpwϭLs=ACHKRwԑo~mCM;=w֪dï{jw:'cкzFYkwy*2oLxXD&@݆H'nbXPxj=iFS-i:,lxGpLիx
qiAU61uK)x' 'cqcztSa0y:Yb\zdDy2!\AU׫Ty=(\Y5B"F=P+	y]Fp-)a04yqp!a<yB'LZNGs\H)	CyxD
v؞#xzy`אqhLyGլ1G Cy/I5]<gghTNzNSKЎ@z<ꢲvzTw~:-N>z[L6ëAmztzwgu$7!&yzԒ̝"vi@z4͉z'Xf{""'Y;	ޭdN_E({^ի!-_ ./l{hX&\Gժa%ke{jICzBBQ:{z1Vo_E!{rJyOQY4r{5y& 8o3R{ljPM٦|jq<e ɵSB'|r_s:G>gǯ|+pBN|y7|^8Ep&sV|嘌ɶ/UIN<|ٵAMLL!3l^Xe}>?`8Y_ŲtOx}Db7V},JL}5ڼ-ٜ2oɏV}OP)L4N=WI}^ >-uDޫ$:CJ}4Q(5,d}nBY!^Ww$U}uhuC*8 z}3}Sa7kpq?ku_}Ft=8cC4˦ɣ5}x6KJ7A8oc}~Ea-ֽ~,7f'c+.@i3	]~2
} >'{t~8ͼs;vTMXX~[Za9IG~ĳ F,~f"0|4D!W~`޶->*~pj;jb5	_NHE^qh,Nҋ4,^W	<x+4F:
Ҳ P%j*>6o$zA 0Ѕ"E#S!X*ƴ깝#e UÀģ4
8IoX<qFQ^v{zѣcrqRW]L}Є?EǛtf4RMeQ}F.m`ՙH5NΛkBLywٿގX&Ki-Ni
MfgvXlԀ3fDϭGW<r0Aan0&g\7 vߚH^m%.:at\'Odbhj:F̔(8lhmp~ImucL.̅C
k|oHrg]Ԁ[p~4
UJ
V5LREI59LXQE֦/D)WR"XsϪf<|F+O\LYB]	2WHeV3Z l/M?0h$־hr:%=OEF>09sMvf`Ai<.Hl
jhL_/rVa3n rW>4cɽbwO@$,Ԃ<ݮ&h^K~]~.
P|{AbʂF@V2%2iƵ_kS6|)??d;HO\d9v@_"YÚ̼+Kjk'w{|JނV:io"$6X7IC,ԂGK2$^ JObO ԰Xt04~ݣCw>	!麃jX
L>>׎>[}<`(tFK5U:SW\ѩ2wo:NTb_.սτhK?KF

Y6$/:l0'P:*S]=Hb~:ЍОuHTq5R*CȤԯn`ABcBb	RtE۔Ke~QqErdmF҄QV^$M7BMO k&O\-YUK
}s\Q
LlSPDc&O*
Diƞ@+T?͓F/!M)27ǹ!rj.Z9s«d5(q@mBQ% H`pF cs!Xtee
hř1̿^?O\_st҅,7ZqoΖ 0N1%Wݞ-h|JTlM6Y;$|I3^rdqQ ñẓ!Zv'#/]׊bI0R"`h7ЅҶ<9-3LEu|~p	ƞ-+Kb.4*vM2#:cⵋh)[Is$fGEL%H~@卆)<w0o8,_mм:LOpA/==(tF@&L	%CkA{\S&ם9 y.ۙ9_"3qD+HRdW߆XrI؟n{f2_%ots
5JL<U{w#3,|
jY<v4\cRLˇ^W(Jfѣ˜qpTed5JKlβUaYt	Iă
U3<&o݊ZF~fr9«_o`C(iA|ulDzב|ڝ3)wHLز4 JJwHzk+^hyoby35^@(chRBE;v>Q@o)}on2dS؇	/WL!9T$ykxMw̚(m[5[Ή4:+I
/7	MIed㉫wxI$]ȿASزWROt-T+4+^a:Nݨ1?#:iI#ᘡ;>*jIc<aRhb8+Nzuj~BNieKkOt,Qi#GfuW튀cpBtW._6=8"jARhbhWɶOc	Fx|d?Ԩ
iOW1
U+~Ǌˣ}*ݭHe<Q\7;{Jx`!@l0n(*D0(5(G^d@!6"GBg-4Q:[˒k[_7Ae7ߋ~PQ{(I_#⋋!+¼C	owP , }|x99~R_9V/ʕ&ucQ.?z},+i:-lح،C*JcWⲽt-n;
$P"\y:ˌu?Pٙ #%|¸.v-Sg sj-/Toq[aXwvpyq>fv\I
=pLčH!ޫKvɽH|elj7Gp7wи"S&\A/>rv		x8Իs g@dİo\'֝0M1+2zH NN\|n٤jNGT dq!\cVd	!WvDWkߔ
tCP#؈"{]ŏ#"mP!{l/$̈́.VlǙŞ~elJƅgIASPi^OZv34fN7D!NS*pE0x#횏N`$mbO2W*FޠYlȅJk['WQXg,(^`}oC.GFyj%`@haN0A&Ͳ)kSC&HE5KUŐWTd2)KZP{"0!OW)Suo(ő~LB{?ʲGZ%*&b:9/`ܑ^tŻ=O
T|`bî&uq  ҭ`^DcɿHak~G:i?;ߎY`ūqZRZRVX.E `n90i;bas;\{9`hE
>S.dχELߒEa~38ٚ"YD?Wkk>mc'ےç\ʱH}wf0B(2.13e%K*
#W&FY7;]eY7nH%Gƌ=JHhZ
l*dKC*=
C"0@yfq/Ol
\'tz2>Sp
.NXGpe5ppL%L"\s*f
`ܚϼ8Z;DV]Q'@h)w~敄,o2osr^pie{I:
]I#D>B־}Y4Cٖ#w0*t lHL]9 R$Mi9}}sVzEEuxx*E ]BuPٌ=W3pIlv!Hy<a He{'7k*vVoQ̃i޾W+gft<@NkJy>N;ϞoDP&[XpuH]wiDp֫"~싑RfD@ч{o.
FEʑouRW!
ڈoe(z\$ShQ$mݫʕռ)	Ș^l;.*/%յw"G 5Tb^Kş*4
&Nd˦9NB"|Djۙd"I aьBuxs}ch1- n¯PH/h}ډmK m_4MJ	(X< ~xkp5xzofJ{bLr|tc;-:1=UjIru{խ;~8[K{*<p~P@O0Yc7#,vBTEn>f+H]hE:R~Gr4@[.pHϡ^ۏ&qݢ,"R&LC0ZJ2}#oD-\#Z 3Q'"{Dfr
(VQBͤ <DiSq4Dh\
C#YI`\nDÈ :{CL`u:@eBor yo4Ii>}y~LsX"p5h4"g{G($m{ny6aG>ƞ*_)lSQ[u+{(I@
<LmX^oSڝvB3u6'㝜FJS-o3 &݀8ޜ4r-%3F_g̃,A֏C2!ca=x rBaAd`\C๞
&^ߙJTQn)ç)!2TԞMM *qsb
<U_;ՙ>k6F!.*RZۊi`9$(/崞;t3)',*78 ;d~X5(DNqMﲾ瞮Ɂ@9b'iӘ5*,^v7VDp)gФ^us@N_9 Ik&-?2Xkw?s~a$ܬ
c'ɚ0Qa!pH{ H@V׃3y ǟtox0*VT"HX4 wacjp
3&s82銟Ao	zL8	E!4E
%Q2ޠ	M۱˕0ѹY.[fn'sAɘMswL)B9kFLà5?? >YmР<g8i= TQӄrVC'?sտT|}9z㿡("&c)yoGQN*&=~XKP7x&!JQqrC?dAWOʮڠ7kJ.J r/!]P8&P+aPvCaΊP>ʢ|]Y$R@=sӰg
$cwtsO#{b% Pvq$r36\ub%89vqG-3

nўF?rD< 5z/'\uoM
Sh(G^IGP[ho[KXKSJmBrw*1RxCvFi$@4ՎP.	Y9Η_5	Olބ~bdLܣ&hcBл>R%̪'z]츥U?/Z~OPgZhBWet5,z&U+kψPK:UhGvĤn.dMg"Is;9xΓ	_CFFyj.HkR]<O`^˽k !b#\sIҤm"u`IY
D!pBoSMw蝙lFʙ^htղƞ
	OFMK-Q:W> %Jo%R8dI&-?'i/oѮX &?2<w9
.YmoŇ؆B [cQH*xzY7<AV8ڬ$O%2copF__NdC*s%Z)
'SaU)|MԦ4dzoe(eołXp+Z픓{@ip0Ħ1)r}_EdiB^~0$}_JɠnkRd5@YuYIlg\a3:p=2
0G)g/|I]㼯qN5(O3g3kj2@թ2ԁ)
'd&mpn\YzP)(\jkh0g8
Q41ˑӹ-@!Yk{s4)4Lw1ݨ!ҨE$g;z-a6%,FQDdQ51^%hsBFMxJ5UGexd!23@ 'F+q=EFR] ԩVG_bAkCͥb\PG@Gv<Z?JB#,bY=(A>F: sk#PiQLS>
[@fBI֊ %'0	3uo`M/Kc]AJ^-4CBUE{jµ,K9Gh4*񫤩2ާlMfOVEjZ"G=sLW%Ka!(1@LӬ507!4R!>ai5&z|\XboK~fXdKbOI(S%{jR ft_Rhb4N<~
t{4ͥ[犙QkK>,DR0oӭhT&9֭MONW;=8,F)ksRk`)}$;P6
^8|
uY~HuFwK8qĸT\Wc(ƨueS{Nv~)S'ٺj̋#*MRF.֗Zf=-')	Ӗ^Xx\[^R!=As@kX-/єܺIx7x&D. ǀMU-mdLKHi3;?n\"2gBr1xY?HqtXmG:O]$B[@$Һ{{ȦW|71dO$IQBۘmvbװH^q`%Pj%
а
>sB$%YZ_DQKz}.A+w5f!R <#2^ ),˕X|9ҿS߱6Fu>&S-iQ_fK}9#v)t8H}pKA_o!*'
*_
` q,*Ǘ 5.
J&<FQDҧPm3Y+e
"_
<
 [sQ -~]j]@	䧲%):
βOBœr(:!)Dett5V/+ft+%  جt7/	DIcZPN>]Y	#*Ɗf\ EӛM KBCrz?\nPN`}%ls1*<;yܳdOFĲ3
W0<1\Z!qt%jђ{gj y=Ig{\궙Q:-r9@djCZGSYMt/F##[6m]8t
by+Qyv$y*tU諒hNlK|m% &_@\s=o<M%Q~tp/MIY
ӅǴlZKSwr oN@H|-jbѴs\uOùReo^UC!Cv;rZ@&T9FLVԵ9Mە 0EԚ3.ʅw<1A7:c0F/Y8`%Ķ?OcH7u%5	̒@X]9Tc0Z;잵c U!qqXn 3z3#MM:<!
XЏ	@#O,/FݳY.R'nHD`D<r}0p?λBbN!0JgR"a[U/LqJ4Q;kJ/,e9zoJ#Z-ZrY]G"$dV{&@6>J7ɄmNG;h,=MRN}}F'HF7a:bCfjJS+J\ %̷rQƃTZau29*\W.KN
8$ǷB5!qV
+Z	,G~DdM~R
2pkvB#Y>M{~30amAXXmuhfXm*~@IAii(9ª<
B6y-"%UҸ
{9B=kwBv8ٞb·ʛ:;7bՀ\/dʤ );z=hM
KH}@0ZzŰ
5Yjc_C~H8-~wJg9'Dqօ0Bp_J+8×(nՊ~m{$$(A`C^?H`?9%8  .hةs3vv-o$,aY>J1cwEEL$Y1#ەpia/N?4.w.lq+PO8KXa=6Qmn||Xk&LYCEjs%3IXգ[qvOܑqm$w
@,NArJr?ڕBAex;>ap~sbbꁆ<I5Q^{lW6@	lʬ2bw-qLۻר*0dJ'̼ 7=_2sSbP?0A[g3&Eʓf}[+njI<KBV. "{a9Odv2&䥸n	>JH4F }55J^{@NWѣǽ:MЌ).WO<+юn\<e1]`"=G>خpî W2÷d9d"	 W9r&){oVR
Iړy2>QѾ>vIǏ4K1
`-š"#q~EwJS0&("q!Bm5SG
RºS㬀.L6\
iB+'uAS|z@y\+pr4\shg;ϽUƟD
\h'B\ҷtS=,.l`'j,=>mr^oK	vbȿ{ION!0wxmdXo]n6ӿ9(5XW;PstABƲlICt}N)\Î PRaDM.K/YթLd3spm26'Mͫߒl(S-w34 1-*#;ڌ&F	O+3ҕH45~9צ-h3%ڙ̤BNlꡂwR8mD=$U2|_s׭Fsپ͕?|Mߑa3ZtI'N/J]%5mPm~{s31b+u]kUfG!J>gjCe@zY'eTNY|Lw-;:N̲
AH62E @ĕI+P.hHyS%S36
g=w?J'M[C6"PjOjN	ZWôú ~<fcDox)$4UW!
^/VOkާגH2{6_nT_#OdPï|y<he#Kpþ	F};LPxŖ/f:wսhqg̞>(+k!>Q"{rAlQTN0Ik9cU2|7a/ũ_i7_ΟXӥw݌Ky0pĝfzmJ1}gOIPaĞl00^uSIK>4kBvAk6rZڷbC&kukǎZ-8@/,uz2ƾFfΥG;4O7Wԏ|?xe=M'yEl:9xQ/Uoaq-H#'AaYL\4ӡ\)trXى~}) 	ϐ5Z>ȱ# Uo,Qu4e('rTrD|2:)x@TiSkۡS51btd77(^/Ah0,S/`9Sb5QYb~wTCo
f|Bqn_U6w:= ndǓQ?f;lRǗ
,3:NT4kǫ=rqQA
ǷRA;Z?T@Fo"q</TZI&C#H .svӻJ"re@hƄCAБ>?4WȮ?6QC%#20FsAi%1	;fEW?b\9{EftHQGr( EC2vrL@ӾTEm^Ao9'Ɋ'%wSâD)ɋ0vKA3>~K(-T
!rr:ADQ]ֻkK/e V^H8	.vfW~"	=Pa[=B2@dB#hqț%նCRf/cL$g?8olYhӳ0q1CpQkˇH!=6-U`q;0
:x(ڮye9Jg#&G/_x5kkfԛ'Zk"rߦn:i}2=5z<S0'uJ22Nǀ̩g־̫$j:ۚ̵J%,~y@.wtpqHB=5rjfkzlTBRVm|R/MrV,s]Y^agY-s5gAgFpU%is1맏"()^',iy{b<Ӧn
rw¦N[bR󫻯rͅ6I.e8=E͕1kT-IB͡=.RSg
ʹ썾oL2JWEJ挣,dЈ6y뎘pK}yk)_F/ɋ|M@,zo8p;qX!B扒V%]Ayq(1LAǒuE5lsDG^3#b݈ww?2a"Js5^		ucdR[67wbp:H{@[GSܜzΒ,R
ĿYyvΘ="Gp6ΜXi^}zT%
RK`4'y-B$ctob.RaLbs7b+ n]8Z4~dCJ6MŠ!29xBU & ikN9j3%Ϙ+".%:X#/פojJ)&fǦw!jA@DJ@lӿ/r-)9j@oD^`iyۮ$QmВXnHpУL߈cjqqz&Stеg3pLi
й&LC͵˴iTfPЛAjiz`>U_l~jE~[&J5^Iey92ԺK>"o>Qh(אG,_plb[H
Oy#\4|u'mDPH'xњm1k?t1t¡k0[ѸrQ'[Պ»VX@U\1x&Fהp,5t-dGz)h\=g8Pb];M]tQ҈;<Gysɴ]'\ҚsN~ ܻ*&h9ң
S{3mgҬs p]f s]?Һ#6IѭCnB>~GStiT#Y0"o3AXՉ&V{*Qqcq/9g<l+0@1RaEok<rڞk>" X7fd^@z5S$z硢/P7-E;k&\/!q
iB?2w1j2^T-mF(>[ӫ?0VR < \Ԯ8/PBPy0\1OVeLJImKf޴"RY3Qr5Ej0X	ņ_K8-_B};^]ܻ Ԇ]T;;xԒ>*L5^arԖ 5:P;Ml!Ԛ/&,L۰*ԩ3}٫xXeDԵ7ԾYP|6]96!k
^Vf]U"\=Rjj
hلybtNhݜ9SѿS-/ȗ'$T;["h&)Lbc-3"<r2麠oفm&y3ՂWz^\#oyՌKrяt;9/վgI;1wӚKHhCP`cEm<oK܀/Y9UbsK]r:AB!E9*wC7hP &U(3odZ'533'0;9^&lo.^Ae/g*D>.D]hdWֲUbTM@ h q'<8*;עt'jGɢ+	׽e1ǔB-׾]ܗO,M8ϛpgG²}|&^> |?2P%.wV0CdxCqA0v&
I6Z0հƪ|U;N_C,y!؊gtc,e1mبx{5%gQ9DتzO.Z))Z
Jwh85<2d; B8hiP9gl܂uMͣb-'m+<TNJ*M2VRs@knäEvaف[+
iIb`'P٧Ǧܟ}T&ٵd\.svcT>&Gƹѧ:,#=J^)2X~V{"LA!%
_Na P[{qcXM30@v*@c`Rlk߲}Y?K6ߟ.㶽ڠ"
p#k{G7aکI4w`(OM\j$f WB8lv{rɆ'`I9%}ڔ󆡘D ABaVxe '
GUtg'909+:,) ~EEO6,)g8a],$M~]ٝD#rbیl{.F qۛFM8lz<j]J۞;kP"1c}в۵#dS,O`uF*s@MEi[/s[禗a\X9ʢٔ)鴊/MqVN`nr#܅bC]RFɄ2Zkܣ;	xM}܁5(LPbS43IX?x x~E6T
^{fc!kt:eA&^+T_&ؖsa/psGɾ5Ph	hO"]1z3UPM{zgb9[{rq;JuޗnyUu<m1B5ޢ$A͎5ehET>5A޲\H5´:C[Uw3
r35zjä8:BEq%N\E2(ը rB<{'߹9=`J\uvtQkM1W%Y{bw ZU+YN& pQ}ǳ6ΏȝUݒڲ[ֱ8̻i.Hn!]_
 H.4q9}iߨ12;yZi>4#bs{d4)#f71:<ETn^fc8fl%O9W9xlf0ǯp
|q]SCZ͙ OuScWe V q)
W
Pz
qXH<-!Fޅhy6p"a)F2qٮVE!KiL.0C]g]6N *xԦ־~C~hq*89Gu8D	,Iul,VMM	pQxA)≑}7ǲ*7F-{6\E(;Pg{\g
o.e,閕%SdƟ?ڽ#^G7Zμ8_8QH)
Ե8o3E@ <kW=CG\|f0t-pDZLa]~PF{+16dSYLTb_`FboVoz񭝐Vtgt7mu9h49KL㘶.ɮBޫhFGiOIPZi<'X+3qٵ+ZEl>|kShtC xM!aK
?I;+4¸HuHx+"&@O(<dn+@r:No2hktzMKs(!#䓅[\|
[~dDCz6
wgwa!#@|֔_};, P22y%d~
qWzg׺Qydޘ
Sρ :1n>~|&#Og!ﾐ-&>E~[EWmg[pIlmݠk
He,'܅؜s2Eң
NpNOV|喒#(ӗ(}(e埍o4qh,(!$T=[~T4ГJ9024Eݙ `^`{O
1$fa
]pw(%DK1 \N8"H#&iEXK_D4POy\(Vy`=-dGgM⛲CK)wZS棤!%憮u[7=kw9uUGsp[,v@_-Vs/%_fAT9_)玢yyuc]0,痝
vit"4k#Jlj'iښǞ8σI僁^[px%"?XV,9Z	F.b0!^NiCsh+^r C$ܤF	Nl6 'ԸBys`GUo7cY蛼y#{=VvBWdV:趀s0}2pд( a?nCo*j踉MiCU<1-#bIRa\seYQsFYWxw*d(k&a[0~Y\%-|)=385Ğ.w%$ѕ;+	A'e-5[VT꨾i_y&hTLbeT33.Z|*ޟ>K<l.s<VՐV1-p{71+]=ID:Nj*P<p(Xf&#QD`
$թ2]K:ӥ; BQ++wAaȹM_(cV>òI9w)ph8q*YiT*GqׅhL4[!֤-"?
*'nCHLp	ab?+#>Pu<PുĿgS*yNN	<+%{n6c!Z;FVb>A>'bɓFy{p
6ReW/q,w{2nh7QwMfd5&:e#>w3.d»{u"Ȕgwɹկ!]r}I?yb+Y⧾>$DZnv{Ҷf>jɣT#
8.%cq{4n0ǯb_+5$mZd>4rkG0~L^x8z-yva
{0yS3&۫ˈAi#RH}_[/M<j/5F/@rՔot/2tF7~w+[?5);>OÂ_2'NpF
l5=-CJ

Zer6kq/!fP^	Z(8z[k6?}
qWE$?sēs+1}a^T\N;v(6Tx!HĻl"wOXo=X)a@
﫡W4daVޤ숰JɐXMˬ6&X?`!-<,KR6Q[m+ј7ltde3WfifL^:Vvtl'_ir?%}+]K	o愭ۣO!LZZ[)o
[,P)$H>c!'(!},亊N;ф]3B'yB<O2!ekL;/BH^2	gV*_BTÓ>F
NDj8ԎP+o|tqLo3pK (ZRCd80) S"^QT?S4o:"yiXjx馝5Hq}hjb5G`yvvҦDtPw`Lid;ބb)7&{H{YjS4E	;B' `L.Bt=Hӝ	'ocز[](ϜɼmR[|G;lц)[5nTEؠWg0e颣YF_HRlv:xvx	A|gܙ?]Do ubl|[(&}
5cqE`V2K-6 (ә=^0}b0z	ڴG۞}k/]}QvmmUXDF}?(jSM3evʘ&)nDdR	b&
p*&P"#!W\ʬg
o)j[P*fEֻlтd(c
3*җEɢ*W
ekVEq9 7q;7VߖYy@ U4V]<KXՃvTg4Y.by:>T+FMu(72O77!S
yapq]w3D
07skOJn;jųNπto~rFx&@3Pgݢg)ƅfcӷX\F^RA̧ݠ]މָKndR|[BO`yݮ\<K%K Fۚˮ]X*_4uji`N0WK.ǀ/BW}vک.WȊ_}j##?Fxq
ܫ[ytI#jKx	B?J{0*JdaC4z^&4	-`' J)hPmz~{rXgR9/OoAC{
2VLzv).,*Bbulƒ*0PPߖY.8<ee,SZf\_>'ap "Xc5PGJLBwA&iӖ="PԆ~0+qHhѣSH{7-U'2<L`z@fxPpew=W.B?IXT|s!d[nAn1V1AE|E\C,Y뽽\E3o,"2xY:YVvJ7WZL/bVLag22mxr/W}^3eO%!ff<@>M^}KOQBիmc4w$ꉍe_jcts7l2	@ӝXɥ;Tm9_ɒNfp;P06.	SDs0leJ4_px Uб'Y&ʰARR'H?|K\Ϣ`ϨzXfXmtЬn$ $3:APmكG#q
b7^
HB^:~/*Nm
K9~m0t6W$}qz5%}'ƒڝHM\,P>̠l7||Skţu:3rVmfcX%ǹ	.fN娰*T~fR¿0 'k:=ezdЛk
VA2C[1\eYbL{>Sǰ/%g0jn'+_V_)zɍAȊpaGvA1 !t@	/)D(endI,IUMcY}#~4+L7xsL93[Q{x#WsZ	s[%̌ @Rzʲ8cҔ<Ꝅ{\lf K[ptw.|&:Hӆv$$/0Q0|r&210 ^sFMA	sGלs$5;L9-}}^΢UReC0S&:VrX"lz		%;๦-B
t+pBjB<"dKqܧ?f.NYǅOuQbTBcqbb؁XF	T5t3}k5pXfpnwBA.Uu!?cXWr~70KSE[h7~e)]|Wݕie祊l3nj߰S,GFUS4O"y1eCʟBi+Ü0%6 S`4++&P AgdU8NPp}9Y-5u${٠YZ6ɗ0hj~J">=c-) h\64_r$o*GUυ(Hm@bAN{^˭QhE%I}OWzods8&i9xgl#"UǱropm3۾c
ݵ/UɎɁU[	Fu)a'UU4(S5餮f%3ٱ
	>s3}H2ϡZ/ްyw 0aǹ{&@Ӄ_FQh]NDI{n13B =SExM?܈]h6OvmBvlQnd86!m .ݤo
V0CUN I$Frn6cٝ#ߏ:u4!:o/+Я/z#q#;+1~#jaQ3qN
z'ɢN@Hmf[PAˏu/[|}e(*
OFuG M
 hMx)e
5	\X>3%Ca;ŮӋaFN emsMJΝ9%;5)jr>2K
6mDHR+O'	͐4%8(?:Y+}ưDhĂ+/݁C Jֽ,h9"䊴Yfvxқ`l#.I }(m?YwCZ
{VAM-\t9p
qY<
}2CEܽKS4B
 `@&a5]J'AYd{]^,X>P0*?iRxMEg_4v'
]^mʼ_1ͧR}JB! u["l_f-HFDjyn#JiJtiE	h`!oQ|$Ͻ`,ĢK&Ib_w,[ n! ;Gծ jz]']\P`ֱw݊/I<Qjܦ"{鿔(ӽŤPN8!
L$.W%R
Yzpi*z"mߘ,;;^<2MJ8ػ,ﰏ&ўmXT6,Tr[e?G+
b%+B n\p#$B3$jWD6ʿ=\&C2G9o5ی8)o38#hFʲr.%[5X=v\nbN'pJ{CyZ<lR`%oX%Hxq#m<򦜓!C#-4X^
fQÐa1҃0˶güKHT1eI=a c^XWYȎDˬFZjHn
n|z+*ر[{T^p`eDtu%Ʈ.4<DBg{"ᦤ":S)x!"/LoF5W3MH]۳g`51^eKL(R`܎c̮LsC}
zR &xС(jP4~̠; @+4fV;z2>0p }yf`x%ESAl'k( /#,͞6H9:üVnYV4Vtz`@`
H'cGL5ׂ0ԉ[YF&-łEF>tz!l~Ht)6!Av,vjnHW.I+A'^ض޳uKL`I3S6pVȱ	s詸"BWjbD
RXeNڸ9RblNW$QԴcRn0&2O>JwT![fû!
ih]dMY
Ρ"/I
Rw$eYk%R4/-,U9tbk0~уI&04z2j=ޘָ2ho$euQ
>Pw)
Er;7Ļ39~H2QC['2RO+6+~WI9^lZc\UVPw
L>,&qIWA	hvlAbYI]LnEڣ	yٻuJ>o}U"kϠ%}o3VK3"cJp0Vayd@)i{xؙ%u.f @p_'6b:O֕RV%:w8#q*^ڶD*AB0]m;Εק\%Ƴ<j(]ȿ1/Lر3^
its>, B
5BQ
7.!$@ޢӸH"gG~𮱃?܀FȒf{SOYUȵuj16AOrDO/vdG; ISә0͛0ϕk{;֜;ȍ.ܟ!Fpx_i{Ba/낍D
HDMRo.X-
_hCMK'Öfkdsk}7d]_Ne5ZzoI+sYh@#LLiD[3VuG\8O9xWޥcn.ZpoS4yqX5JC{³JbDKJ}JF@Ҋ(O56׳իwTKZg>
Ew̥ւTF-3^<Who(PPCIa6;6ǇS5!j8'xi	@ۂ-c*ybC+O{_jru:^CRPͳ9cWP* go@P[	3TZ/>|"VD'L"F\a)IN;[G4ꇱ#"
ՒViSe#s &|&yU	Z}*_g$Tqפ<nU
F--lώ<coUSf.`u䢓W
dYt'g'F+00cȼIs|rٔ"~mHp\o|R_p㱠OAJq.O
[ -i8Z&TFRX6Լ͏'S'-mLB&%'>Cf}U)@k>Q~jhm
I*]:~%e[YùkRn50v9o5'SmkLmJ{[3)ř~^:"euSپv{W!zwpƶ.*;w11?w^^0S2?TOe5=#'EGBtiBHqY,CVnpPoz~S:rnܬ\a&ڞה.\4*f~	rvS|Alb^zO曐QGZo|٦ɨV96LĊYW>YYIvaR[|#pTYA?Q-欜:AOz		 
D\Oz<zY5f}UN׈3ྔ9+K$
 t\&q<ei\'Y!`h_mK{Vg	:Z@R^쮫xq8x1amh3bqU^0%*lQB˛,PrH
ɧ9Qm=&9G)FsRAO	G.Hg(RH6X}g3snФA䆍6g8`%ӿۋή9/:JwcP4;ȵ _X۪XՓdp(y+ӍUj".-/q-A<\FCذij0>FVH_?-e2nú6j芬ˡW]"L줨DOHΖtn$z)ɡ+_Qɭ/WLa
ƑH}<mCN]!!V/	Xq	;Q잳
npJ0-].]͖Tjxq]B:$;JBna_E u~qQ=3y]AE#GRy9 ~h%B&5Kfp٦Wd8,լmkE2Z^}TUwIׯĮ/ATIn%
X
TU2%m~P1L{gyi|	&'x]w[o]7
k׊G.M31:7n0df͇^̥ ۩At*Q4e8v]'OD&UxهҒ}ѳgj&	Vȶ+Ut]'3}!zxw1~MG-I`KƘ[:Gt~8yq$!{OY W^w䲃TbiQcTI4¢mpX!ފ7N-=.bjQ?ɔ
Z7PXVE:%'$gPv2~i F 38+7)BȢ2kR@(m tywfUo4&>;5RA.?IF>z2/n-*ؗ?zSRՋ/;1zxpy?LrS˚t&75Dϰe
lw:lSEՃ
e:g<QJʤuH&xcLѽs-i亨17B!+&tngb+?
݄[(b0s<>(FZ76晚KXw,vIwB:_X"͊[)Vk1d?n	r|wH#Zc! _MlB\.C?N)!}g7Czj,'uV-Dy~H=0m|@)fZ]ܫB$Cm>GKT
hm\ki=)BDv.[Y-+҂oG*
6&G+%7K\&Ĩ$a;<A#9^ʌnxvi!TxD/t):[\i]ɴc[1ϿӸٔpя)qt0ު&1Ԙ;K}Wk;ggM^p]]r
B*f~؛|੼?|CVkW.EcW5䓕aX04DeHxtη}c1OPu{k.J2'VhX@'&MAG.T%y̚Ӕ.g$fZ{H"mEǻky޳&?5TC:hq :/ ͪ7TeZwFdTKKVaBJmjP0ZܔibIO[Û9;
'+i爎쾡ݙ<ev^߻-}P:+%|l>9AeJZϱڹI<ӇH4ȯ&=>$q"$lp*
6GwbR)[/u?HQ
cibc앿F`..T}QjGMK=I}E^:a!/<M~(|tPۺWU׹Ls/ٚFeXC$ۚ
#;c;ܩ	,S,[i/foOdY#>6t:;'%*<Bx+aGʢeGQq*,Z}GNoL*q{k{6"4-Shg#Rʷ/r>/p~YԩA<fM-cpK1a?!&A{L6 [&Z m{ߖPc伔*N6CFI⑭+L[3\:#?yT5;;@Y*tXk.LM
i5]a	۝nNXp\8
WwcKe%WϹ !Q4݊Y 
~ݚj[ײyFhg4	]͟1
yL3O9`|_9Nd3@8VX˳
Y/GA"Ƚu)0xA@G3K}yhi}isj`\C˧zwݢc*{L4l(f,b)4æ0&=9/V!]	5r|	*VY2B|-j,Rt?!ؽ	D!+0Ug1wʒ;ѧ QӥV
N>|%uE'#Uoh&VvXoDm\&RBFR;Pޕnv쁼\ }e6+{Sokl y?64بI!Ov9Z8|0+B54GLe@G4{ld?j-A{Uq-yj$oϷ؆1[zb`q:|6
&0Õpr
qt67n.o)t+n!'
Ѯd_̞ZlRyV-6$f,yG<ЯUQFJsBg,]qe.X`޶ew{}#ޡf" \V
VZ&O2;{8kn=ȥŅP1
,]嚭FH2͢/H1H\ߏ73&&F}

<>r!lM "נɁ&2p]xs9xfUy?OMKhqpQB-('D>?DrqeqOC822*	ȫgT81eC,5
,VͺC=lbd-^9Ui
 vRLE][+nv )tF(|srZ}!>~uzG (LE>
G1hf*7zxnjoP?;ڠ⼋f94#|RGQvChّRN'>FLdƸxEali55H6F+5BP~5CAR;	)ʗpDL@D)WR.
|'D
G㟈Qy4RP&i(ޚik$h3^Q<ȆRU%>"=Z(yuyllɛ,.~9 3WO?8^=TZqӤa`g[D4	Am-Eڋ}\dV}V;{U2l74~LѹʉPw
,|x6HExf{g3'vALkK?Ppn4	?J;ݨKg.tQ!e?pw'pc3i^{ӆ-ϲVXXNpIώlu? Uhx$紶VBե,W2sݷ+y,u`o&JdJýhҙuys0P oL%mWsg|Јtom`v0Fp{)@k^Ս0=+X
*ji}J<ɻ8*GYsY~Op}_2v2qۓW/g;ڶPݛIe-|P     
  &  6  R 	  t  	  yI 7  	8[ 	1  K[ . :  5 :} 	Ԋ k0 6 	 	Z{ 	^     	z  ( P H6 	1  
 T   
 U te 	/  t7 	Y   	 l g 	* : 	  \ 	 , , 	X  a
 #  }n 	C  Y  ڔ wk 	  	 
 	x 	.   +  	s 
 % 	   m! W 	  0* 
\ 	v	     3 Vl RN  	.  	D {     ^ *b He 	  3 L 	   | \ 	ј 	̌ Q 	x   P ; 6 
 \   	 	 S  M  dL 9 w 	 	- *3 ќ  vK 	  	[ 	 	    I{ 	ճ 	   	 .  	6$ 	E~ 
a   	^ % 	  }  )N  ܣ 	K   	  Y G 	+ [  uU  i  Zi  	1  % , 	 3 	 	% 4 
"4   ֪  r  W. /  +q 	w  Q )4 Ӣ 	\n 	 k @ 	y  
B       
3 	-  U h   O < 
& 	 S 	TH 	2N $, 	+  	=e 8 	0  	 	/x h 	&  ^ ǳ ;   `_ F 	
: H I  
4 	S} Jj   	  
2\ 	 m   r H  Ǎ   m   	u 	 F  ^ =p  XC 	 	!   5 	 	s   - 	XX # 
fr ?  	? 	 }     	K 
2 	~ S_  oM 	  	U   & 	 	 
 	Z
   	= 0  & 	G 	  ( !  ~ 	t   A 	 < 	 	X "t  @ 	Y g   	   	 I" N   :   	 y 	W Ȉ  g   	[ O 	* y   	k 	n  Ȇ  ', ( 	# n 	 	 8  u  	  qW z 	׍   	T   ;  	~O 	) ag  & 	\ Q h 	  r 	 + H  e 	<? 9 	  u 	9 վ ށ 	g > ( >    	 k 	  !c G:  	  9L    	 	 	v J  p 	Q 	  t 	 	 > b  3 	  o 5B 	7 	  f#  Y4 Ї #   $B 	W   ؜  / 	 	 
# u  f 	q 8 t 	^  U 	 y 
" g 	`  	  	  
  i   *  X  A 	o 	X- 	 ' =   l      8 m  	 6   	 JA "M     ; 	Y.  j 	 c  	  Nf 1 @ 	SU 	Z7 	\ 	  I ] 	    h 	F  L  K 	0  
 P  r (? 	(x   9 @  m   	7 J ; 	 	 	  |T h Ld )  m
 	 Y  < 	 	Z 	:
 ? 8 	E 
G i  ,.  	 5 _   ¿ w ^ 	 	, ) 0 h , "J A  +    	 	6Q 	_n  	 	l  N  G    _     	f    	~ ۻ $ 
  m      U 	* 	KO    O  	D A  	)  r G   < A 	 <=  	 	 Z 	 E m  h   	* < 	t? 	P  	
 	f  ga 	A   9  ' 	+ 	 ΰ  
 	-   s: ڝ    ( G v  Xz  	' 7 a 	
   	     % 8.  21 	{] 	H 	Ԟ 	  k L  T 
  
 	   AG s  Z  	Z 	wi  8 	 	H/  	9 	u  L 8   j   H <j 	 	'  	=8      k F  #a CX l fI J ܰ ; 	lv    K 	- 
f=  6L 	   9 	  j 	 D W 	  R X 	l > ?B   ] 	8|  	Ց }  /   E 	 S2 kT ` 	] 	/ 	 y g  C  1 	b 	 	{ 	  1n 	Ǖ 	9   N  ( 	O 	 
'    	 	 	7 	E 	M5 	5 o 2 l "   
 m5 %  q  7 Wd _  A S 8 3  E I ) : 	 k  . 	 	m K0 	' % X  	4   U 3H 	HC l 	 	  	   d 	   #  ܨ   ^  H 	 Q '7  	, 	R   	8 	o  c ^z 	l j h K   F -     $ #X n   . 	     	Tt k 	{ %  z '  m 	    i  b H U L    
  M  	m 	 2   	 	  'd 7  W  	b M  	_ 	Ά b 	J 	 d  { ` 0  	_ 	qR 	 =9 n  V 	. 	ZN     	@ j 	- 	_ 
a 	) f 	k   
  V/ 	 	 	H 
c `   )b 	/ 	\ 
 	   . 	    	b   	p1  * jO  w #+   	 :  J  B _ 	 H   	[     & 	 ۪  	   j _  
/ m 	" 	1  	λ @ m J! 	g 	 k     _[ ) [ 99 Ĺ   
 [ 	͸ l 	-L 	  	v 	 	r y  B  1    %!  
  c 	f 	  
  @ 	 ? 	8  		"   ) mU n " 	u C 	 ͻ  A .    la  < 	] @    	 I 	5l l F  "  0   	ߓ   c  Ȟ  	y  y 	T n  	  ! 	 e A $  Ĭ  
 G  i 	_ 	HY  ? 	{ s  l 	D 	| k + B  [   7N  F' i} 	  B 	
 8V I 1N  m  }   	E { F 0 	 /  	 	i 
  S.    q 	 :  	 	 	F 	   	>    	U  ޖ 	X '
 ?W  6   m  x 	 ~ 	$ 	
> > 	\ 	  m  n  x _ D 	C u m  4  /Q 
  * 
  ^ 	$   C    # 	Z D   n 		K K 7 Y =  S 
, 7	 
S= Xq  |C 	?%  p  H|  FH 	& 
C 	Ū #    h   e 	t 	 \  E  Y !   =  	s    L]  :   \  	7N  q  :e  a F 4    >  	  7= $ 	[Y  a 	 Q  W 
  k 	6 A 	 
& W 	r 	\ 	ְ l@   	 "  
 Re    < 	@ ,  ,  

 	 	Ϟ E 	 	  	M 	  *  so -< 7   C 	 6 %q  +   	ȕ 1P   IY  	 L B  Ql    } 
 h 	f     	(W 	9 	 M& 	) 	`   	5   	  V .  $" 	(  	l !4 
A k%  = 	' 	.  	r\  kl &j  	D  g Q   } $ 	  f       ^    	2! . 	y 	H 	 /  bZ  	  	 
   U I	 	; 	    Az   	Z 	I  M  0 +  [  	~i 	+W 
^ _ rW 	   n 	- C 	|x 	>   	0  w ' 	 	  s W   	 	 A  ̄ 	6 	r f  	'A a 	 8 9 	W 	q  	 9 	 - 	"  	 v 	 1 
% %  	/  d  	 	 	L 	     O \      M 
 	K *  {@  9   E@ 	)  	  N }B 	 W ?  f    % 	 v 	U 9B +w   /, s    	.   :9 	A 	 	  a> <4 	(6  ؗ 3 X X < ! 	   	˘  i 	 ? 7( $ 
L 	 ,  '  `S  = Wk  z   P: 	5    ? 
 	 	LS @  z 	4 X & B F 	7 	
 	 [ 	4 <G  	 &  C t w  	B 	 	   	  E 	\  f C UV  	  p ^    O {  	{ i K  	  	 	 B  , 	  	_  m   	X 4 c g = 	t 	 
	   ? / O: 	 k 	     < U as  2 	   	H 	  # 	9 	r  3   	 	   	`  (  
 	  -  а  t 	~ 5 I    u $ 	 	l j  	\ 	D 
Y 	χ ܸ   o mQ [J  4 
  
 ͒ 	F- 	  c    A    :3 	.W 	n n 	 	 	 )    	  	y  Ơ 	3 	   ˑ  i 	v `  2I  	S( c    E 	 	)v  	¿ L } 	 	Ȭ 9   	   	F " G 	(  
!   l 
  +r S o 4 	Y    	 > 	ғ m A  W h 	2 	  R   w 	 & ,   l 	d   | 	  _ 
  & ] 	 
 	#c  J O w    e 	b   (8 	7  D * 	X  [ Z 	    \ 	 	^  j 	   !  r 	(  	^| 	 `>  i B 	 	 2 5 9 	n  
F  	  Ґ G   z 	  	X  	i A 3 
 	/ g 	~" D ܁ L  |    m
 	a  J 	 	# *H 	O 	 F 	 	   2 $Z 	   :M    ~ ? 	v 
Q a     	#   	 	   	 2m x  | 	u 	7 6 	 ;&   	 >Y 	a e & 	 	  J~     K L% S 	D  [   h ԃ 	tj 	 t  4 	h  ,     	S l   H 	 	И 	' 	z lx 	8   	lQ ~  3     [ 	  V ;h    
Q   p  ) I , <K  	[= 	(  u 	' 	[    q 
F  @ o  	 
% - 	2 _ r 	*   , 	    ƙ b 	أ ] [     ܍ 	g 	 A  @ 
ar G   O i 	YD 	 ) 	
 	_&  ?$ HF 
  : 	Y  	_ " 	 	'   = K[ $   	t . Y 	 	1 
 ;   O \ )  	T 	7k  	 6 D` 
 "  v    
  N  	j  l   	 	8 ¯ &L r 	  e   	) &> F 
5  L 	.E  > ; T  D]  	(  HR Q 
! 9 	   	ɼ n    	 5 ] % ,    	8/ 	l 	 	5  \9 W 	|  xP 	 S 	w 	) > 
 0B 	̼  	! 4
 ?( 
a 
S |^Ⱥ$Kb]W.vT2C{%(Y'q,1^
**-****-****-****-**
.git/objects/pack/pack-dbd4d95ec8ba244b62bf8dcb5dba57e9d32e7654.pack
PACK     *,xuKs@F[4oЊJD5My?DL3ws랪n׷ǒ.D!z,B@ΫZUH㘫qK
SDLDc>O(&1Ģijzn\ s`WR eYxjWy{"{|!oe:>X֧CY1g\=Xk8sc20=am[
#X^ִ׼4z2
@=3O6}_aS>@c+P@')](Ax\r(B	86Wx#*klW6MicWpҒYh,Zu)(C;5ʸ?KWy˃8HCx}0>\{m8;:bWCv/_llQqbq֕j?ݴ1o%mvxJgѵ[q@B8'|j;AxBh4:d킋oas<SaA;~ƸqOO!ki,c߸ڞ-xuKs@SyUT0T5M7 O[_?:ŽU_{6簁%iJKW)&YF
jV$X{,h -`*RU)ai
VLM(gE7y6рԂAewo ZRLH$	ڔE<׶H_y
-sس|"]rz
@s	YE+OaNKMUmbl59	?8^;m7tИL[˘-Q%{@*wq"@<lv*aժ=['s\x\G)M@HzEd߳3q+'q.򢊗|7ߑg!cң_[c~wA@$JJ^V9uyלL+w(4!+^˓!QZr|p(u2*)hΎlu[MbED	WX+KHޟ
qWtox]Ӎ,pbeF5.H3Q3|(i5xuKo@JR[70㉁__M{7Gιgs:I)@87]=3	qs]G6%Ne.DNf&Hy4XҺBLl[Eps@8N54[o^9
\dt`nl%;	BqW\X
;DY*oDT?fY:D6M ;x{}BҦ=2?oa-gQA ¹Z/Gpi}{?O&ِqy#nvyNXhB1S@٨ A6
_~_ilfîHN^dr0`En/鰞$
35&,5q
h+DdNE0nҗ/7UYy/N[67T̚(u=BS
umv(R-v{#ΟNLTNEڜm;S\==Lu0{y*
)gjP]]G[8=sb1}ZW{MԤ|/Cc	Co2E?c|tfyŔg*M_@SO|RT 3{BլgBDڈk mTuK> ~3iAxKj0@>(C(D02ǅ^FlӼXP\5Ű$U0O6T|B%IMp&Ƹ֊gG
pˏm;ýr<*K>}oF|vNEltREK̬28jpJWWf
hXxQ
 OhٍD(bz~
<aju =u&xȽ8xXE#YR;*F2Q,Ĉ=ьYY߹3\8׏JWȚ9GD4-j:)ǒ7MUjMȖ5xuI@rJ4K#e
{bet3_OrHRWUﵒ1)VElns`Xq,HdeAô81	E&"0!Z9cڶEJ$Pm(eBh"H]UգxX`\oDisVwr_-|Q*Zmy;VV#۬#9KS<?`@w7\[OwF7Wcy2]7D[8ճe^],ף*wLFK	1"0
$y̳-k/ĉO\\WeM ^|ߓVƬc5qҶvja]|X\B<8Z_q>'2\Up|5fQ{qh@o_0̴tUl:+ 

z*7A]xxz:&nތ8Z7DŬp{J<bq/ pMC
a耯
wGvߎ)s&SN ٹcM>i.*p1˼}us^ZT8Q7I_ TuW% ˴+SVi^
 {$8NxA! ﾢAGa	ٗVDm1~?^PTNP&W7gq7-^/"a: jj_=es!갛mȞi59-p'w|႞fmK=po
j53Vj_I)NZR>>\ Y>C!<:x1[x	0bHЮ$KB. ~KisxLo9CtR%XYg/d`r<6$6nyefFGF֐r>xiHA"Q'o
^AW^6*쏱4_ZF;)QEKN?.{K3O3gyڻ6M֐xK  ]@÷sڤm\d3:3M6{.ٔ'c\0Isge&8%fk82O:<A,p
;pY~Rpα+(gJ 'y8jY?*`MyÝP,4xun@E|EK2Q1vgl7Q44$fjQ[ 2i2љ$LA&%F(T#&hMu4$B
)d,52GUU¡Nb!CRhFvy4GhMsZS$TEEQ30opy9^$|(k)Jx9I"tYvhmα~;Хe47fζs8Z->)4n:+*޻}kFY5l`ÅZ;LDd];e7{ 5J߆8tPS]/};uζ 8*^jv:sgyp)P{}\Oվ$nl>N͎i=
|'>ԣz5P:/^PNEY%;d<иcSgl/%!)g/m	g^ye]*-Mwsbe\~ߦs5:@#sy(Gճo&;&B,C5[h8!
2GuTe4	0jr*+iB//bYpXEyXYܔ	x̻m0 ОS\GQ@`vNcD"	,<Sbv
ҽ&9+GS0z
d0hGZ$wг\$<C>HpLALv+^ܨ)2So^FTzq3O䝆mVֻQ2u2^!_m}KNC==Wo3xuM@%)k U"(({OE!-KV?}k1E$FDe)"ʌxEb(8yE
$IXa0CG1F g&aFEP,'*0DQ#ٌR*J$g!ϑ[w`Tc'HNR&VL
ߣgBQ7Eul<v-eհ:L|%uҦ	x]nX5`o|poHSUm;mgGsO[vBcJMR܂ʉk!O0Yn:z#._l'v[uwٛ^pWp?<oɩӶU`_W{߮Ou~8ACdcm+"e:
Nї_Qm
m:,_I|ϯՁno˴nI5	qܙ&p瑰IY9f\zo!VqL\փ.%2-%2~Ұ*Vǣ^e@Jh=]e8| j>Nv.U}޺*rſ$Է<
Xہ/W@ThnmMkEq(#iQ|uHѪ/AQ[ξE-xur0 E|xZL	`c	0a菵i3sVG4M(1!
E4,j(ShI-i- TaL	Z"SjPulBSe]ϐDzqm8Qް黎<}jy#"JUE7a̠VL	C-ߟr&}-o tC:$0t6-v,+2mtvZ?XV_*E=hE|rE3	]?3miC0է(k
{>n#W"Mx!%ЍakB8vAOV!T{Ž#ݢ9m*i:6I4+J`469gWYaV[fXfw]AVm,,#B-K܋#Olv81AӪ/W/cmucu<TΞڻ3.[WK}ϳڳ<ٕ7}U=޷|T?)XSEjY%ټH-ſIAVq>m%PI2c႟2xuIs@h`X@hE]\0,2~};%үKR,a*XSEMKE
P$jP)bF@	*)BHNxBT"*U41( )ןH*c&RY^Mn%*XHR}0`70pp
^/woY;iDB(!	<=hU=}TlK0ږ!O,k3,^c.X;n6sÃ1\%?bΨqto6¶_Ecqm@dl,u'4Z(K\B߅Ѡfk0&?<n4T	y|P.\<<émK֓plĎJuzPQjN,{<LvUvΓf:vc
9up)ļOMP-X2)w-'ms%DsS-S
'&tRɚC),6Ln f"q˄ǏX-jʁWuO,0zh׃o5`M6C&?SWexQ(5U840<288$952< 0mn ZA+ %$U!7$#+Bŏ ZxM
0@}N(N@DtZ)i-xWYJ4FBʐb(6jvӨ-0b9xZ:6gȁԨ*o-k.٠"؀P)qjYz?b8&?eI,xuK@ 4DnG@ׯsݭK%_R#-
Tȉ #d	E)Q"|q(f̙Т!0-8V.KD,r`(WLE'ױ)0D(iI>_UK{ַ '
"7VfYEfD3.)zZOkZuoo.3Ӡf*ƪVڙKOSWR}67H	|iY,NĊтSKaZ'ϳ9Ci=Ean-0N57ӨwDb2p,fm`+^G3O{`\hO^έ	gɺck ѪSEƲ=͗F0H:V8mXr2 -E~EpT'tW>pd'sϟ{zahgjq*zPs6BttZe/:
Q+ͳ^ƊNrO|2s:~	93tZ_,xuMs@[T%[ (*z`Pc~{骧qPș,AA,KSQeZ"X-x= IXő
C9FPҘ*rTc݆<UXj+V^^"2/L'aϊro1xG^-O,o˟x|q,۵@ &3mB-NjDs'$ߖ"r&C7 idOV^'ߏSn[isI>^TlʀʿՈQTPksla{'|G[iYzvЯ6pgm@󡵋
ieI N9tPeM~wG9fq
lowXI돈~vaU፾egGy/-9
8X/nuhٞI0N d!@EרX,%,$U2?=}˩^Lض)8Xp׮~+[+xun@ D|EQbYd/nlL3u)IUG$0H9MS8^KDbES")Vd(b}P`)MՔW4"8ȥ'XUILDd#w=q^DE/K©2*xTci]P|_	xi>-+h>̲.<n|m~9pHGH_#tȽ(MŖm#k.M'@[Fˀ]vӂ@Uis9;[a]bslp"Ea^O)v{aͤi:KS?Fg7Ng*@pǧIJ^ush:$K
]wUvB3XV˹zϪm3gX ).,
kωϯ\AJRF~a^x58o*֙*<;7V*`tWTat,^5mnbF%Z2K؄xۑqf6Ƅ]i&N@Fֶ+xuIs@ SݲW%SaQ$FnMd_?:.z5c &PQcIFH")5!	h)ec&r٭Xbƒ!ksL4f&wmZ.`׸7 |$WZ D\T!䞴ږ=Yx5#ڴ#%Ud	xca;.lnsCcPC
S}͝Vҫt=Z9{Ǒ>ܔKz|ܨp
vΚoHUܒCf6̅ye(XfӰ<KXZQ-Pމ;h:[w#s/[m<VY9\JD"5 yH.6H:=#G^G[ν	fEs`	[?Cp듸d9k2y.6:1j,P_9Pa>t	GZN+8R
7QiJdn9)glZ~j
vٙ3xuKo@Z0V?Ƙ`;fS2ɯ۴n霻8FBis#;3XH#Sa.v !X`%(ZRp概JzZ9d@*A8R"	u8m
xh
yEoo I
vU1vd[}ϋ86|5#1x
M7׀.=6<:4Xq^\WaNU-	3@lV{;/޳Io!ۢ)9N041AXy{Ů:5. +u-UƫJyڢzML	Ni&qv6wC]Z/`qEp_6:]
3\,}hݴkg5P_MaJhߙf:bw0NǗ.t}~`]W>?f?O

ܥmݠK߰.:\j9k6+_5-߉i+cYNF1P]SZ]3bG?m
!ŭM^J0-Qh?@˔xKj0EѹWQ@O!IC&DUex
d.x&$bDf6SDLs@Q C]DR9Blg'樬yɠVyc|"?`%UZ"KcJk,vhQ,εMAӕY>[غ~l[2Ww2xuIo@he
XJFm`^skfs'HsK>{jc@g4%6'-*&"@D
)RE+#9aDhXŦfIT߾cD:Bj@,
QA!cAJmR tL2"HN
|~Mr³Q
l"xMY>iΛ}ͼ
sQ
Ve	o6YR%5OaV`n@+k_\jaSa5ᅑ^	,:<kctCw(mjzk~Hp8"\,S7#٭%҅LeJ,9}oԳ_2?wuU	畗CYlF5.I] n<ӹw]S8Yxɩ=NjX\mQ${̑(q.ojƸAӶVdJEfJ-VAqeؐlof{LD52Lѹ:*I4Ӳ?
ZvyHe\^D@f޲?U(s8>
bQޔB+`κߕaŝxM
0@}N1PI&IAu~
m$Ŀ[.߷x@INS߻[C1Gb]g\ek`%Ϩ'Ζӄ'C5hs0*\yU^0T8vxṔT3tzu]Z?F7H^ZH,xuKs@ SUVfEQ
0)l}骯=t >UQDA2I"Rb"IRwܑ X##+(<+`QyAYG*yW%
Cv@o7 w7\ԯqȫ*

^a/@*a;Fv^/Y1cXv"/Bn
Q)@G1!t7{h/pΘ!L0iV`r'@eD
Vi4 K+&䓯e	>DemXaUj	44"d}fzIKzsYY}J7dz
hC)3
/r/ӥ;(_dN]Y'zl]u^fUFh85sW&UKFreȲP /&ޢc"U$2K&sW!	iHRoRHPMg֩u?0cxTjHS;޻S?iߋQ_e@nәG+xu͎@<EM`QtOQEEw" "Log$_rM ]	ε&B#"e5 QuDE	R9Q18)FXX'NUfS`
e?(j?+ˋ׸
D!@"cYpUbrqز:kÞ>X`|_.	&c3baOguuS8K٪L3:Wrxl *Ώ܆qIqCnai1uJ$I&o	{'NofymX\	EseOe|aLWU]n%2;;|/ypLP֥+hlt(BsOry;y*P猶9^ߜf%_Gz*MZmCL҆<5/3'@gXN~oIW,w+:krofNs#%4]I7&x+@=<{xKj0нNݶ>6!&lr՞,Ț?9BVVU!tv(E<sC͎[#+[OD Qzv4xR齜Lwx=2:Jz?8tlNKk	Qu|QuUz=iTㅰ%ϼXf~ LUxK
0@9E.LMADxd+i-^oځE&B/PLD$HޏP-5cֱ C	qPۺ
+>i%.Sy9浞	.&)D}@ν%[oFI4xuO:|
K]Fi0`$&7}y<c1&!|kG#;3gsFIƀF@Ա4LmӂtbaT96,f`p(3(4X gDG1)Ai0$H&&%KQh%$x&ҀOJ/\H[Zbۦ溭ړR)(jH_x!x_r0Q^	E;p=\\]wשl6vQ_oHwVqzΡxf6E!\Q
6iGguz۸Hg)tV1Wfabcثח!my@VV<y*q" yI:4deUCq".{
 /z3lX;Puٞnf[xW<qcoIdOms25긏!̵ꝿWhs;^NTT
7䍋Dbz^@qHshpWAKO
?Z]>xg͖P5]YNL{e3
u
$W4tV IڡZy#"/ǹxzʌɲ&ٜt]]?KTmـgs^"
6xQN o|n)417BEy\۽O݂L5<C{m,{7=sXf;.KqqpA餂f\T~xgȖa6Xf{PΜW(:e|&myr#ARCk8rB*+$w
O
J("})5U۟j3ޅTІolo2xA
09ſi"s$?ش[f1LD#!{f)g-`&K#bS$v4EۧO{=փtǌ
]ƟmsZ땺w8Nk[䏄x	NU1uLxA @=h(1ƍPIJk M<(!֊\2"IMѤœ*FBĴKRZ/`SOl89gTEA*ܷTFU*yQh׹P^V.0QZ8H+صH
ΐ[{q;/L2xuI@rDY Df8mnM,64}rKR=D904skj3ؤ\A2eAP: M\p
P+\8CB4r93M),ĐdI(ʮ~6IO҂hHUg]Ha
&
VAJbz~o/E%ʑGV*wٞ__Y&p	H:̶,۱؎_iK\aղEX9=.a$ӂWw:9b+Ttu=N)]4<FH^iՒ"{Elnv}}8!ĶKV&9Opf;DJ;ܭ%a)\{۷I5ei@}r{%ͯ&t@JáeՎjZO?#]VKki,j~ZT2]yh6u(UMBxFAhg	<j;2VBǺ=| ᱫ>H;ͫɹU$%<M[3Gx=j0{E%K&Iv,qf`ZȲ.,Kqr%,2Fy3Z
F0vRCbAa,c^KGVSVہ{[s¹DX>ΜB=
8hIiқ|~><
B_(QN_k^ %x}:cOxIn0 ~EASAQt$Ė\j7C3`<'vn688^tI
h'42Z{42L8#˄ggpXVGi
նm\$}:yQ|
"ZOOf4[xCq*8P
n:F!+C J
I@~UR9A܏\>6 m[xMn0@=(0H7A68w{Ra4UZ] Y3qDrV`mwb$=~q=\4(3\x&[.P0}ߘQύ{gNTHucz}ӻ^UqDWcp* Z
12SW=1Ĵdj\"jh2xuK0
K]F10HӪ&o2;cl 'k~:JGG5pbMM['.ZsLH)2Si5iX G<uSrlQ)cr;G.
'5m&ONc(F*TO%DHRJ$J+n!F
^P=_*&୬VGV,˯t	ރwKoߌs
hk}{?Ɵlnvө/8@Dbg㞜B3Vv»Zō,mX-裑ԋxR/
~h ~݋Gf'԰Fxyqydǋ8ɹ/vgT}:G[9>#
Fc"3jb;ϕ^=w_Yz$gwc/\Fq_6V&%Bd`YGf~\pQ#CuK}qa<rxv@0oV,zl1m*h畵
|u`vI}TZE]ӆU0@[3!2h?NX,xur@ E|EIh@ 25hvMwDd3wwNս[ 
"U:T+1!%iTgA*TPMTSi
dB͡.Ml:qށCo=
DETdQe#n>/ej|
j%v n}dx`Lbi,EZ^Mn02yvF2VML Ve/vjr5;{b]íAij%Psb?cW)n F%Gw@hb}. g?INjcuir4tD"`JR8ZIc}fi[$ ˜9]k]4FdcHO~%J4JYZʤzce..c׉ݦ]]*ro۸w))FJ`O՜
	~f?&XM2AwaUU3P'
XD,xuKs@  0T%[(f4r%/y˯_ws>tW}a	!TUY(ĢɁ$Q!$t!Q&
+;@1eD1>JDSI$PʑKG$'
)H	Dۏ iT/ ,((G<=hv{Lݦ୬V8풞qtcmY;hm{_蚦/5-9}JI6֨iƲfkA
k
oV
jYwkuّjAsX
eWl&{0n{4_q
s&=S%#[ZBϫri;6{%"23HfRPdq@汈72Xd
&*HAݵRwe?I?=_/rm.@l31=)41?%f0<+BFy *P<Hmvet:?rVv~Jd8z%u4gcC1o_b-7+xu͒@ <SaM- "(m`FDէ^CW}Uݗ:@#R̐&kG31"c)Ӛ$4c r\,סPgɊL p;$J:I^o'g^_@R$Y(*EDQxR^{NrkUwߋr8jESe^ȴ7 	.r`42Ȍ<1ފ>&wdtƒ_$,6Pʸ fxeɷ+߭Rf}.S6SYX8\ݭo1?z~%z*_Cū^Q'^>m<[E97NI'uR pz?@UZC}>*:sf	Oj\5#~}s<8zIH9i]8s6&^Sl_V4HFîPqo}:a%wzi[zTwcק
|'oxs?v
%M+xuKo0 
Q]$)aIȃ<n66_;>if֜D,3 	TW
ɺjQAeB3΅
ASBBLF,RTE+r$##@\)N
`Ԥ W |$Iר,~A|.+xigE;
ޮeͫ|HĒ*i=s\5\ǻp; #c{>Ilm8gn1.-;)$l*?K/3DuŎjEŷ=]f Mլ
-O__vZd6vJ`^
4k:^Yu!31(?gm!EZVjzG84clU#}^-|VJZu=9iv.Iuѱg")Yhr8p޻RCH4nM[p#1k䃤
@|KƔfKͦ;Itl+EcloSbS
g3ǄbyoiE2xuK0
K]FS0`LUdB0c !M;RWӽGG:FAXLW uQ3IP4@%Z&"hKKS**	U(Eʨ#&ԞBH
1AR]I0) kgVH-C/(ғVEgDM\Ц̊.eMx-X+g[$pkq,k<3}y8d:u<.[@fs&.m[3Y"sj~ ?{EiJNE7WRק8	8lUFln}h&~V6^2K?=BϨ`z
OF1PIŉU70w?8vK3oanlnL?a=x	S	@na}?rc;hgO=c{nv!ѢbVqPV
gL~,,tYe{بqR^}/#]1Moi3k3{1iNEFAӗ%mA&xXp~ܐ._$))tASyɕ2xmRɖ@998lb{PVQPqT!N}<eFFd"h1X0C20/HHTE8kS 8%E4@2a#I0!x-5|JAxzihJ?{%,?i,M`
ńE%m yQ2޿Y\MRe2lew_8<5TEQ3{i.:^z(JdZ|52`NNI
=	fWhTP.65u_Qp+#a
A2ʩ&2Lz3/3`l.[Dƒc[Py'Oz~r9zř
t]ϒuzrRN*xR7d*C0*vwS77,EaLmvEm4b">6lި}UF}ZUNX%۱jc:XϡTi>3ux5]r{<R.OOoyv0ߞώ1z¢-SڕEIC0DE0B?MO~%Ia?L0$AǸp4Aѯ,xuK@ Yf@#Plh_u.|Iեj1KPH81^AAH'q0NVTH"˂g*W$CHGQÐ$!"!;O%Pq;\
oY#˟Jyx̓0gE6c^#Mxِb}FnSۊ띴z5RE]+Q=ZII?|Μ%6LSKNSA"A*`@;5	oya6:ɠǳ>MyYe-	zWOlib kA婾g3>B}W9+veX^\l'{ro_u,^b|Z';`ECVsF?9,4?ΚxC=R&2@Fʔ;:FIݟ/*F(5c%ŘivpA,@	'a.Z,D
[ǺSvwҗGy$'Dmv^w7q0ߛiߋ1^぀ï-p?G
Lx
! ;UЀ$h)̰n\ؿ%oͩHV&HQ}FGIp1c(@[	H-*Gz-g63v6s9IƨmN;fi]T_mDxA @=ahGPx|{/ߛ-U<fD
BFv08`)bDdk>r$q =I9
*0᣿f7ۼ5폹{ޭa!1 sj})bWvtQ?~4xIxuj0EȲB(B4
~U[
[VDwCgӊw#L)ǨcqEx%hSmH*_/]r	0S:'ľ:^;y'_~q:u>uR8ElvkX_ e-MK?a̚w)OZ!u7υǍk4[*5~ cxuMn @=}0 EQVm/PuA@8o__OOzA0IZEf=53N"!XQ*%ŠoWMNەR@\*i7n8gg]vH{ڱ$z}]{z ^}#(8JO:
J%p9FHڲdp%z'Z.xuN0<Jˏ:h!vM:;SXT;ov40ÄZ"I;zv^h5ֲ+MDmXx
"QjЫDJٛUzkD=^
47$ã^s.&xňp^%a.gJHi(DjVAp^s-~]P}pY#F(y^A
s	o?%)w݋p'K@Ͱ4}qxm1 ?!.
I~0F)'J9$1b+fHޣ:yc
WEǚ92`m4b%BVZq<ʄ{[+2O~Ir41c|iZ%齭UK?~s)Σwx1a	2TϬޢLxuK!E罊@BB6J6di8so{=bYAI΄(Xǡۨ`,DHh;D=K{9H(QL+\rے)/
j@"pBck|\\RyKsw?f?'nZy{ !I]x
0 3 9	!`'uiQNW*cĉ=6[u4k d[O^(0S.]RnH3^`J,\9OY|{8a@4V5󀱝묰BUPEyH
x
0 "RǮ/pTj(Jd;]f>J@CG$ BSH2̔uRjISW2O3YD	4B9 B4riϽ%Uu;Rt^n	`O Ӳf~}!C~xKn  =4bg@$`3.\!'qib3m
@GdmHHH>x"_.1,5qo˸q/@59V2F~窟ZQ|?y^}xLx[
1@P>3 VҚS+۷k.	τ6+LRo:eP0ADy	vJFp$Vg<Zk;W~ڦqMmU@OԺ!.z| CuxA @=a&x)A=ۗG&䔉1$ܒ	W#!Ԑ"B`Lo⬍h$;Co+Wxm<ƥ^co1@ʜϫER{IcsU?JI6
xQ
 wO651vhcWmv{Mբ801RPrqs搦[\F({!]3z r`{sUTc/\eYyOk
".?)z.A
x[
0F"P&m 'BJ5qNo":gpHDq!yp)SVo4ٺ&S'7NpfO~tD	YL>7=3V4Tl6李+zuBHZW=rC D xQ
 wO6t5j`]%j;lz_(猐djX`
9B|iȦb1}F
̂5KQ2T(N΅Viyz9se_փs ڛKΙK*VR*'ExQ
 wO6[1Bmu_ϰ~TSNb1"ƄU4Γ9spӭ"F"E 1Ō0TgovNrʛ}e\+/]8kC KһӚwΚm׳DexM @=71F2Pb(.=7YFL%
\N+)l",4x202A*_+bRRG}FgK5mQKcin]*x qj[^,,ߝZ/IZX G]xuJ@E:]I?aAݸ3$t= H6{	䙭:u+U4]R&Z8G#`siK{9&D}N>9![QAEdRAwReIhJ.pUBw8pRnԚ쉩n:N[ֽIm&w,x_E!!ʁ!8}7|Wejxuj!E~[eSԪ3B	44n
 =3()M}n΁s[%F-RF{%&PRZwV@jV\DtMmRFE=m.{[^~6pt<̝+եey=PvRB?[	O\rκ]SkzM{8nRY{'}tzyy2Vi_># nڣ_OxK
0yVX^|ADgn#

@IBHKABg]{s0%R'/+0XG%7Z[Ȱ6~mkAPi{3;EZ[$XZw9Y27y;{*hMUxuJ0}n4?0(ȸY7ML4]VĥV FǘSȅ#Qa݂RY&Dl0艓w}n~ʓaJpDªze%RM[
'fx	+f8RXOCqzK~LK,cݮylmsL_al-3ީ6MPsgR-rh},͇rp?
BahxK
 @}!'
=c1$7g-'; kEp`d613%	C*z󎚥b  'b.aPu}/^ssǖdmxhRsJ
*EPkYQ~fYƪ~$}F xm0 л=@ݠ.@mE>tf7c,&~-eb)T(`BS,IC	Ȝ1i#%I.2ybKVt6):<z}ng8I\ ).`ᢍ֪9T}?@̰7Z߰$+,5NQJKLx=n0@]ԥA#PPt̐P-C>t{ת*$y>X-죓<4i$٤`1b |h)䅕ͥj)?۳>]ޭ]m>R7rt#"!._|gp:6]6âMe77`Sx
  ;U@"X~Ei",80?!',UR-`c4͵ځÊFJ4xR[@A	r<0v9[R}$hP]>~tFvϽ=aD{7uNd9xc:YOFx
  L*4RH*B:7
D&2gA(E>dz#ޣ/	`$!#<JO@N>^oܸ1tvG}jqB o&kϫU?+\] |D0xM
09Ż4 {|I^j\0cgB45mA>FmvcpElyFIM6GUCeۤm2}N3^Ns;:;~'eb03Ez)i{ių}iڱQ;I3"~Jx
  ;S@+'UU 1iD" L P)+TKW/|c
 N,x|,DYpKV(Lbǆ~e|
{{j;DcԥmC}ΧsVE(xQ
0HMIJ;<ZT}DÐ@QR`Hɰu]7cͮeBd]ibvrV4"E1mIהe^㖟>P
7 K\wr~/E
xK
0 }N(_Wc2BcKWp^fJvq2V8)0!!ኢv94L XvM5Xb,kf4u=gZSa67Z3od	D uh[ƨ\u_>z{R_UCxuN EI\0@[F7.}$*1ՙ3naDF8+RONRY-F=NsmL"GZR<q3	rL&5
mO"d͚aJI	iJ2\_5Q@j;,%JCWSl{DlK.v;?ʰ?N>I!Ԓc-;DGScq;[+(/?}>~goos;xuJ0{b^%ib"I dINY]׏NGoGos:ͤ1yi9
;Wd"%2:H`)G[
ް
~lX/s9m}`ifpV.,F(LYZ?-؅	J,(rvQ]H"Z7xuj0E,Ed%%B,-4vʖ}}}Upr&!E#Tg!ꦥuY381c0`l-4RsN+؎ZHRn^/1K9.qK.iF6η =AIUg7%fJ<ylY2A)P!ws\U\*h	_>JLrst&7ŞB/};,u} OygExM
 Fb.O&*UQF$BL13t*3$ŨC BQ0UƦID8yh<4v(j^aRB<;*|ͅz{yNZi)E%❿0ٶ0{dy9KxuKj0 >Ż@,?=IJMs#,ȅ޾=FPHj(h1Q)HD16@hV/Rj7%4Q*OyBCNʉh~Iͅ;W຾{ʹ|V?aFkA-tښǈ"ີw[xM6} )pq_FMxuAj0 ~~ AZk-BIKCz饐cl}
9400EjZm%%s"2Q\kd
z6Na	wi[T})p]vr/pNKy<Nn`ݞ7TxcQUŨ?[ӼYy7Yu[{VXAE
xK
  н-:~FzQ4c1z>xs0K*r2
lA
kf6:!"T@㭏/ق|!D
jOhݮ6"JS:'ss!~B{xm! \0HU%:1tGo*8E%&kIe'ռx fDJPl*U} uw1cB|'|6j&?n$D־Ux)!S롲@|6ko'O0x
0 :vp#!8NЪ
t}75D`A#Z@@"Y#a6=g$Ʃ0bT
@vuSEvii=MZ>Sy(1#c@xܩm˪DexA!@ѽLЎ!Բ#DmL
Lf
uHKtC#dڊ7Q4cI=̹l
Ѡ:A)pDzѤF~F]~ZڪcȀ4PP{сZ<N:X} S[xm g0 E]K|!?1V/CmHb
J.7IJFFɚv@]TdC!"~_ǽ>ݞ|q{
E̲S9R<;uLʅXN
xA @=(01Lk3}t%1Foe$G!s4&uه>#&
υ! k=%슢x]/6Ti׷8j~?Jv-Gk1FG}1uj]ǐ^\IKTD^xQ  NhJ&Q:(sؔ}M9j9k␓rL);it)-Mhd#Ob=cIŎ.h(EO	S6<*MlpӤNc״;"kͩu]3t=:U{Y`
GxQ wN\($xd8ۻ3%ߛL#a
SDd`6/jgeH	%sERf2z´QJO{]Өq_*ېzO"@@{9?`NkOk÷na?ExA
 Eb.Тtҫ̘TD||x;.*VZy`pIռ锣C`	
dQ0O!O6/O6N*t}Q
jypsEkͰ%.|Mk/zhޠ{hjMmxQ NPGYmm"RLU)̘32m%d#Ą~TUy7c`IQB7RDўk9ы*zu^QI}..y-7k8"Y֪kYZ,|J;JeW?Nxm  T
$ZK89wi!H]4/-Y<;q-@B9-8
]	F-ުuZ"%%(b1Z-+qMcXlS^g0{{DS7,Ox;N0 VKBhEA!g'"W
8 hfzcCDe$NJi!L,+$97ܩ`Zڪ|4+0![當\t5	yUїDQBxdTq˅%.&=; I9[faBxǼo9~nt|_?	Kg9xuJ0}Gnt#
7M'L4}{;Wses*hFw`XFaaFKVjRKPJo$A{Dby'S!	+x"X0~
^XglXpv
>\yPÉYƆ;Kmߗ)ц7j34ipǙjBL{Ê=^O|J޶mH+7`uCAoŒx};j0 {#klB )sI~%#="uځa*"x<Ko^QpƐyUN2Uj8\Lh-m'΍P(":!UT'eӽTxn.[-
.;VR^{jt
ksxlqMt~e$QJ3cM
'VH=\ۿ,$*U(V/xA! =)P=J29ۗ9TTGG&ɋ-XSDQռdsBI\[ 
"GF
5j1{fdH'0iyMg,{d9=_v&CV5_BpGxu=N0b$ꅌıB+hgI)D Q=O@hkbFֽuNxpd=91,ah6*V|i'AxSn蔲a`wF|֛G-92ztO5t9xͧRT(
~-Qq4piM6'MKrN,`iԚw)vE+<`JN)Fl5ϣ:)B?O@1OooƐxmνj0O}తG	yM,Ž}LҦo`1C)`v>F}$(N7:ۛFF>)

:KOR*ܧE3<69v*7-+^ZӶMRUI}}>.Ua׶>ẙ.3CD+H
qai=OxuAj0 ~~a%BHKC{+`FYzi``ƪ*dJɅ.{'ςAE>q"iqŠK@"urt'416}<s?%XxOi-p! OÖLdyYnu?Y
l
_۩>F(xuKj@D:E_ 5xM ڲ@#qk{k
U":ג8;" 묷ĉ.f"E4CLFHR&[Ѻwךg.yD~3O_;.Qg୪4OR^e-q۞^̚m`=|DxuAj0 ~~ AV]	BIKC{%cl}
=400U|fr޶Y8J`v0])0&f*d|ְw',v}`TZvrrßPxi)oк!cݖQUŨ[TY0sdcͬz/FxuAj0 ~~Aey&$&V1XQև{1&9*ZEA#E6*`jZ+5GF.ؘVs-p[ROPOe4ͧ3hs5U:lDXL薵6/$=U?["axׯ{*/CFax[ V4<;Lb[P _I":pܚf.0PAEN>m!.M+jQjHR/>cQ9cзz~?֎mߵ
{/Q?ۜUCPϫbD~E%x
  `
Wc\!F)b\K"eR!L&ଙp"Nb6;J]7hDɳ x,r93%;WeiqMmιիɐ1к!\uo]
?m)-7#EFx	0 Lq(\z*4mi#8B인-)#؁23thYsXC	npDZCDJO;Lg޹i=[9S|v(.ͩݻss
"_n۬HTxэ w @7mp.R	73=^
,NXT9ktHqJJ
	'AB>HH6DR+Eg"lѫd3~[M*XeT|]Z}KX4n6Zk.?92!79[\M/xun0w?m$KM .ҩPP*C޾
w8򾒙L!Hw55o5AfKmу
}'i;
3>!UmDlO-ЉwQrg1:mV^)Q8߯LSz	|h(U_j:Op}1yY3o~r;?ga;RЂuύ95>	S92"UĹC@6s/kxAj0 _{v8tod)&B__h\ƚ*LÐXDYaZ0d]t4ɗ=gwP f?\2f/EQƠaf̊Q67[{km=/'BH1cm0OBiFSs"s?x)W0x	0 P0)t
% Eob,d2k9T!q%q,F"_[_RJX׮cUQ8MȂxu1n D{)ucUJ4i|`Zkbo(eM1 b`(ѨAMI:-ywa.V0s@`
Jڙѱ41+L,^r""#nMr_iEv^6^Sط3J[9j(g)NV􉵾7/N׽KhqEwíD*& ޕs9k+xNkF;q>|?gxuKj0>E[?$d@[cm^$}IgFm\\׉BȌMg|,6"*^%Bd&|*hx:|uYx^ρ=mm2TX*2*+h#ѦDaJOoohGxMj0N10\CdBNټ Do~DX^|^L
IbPkl*&Q>RbkaH.u
}:ZQ#2kQn'5!Љ=mY'/yi?ӉX
yyp
dVFx90EޫpIB:e Aݰz,H1k&I<ezdM
*GؐB$o)0L~HYVks+_+<˼Cee?xؑ<(RJXj'K
2>M\xuN0<J#Љhxfc8o%DI5ҧoF*3ɢ
k'I
sl)z174{5y!	h#YNZ8$YB.Y49+h1'8i?[	^pÊ	w(5a)gfWW.bb4ָO~rپokl3S>6uaa9'>lt9.0sLx\TrmigxmOK@CNz0d4HEzI4
ޭQ4{{wD k"jEeH+s2OĪiQH
.*QDQ,9˼*\N
j48q=N1x^f<+xU'	lkϓio'?6bhpT'#c-p<|̾ɩC6lYft&[v}85pO>
 
~q/!
uyT[wqπxuMj0F>\A5!tSF?,(En_C]=xV
P8Ŏ0+sI6GZYZN}ٳEC4`qr_փTfjTi2VSZ+hA=xQNu)${󲶲8}̺-}|]O!_G@xun D{J/N)M#va3øR2ՌL@FjB{6ŚH%@)grbRM+Xym {Ea"	Y1k؎Zw`XGj)MVpo\3	>p	Wοۜ0..wZ)#Dw["e9nslu\g/T~5x#lk>`s<c8s찱J
v,A\Giq
)xn0 @Z%A$MHa&l*I!Gi]4η艠,y]@7)eI2uVu)RCO6¤SQԅ,&I)j%R<J$B}\9B*t".iB?d*<
3YHx+S]/M\*i@SHL9q
`,M}d
%T넶1i7TAt'(^!f#6bUU٤lqgܸL{}4!d ڷ?;>GKc/d_jh9"q9.?|ZD1|>
oBþxu=k0D{>lIpGIRX#˄1fx̼ZWJ.D	Y[ODo
/^`2cE;zie'<sZy#uF!{
$#"
<#)T(:&6t)g9hjC1՗yɅ~z?Ȱv*<8	C	VxΉh;MF>B)Q{mNlmxuOK1)xVI6PZأ$/ۅfod"ֱads5sm! $&4ɸxޛIxᴕ(?^)[-!ju
S
hR*eЌb-1 rM+%j0V-nJe+O0fMەU-4=dZfIcC5'.U	˜}>5|^y:;Lkۓ
xA
0@}N I'if@{I3@W<~o"zLa4M| &)%dS6nRFcb$!%!(0D/Q?cmzee./9Nr֑<>4F}u)M6;Z]} 5 ?
xA
1@}O I6-xqQ:)'p]BT(F>K+O1Hb[=w]X!qSL!Y8[GC۸楽8rSe8gI`|s}mi>hk7>ʜxK
0 96i"*RUt)"`R^	\
&"FC'ȹU&7Z3ύQq,$gO;ј@{$hda"xBNbP>hf	awoZǰBkl.%`H6&<PUu[ݎ婩жۦQmFxu=N0b$؎ǶBR@'$$Sp{%ՓW3(iI3)gDtpBt*&L!nV*T$#2Z>($[F-."
JH>aӢC':xbU[>fDfZ"]1Dg[բuNnX+c}=\x.XSkn\zu&(VJH%Pr>.B>TpMeFhxuN0 |׮鄮Du'):&6$!CqʘF2;7;7	h]`\,bir>䵶g_j:KuKZx.--e<ExUAᗖog^ܷu^rw&NI˝xun0EWT~1%,*ivfH$GCwyνb+$jvJ >1jƎu`FI-܀zЅ2= 4!w*=pHCQ6qkkTT?S ֠;Bt/;[ױ}s.<N
kgօp~_n*%5'HxI
1 yE>t"ΦDbOTEjyPQ*APN4Q
<N.AdZ'AIiHd_"΃^hg4vbxnkT ߁`[m˜	6yYIНxKj1D:.`Ѩ9ZngI2#dUQPC]5JyeJĩF4ߨP
 ,C "GI"|Mu;wvu\GB*\v/cFeyY˪7sP5x
0EN@NTBFyR(ۛ1'
Olp
z,C%FWwQRxES6Ɣ1I=z|sonlhx*Rnכ<%>nODh8?Pu66 w1Hx
  Lؑ0i*B:&
2y0D3OQц2'!H79֠p f(f Q|wmz
s~u0.|ky	9 ҷ6jв.*\壿έDxA F=@c\y0M4o{yi@-)00`
\Nv4ywmĘ H$ޒޚ1"[
M/64mLc)Xk宍#;b}@N-kϫWG-vExuAn E9 Q5L	BJ`1/ˮ,=?J@l**lI'$
ƹNV8e掘BF19\_^YAI?˕-D8Jpo</;;aoRᣌ1aŌ;\_d1WRi<34hP-\RHۭΦ/SJߝOA%v>^xx4'hΞk:w!(?so:tDxM @=akIq^O0PI
5H=zw/,1tj39mX*rpN<s0:1*gY#*'qNu-QUjpDeTcL3J鵇Z2.m5A.+IZx=n!SLo)E,w
6o}zOzGgXGFDLrLҸHQ≝ 
1H\-XFk218{s߳&+|u;T1V0

z<A`J@-1ܷa 	3`s9N'j=oEWxM
0@}N(&̀+1FY
&F"γMV 3y<I=mP
1;&,9tD&S1Z야mz	J&>-פeiRcYH4	@}1?ַ׺=DxQ
  O6L451{D
Nh]Y5$d, 0D,K @B 0oup9Ȥ=A<AYĞ|kmM.]V{i]r[[12`/.:gNmgގ Bx	 wp5gRDgI0vf~ߛ%A]IXG$XJspӭ[ q *#$Hŋ%
b?{ʍ+o1q5W^קHt9t\Zּ]mާ Dox[
 @WZL|PJNftL1cޘeP3`F2SLT){p.6:D`q`؆la&;
>NqZEm^S\7lXpBk)nXSN{RbhY{Z!εExuNN V@sB30m1@oK4.]kf3jmCP^JI]hj
fp	8$-̼U x:S
ը塓wV?3JQΰlJi'6NY=<np)*9a\@ik{ýRƦX+XN˶g>֯r?1yf8u̟'
ws𘰴b!_oX|G5R~kKG lexuJ@E鮆Afq_Pݩ$=e3.\"QmNrh:bM]$<@ՠ7Q9ײI>Ek] cj:sq[gW.jaYU^Ec[xf$Mʜ8}ݘ:)\^y^ǯs˰fKϰ;otLp><
J%
UGn%k1G!ɼr;7ixtiB>cfs#GL8dCF.TĲ̂̤ĢbԢJļĒ
ԢT" <@"P$
 3'xA
 @ѽ1t{:X7g.)jmY<NΓbC.2GW]̄ST
D,SmƫuX"oܹnK;k<KuV`"ϝ:c?z_ɰN ~6F)
xM
0@}NpL:1 {dдFnM#8"(ļ@!C("HtYPdXF/>5;1-ԨjovUSyޭ)!d=C0ֹw5=h~kC1xQ
0 hLlU:ugjΞ̌813b?*	Gjޚ""D!aq d#QD2@sr^J"eRxEn{yz}.-Kk,Xp?DxuAK0դi3
,"z$nij{GO}3^-̠BGA~+᜔W('亍
&#{4bP*xX
GĤqkAt	}0^s&%x
%Z4Zv̉r:4"=*(Dka}c̰?+a_yݻ-mT(ixQ
0PҮ]:*IuRWz,E ' frCd*jFI]K  )6qd6Z)<׸okI˵z?ֽ}H3bZ / 1um[} =)
xK
0@9E.L~M
"n\3MSbo={z&c&a G!E14q,j&Kׁ:;abC1FrfIwצs{ [Z!d
z@m̽:,.Rں6ܼoE}HWCxu=N0b$]lO챥ZQ 
;lDA퉄(y͓SDP)fkc"F^;1YRFe*ٮe6YG4!wZQIcq-x͇<q(naq:<?n'8)R9<*X%Yum̚w)Oe@grqn'4/7=yz_BdxxM0E}x{$9+Є&L9hRuS#}7u9FkS(i
hņM,FJ9JeƏy>i>0Џ;ڮڰ}sTң4=0z]zN=RWV <Wx[
 D]h*Ru\I5cJ~3ģDhPA
nьM@l=@Q*N1zHa},e=KI6>ы7]}ɴPBZ	"ۼ:aәwNX6x:K=xJ0Eyj;7|I2Yhښ[Յ;:3ru60h1[mXKc0Ft,j9egR
A+;(5j<ɋ:%GyBD:y[ȉ'E:oWR7ZSn_{yy*[{3Qku6Pw\u1!N }kp,s?׊RT+W8׹lAo0lL
xI
1 yE>tғ
DJ0B<5ƌuBۘ- AXJUe:Z6\١ OfT#U(cUto< 	 KCH9F}">ʙ
x
0@{ M"!`u!jKQHF'̀11
>4iHT4=O^4c
3N^LC$19ck06~}u[/)bL9Z{?W:.o7,ru΢@+xQ wN4
e1^N9G<O'J·(AT&E5TY3kdw}
L<81N'^\JEcv]j//sݷu\{`-c4mj{/=1x[
0 s\mo"y֠mJ\oo=_3wDI#$ɸ`C/`#9JC3qObW 
ޖQK&:p">ں~GA%rv*RbKe?˫{>s\*D
xM
0@}N(餓g=I'6h[i#^zW<xuQ@J#p969IĴAzL%Nfp8}j)J (A0/Q=wR4G䉝VRZJ.SIsA
xA  ＂hR61Ư,ˢMmk(	eI7U!
!RTF(!q 2nvA)Of$Gbjj.>kkvlo{<Wٖpb3g]p)ZN].@x]j0u@VҼ+i,
23|bEr!3qԹXcrpjP(v:xSL:&dQyf*)*=o;цS
N6WZKn
hvCRA;kDV	8yP,xA
0 }E>dlւx.f[	0LFb$t!'ުx@.[ԌcB$H@I >WsWr1'~p~J^[r0;DK`6vgm2$뒸=V-k>MxQ0El@dĀ<"IŦ=ޘu  )|AO1zBSkB Q(	Vb]AگKݒ
-D3O;_ciZq:hz$\Z}^iѲ)YM !Q<xA
0E9E.$ͤIAD\9&i-V<Q?/Yw0:bK< v lJꁕ ]&hh=XO3§֪k[,3ޱ~0dNSEX3lEu_ZxMp[KxA
0E9E.d4q9&ɴڦ[yhq̒!cH.!!q/Fm\emڊ`;1SlDsEů,U?A^xw~eɸƅrՀdIL0FvZ"j+{OeUxK]x]
0s\@m?dSM+io#433*D<D-3(`CzD1e)'U^1y5S`%lcuBBN2cYp 2xJ xK
0@9E.$餝qIЏ<E=բjk*"tf[$S͓.Rd($R̭h/]1R	dUku'ϼ+O\v~Q08:Z9yURx\lϥnK8L<xI0 y?@$mH!.ÎRJÁS8hS*^]1j̔HS
Fd͓.GṊ$
*$QEb]`ajU[vZF3_:.4Mޖضs>x8aD4G]Zk:BQ7YiW&4h>QǑxA  b?
$ƨ߱6)P}azFF4L)00*QY!D"ړ(71C#:A{z
./6s
XZKc$e=5wfieRy_2
\&>P1xKN0D>E_ȿNl	6l NЎ39F\+zcL11h&p4"<jw'A!$=ɢeLc<KNg/L*3m~rxZ
0rAI;WkΜ! 9vp_Pjoof7]x;n0Eў
Ï Ӹqcx#PO #ހpSWU`W\&tdiK
Q3\!kaE5Eb˖ޖN˾<?<x3w?0eM̉>luj7Kd_9 C?^G؆~q;NxI0 yE> r	B>N[jp	Jra$<6Fddg\mQ\S* %p(0	jIf{Q֏oL۵dy.C2D iU`~[ͼy.KxIj1 z>ӒZ`|ѭiM42*Phe(F SXh"b(F8_jv!wOTtڀ,z瑽'*^ѽoM߶Ъ/4S?~Sٖ/ml Qwysb5Q项	L먻}WO:MxK
09E.y6q~M[aS@&*:U	]j!r3/TlCX-CeP25|v$xii'<+?yةƴ^1OY*z"g׊?':XMĭsnXLxKj0 :Ż@͓J7IzR$
m.ٙAR1bə2;unC"4FR,]Y"ubgLbA?vv:|NK:HmPY7QmN~qz:ωN&
cw{?k1S۔x]
0s\@n"Obl`[
|o`Z
ĔB =8 2t) @k<eչZEeL`KZ;G@ Fz_V{Y$=C֏;ܾ0NIǾ_u"itk?G0߈s=T}7nJxAN!=8)h 1Ƹq!nM3ap^7G)`J̘%k)(ǄW$֋2,lZs$D1%fsoyoָhА#Q9?CGs]kYq߷zzZǗITx]0}
]b[
,{%SCH7l{>1|@J((v,P̂}(w&VlL3ssj.xJ=c{Β>cw9R'ᮣn2a߆I-H=7DpBAtJKGR[
K{WN=x]
0s\o7 xM4ߢGiazc+
T,G(U	p(E.$0FBKVA3XEuwnM>#*PqNeH[<)TJν_#3gri0<NxKN09EKnbK!68D#œqO$>`J]ga_LFC8cbXQ]l5R4x֒C̖j$_|֡D$b$fV(121>o۹W
O7ei|Y֞7!8J1"N'm1]p;~o
Xǥ~?hfx[N0E@#;~FB1[;`D	m"2dґ	;f񁍷-{Cdt ZWʦtP@c|m?7xw=]$k\3(cgb4dR1_`pӣuT`70v
?sI 3\xM
0F9EsL&ZhZIS=Uf	є=yMbGxTړ&s=rё=*N,8NX<d\Cq:R.R9
@)2yucyA| M}xAJ1}NQIҕI"7nTRNGo	\}"SCrMr.e`.n>>@Y'KyLٲ׈ubB؋qk^y/QMTZ)Eo"<蠵:cȿFԕYϱ.;mw'(
uk &v=eR?
\xA
0E9\@I;ƍdRM+m[yeSYa[X6M6IWD=yo72'%ѳh$Ij[-Uy#g#/uү>0Üծ!!+%C7o֡x\OxM
09E.L Eܸɤ-4=:,pJml "L'AVu,y	v`E:E?֔iwZ|upܦLz=39=ZOFR%QOrT3mMVxK  h#1Ƹs<5oGp5YLoU"mCR&*Sэ9xRhm
dM2d}GRJЫߖ&F43=}0b\OSاA:gPn;51<k_l&L{xM0F=E/`Zhc=0L@I<D꽼˫%	U|q$y
UI*%1:eKu!DQ4r=s-
59'{ׯ]_l[7r?ep<`:9_v%~v8,KٚxAn  hD0,UU˪$FJ
}BO3h"E"R"$qcr	4#maLܹKS̩8BD˼Q.o
-/p|^_㽞zo0`1dysWM̗rWP
c1g{j1& @sSPxK09E. ǩc	!ĆpRTiOӪ(@b&[X2$AL9riЈ1CйDE\ 
tt+kg}7?0>ejx-E}2uilM:Qq>2& -K}xAn  b?REG,X߯>aFy"brCNdH٠NjW;w`)iJs%ZIfaqRó<xk/}\slZ1_Ѻ@my`4R6K[R?UՐxA  b?a%1x1>cim	f2iOL#uDGC	upA-PKIȓg'ɣ>2>'}Tw]Y3<xkv&.9xzNVGJkD
I}a+>\QxA
0D9E.`7I@D\9&O-MI#x|00Kub^QbZS":
*A!bHaiٱQ
<AUGnaFayH{oLA9DT+5"[n9ɥw5NxKj1:EC6FW9Dx,#>}^QPo4Fp\"d
3!83O1Yݩm  f%
b!iNbNc-t#]pyK_>s{,Nj2D}y)0NS:|xeMV
xAj!E KE!UZvQC?Mr=xh{ɠDΩp$$GQDVtH_XRqZdJp9=8sK:|НA{zXP;3NZ򯈺'Pεs\g}^2UCxA
0E9E.`Ij& bqF L-4mI-z=L$vM"((jfݞt0MC!Rdd\9ޡz>(f! I,oFH0v[O}a✎RަNyVP
u"B!h{[| _M4xm @T1
GVQ.`dʖ{z7Ň	#XĘM=12Zfm=ϨR&Hq1;^!6R"'N:so޸kyݦhk<Du}C5Q#-pHֵ.0DBMRɜxK  ]_bq9jR\d3zP
C)S$5{OJ'4(ebtqRܹ}@:H-3&d[n\d?ǭu޸b|6VO &=ԺwxXNfB:LߝxAj1E>wYX,{MW=,˓x&ZzysڊPHD9ʜ@]0JFs\[񩂏PhXն4
|"¨ROkMJCT0c؏IxWv{Y@g.;gos"SǪjO}nO
\Οx[
0Eـ2y5D]4@6ݽA}p.ܺ2C4'I::duw6yd/E46x#ZT@֞$b-*A:fW޲cnI
hu̔c1^79ќjN=`/)̑!m޼~NxA  ＂h(,$bm	f2Y*1z&`u$d5@ΙQx2c`O30D`Oir	H:BғN/2TY h 
P)2Mm~˕WZm KxAj0нN1u,eB)tUFD`GER}][߫<^4:'8Pz</rR<|`=)$V{
eORmv(RWs>	6ZkvrY8z߰TjWiKk9J6VՕx]
0s\@m6M"⃞#?Zh#x|>iYf2{(EM\ WޚSŀ9ejRQCrj&
jR/~iLc,Y"`I @tέ_#6λ\k-LWxMj0F:@?KR.skb[FVǯIx3iУ6*FRMy@#hNbFp%y5
1Us6֓ߴP{)94/2:X38;t"ru(gPY]:4%|5RTxA  ＂hX
$Ėbm	f2Y"LdEKd/9gTNr80/]r, }' dKGqEЫ?jfZ䕞Ծv1nqyLu>KQ)<{Mo%V&>+LЗxK0>E_Qi͜q!$F0pVT*`rCas{.84`Aˮ[]H)YR)GtD(Z#~;'e
.Z[^iZe^r]`CpZ$Dܻ~tb[(Ry^.A֛Q\xK0:.Yn!~dIU=jV#NΒAd4kEۋ#!$<g%=mުo/rUx^#~
?E7]OVueˣ5|u~79y+-3v<RDxA
0E9ŀk%$M"B1I'4-zWVCR(J6!,"M>X'^Tyi^yIH:헨11GP֞£Lh]'z3M)|Nkԝ4QZ)n+mTKi]7rNxJ1Ekti_AD]wmf:U|~p/.yxty2%3IrdKdrd+c*>\RF
ۮɍoWa|ֹ-c@4J[C%1[N8s)R ꬍ73z;&VӒxMN!F}J\ϤIQz~
$i	0%zW[|13yM2ꀬ+ZnCR6Xn9 qSH
(@EBF
-W{ӟt9	V)B52mc"K|:
V[-R>9WxN2ZxA  ＂hX`$/c6iKCm	f2YOf@*2buA
T5^#cD11@>' S]|Փ*4SmŸ?ƅr`hEyYwk"-Sgk8KxAn1E9 (3$q"!Tt+رf&U&C
XznUhec!;:)!)<л`ebMU=;1<&܋VK!n!2gZJ3տt}ż\31b
5.-ꬴ)vϯ`w"+
XTxNj )zkt5PJ(>j6FHLз|}af%MvqVѓ	(֓u	yr_RDDkjDQy4I8wώ|p;|=s3C}M}h&=4M95W+] rrISa?S)rTKhpqI
q>d@;iudxMj0F:@5ǣ("=h$9;2=~Mz[|^SLdIYd4v#l2kgG}bRt0gB֢=`3]lM<?T)'y;|ޗ
R3ZfΊQv_{O/-A{Gz
p]SA$SџxN D|M\&ƨ\xĶ4@?_j&dWf19D[dEK\W.fPT0<$ј٬ѳtJERgI;NkiM/wmD4nJ)sBO:R;qus[Ii	>77ȭ]OL[zxKj0D:EC܂!Y$h[`dYsr+E':΋dcvifd46v
b8sF&n%'f
d=WΤJN\RVx7.zZ1_'<aAzo[\e[CyڤgXOxMN0F>H'8RPc{\,9qeOIo4fHZIju5!AFCTN+Q}@ZNQ#b0ڢpШrꕠ
건*~}nj6ZI.RnyWDטS:
J~Jy@;2!}0E	"h'x͏I|bxKj0D:EC3kKBErjl1(X2Q#dU[<h1MQt$h66x!&->Gby#
FF9z
ϾH7muٱlW(kf/
.rR_QGM[%%,
~os[6x;]^[x
0 
CTήC$F~"(׌1h+	@	1>Ɇu=zRi{1 Gl!d! !$4(zGVvBLkvn(Y!Cga2&MԽQm-uʪPLܖx[
0El4L
"+p̤"-p9hlֲ$d0:ATYFg0`t2h>Q/W}E׃4Ӣo4Q~f&E[p8ɠ1XQwSVLx[
0ElwR\d&д%
p`FhG-Sْ&wTlJkѤHya@{O.ԽD[5x*o}o@yx\2\4;gIx!Xen:aWPMax;0{ yJ!ZlB$F)=iFSVEt#u9(=/9y'	A=ڴF`}%;"%Ê^QЪ4Siż]ƅe9k,D&L_'^ix*&z-M6OxM
0F9E.LOADܸ
3FҸ={hxI
0|(ԓlU19ـ1{p,K^嶴ҦP_8;l.>@ PsWD݋:.\eW?Nx90 { y}[Bu"%1rL	T3bz#)&T,1yPr
dU0Fޥ E<e&cI
8q+.##g
_Q՝*8ciż]8,`!$A^wk"z-̈́ɵvO1O6x
0D
ycc%*	c'8="zme$s`b9t=2
E^bΡӖrI&ql𮯵z$f,	.66U;o3u^Xu<*$eo^?NxA
0E9E.Li2q瘄I-ئz{*I890@1Bb13wdqdޫMg&
 $	C1x=IRlRW};/Ӵ|ߧ#R; enMۻYZKU%LxK
0@9E.`$cf""^!i-#5Ƿ\[hZa`u$YJ{gzUыt;t^ s%%6eշecq/穟06yڠ#"6z:
_u޺ܨUHxI
1 yE@L	^B'耙H&W	CAIY{hh`@͊M
2$qPN9瘜MM2;m#'dOQУ_kS
Ͱm.ݥt[Z r!O-SDOnT5Q.xM
0F9ŀk%dR&z~x__A%2N(M%+.XK((gvQ<iG[8ffIA?ho(8[а^^Wmi\iK'vC	5h1^b;@έ7R}o6Q0xK
@Ds׆|2 ".ݓG	x|UQUm"EVr O#FĜꨞTtʱ1̴шq
R&&װ5dE[y̋{H@˷ҍUǳ-# ӱ/E:Q%u}@?Lpx
0{O~H!&`/81Twz#9 HS%	e9o%Gű
j
1['M)
i+9yd舀XHdW_םXP_iҺ4d l;5a-:͕MxK
0 9E.`IX\<KR+zW3bj!II.(BkV	m5xbr )x`Z&PdP*	>¯ˇ88bھŰ	tRN	;`:
_XVtuMLx
0
xB\~)?iFsVi<E[$2[(Ȥ
b㊥Imr9*&|gKVX̋k6<NW<'GD<
bڰDYNx
0@"TBqa &p\*5MՆA0m6SÈ (dP7@(oVtiVrs1yA^Siw_Y7{r^yk/(<Gl=DDh3Zg+u/&uѼ	NKxKj0 :Ńc
!]lO$?9&
4ohVwmHssA$.lJkC}䡏>LF:"k9(Qц]K$f\_;s%uqΞ5/ѿ&lo[
	aJJř:8/ߴËn>XxA
1 }Eִ IוW	f
&O48eh0o\A
f1ͤD3*	c 
dٯs!O|#߸~m{Eimi&)ҒSwkbNVp(jk`мduO"xK
0@9ŀkK&|
"B1i&ZVߢGpoZǉm@FH8AsVO.hٚDG=uBdův[
\<N|c=\gݸ{<:H^kyjM&)U*lNxA
0 yłg&i
}&jZI"|>sVD H)Xks$ĳFLHE
2atѓKdipt(C'_,+yk/z<ݻ{нz0kآGTk䯉:OohR[sZjNxKj@Dsccloruh$3^=;58XK1Rbt%L5OqF=&0r"],<.ɠ5ώi
!p9[/;|Gb
bmhio0%s<z:i׈1e]d'	OpcgUZxKN0D9wbFf+vl'"\U^)	dRAcCT0
NYi@״6aA:TƁs&
>Hg'5
 UYj8Ҟ-{*޷#yU\y^,<Oq[^2u8K/ewej-K}Z8!<-ej=|?e6y[)ZkFxK
@9\@L@DQЙ
zW]Uu(Y1vHDjTň,5C$MGmEQw~8C/vh1}iythePevJ,dkYa-fdM'xM
0F9E.L' "n<'Zhڒ-zW->^)Lt^d¤Cbs=jGБ#bI!K]`]CRc9Hfyw]m(4N純촲+<-ck׉xrWMV6N>x
0 
6>Ա^R#O%<7d06G}B8aw.K^5v)z 9l8EEMN*-Ծv1ns9r-g=X= ^˳wk)&&z]6MxA  ＂aaAIXŚ״Oi&sVEt?\v&d2g$"QUY2YBA|cQޥW9II3կ_Ǹ4_,w
B/3FuZ&5ѩ>qKxK
19E_@IO "nzL80=EQ0CBXs@S/lLB5N
1б9aM1,鐃ɬYo[֖ZL3;??NBӼr.頵jtj$n+RZL/MxK
0@9E.Lff
"B1I`?<E=բjs;;Dǌ2F6Q" +BS{9v)Gb4򪏥S&URv~1mayt	-= NcƷ]ue,e3KBxK
0 9EDą^$/Џ<0KђsUVg$o(N+%-<UU&ECX)s*m6&U S(]"FiWhb\/HФy<Kes<Zy :_൮}#ow_g#LxK
0 9E4ADx/RM+Iz^d-pd9Ig!$XyR$b}:1A G~ޢ
Q	kĂkcDkJ5G be'@| L1x
0EJͣ ".;&i0|~s9Nudb6qD+6Ll:s\z(z3}=%+dJ)|ip[6b.x]'z!-3yg{{-5+"+tWn4^*>^NDxj0Ecd)zBi)4ݛ4q)kO\΅ߓR:44X]
1;.&4{c@#jnQoϲ@[6N8֧q4ȔPﵵh`'bsbE1N}ykrVbNy.JLp1eTrVxP?\]xA  b?$&mi(&>Fi&sVE\u	Ĝ"K'I(j*KvAl@:xhb{c8AE,e'ʹ&_;08s/`>8g"tZu[&>aAj-uS7Lx]j0u@ˮJyrddפGӛh&V&1Z$D5@i"=JڹI@n )]gСd
1(~\|3yw^6ocݮ@8gFһkD=r}R/@-YyaG?/6TWxKj0D:E_ m}Z0lfF-`YV?&9BVU<x5UZxV3rfq%`%|}K,Ảm=8Y+Ѱ6t׆u{}v,/"l.1_#Sw4fFZ׽'MSXxO[
0)JD=&ٴ~0h<rp1iw1&Or@tY1AɫlUft٤F
c61j^wB\ie'e*Ǹ3(k؋ ei

mf,H NxK  h-1ƍ+&ooGp5YLo)Id5j	5:P#s'Lآ ڥ!2Q3*#2+1k<!DG«kv
1r
ڡ&y@̽&^2ְsbJxIJE1DYܴ݀/ "Nܴ|ދ7ա
:S3jVD2X^.
=Lc;@1Jf8Wx,G'N4\JN/J#4׵ҿ$=
	VF+]g۹&6Kpa^u[[PxQ
0s\@$n""&ZMI[~cM"z!rdLN7zb9S+WYN&xA6N"3E1;{{ ϼ;~e~3Os*UΡ	@vZ"QҦ5s>ğJFx
0 
_K!>T@uȘ^3&1s,$g0GGakL`P\NC&GOZv$>X;⢯L1bHEƨֹwkc 3BKx
0Dg6IDDDcBJoԋwO3<Y^*ڸZmGl1 .Զ!-򜥲U`2)w2βN98N|_Vy[JbYqv4DxmAA+`Dq̙~>PeRyx;n0D{bb	A&}n$WQ2HV#7`FcExrV(J2QE5iSNj
M	hFFL.Ejc|
>3R[Jeƽ4ڢY鴵x	zOp	s
JËyYڜx
0Ek%1 ""ɴL#iWr2	QH2
~5Ɠ
`xcKo, т#fƔ0i4|
J֟G݉y:O?Tp~ԃ.QUPJ̽_'^i+{Lr^׍vNcxA  ＂h,c<;XjRϷ<d*NN%J&&3|+(vI*/M"%cHS1m pcTQг=J2-J3կ_e4PYGm
80 byj+Vrn
LxK1@9E]`$ܸ6twt2sWot(.3e|V6%rbK~6 NJf-L).9NQٰ&	}e8/jwL!:_:juǐ&"vxH]h,O|mQxM
09E.$m~ADx%yiz<f`ZxPJJ^%堅]Hl*+JsjD m)tN1PIRЌZ*,4Qa
rRFk/'a`-ck=D
⽏hYOxj!F>EEgF0}wBfg4VZ3J1FN(k
^ĝ:_P5A%aTdXr#X:|5tR^-W*+(k!qg2'K"Cr.W;Z(<I
Ns56\xA  ＂h@XcL/ciwkRJ}>L02kAf#DA
l0 \LjKӑC1FR֣@)dTWYREw4SmŴ=L|Kk.x0k'QGSkDu{^7m* LxA Eh$7PPD꿼V%S4nR	Fk3j,%Pk ygر֤KSN"c!8J<w{*/fW_?ImθPUj *+O)%Kk׉x+r+NoxJ1 WwDăMgvg3L2੊:UUt.D擖N
T5^BNlm唴Z*:g͚kG<9##l;;eU_{:_Ϋ,gS.#2uC51]`hFئ{K;<h~ W4R%xJ0^i /1d@۔4ߠ *3൉F΁ƙCXGMQ.A{q`'^`H*&RZ:bЦ}
;n+X}l!nK):rk ^k/\/Vl>8x|v֘Y#xI0 ~Ec	!ąwM8h	sRjt!qH>=3`J$Ơ!Yme HDD(lmEkfl3u\ym06	:j]ƐMm|ºt,G̤PIxM
0F9E.`d`Nk!MޠGp>ރfiXCDi=zT* H!iZaň7	{puL;'ϭHF/*u~2iեmHejFy ]ZU;#wJx
0
m~BN3Dǎ|dۡ'	#HzcbC%BD`L۶R۠&Z!x}=aByŰ_⪶Z<	Qq5)[DVtR캗iNx
0 
u$*5	r6A	f4iED$zox1#z3F]ک4/1F(ƅs88d5Ċ}BLksMsܖ6E؇O Ԛ5Q.2U]_M2xA  ＂ذ@ْcR|}aZew#@aP@ "ԋ*/MrLuF=u"#F/՞k Zf_;XhkF'J5k"[rZLxA  ＂h]$/.K5)mC16O3ô*=Db$X]fFXenۜc1\gO8@ؐKշe''_;He,;3}0lM7uM} LזxAj!E ,[,sZ5ЎuB!xPŦsZD&S9H
:> RX<22r2)
:W;cǸ\ttOzYNkz۾Co	2}4z0<a8oEWxA  ＂hec<;vMJ &>Fi&sVE`Bi
2.'"o
 M9h%,Mc!(;pΑ5b0*~Z}Ʌ}N/e,<~-gm=#c^Ԛ5Q7:,H3xK
0@9Ei
"B1LiE="CfQ`oDM`Fh<Qnm
6G`.
X9v!7EiI_hy=GCǓg=:޴ƨ}D]zA/e^oIM[xK0>E_ H!68D0$q̂1GU=o@,h|tdd"kL	)1;.9tH,><YdH6$1Q
nm'ϼ'޾<f1YodQvEԝ,'ʽJjCPőxAj0 zB1Z!+i
1raVU(_Q+ztL1S.yޚ?Y PC Vx Rk-&VB}fo~nN?2i;S;o6Zk:Gs)jio\<MxJ1 .yt'Xd׃Dd;'x5MD䣷3˥B{,2GTe :);F%&4~Hu6>Z經+o+_;^b.[} [렵k]ƐMԛ%0K:`*PZp~}U|S?9gTx;j0 {1Ie	)67H,=ydIj)ftf@cCY)w=Y0eI$2E&3VC69ÉN
Rx$U6v]r6VoAmG
/I)Z~CgJ*199|&[UxAN0D9E. Jl7n$ذ~*
j'`57O3_ت u6%ӔCD+FǬ"!'*j4)S($C\ $&y3
P9-
JENF.MΟtzn	0'87n7e^۱l}kaZxK!/;@b
4#aN dRp2M0Pg6Z^8Mp)lKRX͒*=|+6w֟eXV{[nk:aהIgmcO4xA  ＂h61x#&R<dӛ6b)$HV@!)dv&f&kadE'xIg-)~GmVwrU_kv/TY:4 je]{mKM 97Izx
0
l^	!ą
(`H%"(˛^[U-dV)BE	
#tYpչSLIAR)9Ԝc|g]	g{_;Hup|Nw%^5<bf>CM5xKj0@:\edEz81X(P߾=BV0F "K$razdѮK֤22eC5!-bB2uIjf~6OE,oͳw}ib.=v8t]a~||OܓxQ D9аXH1~9&m1/#5&*̬ m!#R>HCQ*I&uH cBz41{r6({I+mJo;M?8iy9Ʋ%@9yPt[Nm~s\k ILJxK
0 9E.`Iqxi^kiKޢGp5,"n"HHNF z=9AKGaq+z c@H\1o8cyPS4wÚ/\je:+%?	';jN_vO/^[yu} EMExMJ1}lNR BWR=?(xWxB&ybQհ`1(G۩ )ъ; H~!JN|I"VX$1fD',$}V};Zf?t|\*s/ֻ0z4d1.5H(y;~[NpKWZ[lo#i8xAj1E>t [R2^Đ̄Cw=@}Z'̬AZtȱPne)E#PQ
DVbFK
sŏ[?'Y0_3|V܎;?XJ#Y-
%Vک'[?s=4z+Q|70-OCxKn1>E_ Q7HBlmwFxd#dUOxR͡
zB(I	_.(q)rJΧ%yɒ(Y)-q4|>؟W8k}2|ĘGhsN̏Pgm7oKQ=xKj0D:E_ [a	rZ?h4>&9BVU<EV
(HG17:Jzt!q5u`)>cƉrHDabtՕȳLYewKmLy>} y00dDsuk|s-w)*&_O
 rOTxM
09E.`y1 r#xV=>>fj!qKee$8ҶdHm،ʵM`V^"Ū,2|TuZ3ou?C8=J*h7KJb%~ϷKSK]x10ErjB7S 5-J`aglN<74j#A\˂J#VOɶF%"bJΓ2HD!Ukۺ$Y*2%yu\wm{mzbEI&mu
*Sx[
0Eld*?L:ZhڒFp]_rVeTls99f9
Y
zґذҤK)%L F)[_Vy_bEp]'~Ns7"Ǩt'-SkWD<6rZ]?M6xK0D=/ rq$BvH$nA"-J[dZFlH3n8+Փ[& *}TFlm6蚚Ċ_6f8G~~ejEYX
b^5R2p]/S{^@a~7}R{xK
0EYE6`"*#'xI^jiKo%8:崊H(*F)R9i
B$YԨCY9
 LBmЉ 2w{͕P`g~׾ɰŹ(WRygQt,cdeh
璠!}\Ok ûLxA D=BIQcʍ6)mC=yɼgFi k}VhK
#PhV4dEF02:U:໼nKML8N0NCqjL(vpTR/I\b|mWM4xm! T
$Z`Y@ȟT`>Xf4]V#cB*t\_&br>:67zPsxAg-^Br2%}^Zru>dK;>m7YmN}ib~nUBmelpǄuumPיxQ
!E](4ADD:O$c8ZBp=gV9RfO'hxJM1N=CbNkpxAuހ1|gvbUpqrV/R[c!L<(k-cNĽ&kK(mNxM
09E.5
=Ǘ4Ƿ\0YČIg͆%CA`H<xyɹCRQF,BLIAk݈E1}pŸӼO%mGS^)2Mez3ceΫ @&MixN0y
z*8Ɖq߿/iFoZe61CrGtĘ'O	
+MX)&	%t0!PO#ZIfDw#c&;i};oB/<ŭ
JX8K'ewen>fTq8IlZ}6k!ur= m*xKj1D>.An˶!lfCȶfП?MrPWEQa&[n9&ƊTb4B)R{hm@,nT9q$"I9"Č)GkpO|d9˥x
Dѝvǰy;o'֠bzX3 8PxK
@sDą{1ޠGpUQ%368S(ZvL9
еޫ3ESr` 	p$xcώR')s	g}wO8UZM[>A PR/qj}kqwMxK
0 9E.`5	=k-ئ-zW3bja޵2QyV4PԺł*-o)rr1*-8GƀNV[މ,_;حaPNR;T<(4Mu|ɕ4[>cA9MxA Eb.0MQ7cڤ-%zW%*&5À'qYfK1DՋl
2het!zA6eq8:kݞ£6B~Vc,Ny:&E-%IPedWN(!xQ(5U$ 1204-<0)%%895%$mn`WpnbNBJ~rBrFb^zj1 v2x
0 
>7BPr)1A	f4i[b輫%[YF&sbň%qPZBF:.`QѻM?4Ѭ4K;oBd1К5QϵP]KxMN!=xc+<1C4Qoo9eb&KJH)ĄFrob(.iAs'EAA ITB''P6hc?׭3k/vmX+47ֆ OqNmu-	9sAE{
zR~0}[Mum?PFonJ_]ixAn!EheX4R&D?]x6T)|Z$*X	&\e 1yniqN-a!F^rDY=:yoӏ]n-Wy~n\kO%,oa+jK:mi=lQxM
0F9\@I& "n{dZmRߠGp}<xf@%N;hnzy)ذp%9M7Zc94&Da`n-;M?˴)gjq{9H)]Ze	HOӎTv	1U䲋VaxA =acԍPBFWfiN&MDH#2qA9Q]tadJ9@
!`R@_g>VTum^iy^2Z{y ]qQ\ɶklNOx]
0s\@I[f[M[<A||30K h9P $J]RbK&<z&i 2J]hB=:k-򹶤LLK'6fs`R<oQt(JxI
1 yE>dLfF&w'xjҠJVszmSvjعG=*RsGpF4f&Y;M&0Vг=*NhW~4"oa22k#(A*%:_q+o*&Tk'LRxA  ＂h&ƨ߱ڤZm	f2iv5!d
{A$v>ǌz*sxmh9)z۲
J_;<}ZIg-Z 2&M%g]9&U|KxA
0 }E>`dm"*O^MZh-O3aJA1ȈCژ.Jȑ0(Z9,KUi:'5D\gQkz]<,FN<3O~{T%ԈDdji,%5k%{{:fJxA
0}OXQr#xIfRM[bUއ_2E|Do* 41Z0TD>) zl dAޑ7*|ǜe^N#o?Cp0PVZȭժi(:aaqkW'zMxA  ＂hec}ڤbm	f2YZg٠''
mzPc $Vjt	ڨhaGY
ɒ0!zgmQwREhvM1r8Rbe+Arkm KxK!D/Obqf$qà=zU2Q48Q*DGrv$oU^G] zMm*9`z[p-=itv}(z`Qtqoh^yM| Lіx[
0El@ID]$B۔4˷:,ɂF4Bٻ|bhږ1/]k!ρJ&g䀺K:fywui*eA9nw+"[zɭնOL/xM
0}N1P3Ӥ "n<ǴBH.E{y_"QJuB"KG-Y*k&&1P1Y*<ʱy;/\u~8l)ǒ`9BOZCܚurszCuQKxA Ehha&1Ƹ`hmҖm[jIAByD"W׼6m
Dh1`ѥ3H0RnRW}w]Ɵ6.<X'Q]_'%n9T>LJזxK
0EYE6`y5	X9\˯ĸ.ѽέ%F*裑 Ojiiꓗ1\$Tڶ`^	Nўjz][bƅqm8fί@YU\c
@S/	ylkt
]JՖxA
0 yE>`$n"*'/ĭ
M[jO4Ϊ	'-@R4hi3:TK!EJB	xxDD,]vY"EhUlRd;e鹹yMڢw.PpLv`><jտ&2]=ӡ)7~JxA
0 yE>lf"A߱IZi#|Ei9L[UmAU%21AWc'p+].ԛzo](SjCB5sGȳݖ^e=$/42NG"y"ylMM7I xK
0@9E.L&N@D\9&ɴ4Ƿ\[VE4cbPR(&)#CTO4
TH$0;	}>Kh	 %ůX;yE_yi31Yg7t jؚ5QlM} HEIxA  ＂hc}..m
<dӛ.NϐKu
 MTGHԓ]Ch*r5prC
WrbR벑&Ծv~0ؗe:jh4Fmu{&2uJx
0DKt7
MjoЛW/3ÃDh4:z.HibZ$d`0dTuu#ݠ`2cxϷ5u-Α'/y<a'miג*KUqYzY8
$ysX>lu~e+?
oVx[
0El@cIADuL&I
V(.ߢK\[Ҡ^"g2.j
xPsxRfA
8hMBh췥벑&Ծ0d\ODe:J
: ST{Eĥeo JJxK
1D9E.ә΀st80?2=zf!d#'e(6*T wLfJ@QֽK"SDAG}E>ז4"4Qeɰ߆*5X4bP)<;cJx[
0El@$M2"⇮cLkI#|.s9\N":h|$ ,`LQ b-z*KQlrP0ln@!HBA |Vjg^'u.e:u>k9M@ @v._u+o [S|IxM Fh`(3cx O06?6z{yU#%+@9$8K,d0(j*s(#`\Yx0RTXĳ./6L<2]A:_')m_umJYxKN0>E_ Fs۝FGNO4sټ*]O>DigƄd7`2gg}df{<ɲgCbƵOR~V*+z8#蠵:k-cS'#g ?CQzW
VƯQT0x]j0u@W?Cy9V*,c
}D{>0m7xшHAA0@Aʛ,
bN)zqɌdgm;Tuڕ/~~ΏT>YԞ<?Ӓ[kN;2C/,ݡߚF][zGUx
0 :Ia;vRӠ6xV38@ܳ&1^bV1R4=y ~IE!IN=
!^3_;Q4s-'(CLGtZ쯉[+UUئf{Ptx90 { m	!vm!RD?<jFSL[%(Q(QYu!ԉ!X+y&ip1hy{8сw{MN(/4zzV}Q*kޠ;p bosΜ74&>ǷLFx]n 9/,RO=O	%#t^<>y&:JNؒm
ƬVd@)F$_;;sLfMIQ?
K<<t_a2^28k)/Zt*ʿ ꃿgK,%zbwxqvϦMc;</!^ԗxM ='ƨ10C%x]|}gL%ÀCBIɫD'guވ
wn]b"AUrd.wcq&ouc^TFk3E<.wD\smfM3xMJ19E]@tUč7p_I{&CTAr MUk5Ey3J,ܥ1H#-I+@KFz68gK&wn0~{gLKh&/UiCά]HiۣJWxAN0E9/ Jk7q$atD;ESXz݁ȱryJ:0^rSܬ/~9TEiD-s5-2Nje@b,ɓ|zt8N.7xMzI]vn@Xp3<s:~$1%t;OXΰXLBT<kYU@xA0yE> jN$pmT"-*	vwUSrP0321>'bV?1e2mT D5c}mI{'mv~p|_Bk9[1&{LeU:1W6'1TMxA Eb.BKIQ7c`ڄR/#7-^~-@H(mpJ;V NhcĆ
8Zo6&j[:9"xW.̭q|eAߦty2yk8R4̵_q'>1!qcrLiT-xA h>|
%1Fx|jۚoGp5YL[EebEQ%DL!T^Xen>: xR@l»=Uߗ0Xv~1ma<e:kٱ1V(NckD]Keɛ VWIzxK  ]@HQ7I[Ѕ#,|X#jKΚȝJ2jO&BlI<i奁(1eHFvh	:KVmQV47hiX/LtLe>4Z+Qu[&3gc}mh02L+M6*>cRx]n0} hۉ5N1/*GiF0B1[MA;F7x<!I3WvbQv#T9V5L)!GoNۓXWKżV?2!xq`6Z[s{:Z@.O!xI0 y? 4pvJtQ'pmP3rEZaјHYiӹhY:_2(	٣;80L^lp_>fѓ_2L4>u0:	6Yk>u[ӿ&*hxBMxl
Qx
0
w[BPǳ	 O%p7fJ 婢c
E6 9B
dxҥU	^G!%<dBDx}݉aBiż]t,|"yk2ȺM| %JxKn0D>/Bҵ"H&"'D
[?Brf
fb3p"lpi$aK6nyUƜ'!1L`$P$>ŘWkW^xs{
~?S]`{g?tTNHvU߱qQVV^NW<<WxQ
0DsMM"<BӖߢGkǛEPL AiH^K,a/>#t}֐M3cGF(k)p_3\ym2dc3!p^k<*$| C+䥈 
'L:xK  hKQ7Dx=bFYr"/P`ǈ`Ǭċz^DSF' )gv!u2yǣuyo;*oq̕1zYQCPRbu#5WfnJxA =ZI1nPHP6zWϷxhZ|q!s 
2QvQ\enڇ@.͈|Sy""gAA 9ůX-rY_[q1-M! "} v-Sk׉.otgQOAxK!h`ϐn<G$;#ZD2#LY1:j29vƪ3'vCZbFnL`Th)D.
|Gvb*oauY
1r yP^)۲Ak2k/8V%U6$>QxAn EbF
j9Ϸj{z+@qY
ar9FuhRwJ<죀%9 ;qR%?1cGy'Ƒ.O;^OU(=I]Hv%P;&+qT9xQN!9E5@$<f$Y`{~G=_Uyf+Zm
U\3&:LW4a9hpp5ad^Y8]._}G?*5x6J{}mqA9(rj-"H$`J3$Υ)'~&z8Ix\ [xA  ＂hXcԋe66O36;sQg0d# #!H-5G6$g)!X0 %a~;ҤކJz`
>ok{M]$^s5-L(xM
0F9E.LIsL2?jo#zojcFr.܀ #]R"Yyӹ"%!z&BOBCĐJ__6XvĳwLk702]
"@vjտN}xګU^r N_xA0E=E/))Cc	~a@
=ʢjIX ߂(1j< AF3/,:Z&(5}{4cL>l{;1aW<|iɴ^	l+&) 9i,E{AV޲ JxA  b?YX%1F.CQoSi&sVE u%
z/GI$AVgԓ<H

m)1h\Ĝ- 2XJkY3?w_iySL aZ<&My=gV`yuY+GQ_LQx
0 b 
^$*zDq^3ǴU4ђ&䜲&qlIrvjUy&'`аqPWxԝTh;M~bn}q:r-W0ٳ=tZ_\5I>-PxK0@=E/~1st0@D꽼kFf!4lzJEȋq ꍫ,M>ΰɽ9~4xk#!m~փXpqeEnc|ε\&}@Z&ά$E6T*ﳨ_NDx]
0s\@4M@D|[=O3|L҇d7֠6R:gJ
3 mɚQlXd

be"D)a4YhxZc_֯L?Tp^i-WA1xy@tZqlIV~sO[Omx
0лp cK]{C$%p;8htTtTzT,O)$	d񂭬]F<)
RHd
a0L޺mFBU	۷~+,#zYLȃbh]z/k27EJ8xK
0 9E.`%
={K-VߢGp5,7fiuH	
VN -<Olt	F֍ȧS\=K}mĊ׎/v*Ώ!$&Ƀ
Jֹwk"[v6Ix[
0Eـe	"$XhRSp]_p8ܶYkiXbE}
Ld878r(I!9XR&#xc9+p牷/]O׭T.-
s8'tulM:Q5s{qMqxAn =4c#UQM 3R0>VsޯoFg_=i"Chё</V;6 `Ѥqf7[ %dB+!ژeaP+ǵumR
~F>ZN3g`|Ykuh-c[';gOpW2Cـ>֫zYoxKN0D>E_q,̆sT팥$FςԦJ7g9{1g<"I3\\. o'6?gцM1MBGs[v6vtÆ^?<u_xgv&xzQkuҽ!wfz>N֚Ѹmu_PSxM hQcڤئ\dӷRdޑOUjl> Ďb\XGK5ZGN3hp>)vG$LZ&oN4<3_L0G^YPp'+%ڦ_e+"MMxAn b>,R%0k[2XXr:"p٠pv>H)f4y̨}P;wdB*.&xgudt"ql$X[v-WW:tO[}B/:h.[1_Q<f8}o}s^VX	J;uSxK09E. r~M"!l8k;iQTpV4iFH+ C!N q1=0.25D9qgق,HȾDIlQE_Xq]'4T{Ql1wfؚu̺V](U} MxKN0yV
yIa'N64OK`t~}3*L$r.8Pѧ9bfHw=x"Ԓ
U(\A
Gޮxo=-(˲=?i'}Cub^K_~G:/
[[l~ [XUӓxm0廒
$` ʤŶ#)!7<=D:SyQ}H9{!BMyCIVSLd.1>۵
_4KO-q[n`w3h.tUW|L*MTxu}󼲴2(5|V xM
0F9E.L&?퀈q!&ɤ-=m"چ"({p| ![1wz&Bl1FCB
1eKٌ6~y<]'~sZ6bo<t ԚuS=2u]} wKrxMJ1}NpL: "z^%#x|=*EQm.L􌶘@1{`uYЫ/:OdVBA6:'k(s>+Q7z۞o֨>h1xկ9_#~KVuqXߩ	SQV4xK  h(_cԍx<m)
\d4@"lR֚bΎ *J'=*aK2F0"Ơm ZiH
j>& \_ؾv~1:S-W9<)8jYz&',wTjMAxK!E9`hO''(
$ ߎ.ѻ97,9kh
L9g≃)
QDW֞mMi5Q@@	|{ņǷNu)
HxXAyĮLI:k`{KxKN0}Oݬ
BVI>FiApV~\[`,h0DKUw[!yrJfD'O&(`qd-Hc9F#iI+mBB)P`4چ:q(eut\2_h8t4$$ZosNw}B|Y-w_7lxA
0 y~@ݦi)E|&Mk i 'xa-FF/3z\3ھ@jG)E6KzDER>Z& ؒf%ƿ&%Mḙ/>x
0 b y>u$C\%<-"YCH,1ars!*s	MjEM ,Ȓ|1[gЦT|G.My3|mbZȷa ho蠵z֚5Q%Om<ejsW/8Q
x}A0E=\@RhBH@4i^_"ƥ/БbculCzikK$QƘפ@hia|MspZ6u;RNW*S2\edw\|-xcE
x=A  b?`eKb )PLVMM&)|`=)rFFi=D\遵=/9ƚ;щP\j]dg[?c6@DN(a5]vjmJϴD73N	x-K @b.`2Ƹ:bM)Ņ{y{5dh&X4P,IBtAٲ1tg:PѮ\xO|i2\xw܃qkGhZ,X,	x%M
0}N10	qLXIqvԀgMu76hR&&PHSX	̸uL8nTpɲO&pPA)!n7ރЃ/)	x-K!/ 1ƍ7p0-b;~6J%x!4Ą!l%do)(d`HEJnXoTi4m1.\r@[٭
J	qy)m-m	x-I! Ｂ? i%1xq0V[A[FŖqm4Cc/Fџ2u9J_G}i2\x;ރd#46h8Nu_-H	x-K @b.`Nb)֔b(.K|P^8u,abuڡc.rJsU"6CQ
^)
GZ|iCL4/;8vkY6?|..Y	x-K  ]@h+<(bJ1-.L2S=rFr4bphMw5*䨴SC֋zDZJnQ>l7*4Ù&ZtH?S*'GnfPfءA5?|%.		x-K  ]@(P 1ƸDL)ŅL2Sccdl6֥A1
;Rώџwj-]tʀHPѯTiM|i2\L@l!
qe-m_
X.	x%I0 y?@~-n(jgm4L:TP{GmZqTC<LSa)MT
5GQ\%g7ٯdo܁%rd1X;dDcZ)/*/	x%A  b? ٭Tlb/,`M҃mfSS|#{pI`ufOȂ!RYVw%籩	PMIf=8<SG\RqȘ`Q6n>;1 	x-90 {b?@䬍H(B4~FqS{n4L[p
<GQQ2>CPlGN=&%C)pvBhKS<wx^kڠTB\º/g.	x-K  ]@Hy@co+bJ1n2Ln:ٌ(j`]!2qD('j)$J\_߾O?9mT|^;>
aQ-?|%-
x%A Eb.`c/Siۋv~u
8ڇ@
Vhh= Y<	|-%70z?Lp	?&zN4	RGj`
z"ϽH˚[/^2=
x%A  b? t61/t5&^$39TpL'F[B]˽n9QSᥤ\(
gZtSL4/[Рbo,TW.ۜW؇PxaX| w0	x%K  ]4ƍ7p1&OwIf``f>({#$;BfNZH3yX{?sjQvPRFV8BOǸKbtz+a\-"cPTV؇e-
x%K 9(c7pADLӢٟGG!ōl A*FgèEQFX<#VJS7r)pn~BN4}FS<}AjNZ;4]V"U[
1)	x%A @=R!)Ŵhq7HÑKB4ZekGP"hD&k4gj-]uƁgN+3\ySn~K\ΠGGDyR]
Һm-x%A @=HhLbp?PRMw~;1ygɡ-N4LȔ}{[jRe4%P,KΥ=]j8ʼ/<NQcn+?;*x%A @=HhBc<) Woޯa\F4)ǀ#N[ZnfVĢ \K]tLRI$߱qM*qN+%-#
,	x%A
0E9\0q
O+M#mn!E#H=QF-y"#`D)j)CS3Qv?2åڝOp^Gvʼu7-7x%M @=H
)0 Ӣۼo	*:UȘsVB%V G1IFmނ{.~Yiq
;p5~)8	'c76V;_o+x%K @9x+%Ƹ
SJCݫqv'6 Ajӌ
JYdY[c1)ob=j-
e:Usܩ+ACpNnm| C*x%M @=H&x
SJC۫q6Ai9hdRRٴ2,Rg|V'X%/
(WpsykiXWEf	*(m
gL*x%A  b? Y.+/Sh6dGLo'w~0+'L[e(?̩Cp+r{;װ]r=:2M"
qM}+mL*x%A @=Hf#41S耘RL&^y,)Di0IaP6PM/hYWAfYܞ&5l\@H0v꺕*+d	xMA
  b?а
Wm`g[k툋ȸ)XCJ!Rr'{=$+7.5Wp-p3HNQ{lG߾b.x%A @=HfJ)%1S*REo߼_=.&f1BCṕYfS$+Bbp6_U?",U/Ҩ)6HWn\xc~s*WE' F7 tJ]bs e*x%I!@=H!1S/4Fo߼=	$|>3
&~Qh 6ߏV'T%8r˒@+
jQ4+Z9嬁.]k  *W	x%Q
0b/`٘MA&HHooğaW܃}Y۞l4rf<goFy2RRdxky;%J%p
(]N <phBsxcX_ \0b	x%K
0yVq7`I7nc#M"mܽ?NB3KIH}[/
VЍ7f8לSc"| Vw{P-RǸi;Li\WJ-"cҽn/p	x%A
  b?*Rr;V1)
3}W/;~Ttv$ڡZU~SUT
c6yoJ0Dpr#$Ssw3R. !--P3\֘g8?500	x%Q
! =Ż@
D?] fƪZؿa`:hƘGJcȹayO՜S'#|8\?0l1j^O1cZN4r#-a6H%-5M/xQ
0 2HGqf^YPXN@Kqsif^
lz4}Eix..MO)IUPJO.֏/HM-V,H,PU@,-gXɌ$\̒Ҍ|l₌̼
].=B. %@xSMo0W<-h{PZ%
"!!.	BLScI-p@i<{of<>J1F)a^-]
7sLb@LÕAN>\h%HKrhT-~{|R[LHLS	PO>EZ/9P/14h'mz=#PO
I^z
*tR6b?G<)hBF ưƇ>AqbXT׈:H,+?#t~mKJU:e>. (߼)e>bJSw6طSUby8_AaҜz
%Iܤ5H*Falʾ>*@w]i)v{0|d׿WpK,9saV1ȦNQs[hd'hўKUS GտCx]RK0W+EۇKo&1`51K9W!F)ߙ"%314P
#O:cy|EΞ 3ۑ[ca sۿqCrm9h:;])^ƈap
1LpHW;:lno\NnH6.cB}i"ijo%ԡ]Lo#?4%
oޟƧ%DHgd|>vHiF"x=yP73-4W)s_'>eM3mM\(CJ֚0,}&/!ԛ:Rl^c{96)VsZaՋ,D!4K1WfjYk-fr.rSj3c5
%EM`+%|&KivKS\i|Sr
^Z }YJTY1,
פriXX	TgQrAW|!)(QMlRɍTUe4}t+kײ̵Ze։jJPhEM-D[3^*YͼxK)MIUrutuMʄfTp&g$g'䧧g뗤$+hiaQ)!ɤV@lOOJ  -3ZiixafP0P 7xfeK)MIUrutu+*.(X axTMo0WخAamS@:tHfl-Jt>Jv>*d=|2l;mZZ܎y5N&0)
rBVmGlWx1a[_yi涕3!kϲ	!^?	!wB5dUq: tYO@!t!?KEQ,ǙCeˮEC"M^QܣA
I4o˅)#THR1/=yc)ՇiztkUw>_ħEiEc	;['}֝(K8.1geuGs)B7Xn[
>~I$Yb5:>K=kd7xR<YgIVk)mJSɤ+QSIvޢރZGA#N9XH~_ThJ~ɠlkɚV9^Bר_l_}|| ne5ɘYU\+K{lv2#W\caLXu.w~}Gdh=~=54QfU<\"?12;p9kY8Rd.rx 5bJ^Yb
7~s>MAq}RwU ixL/>P׹?~9%,x]Q1gU\Af.+Nmwt$9/Ńx/E"z>߼ؿP7ضw22uo]-&`j0O*m+X!X&J%w
w\e(/b>Ӛ&Xȿ'o(HfnqQ3)]#5|6,))ᆣw'2UY\s+:OfrFAlCěb@[Hc@gLРp
&A%J |>JBdYۙDqPRI
uί0hLW)9!=ޭb:dAkїvSm=%Rã+w_ۅre(!7x -0!-7$hc~!_A^~Q~AQ~VjrwlJ 
xsI,r!nvz&zP<(;(3/9 1wNLH2sRCrS}s2\E)y\EU\I9y٩E\%y9i\ -vxke8!@RpbWqF~QIiif
 u'x8q	oZNbqnrbrFf^Dp ^+4x340031QMNMIe-2&~ِ{& P/.I,Lf~?kߩjNmirDIIFjnj1?o]93W{
!%d0lתiO*KK+d8jt>սi-uon4UZ6+>37>w~\KTF_Gc^˭{]USX
qS8In_s>^v9 v}xc 2\hl}7qOvF6$ѕ;+	A'e4 TQӄrVC8LAǒuE5lsDGj.rx3 |Mw̚(m[5[Α:4#dU%sᢎU]Z!AxG (100644 Datastore.md #jd2SDB[Nw¦N[bR󫻯rLPxUxK `bî&uq  ҭ㑸4jJS+J\ %̒8-6 (ә=^]1$MxVnH}6yXXB"(\4!ݘnow;>鶹hQĮKWSu+z282Y%tF*N^$iÔJ"gmdT;}Dg~`bj!y)]8yϘ	-Eu&̘~-2(4J]@Xn|ڊcp}<VBXKV!*b9G
ŻPya)AcB1T/Fa^e0zwǗAw<w)>u
HkM'IfIs.bN,eb4tbh-S[IM'Lz0+LeƧ1DQ"t5a,BG
WX/,q@M,.%qoçj΀HxGhYR ,3CrԨ0s<+T2w L	ӫd*_PڶIOqL	먡4h(ՀRaM$KkmƱy4(晛3W@^;U2
ʅG>hz?hY'oQmZ{^ǁY&װtܢb"?
˳aR1qnϻ
KmHFa-oJ8Dr;W
 &q o/ql'C	dׯM	ίƐXa{˔ooO (_GOw~B ZK`:vS(Eo8z}g?SHcG57	j9Kr
o:wdYp[|յm6gZ5 keۍ:wC|n?8#lfd,c^7f%O갩jrq!Sh%syʆUKF*e!ŪNNvjrX;8<ΥYp\r)\Botсi<g=l-Z{SY-Cyn
{{5xXmo6\Cj,EtKɖ6Fb-Pc$b#*I%~Hͦ- M{Cxͮ\dR"
Kf̣Q>bL5k̸K:X.,O 9Df'o>./ޟwe)$^0dǧ>;2D^s5+$8'+C,T)-#x>M4//zxJ~Q4rPeݯari2O&֖K͕k^YTڰ,6#mkdNFB!bނl`+'prt5G[z$P<6R@t0ӅȠ`vtq2ӹeOdoiPqS<NW0&R-&b˚@({!c>C!̸A1[H`4T!6":8F`XG:n{N`
GR蔡[@o--'owMf'o>>⌣[Sȧ"c!+-ej?L女[$]|e sĎi}2QDBF~97C<X!JϒW?\B&
 3<-r	jWK&:EWPr 6fVn6ZOtM[A(;D_P -Fq<M
>cO`1UNT.:TgpE*Lv!7(ϢVeN)H=Kr[/r,4ȸ숳UmnJFU%E"6?[n
+DtDӖs-ivK5CWa7UZjd@<U2^`v91k
_vP;ƉňL]Qh^&r)Zk;L$B3o(U!uWLSID
Q\C#'7_(an;i勧O6'n//9Jabͅe2ڋ"[%ռ~ƪ
>KW`NcucnFU8hdLއץL/A,U㉾DB{ηD\Bכb	1mе[b{Y/VM[$U;ҶDu@m'$ot*zۃOW&iZB;t?oPߓ{Uq4Udk,qZ,x	h/4A8G,iSB Uv&s!6	kѹi-h:40n.|%l~pU'7Äo##
I&cMQ]L=aCQ@[4zDH+ɅFg;v
pd/KrWo:f/rZn}}׼iؾ׻'Հ5AqfV
[S5]PJ"hVĩ ݎj 0U'8Xa}bLH_/?6p3FZlźf-5SO뻟wWwij^UjC5H	=% K ha酁ho9!ۃ6m&]V!] mHAՀzR.#dF]BXkP]ZeFԲK;wXqm
fFDVDI)oij7
zs/:3|X.2)x߂}gՕ]"t)JqΩ#WuZ"?9ƠZΛղT1 qptcU}̆#5V[]jysЕ_&}~1ҿRVdr^p@qHx340031QHOOM,/+Kg8ȟsۨ-_}rFOIiAbz*XK5ZLCnOX{|0 qA"5(xeP\M6Jwmp,3;'wyWu:S5jwWk H"#-?6jITFß0(OP2"j'|ܲgf
|r0MRۺ{u~5S&9@lTT܌»U`߯v3(B,v1=-vKk
H|@WNS^wg>}u;XSͿhLH?P(OP%B
施WRRV,J3l|3&?b'@PstW{MGWzdׇWK2OoY^IrJ?36eq	E1
9t1'=@]e*o#}g	͈3Qh}RkNeU#j5mx'Fg>j?@e}ݒSIѓ\
~	O%jNDϟ}dij\_;H2ʵw-<kWkبِq%sX Z_ wi|$[.ի7Xg96jҭ3v^-F?¤ݿ8w*#LkLqFƱ5N?g8'Æ]v W\G!Şt~c>^םC AGGiꎺLFZVATߞ/>Pz[̫D냻t\õ}
9j(BN(_C"<|bz&j~DV>_N ݳ"B\&]DҬ3-
z\ˎ;#jj|qA|#IF[f?dCIB_~aJEyYs?3_&8ZgMs6cs
t=+y1#j>&,֯{FWJP)pF1@i.ȣrn>$WTBY86kҿh+t\ oB%OmѰᙈ>Q76ЬeĐN j;É4b4Ǔ	$l.>x7
o<\1 	{W@A_Oz(W*c+J(3wks偒/N7`Z9E{2~*H}%Atx7HG1P-۾O]3|}T갺\KJ\}*qqi{A6Xe_ZR\m-e4\׾iSgo']XcuOTN/5e`o4^myʬ׮uH3clS%o;3: 3r7ϹEByY޴ѡ]T"`->DW26]xi4Ohr >wPp_j[xGT_@nztKE[I[x2Nђ!GJ,IE>^9}gڸ/oN8>_㊬_l0y|ͬݞ=Ƈ7s4luQ
tVM},aÉ J&ڄ¢Vayˍ` T&Jq
 6 :h/hXZx2#h%kH )BoXsMU!+o0kmg5\vWv+j~0$g$`Z]\i1丷ϥAPmԵx"vȏg^IyGPg-^*eO̭rf6Bԏ|?9w1Zqk:tY}nw9?ZGo.tYl* :,A445MϨ6]ClP8M%rƋ_o'}\G
*WwZAR(i=@v;Ai1*Z
S=bsQ$}CfTFSYlEW9?h;\?98mT}%>Z,ƖG!	Q]N}L,8#k>.
` P4UO=0kzK]4-y5-]u_QMcjNdPP{;J@/_wzz>1r_qhwN[h|[<^S8
,;5b\* 8[Kbx$f(dL)jLk%KVt_cXjfї1o}o#k,`&"f
y%+iM#N!GWf"8f\ZU58nuzSH[[NU69/NJ{t훢CaI&M>v%I0;qdȻN4:볣>*={K9sĨS$.09zwQhq31ծw_<1u_/>_J07x &Kz*ՙ;F(e%_I*: qa$i[R=
1nXLu8zl!3C:GHxc(
2CoPNQ?!g'wFL٢FҩA*4SCLN/ѠAPR xEpjpfu)y
EB>|Cr_߾~~?̇'e1߲^b4>ۮ58o#1hՙ
%&%Qa::=1@
\-ER;ܐ7Px a:T11-$6:<4nw)^]|控R\i`岼:S fA0j OqSx| }hFs)|],v=A
Q<T,Vthqx4ލwO&#(ذn^Vam,Wct>ۯ+'}eyyVd8oXJ
CXsGhjE"19e(1ϭ,|Ju_m>	.rZ`jGVL/<^Ox[lnYbZq5S||{1'3=s7m?#LBj&ӄ`S|sXӇ-2lR/,^(pI3t)yIjؔh9"!\+O!0~ Eu ғ4?UmNsv<մW/lZof#SE{
AmM
SvnsB.7aꂨQIzk$vfX}Op	Jq
$y뎧Ho	/wZ0ndxd-|7$]zC<+Q3r[E1w5qx*qPy}o; qpl4
HBR}˗,kK~鳌쒜Sh]~׍~آi>Rpbnv((>3(q~vŮʆ:	W9@_J!C'iepߦqdD#D3	.ilHv8|.qw!(@R^ʖ@ȅ
NX}8V|	WL*9fa~pfd:TT-S;}9[{G4ӎ(J${UtX*Z2$1,Th!%_A$&/Gv	w
MbR;v쁸ϻ%''(M	:'Ѫ r-A
/uLQ Zo$kg!)?ۅTgP	ƅvmV`{D5kߕ~oXereJ/BɓSwx|	z߸d/6,S̤WR; ٣OAfi"7H墝SEVJ(;]Z۪?3dD+zJbp*qAK!G39Ϊ=`~1dV<-t	u'}Jł;\<EQԝhw+N|-*~Г1TEJp;w0zub	T}\u/݃S=nq}^˘6  >d
WwEt&{b*B`p5@<dן;6`
Cn=뒢]%LO
7_sQD5 arɅ0!=vqRW(oRy9P՛S);|Lq1xPG5+5=Bϋ/ΜJ\̟=i=Cr}߬BOvщ6vFlFm>E<wGyߴdu,BbŐ
#6{3z<&Zv77Ӯ
}eHlq_'b&YgY7ߠ]'R쟻so,nw/ψ+RB*,iQM5uDÂC¿1#]63 [>L pyѝd
3I8*KiJ"̅4Q^@tl5F
7k(~˒w8WQXeL75͇P=.9QLPtBZ;fr9#vt*6pD2P{ȖYjns.9h} 4xK+?Yr9% ekq 'y6!=`1?Æ<HʘI*=qg__Hs^uui]r
_{B,yF#LV29(ׄiY$ܝVmv^e:!{)PG+f9L>C83g_Q&Z[U5-]';p@F^ǖ\砌ۘ|0Lۊa_Ȱ9.32ۋ8@-v91kkk9t8P,8Y(?>va&>jdp[&F,~ɘuQgUZ7_8꧰uŬ]~mgf2zŪ}T-xSHA:MV!mաr2Z#ΥS(_6
HN/bES[YqÅ>6{4Qy#^FȷjgTQ
sjXYiJBAdxleg9L^y~TiI:vWSLKIڹOOK+×312H\W,VI JyAUVȫbQK%id g7Pr5<ɹ-S3ѰKKq:X1i9{]~yXf]<ֱdcdoyƉ}
ߛopgΘ{2[ZBv~xMfo|twi#x]ꔧYvyvːCjN;J[SDkMū1RG>p,YeڶMg#Wuq3<PrfkON?.O;:wV6[2};enп9>OlO4B12/WnW'Ni:6PkiVx]:rU_Ub_1-{Oq؏6=_ݻػ{ɖWEYDq%B}sHƋpydB	K]%8$>n}	e*p2qSKޓʦ	? 	=&b{A=1(=52]bZCb))1N9'͎Dx-OŽvø|(#aWCP_KC׌D*juHQ=m>gb.~'sE49X͋wg=- !mQZPANSҵw~_IW]'MʰyG5vdNU1!.qVnOK4]7&1L'JǨ[6|3[/iE\	22{TgMǉ5ECbR8b,<uE0%@;hv>x˱\X|NF*.Gml"oB6tM{pwtfjY=ݛ
XV&~$g3	E6P_#\0j?qIށnpg(?}Cd7QƳKÌө&qt E (Es>!?>-њ͢m$53=c?S9Uc5owGѺ<ګ-I"[-K^.x}s?ʯcώ4onY9վWwK>ӷgk'Tx&k[BO@F'swkCq;y&egQەou>ANpk
Po{돡'<&1El1˟q#hDÌXR__y093䘪گ!6I]|Xa}3jzڜq
Z[u%IÛepP4-o%l$܋M@y]Klxi.MiĪ"w~i
e04ޘYX m~(^:s0e%Y}&)k`]Nef?}.#g|6	Iw\5]\_wykqޒB6Zo'`Xjw#('!+#o6*HC<Ӽ!)EwZBרln@7tt4 ѴMXvK"9qGe,Vg_O]B>J2{tubcYS#LW0Gj%!nW@sB՝	R^dbϪ	ޅ]Mi,[OK"HrؔiHGjZرfYX'B'?U;Ʋ˷ڰEU/nLpۿV*ɬWv4l?𵲯7HhˊJ]954۱bŧeb^6ݻ$iV*s#'|7LEm<DYT-M+h9Zj>L.aRRe9GE]ƀPxh`bѥe̢c$>RWiJєJH<@mzɫ8% `VlIM_ߌQ.1m[|JA<BB(q}Ka.IyҮ`P"9UϫnL鯴)SػWԲ>]D:5:M~c""38ϣ;/#B|%Z+Sdd~N2v*}0b}z̻Y!5;"^ ="|g!CkdK_]bD9SO$
w`uO$o|r!g$^G۾@YiX\dRh'vF\Čx
ڎ*(8hvX h:oa=.4tyqDM毾&noWO~>,,>?=LØ^
+Ñ@Mgg#z͙!4{n^|׌_3>ʶ#N%GI.t}+!Me8E['i̞-@vW*6؃<B@\4%_pf*<p^\;9#=<ԁD~T^3oy
6M7]y*"q?/6M/2LnM}r0`Yj<FJ,zI_#(IqR.-=$U9>z'D5{{"U ))Vg@bFWᄑ~]wT
B?CBF["}q?V{WȐHRU".:YI1#DUs{ 1`+)9h)vMYDKĦ>,Q	L+<nM:B֑̪goD?Eͨ	z4Dc_WyV38:*ZTG
A&X&[ՄelKdZgS,tKG`fjH~m֞J:h|{63e:.,e	@/)1rKk@na(C2M{~7VVVIWno)-盲>.xS{0I9^F7JS>NQ8`xW
&7I}W/9:sx5U.|BM%:F\zyC+\nT~ОBGdzh`rL
@wy FqFMWޥHemId$ڕTy[
!Z_ljjJIR	RF¤xΝ|F?!N=td1"N|{DTeHTP
cl⍆O#~h||ZFG4p= /\o
0ըX}!dQpŏj4hfebjrUƗs)-V7>`6qq}5C7_ѐOg<P2`kkyy6hVlssh;#	P3Sƪ6"ӑuLKA?r$
/ ˺U'jzJIIn+^e\WדX;$fqKVwG9 $h%͖=K}M>:!G5v'2H$!mJ
*ıG_1VFr$~nh Zrk[uZ
T|Yz,הϩ{@]tjs7rn3y&evNKhJmDDߣwicIH}բew09TQr3+fO~hĬ]/p^*e;yL`|<La3Q*om*N2=u?t2fvQ^MaH؂ԥzI*NSTy'=0T߉Fn50.j}$3)|ɬY[4Bh4wA?GeJh%Fئ~x: :
lLL+[.1(+1ӷA_eۓOM Guӊ28y(2~Rm:L
KCO`99R
Ai9Zv-%~076BNYՔ+&DO{t9& :%I1fP>{:? $-/;=f k+EeߙDfϤb1<"q
.")
î	&m	
fTuzg
O]n=6
)Dr^q44rn*ۗ³.pﾨcĭ;H!7Fcg 0%f_4YRPPY`%%Y\fI<=''oy3A;B:芉9VRev|WD:Lzuz&"а<,&	<9x0tW#pXO髠y~@,t<g7gCKO)<(hǬ,<KɦHH,hqThhZ;u@ i\~:8EXXQ¶E~!" 0XMߙ'YR~^?UA,^o]h0P9_:DPWY$Sm}fX8ӕwb^hy.ިsin,/YI=&5VjV&@mff\SCzC={A&9MUimG&i)a5ݞ:'K[@2@ >!ovxJf9Z	HK6"*Fm.|?V::ڤQrٸ
2k*/L)џKX,YIÚJB?iC(mYXnRiҠ$
eVID3@k෋O&ySbD{)$ZSP
{m5BkXچ%ڳ97iBE	Q&̯fPoVlU6/$qz7uR6ɓ)@_-gMͿfd\Tkt.GGѬ,*xd=d>֑K	tjB.U=웃Fc\4/GFGYW73+)4*̇uhPG;Qҙ*m6
[ZZ:o'Mx{qnywmJ_׆+~%HDYH"T3ڪ_S&I,`~<byMEǝBNg^kQ80SB[RS?Rs	><҃=>hL}$.u[f6bZEM,# ۪]B-!S6#Squ>S6C)oFBT
n?Qf
I[JT]i2&{+9[wǯFS
+TFVwV``P,U3VgEn:W蝞
h]h
4.eh7Gԫ^sXk	:SY_̏'Ik=4>\egt̳e:%e!61k ".fsA=$&.˻optLۛ\^ĖP6sJŀFjOafw8bʹ!qxgMh
Y/%%	\Haj`/{q&x;cbWl9*P!%%iG_KBEcbyMn*QmWdU1[O
A 6^;0$'؋C{FNzw?
/kFL
"]}ILgqƋW#`{TWG	Ǹ*Sm_?<^M&EU=xul*L@ãh{Ѹ5;p߬e:hf
8q
m"
F^(ؠɐBǵ
55LU$	*G|4`јKYM8-99fRf~DL[q8^j{Hy} F̤CeT5iU 6moEj|Xdr
y/-47dL vՄ` wC/EvTWnqܑ_G'#XX(9?'EfǮlըGN˾D(%VlM:*w:ڇ]M3^(M#լx'/rb(ZyBOV҄dMQ\؆G-Cuh}}(ш7i4hrȅvbjmWW]@xYAg1m%T^N|jFgWq8;fqx"+H/K,K?֓tʓb;AeA!"N]8t\y2Gd~f}X_+wΨ"m`l*,Lpv-g#%l화FӔQ1w4/Q;nU[1s~ߦ/LhPY.]hDpHL?e!:/QchX}~_Hbә>J/QK?65XJ@1Z#,mj hkx^GSNB~&t8v3mZTJLs ^@?s WMLMt%CcpegG80EP@-"0)HOL볺01^?{ J7rep7++ePc3&qTw02{,#+xŅDɵυb<?~{E{'2~Ca68nlߊ"éW~TkXf@0QҦoˆu}O)_l:i4 hFFS]{jWvȗP6HQ\W[a瘙P1~R'C]gnJȥ ۸~_fZ}[e&?˰1[vD/d@&W&utʰH!!،Òa52zk#of,Ndv@dI\S'rH.)@ޔ"66V\JY %,>U.~؂z@U)xl=PC58/Fd:i8!uڎszYXZ.ܽdy@@+|˶i /ۨj\Ո6
QqB&oq?e֛rAs
k~ kL$jb©}
6g.:{jv?p0d7;t,覩kBzƳ/nh)W@jy_Ev`T⓷Ti5P:jm}HIg)anhR>6j&y;1|bj4Tm݅cS)]IHŸa(b~7
®Y=Z8#n*އ\If%Y#ՙH-RI(qO_IɩݸnvL/M8.Ne,(s<t1՜i*	ݙ^<%w_"T ]6	GG9iR V4	g:m:GW2\'Ѵqc3Ei-x$*XD\HXR	Q&fNܔV:]RA
F,|,Pm,K$|y&ճKn\˙$F7q{^Q4=C1[SQfɩˊb<ʉD]vV+)ЋfVT3uv8`/V[wnB@qHݩHP|muK!݆9^q8?xa$Ds>S	#YV{׈wZ>&5Ӂ3b6]b6S9~,]zj
?㦲,58n>et1!yGJ[YON;K+ C赾_PkF;wuqߗW]Tￅ)bܙ1zTos?813cBXbzK'HcΑZ`Q=Um|i𣜸.*	H+f-C!cI31h\w5dnJaӤx<uySbt8< ?$IaN(^~H/fIԉetTU#i}IJ:s#7/8bV\e֨<G(FOO~(je؜_ҍx~Gl'kY@cIg JɱM!ݱ'
yO9!կ/ȼSw-*ѣͩKBxi(:>ʃ?ۣ]Vk钪GmnU:
m'O;5
꺜ٓTkj>5cv7\q%ye?d_?9gO%}Uw#g6(ܻEhK7-X:\Z+;wV฽>PZn^َ;vWVܓ|;ʱ
P<Pi:Y]J}oK]"

b8+ٷoj-~c*9̾:JFd`-J-i
R;"di)C:T͈ucecE`)RI#D1yIpfMm$\!+	+d0+))+Koȏdf2;|Lp@mh?'g)P66 Ϧ9p$"GYSG۲
:8?
kze)d$$$~XǱrb94WԂf;,Z%b_E +pFM%L}PBP_d[i{˟|S[fQܠrG+	4Щt,,e@ZmEK$α 3_sX1;cܪXږ
s!'eyu+@ 0я8;+@HbCǜ
sY Hdjh+7"*e)+&>gUnill&NFb3(3{-ofMZ<~l1 MpdE$+/UDdacWTJO7]2HzIO0ئłͦW_~3[X.j5b2q£ϔߊQbn":1ebz5%wihglwTѷy`T5F`Fba]hZ6!0_#R
fqZ`L_Y
j|%Ouƅrԁ>ƫ~!*o3]nD>kf7
HI}:PH}s1X,1C+QvǷn9hAR2nL(~a\VZZodM+"С1h
'i|{T-4YUH~VM>ftKjT`>U] qQd++!cMXDYrdS5L!MLbɘ	=1i o%jgv_rOwPךQ!gjnWkq&
]`83<D4VQS9&[`5m k5uw*N)0js𼛆
R^T<H`Ia,0bM#h[9c{/j
ƨ}6jf( o,͸47H*mx'N-߮;[)){2uMU'ƪߘ
?Bc>z7nyJJfF,!63Sv@ Atp
8r@,SJâ/*2n@i*52YL,\:7?1  ڛ\:H0-[0+>13oDc g$B+Q̅lH,]`6(S'Nhծŉ
SuJ5++̺/%)4ם1M;?ִy!RČgH}ڍkLA-?"'UZ-A߱#TMPIJabUIwٹcAGW`ʰ޲. y~;dUҖ%2/=wN:?۩0+vw*GgHR[SR
hDU͍mj	Tz4RgޫMȿhޝtuY]
\a&bxje|D w9wSe
vIabR>ͅ[.	K9#A^J'ޱ{DzҮ	o+T0״$EWvVFj b?e;~=XH䞻%Nd:˳BXw$u6e"xG▻Tlݥt*aaĞ,>aFjҐ'3!3۝6]I%tN=|4cb-+-K\Cej]m_z_"wN0`E:5]
N_E4ie7K
ަT=r#Q]YAN
s$0p1ky{ YaPgP
l]:s1j~rJT9=,
=8C LysM̡4 =zJH$dOe>3ӟ9V>ejb%JmHsG;"*+OBR[2f[&Xpe]3jF-Ŗ1UܷOnC"D\_	}C>Nw.қY/];D@Ef0gc`P>'.?
VnGTiL}k\wMkB/)6iGt/1>۞L2msbLl۶m;6'Ķtl=;׽}s~UuAahdgt҃6+^yB_[`ȫ!DyyK[[4M|:Xġف:L'/o
1jUD&;FW>ϱjK-qY롒kf KRQ'=Rћv>*+sq4ŏ/!qFViГyʂ;-^8N#T=V+2qU4Ҡ%Hme3-Z xc xl<#5k.! hHcVm.0sщOYSMkcrdDY dSҀ׬O/~ZtZ;My[QekbvEcumCѬ!>ׁGo2[[ںy1fF/0aiIJ-!3g`תa/ꇪ`5xĤmt P[&ޝhHV)-ul:e8SIaxJ2)1DEY+fk	u`7-[%|g6jo{\4tUPɥyi3j/Y5>2fSp_DcꆔȅRhM\;_dC87G~tNW_70t6,ת<oljom#4/	/Rl߇'8g1ϕnÅO8̬aBT[
cIOײqz͸R½)
Y)TTqK4\'M6Fx]qxWAZfdFmyLS00R.-|	qt,hnM<ɮa}g\6H`1[RjY!V%
[6z3N
C-^KkY-GyE<iy9	Vw3BCK>Wa./bUpfBx,$IVd!ͩ\p>#	S4IW(F$WgyW'"_6F50)bxpq*Fh~9b{ܟaڱH9rz2,씔0~=wuy$ Y.2v6!K&4Ӷ[s]TҶ1|!yl3Bk_3칪U&m$,
sIѻ_ޒ6Y1JN03m'I6cOy(uwr}sy(̀bO7
+4=+Rf	:b3žFbqΒWSG0oi.^9dS6iڜ 
]2>X3P89;fܹ,0Ȣvk":D'iτla7'n8IBk-/<"ce]02YX΁(3 DˎsqZ~tHc4WbMgќM8BVQg21O(&|DX&:XΟ>a)
~glP#ኪGeAw*eC=V[$$I3GB'7OzV	%=;NK`o{!mعeDYxog᫕
F^%vҖ.>^$^>MtF߸.y67zXj
Ӭ<i֢ԃK-mfch;CmߓSo	)yaybXuszBܓ U*7'w8TjG2xFwtgX7Bl;sި1M'o ЦNT8oBov
%4~!.:w!3r}b.d.?:Xwŋyw}oXhߚQ$}x<n566N>F <ĬI)2Atv['%^yiwczc NѢQsܭ ,yo>=e,8~菟Pd@
{Zu{I­ۘ'+x8ķdW$
5ǆ9R'ɽqcC	3
3NtF\?=zozɵQu\
g^1r}sǡ{R
f?YX5*9]m~cK'j[C(>H]KN}ŐpU_Zx[~i
	nLԿ"S4^O7c-VZ3\]d nFr@wn4C3%ްC^OiWʹ>vIt9
2No~גLzm}$Z*YN<R癦cBk`a;`qK`/MQ<~!E
3}hnR
qϒ>&y"H(vNѽd_:є ~5eۆWJOI ~.aw2oٞuA%6a%vm74*@T
K(OD;j:SL1,*˰K62Mm9tR'CK$0${r0jcehWR #Tgd270 c(B,[V3(dIiTs ڵ'
*ZoLI"o+DahX_%$&9SYoU-6>Q;;.[=V-Vygo.h?`'l).RM@_3E|KƽFa
yYC*xmX{z%gT|>9p^isN$MA/ut-BlѽS5gJ*ݰI~@% Z&hjY<M)	ʟ٬9nś(RUڨ9«Wzϋ_! X»=py[5sOk<&t5}I<,~g&W	:vtuX||#,\q(LjA. #@[7=k*Rj|HFU4)XNay^U+2Y6/-v?KTf(&AǦceʓdq[qGRJY4cDlG@Yvc5^ags{<~g߶5'I1oǯ_Vb|GU~JؐJq%^aZ$Ճy_*gcp>'::,W!A3lWt'|IR7\PsM˓44ۮ$'{BeO]bӲMnC[_Fm}ST1$uIF!UPnd/Z0
̩aaCi%L6r.	[	{,fxgZycwl<mܻ۴RYs+r,
 0Tv9TsQ{v5t2*{FݓU.n$,w<&irV;DMGP|ne$!'hg=59vp݄N]`#24W֛w*EuMklj	_	@.3)qnAS$9)/IuX(풧rOX=8ɰwRHoU]m\St|m0NL)G
](8rkPI
ÚC{[Fs8^u'9L@aP:[-R(U9#aՉX	}b좴"KEdlfM%	?gx̌3! IÁx!Xį;FQS1lG=U4?w/᎛Q*aSPu]c2B&SM4 =G4>C?zC{.&\Y%-wإK YOnu_bCb5;oUξƼȆ#Шx̫TaCz4BvVvuG6sX5*9HaPpB̍#Ljq}']JAFkӀL]cTk~:*SH:K.*4MwJt'1"V<]^j>m~I2"[gL/*_/"9>XmԇJH2AyUDiG3}|5\:TYX+-`Wƞ.(%&=ED$yr˙[ B@َ]K&z	'<Z a='dwؘ>0 'Su4b**?wO7q7dӎ'*GcƗ^U5tm6Go4baMULh60>aSQkGSxm:鵐!_E@,<>qE?B_
SIi9JF>Ld?kt'T5n[4eh/+>z`hw]`lB![.!ffp,r<LLiqCplTq8AWJJc_JBl,=Ц99#|^F8Tp?Tְ}{'?f,tX'
_}_cD`]YD6-Te)Gj4cYP% Ǎ:p3aS2ӆ<! !fVC92"
B+D^ҕͲg^'6AbPU9Ы.
<h0+'Un!	󐶁Q|B)fEkLZٲ+[DFj|hbX!V]7~0e$(c L.xǧ"XNnVfݴ I]:6(;+Z_IPƼ$fzґxP27aL:N>Aƺ}Չ-	Gݛutȵ^ywq4#5?+&Nh1(IjMB=2rzJM&FuM$29F /'U:Z[Zٞ24bTշI"PlTxb&dL 82~&_Xg [?>s*oD;V˄tr񾂔<*h܃GiKxg4[2{]͘cuY[#팝Srpn美-~	{Dm1Uidّ_N;"G!wx!x+0,w.S?ݧ;>> ۽
d!ɨJ[K9F6#Io"XX~焹23 ;/]6l>>NX}1|B2*%8J1.cSK\x`vgnifxi^sx~JlϓA+(IvǦ0
/w*|? .^Uaն1d
Z!qeQYqEic:\KO(_lA{2fҫP<:\XL\䊕Mp*ZlGySm gL=WƦՋ̙(\@k7e&{UoHl01,mVs f+Z5Ti+Ӊ6g5i
n%lk}"R2 ,;Jv䢎F2`sgX%}WUvm$H(;\%H!k
[`=K&`p	kϊ\wY3=#[_)[7"$a,HS\Q6p_(.T|lyy׏	H7s~kXTE7i9#=L}A@\7KH7jluf-XUcPǹp#	7;tܭE5"I
K`s*NQ;<
 h?HռBPD|ăبAZ#l|? hTE@g9ȄWkyINeV6Yo!iʄ1߯Rjj`mgi6*_Ey	zLWFj$=ę.#6'f6vEyT%CZvuϜ3k>K/_,Pk(#]Ͽ+JǨ֡9Zg5p}%cCL[\'^R)Ov IoL
S-N{b^DߜR>ғ'k[ߦCr3@`
ipνY<Һo=^ /aB]
Y;T
OR;x?ҥBdMyjyP¶s Լ9GHxqF"ye"o]0,uJW
;ģ.
W9nrWc~{vE|"v
65155ʇ_b"5Sn	_m\sOT] ϾS8"0jehcKm۾\܇z ]ZeȺE6^=}	IrhpHZ~q	F0;=6ػa-Zr$5羡`.ڏSLeH`Fe}vOeZ3*Ȇ;Y㼟ߏD.ቑAeVܱ>`EGs곴~fZi
"9/[@~pÄutL[NH##ﹰc-B9djtCzԮ1,m#ZZ&Tq^Ce`T&h(6X9,ev)y(/kKNpWzoLȺYW}(#3xdc|DV]^zP⟣FBLGp*?@w̼GQ#Fa5Ueհ+\Wo>Y m[Y4OyN|#^	yIKx٪VE_*pN4+Uk,Lb_<eZɳaXqwJ@o^b:(:80nP2'SM׿ʑIܡ/ %8ECfd<jqFhۑu^	͉Y.Ȑ>dj
<'17Y@Oy<Ɨ,@KĜrN0)@0rjǪ</|Y*YYi6bTy"@F~8Lљ#}+VtL\CsLNwwenxj"ć_%lC?M;%|߾yx*x͐
/R{9~0Kg7|z۝kg'ϔ5	Qvԣ(Dru
x?x||!No5BN"|F+ l
2:%JP}⟼';1Fb䟮yJ\*WZ}v燻(4ԫSe܈z~LbyGb8cCz9V.(_ig{wч''kE1Р>F8]cV gye娏Jcl+K${սJcՎN:ōaucx()HuToE
^y,y##X_gc1Q-~
㋺7̄C5^
5av(1}6YH(l)e\|d>B9Å/z?Ąd
o[i_.շ$U\[+_X$k|~QjX"@ C_wC֡TϩE+짚[&GAZW|:US/mj+p!wM^a˥U=\s yH
	96`F<=J&]"$\mm	b?z[87"ZĴC=j|soL,T{i_#m$Q{jH'zd0i6z>"-wH2Mt׻9~2Mڠo
}j#<Cv'~G{{.e)~*So~1_KHh[XTB=X
M`^jG|tD8uRi-JZy
ySe.w?RBIO0c6Bc:MH
 ù=̨o4uF6^c=)T=p34HǕ0v5v
c B0-l:ycEOU/c)oR9Cڷ(ӘT?U<#5+ū?`%c5t='IB#7,CRY5 w:> ?5q(WOlrmڗw1iS݄L>*N*hESؗ^x
P;ђ	EƖ9fZ͑lj	nۡ!gPOπSɿ_;-]l}8!^ㆤ](vn?1Ź(FCʄ7J׬^&ظ:Kd3!ݹ7zFh_ ~k;R{^vL( p*\>D="Fdi#erzW:¶wmM.(^iO2IAz,Nm YD?3+y~YAX*	mkmH̢D [yʧpQ2R%!ԜGme;[s	GJJIFYE/po0HVN8<#0*nJ@4װs"3䮭#s
r_f麢;Ey(>@DvQFTPspƷWT`ve_(; E:=7קqB(/ϑM&7B6+\kc+gZ
ϒ=NnE訦ȣ&C
i\Xq^KfڡtH2۽emyNߏtg6{9]1La&a99:oT:"Z7}V%eet!ǎw=	!EC`;:ѻwK_nj-ϧ:<orǩ\~1Z9%%P"y="d}?=?Bͽe4~\JKY~x̭t}ሠsAiMN'g}0I\|m2^Y|gn? ߿dld2^|D?QuK>z\B|"Rp
^TU͍y3gl5t6r3R+R@!Xuǫ9XEl;9nvق6zԟ]Tk0K)Ռ4)F݈kNM|sz>v8p]׍jAL#"{Պ9h!B~{Nǎbt<dgcMP+j%jϡ}
JS5J̲:bR|?1"Y3 yAf"S+\~`6df`CB~f{߸ՊSDt	?fo	CoK½Rreu 2WK_?d3@	y%FyE_uBM#Bp_][*ORI<ywr radk-5nFi3!4	
LY@4kNeR9"ޠ~^搫~}Rg}S Vᛲ:nLs_^@H	3bv!JA=o5W.1T #!T
:'4`0=e1u
-(kelUGIɖR[EV5SRȰ
"ְ;w`W{sī޵vax	ڗX@A_{ߊ$4t9hif\_ %,rH3~ƸP	Ngo0>}H4Atvu4fUWk-lQռZL<5湶B]&AaޏkFqABlێW%t>L?^VeL~}PXga5,1My	
tB@a&ɵ[)?RPC}_ymB2y!'>W|N#Mhr6,QoHqڻҩhjc',E$a$<J玐HiNCƸcňݵL0hdn!OޣMдb)[VjT;!8iy|X`B';]dȘٙ2pVQ!_5a#@`t'8!@MR8R@-*ϣ\3D&
1}33әs{V[b^eo9	W3NJU=qR<MUȅ}2m)UMzF7ӗPW뜥9+`19vI=qXuhRN+C7`wxBf
ojR?hg(RKS|1a^~beץ%a>
z]7yF}V.?.ķ͈Ϳ{>@^<I(]@"bGa"^<1Gc%AFHشxU'`P{KZ0TbTB<T1P^"w#ў7F䃰Qfg!Eg$pX_j诜hrcSXTݜ-pkff!Y`_!ly"sVXO^rv?}ODmb"
M|ߜ%H!ʤr҇Gc,0$H }w 	ׇ֛}4Er| u52}6X72qdAfb %{G\^ZL<knS0iWЩFe'^H0k(/r{y'Gz&ۏuÅDçG*!|]]-/jh{sv"*]!,ڣBoY^Iy\sU{3N`y $;OpZ[SgNZٹ\hrxy(~RWR&٢otPEX8a¿ZtnvJB0"ohsFϺT`Z&#Z.K*UxpmѠ-(6{Hʈt|-D9k ^^mu>ꌒ ɗ=^I~a,Ffeg
Z͛|ИP=?
xX7+m\=V@^pcbrT\IjoD}S/QjNF=VpIA>[Y}[;٦];yc0kEye4~|d%w_~SV@j2]8Fa9;]8Sbaֶ#Մɸ@Z=2qpR,z</Pi;`/	WYZ#|$K=>+zkLibia${W0L[^9t٨b.a+	oDE] ֽP??ccHIgn2JXVr%$b8bjf>44PMGLrZicNJH,Mq%4)*~8jeҏfU:llI7fvt|m-JVbWD28iB~Fyn_[
6;e|&:3T+puDVVe=nl.RqMBG߳ej/.z><-]GhmQ<^=Vߦul:~#;DWQAPxB9:Ŗ=Aq\</YQqVA}eS(fZbv);AVV",*w8F;`LAEJŏ"|:UfYMyQa5s̛hԒȍx_׼f\ϕ:$
m
Gix0Ί,LTJxro/	 b~?
V\=e[֙FHYKYe9.¤[}L|dP/@YұEobU[惍eyҎlqˆd+I&Y.Ib~WoK<X>3
VWuPq3>ML
"@}xF|a+u
j{jLr
iqr &啂e-jhL晠urY:R&mjUK"
gm,?De
N	6	)9	Z8wb~ddۡ#Y֏-/Fbc6Vhb<-Ǉj"]*ZHa>dOg(;Y+ sFX8v<}#+~wR޻>%dz 1n
%(	& px7e3NCg5%թ/abRŞ]	UAE+b8D7[QEӜ
w61&;L#%h9QsrqjDLbm֮8B}dSID	u|xǛA\,y_ěH^EHqڽ*5
?"QMEz
4:ܰ9`޿ ?3G,![o=Nywc
y c#'^a<Rj8xQ9E̤	+"qP=;Hؖ@G(1h/d3<FίNl~=s9 >2uL:U|7#Jy?	pG/uӘ%GzP]44/hJ V2kЫGREvW}>e=F<[ϒDĘ+?+_]>{??߯l:g:t	}.]A԰kH}Cĉqǳm?p?W_ZC%57J`I:!x-Πs—n
ŐN.wapo,X0Hk6/_q"5}'w 9WCoՑC^Qk~]ښEy؅RǸTRMkereJ$HJ;ikqE23<񮗽t>yRmA&KU#MWun:izMNRNzظ˿8 ىAж_NdkB8uK`/YB=V6X
?"^T3Vmr혫ށts\E?QTpWXnʝ;
'q9ć X1[UG\	qbG9>$SETp󴂣},d4Ҙ!Wo6dbG#2_=sF$K<=76P
':4wt.NV6<%_ΕGety-kߗl>p],ͬW9υB"Tk]9ԡ*O.Ԍy7kͲ^|VEnƿ(|Q4.ˣ+v*Fzw4| RF?fzmgoIbB-QX\Jڔ!-03i=iB5%a hvsa0
epioke5kE=iFGtiqȻiǰwsc6[۰i.@%8,&=tM^r5!>]*tm/s;!}r:@ۉwY is-G:yc
:%-YrARM4/w)B[Gi׸Y0xl<]_.	;ڬ4c)rTn{7#p'5i:򨂼nrJڍ8v@D+aq9Ֆ@hs]Rt
!w0(}f?K%qStRN5>(5/ ?p

{T~>!5\ ĐeM6t<v(Vi3$8U׽{hL";!4^<'Sbl?A'j3@-=ǛuI4e2 Sw+rv8۠Ϳ] y4𿳄EN%I7S՛Fu)	
:GT> EBqC\XI23=vD\V3Sɮs}'[g7AmA
~6QD[.}sf}΅Oa{|e<5JW=Czvz*MiuЖqgPm}rze#ZzX7/%d7uO'-ﮉ7nuޒ$*u̷?zݝ)'WWX"3F<
ORo>r7a-sc|~%ÎWqN<V=mB^Hr0Z:?Ĳe&3#-XTk @+0fiϻq ∉/*|׌v+xԡ3
&=ER}:ss!ۧv4F^@T7Q^&K63h:S7 {;o냾
ifU	y(#1BَB;,6񅞥>+Gld [w
}"&",:,1Ar )a$H8o[ʒϢ"|Q^>ԃ7v5~E?BWoH@Es!Y~[).,/QhJg|,I+azk`^V>̻Fmd/JՀ-r(dPά7?Sqp9b6O#	F+Ů?I=@W$a"bL,)Luû;8=Zϯ2%p'	$-p}$@X
R+ѬS=|}sVǚ7L
N&K^Bum}x4|zPk5
-dR4tRvE|y2
Q,fб1&Arǘj&3%S>ЁJiB.źX]努vĜ!<B ,y؟˕8k
gh.ӓ10	T*OhL{~Bgn,<q/6'eB0kj_$Xhx*0zE¶'N/|灸(	y-O~Y׌Њ:Υ^ZDxwG
ʦ6e{Wj7ZY$`&A]Ryx6t1W
QQV0yBܩߍ!Ғ짏}kSeǯxQjzP_Iw1ZA{+eai%5Ex
KG%zGx;]GI{{6h"ՏX}nγuǌ~c,Zm6N=^g.j_-m&ɾ'\(os#"?9a8]^x) ]ey!@;OŮc9-60q	>Z	x֝ܛ{qП	!Ĉ{p7M=
 rf[9B=E?Idşvg#;5 I?$ޚIJ
8}X{sx˶&wܦ`O\&ZEf
 /E)-lo+Iaȵ
ytT582CL{dwA
nl;:D-7O<o`jKd;e?~(.	+:g3b2t2*՛Lh1wgMJ}I&mۚpm۶mĶm33s:{ڽ{~*{,8-&prfֹ	~IkIu^><V3s0`ݥv'+F_}5UVnطDoǳ%=rzLoDSLCO!NQwJ`ϿJzO<bEXn`gm"7!z[I\`_I 1rX
63l˰|xsK?ƒbdyYzřG[e R
憟,Mi(=ٗ^,5=.BښcXx>KKs98h (Ga<X]"R.;	xYn'E,>ĹKvJG>{g<sWЋEK}6+gzCGXD	8$oI>?V|>_6#G}yUr}6pKtyAo"$긭>z3Dƨ
ڼ!*jzx*V4_}kt<']P+UCD;4RC.TewIȌ$|MqO!%t(- 9Ϭ<Dϑ	I~*~NJt3NCK<$ΪLl]K^e_
|$W?=H^Y<ca"=V а<eó^>̦okP>"IO%o#ir1\BW%RL 9J`Z.|m6lc#ɫqtms^ArmQ3֡H8us|PčDF:GK?orO~2:y Hh+>[0
vҁfhۭ]ĽyTxjCf4NzEVj/eV_UߎxDx{W sqON=k]ZG*GZ{x!9CXfpx<Dv^y&zq،D1jôČkciUꡑ'ܩry9T{*$R$I@<@Kr)3Do~9+O#f\BC>-پ{H7"n@>
l]!-Fϝ)3~6syn!Bp%g8MF0Qy~%?ڗ}cTG_
FG?MYLz
Akt
SOkϡR>.4lZnڔ˃R4tT5w^ߗu8#;I%(|Fr^Jg PS[tl$\[rVm?T*$9D1nܙk%Jޞ|t[~wV"h蟅P :L
KehK'L:V8
7p\h8I*P%Ɗ51vny#BS}r_>,];yJM9d0)_*`s҃\lB.gā03	j="^iDEwuX25iuGfW{xkL	ъ2
ˎc]Ѳ'c!i[@!zÐKVΡ41W!#dP`ـŕ'a4,RC܏\MW)#K^%P~Pv~O	(4š"lY mxD:jFky" z<zjfiv$Pdb`Qm]Y3|kdz.[li~Hhɚz>.f	~8?tlW2!c)4-{NqbD|NL&_1w,}퍰9'T/%KElGt︗oP'ZB|Bzo}βJklxX)Rب35`f_4f#BGWL[o?Ӷ'A`f#R̞f%2gk$pPtt\D?bcsv8_ mI+T2,;_qm׈ٛ;D,NKr\l2"J%hVs}MOW'_K{=!+֟xMDi^^V.k`AzշSCW)fTYppp_}ØˮwOG_?q{OÝ-R}=m<*exsFنӔmֳq>D=12JӐJ_u<	zfφQ5ޭ_$޽zSgawj˷;3޶\3^WgwVd+^Wϻp?Ecx>D,xn,H>Q[nr.Ȧu(^٣#t__;_K_X`
mN2q9]#|#lZAFXHnn%ݒrxzH߈0L\摫um\7ҡP/Wޭ]>17g'DEEΓsB:
nI^8|0<2@\=sT6Nr[:'f\ۖ 
ies2b7F;Hs/7KoaoreQuzrwBq<<׹0~W%P3gѰ2X !Us>g^c>sO(|<u	EmPQd4)Vh!yIPV<c&-No͘0Td ۺu@ѮQE#bbt/cOv2s-nzyb5yqEqY,մJC!k{Ĺ]bS	%ѭia_Ãr4tL_Z_ߵA:t0B	cJ},o3CE3b\
͵bH>y܍f52#ڝ~OuX
3jH\,-;;(#;V0KUUsImc]J}_z+ttA#3$OW\@is>mŭsh'ׇ'}5dEWcLUaΫiGZzwkns*킠fQ#>lQhxaDe;tRΔu$+iۣ%D4~BgYfeԓ}mfkqԲ@OƁHҩ̖[{AT?G~Ƥpz)
ۄkŁi`)^ %v55_Eyz1fM_àhH+v.ݺ9 wńI(-ڢ#ZMjoAđnը2Uۃ	RMGmjVI[Le¸l|ۄK&֋ IFr#F;Y+N3UM,N^YƳ$p4Ef5,4;CUL[ڳX~%p['! >7$cIaWZ[S1pVggVU
JeG}5ָ{C!n}mG Oטox}*Fd%AO\[DbG\4,uIy<焠
j£W# i)w9h0,/8{	'	5;uNIYte"XhM8m
\Aaڄဣvϱt[9XDhW
Z$pW
!7
 3.c't@U01EsՁߵާ˳	cA)3q>M4mew{NBꞶ(oVt|I45٥br]RAyb9;԰$*'X-*ߋ<B#9]*"U
(WC}e+CfzI(<ڠ@@;n&訓SUba~d,Na:.KMIMe-'ԓrlL<C@Y)d<s8ԹnQ./n@9R'Yա[&ӓjuyoe_iM4OZV	&ل7 1.O.6
(kĸv/O3]sM#IwrARh(܄T\	\oӎ(w2ͳOFԿI2RAF$ǯ(A_l
qc7H!se\@Wa)vQG^V!_%T
OE(%RJHsu\Qdeɂnk16cwqS(7Rok`=pP/EF</+i܎ߌ
pL	lO1 䏴1Uyώ!YXʕSLKxd5[࿲]/lOεffB{ݔwY)4~Cu<#n+4,JV&a.q
Tۓ
^!n\&yvu""ίdGǏSڷwUc;;3<(o9٦I/@XC[egԽG*MsM!T3!414HˌpNFJ
A*)':L	~Vŀ_h`ѳK֒5woO%T>!BBPGS?Z}mfR)4ȉ-`iG&wj/1Sh{|zzK1dix`J{.F4V5 5{zKlF`QBC"Yvˆ%BC^4`=_;ܘ'l]P;\qmfdj;tٰ")
K1<3=}<.ԯ⍐.2uO#(rP*! y0ٙ
RMa|~~)3t9Qq'Q(#jڠ3{UԵ=Wx~=_0U =g1Ť*Ig$n"W`^n]K2na|"%
}(æ2?orCӑ\M|ð[d9fL_d5'
OԠ9;U%MSF#:H9PTx OpP11s}jSf=	E9g*+fk}ɲ7{~QV1{[Fpy:1ŏ[VSb뒒&=o5qʌ&VXiRJS`L2! W>DhtEKʒ쒀7hbiۼ|ڻN_T\sgkfH	TJmbR)s䤂.!ĭgL|X!jLl!tH9yL\Ϧ
W]u].q;d%*jV)􍷙a"~<b>amd^^p?nNCIA78gDO*=T	)2}{ɽKga1v+
TrRNƤcZ[M񘒅7SBh׸0CMb.%69ERbO,RS%Ml|垔wq(CX}TB6O>6,TKE6N!9z/yMXHuhV1,y6Ily9${zD$Vj H8#ecͻeyeBz?dXOgegc;7C6|b:M<xcd7;m_R}?2o|vVjkj2Y=+F}v;c4QcChyc	\i2<rMаp+Peiw+(Jc~Xx	xtxe7z$+Mɫ4LCq7uQ#2ÿf RV/k#IPW$jH&t"ڀk/k.md#w^
|C\>eXd~%\ϠUmueq1l̂~P}<MtuL'[5)!K,@fڂn=FtT]jr{w&VH0hPpAވ3=}&	/tz4n)kn
Y=YI	X;tZ24(9\xG(1"밳b+^ʶ?U%ltB
5.VABBŌPqҝo3Ea*h6svnu&`(].ërxؓt	"	 Ah/}޿i|딑>:{ЉjyZ <a?](1	ycݾKZu.l o73TU>3S)F"&dWH8]u/ϡS]_/
-(N$^
⩆rnt~xLu4LZXιX+2.R*"_ B6"l{k#R
+CF$ 6+RX2CȭT֑Bz/5<XƖ`LS?2rIqm/ M]<c˃[@)H*ml..zkaR>_SΐGM;QڐL](1x;Eյ<_k'M	Iո؃İf$^^lvSX
]hoz2\˴vqV{=|9yV EȚ{@+;6dR떬,TO~%Jn]ϣI~9!$>
;	DYUis\+Gޕ@u	I(A.䉘1f?űgi.i%j =zc ru.HZmd~/Q=-7(>f\>c-\*	,@YW&AJ^sV[C8-KTǣ9P(,RMǸU蛤HsB	EeLד'/8<&`쩹T>/.9ݺ[?b,t.~nv9b1%	%*f6׾߰J~Pu	~>#GLj[|1Racorx|H\HS|W|unr_Pf)q$<#=A.h_61`Z?_?lo}~4_l~nuϧaHNYf/%1!;^{Y
Uy%sY䊛o
ϣWݠMR}='+ncPU>"
&ZÙSH]t|BZmo4-H,Gl?LHp	FI}aM^Q
bd>0a7ݐ 6	s1xhЖaAn%$^7$6q-;^o1;awoKw[R޳]Q}Ч+<@zdw<=Eĵ}\0g^;{_=F<*#x?R
/^ MW0`XKLPOjA,kSpTjH~lN)vԛGvv>[AoݛΡg*)޶G/S٭\ fD1-
׵w-".?L{@Hȣȅ	

-RWWqgRLLg}h1BGXZ:ZȫW~0Q4e۔wooN#rn{FH![VW`ﾬK:L"oVWVdr#< \OrG_:+|CVۇ0dgV+OViv=n
ump6}(f6:kDjQ$^}]0њ3gAdOk+U}X<]88::+`2łE9DmhG{BՃ`ՎvPĮSI}bP%{&ϐ!
t6Q114lU&~N&yTf܁3w~sV)|}x޳J噷CVs3G͆@89ՂFC-Y&=l-U:Sevb$
QqV#IQiyglBM=N*vIQH~WB V@g<Mv S坺Oc;Mbӧnfuw7-c"mTSʽ.mG:7q6sПhhՉr{<j{wlRݸudy*on!^{؋=әgS.mbEZXao溉Tbheh /b
COmugee:T'3.-[p*>SFeZ=evvgML~@.LuOo
-gd&AXKR |;CE6N쟥y_P8yyLLt5mfi^6D򲻠e~.<=^5=儴>)*l1_t)Њ>v\Zt|?mXu$Xj7 zw U"9_|BLr[OqE(#DqUs]"IԆ>R-Ƕi/Kuמ%I˗RrF>v &p(3Ag:+nྙjܳ큾y߳[OIJKӉAY;Ǆr90i/3|Ǫ$Ѽ|ɎyIf؊0.&N2&C]\fdEW#9{^]42Zq! AiHodh%h7mu4	J(ēThg.iϯQFYPo"	Uߟ}#B1d\F)Z'\zpr	{{VH.f)"SX%;Nޑˢע%㭤튇-43BNڳ͞q?2~FEj=w1Iíʔg_[/x6?8J
p8)Yd"*7*~Ww:PhC9'=.;Av1굲AaC\K+˒s>*Hwۖ֏d#@#95z3OH`eg>ժ K;b91x֝&38M\YIK#JO[zz`S9A?rDҬ:
-bd7Sjx uD(1$2e8vE1.rvʗk
HG\bB.2aڵ/(젠VAԢr#h+o;<AGULЁs>Q{t6D,֘Gj˴-8*=|2BxA%e`̍|9ܤ1|L>
b}YxI6:t.:/4g[^1$9g]fznj>Az5%m!uBUQlgOShHn2mL(b=NVuh
&cqp=ͽ'F^i֯"_gd>܉."bASdHXJGYD[^n N7wxtLw<HH*821
zBIodw`qtMJʴsһL*^SJ\}Xێ6lq[WUik߹%zYMgżb~nS-tjϝ^*$]`(49҇35"Lu!q<:"MM4
e? bLqv'6DN/w܇[HWWt+$PiI"~F\y\N:0.!~kS+-E]_6z-4/d@(m`5{JQD06&v:??
X͚&9yP98)'L5jQ'٫%лF
w/BYHPizo{m24it5)7Hb^GRMxT0^"6Ij}%Q*_w-6!j5ը֏Ɂ5
1L&g,*'秛|Dhp[|=~$UL|J
3LCъrƙbL4!l_VN7jzNఎJMºbaI[T<3RݐU]t ~[lgлÞb,4x0ᜲa#mx6mvøXȲ,/G}|c͘|}Im=O.CNeo6/a7&cVyuVcǷ@+*W2ag͝wd8Pwxj"G/nHt BJV^'F0x=?o,ORh%=FoTrg2PŬc!'I{s(
4XM$C!c
ڐ+ȩ#y/7GKsS%*SLfMi'i!5`hKs%ƌ~ET	f+=^݉wbKG.`hI>~րdp֥ve#fKVYKF\Ry.h(AZA*]+pp~ @	yQ9gЫ-˶234&%ĭ2Gv{GqZĂ2l­FfMM	d.z*).O㳋mPN[髕>E{lyL=+tKvT9ύئk UX"Yo
4IQ
432^L:<dL7K*0P~nLBih6DilQF}|&7Y
Xõ)7l$[ާ11[~޴
»<tޗċGHLf9SxTP.?MųKL|߻d~]O
M0d(P$^X\!MaGtD̦ckISsiӨP$rY~(KisxOT:qAN\|jHx$¨If NdiW `aRk]CUaDIx4
/
"h eG=T-C6Y =v(߯Q[ִ#aUyfi	gJrMI{r7u  qמ>ؽ94036An}lC?e==Fzet;R\niEreH1&|ݮc&,BGxg'ukۿX{d@5gGͷ{I
3ͳ}/\jG%MZ-'4=y:X:a=oT<A1|?@l*Is;1,13]>2R'U!]"磇<<X( K1^ar>(ȧ/o'.sqEWMr~~ mwkeMvZ]
[ENg"/hS_#'N兀u蘙^vX3,]6'R=iu<2i9tk1KSQԬŎ4qNIAð.1 D"F-|DQ#ljxGIt8:]%F-$M-jy
ru{;FMJod3QNQVOIv^=nCJv I; Apmxua1nI?rldΪWǌbzLX|iKZ8|2qY˺oCg82J^rmEP7B21eߗb"]q)!(@'jyJG貖x]z>3|Zv]nq,
_U>4b&ݍ;#^l>iBG?qf[bKuc:'r[#
hx\aߓI
mTxƙ[1@d-#*/p+MP׀E=vɾ^L0T{j WP_QG8@d !rzeAf ^ec,BHdfxw[%3	K9s< 8ίuź,kb|<=!xj@5+mjdO*9n>W}=]^^~<ُq14d}CDGƥDv+'1EyZяjle=DuuTHWe!þVuُTGeݵaѥi;p
=\fO(JI)EAEF-(>.??^E)
Vr}?W\ڧs_S0*r,ޒÂoځޮ	||lWw.Z8ODCW>"B
n#z-GMO07@!~
3CnuZDP!d5A-ͤvV{58Z%kx/g\cLOm#kK46&ARo4oh1JoQ¤:$i7>3m0ؾeU$lt-̺}~;"{EkPb
e/&k7Ipxӭڭ lpgtTQ5w$Eh.ؒۯO"oq;ӕ<-Ja<2]_
}De)bR*vI?|"rcsv>]xAH1?0f%Fl\Ϧ*[\,s3E}b-q]ș_EqhT.3
,zd`:N#v/Vܣ<1\&>K5l_A zk5swH'x0q&99{ miy"t݇hRD;ȈdP&pQ~H0E%Jqb?BNs|<ɳk@!oh.q[Žz:
.E5*G;gP;m&	]>
z.;c  jIqn5Tߑu	!,a4 ݆dmOޢ~/-X{2s4
:WM'z9*وGG!gD[˱>^_SKkt:'+T&#QU;@N*T_L rΣZZL^Q-1a\]* -cn;3KDT&91ք]'eb)[zSe/|.!p%u[DEHo{^ZUD lU Ӷg<	z|FUfߞ-Ji+2<]nGf5Z_gt=+-ByQ.
\r.kn*`﫿t
Y7Q7K_HK?1 -qx{5 V))Y$F<ɅBɞaдJQjocI
yU>63hkZQ5IDG
C^O±#ͯLh˴PcP0uvl~)/'2Mzh^l]
9YehDZp}E3.rՒ~͉XKu1cKkJnke03q N%7_wj/ Y/Sƶ
}"JQVG{.Jgl>d}g\Va;<S=JUTy9[?vh%
q}O&Ul)._.90Oq(ib5`XB+~ ӸsGCXy<^RA,Oc@yA8)smđ}OYb%*H`:(
8m1Ӏ昰YA
=XyBPP V(*}IѻkSsɶsA|H/y.R)_SvrJ6Υ릓rM3seڐ װf'KدX42A]_nvNS%i[~NQP^qՎ_Q,?B=-
^ujVQXj.5n
DbFE.Vs%?ƃ* %e8j!%GL!
8cPм0j׽>R"%|#|&#"0GyjvK+36bMj6і/ESSc.|23bN2=^Bԩ<}Q:	q+
ىK*0imj|'`}@*%DCמ,
1kq󠡕e7^n_οG!T,;Z'Β6VMq=mHːl)Ux&!
3:!}y_<	<Y贛E|?9ʛ9Ί'
H()3;w3EOǳZ13*X)/U@κ;+ )'Ӂ9{8 4kYRdB{G(䆫&
N{lɮ\EdAtd{vd83z7X<.M	%אA`ljTkrU-7/PgqҘUp|3̠/މk.v+&*j^UH_?5<8roŘscb]MTwǕrƩyy'k
C[#2ܦm4`ՠU/ؼԯ5M7mjazQqzX(ݪ<\Rd
e"Eo,6.w+!4NK)txAFcj>اeTknJӴ0Ǒ
yca%v[ɓ2S۶RlF(ڛx3ѧkʍ_4S(cpj/ňn?/MܱVTI}'*i;sXUQlbD6R$ftnK~a=$%itn_Zw9o!6bg8<D}`J_gTM,ac5{ʎTP{pKksVFv%Q53ګ04q%19(O3-~BV1,x
Wِݍ(ڜ*)XO'05hTz#فV}慿x}ZbQuo-
"vע!4UER+dadRqSm;_}rt윍<	!?I	s}2P{~$
)s 6'Lɗc7b(E
q/hӴJ/"F>ikz*[w$hvE¾$Jri8aǊX1f|^%.m ;OgfU&13kI2GKߖ*dh%6nƵFֈk(4Q]י<%iԫ,gSrsD~5ݔ]̸'t`I
޹9U\	ZYIpTuU!MԉVϹk#>!C06{u5l9nU(r]3NZ9.u	-Pnt<=Qݜ,,ژbK@"v-k9ֆ&dzz~瘈ᆕ3~'t#VUBV%69_`5NjwxJpf̓3p:[(V(Xr_ÌS;}	t /ZtvW_罻}^=vVZ<RVV<)ai+	Jrk̫h亲+7&T]:PGr	:\p)t\  /W[F\aj?U*y
+V"	"qFfbmԆ?2*L Hp n݃:[cC}[kf|ZuKS;wycYnYI`hb}Tr4/r4GB9Еpi}Z h-0eӐ5ie	Xt3+'/i) 3=.'Omv,+&&נIOX%%bJ'GLhE%@@mai;{?OT4ߚlPmXGܼǄRM=dghk; w^yɏH?=H%UԮ߲C[QB}$ >c7Acp>b|B*R{߻-OR&5x&Ji	fR_ X#DGئ$.M໭wvhМ^fSߜ"S`o~zPBe)t|{WNB6(h3s5W coQ)Shu0G3DSTտC0{{c45/hJx5d_*oeh4D)~IbSϢIb"JfjO,O<URAN_F!]k@Dɮq TKHT'GA	)H?(iDi[
-8DFn۸dx߇El**VCu£.pp\Ƨn8
xo~OT:XVm#$)
E҂:e>^
=IShs쩯#cygJ)f2jM*KTڙ^],.ѵ8
C/+OF2FaSSd߬/ºNtRKg^)V/kHIg%T{[ũ8 ?sfӰJ2 *:JOJ ~pSM! jmyO';k42t>?Iv/	vg#_t}EW+;^(@[)cNw@wWuc-P:"S)z'fMxke_7G!I+NNI;2j)H[
F+-pM3s^<v厑ОqoPp70H:

D}r~qJ0+r7{! "[. OSTGG8c３lP՟el00%4sg!&\!z;p]&'K?
bֿG_Fh9+JOS2*E*_00[/(*^^h)>ll3l)%QD[Zމ_$xb
.S__YNOQxpe7
9&UƼ	r/hGj!m4ɓ^G\3ʞ<8mxnyR5ޤvaOn0

lIҳo{ݜ,ɥ$.xsowia1,sm4qDaN*=Аk|IMU gKJ^τQoYh4RoоݢkvLūHvY}JF&J<{tZo{P,gNNsęd_sCڐ~n/52)F3|V&S]p־UrtV&8{g>Q0,PdʽϖǇ˔2NVJooYSq=ddD|HcƉ̆;a$q
Q,"MG"<awzf+ˆHS#&plfEk2-*J0fV?RIWIOܡiw%~FPXEmgXș#$iCg2r7w hVP&;xHP4ֻg*!Kס̀"s>\9v,3/߭ج g_iRu5J3:A//Xp\;fHQB@.9;oB^,.YШiT&KaZ:2czXx%߂KNsK=nCehW2zDw* q##l*v!QY7Qd]φ4)ʋUEa]{R iNn$HJKX36á>1m&GP zî 1߷;J?k7G)
N}L"5Wjf`n$д4ͪ~u4?5pܿ6;I#hQ'hqݝ <Y~?W'\.Y
QAM)_R=BRm՘/T|%RlԅU=R1h67h_?}h4B"o\	Ý|8MADodҍ.GfW<лֈ4sLF͇{1_/׺vJ6фBz{g+gKzg*V 5g'


5.ړ*<.l')4
;$F*eA?gצ@ë-ΖNYJWl{r3<nV  .5PS|p4{k~!
Z5DݐsZ=^Sw^.lꮧ;X8|2ī9l^ԛDzy&<D̑u^ԎK:C66znQp3|fL;nzwsXԻ
B+hP@ l'5M.|\,T96IO@jY@î0'V?toPګ0Z
=VNh_w
t<qZL\{V2 05XSu#=S-+MsH|*%K1	
W$KDdhYS#uE*~ǢAb1}0\s9yD>vRޙlRsDȟ 		i>	V+7>#pϰ5+	3_1kɕ
9>V0=D>w9ƶZ\7j xly<>
1.̴[e8.M`'?-Sb`Ҝ˲X	$D90c,TPLOM]N[K^KK=9Թ-/kqKqmJcBS@g/glX;GQM}E]8Nw=0mzF%	h~(@@861]bDݜtGgJ;8S. 75d9H׀XLFD
w7hRᏏ#]v=/wX@X0
{q
)=ގ_aY&%^JPlN{݅cNLt4`mxYFHh\W\	ł`TQnb4Jp)EJP0Շi:?
 ){^V;DDt-u[-)A2k7h.~&-" ``hi(T"}Qtk_qj[rl>?d}J18}C˪ uډФAKiPLu$5[Dq	gGB2cdQ#sLpE(oX*5i:T/r_8a mUpp^+M~Ⱦ ?r-}1&N
lR+l0a1 gVN@R/6řeZnbn$!AP9#=۞+5:Aɡ1QgjA?8dݿSΊqA3ж΀YN-1d-V-0 Τ͚c6?̼'
9뼧Os|C'
ka^5杖;,gxKMi#`vÉI`Uw=~C
s@lAq7.
ͻNHU0S!+
ά{pvrʨGxݹ5[4ku).L4|!eҌNG3\(=XXWF7)>cQ]oqx#:Y i.[T#)v'H5	w-Kd	nqr9%rTi<p}CoA_.p Y2O?{1Rz Pd`S6F?u'ƍLV4	5<q)
彬^]CF
gDWNXVg
0`guH_a|u%иޏs
\C)d^Fw`%mKTރb`GIU bFDRY?ʇhIv>3Fb[u	+oS:A!6T"N64T3~yDK'R9A
yJbw\v\gMfDc-(_$X$n՗g#^gjVs̋JpOW-"o6REG)
>$K
лcLOU3^8b^ĥ4-mz~6f-ڰ{0F$[4<u.ԦΙS7?5^(~g*n60N-zsa!mg۬gˣRL*aTgPBjXZ	xXmr":?FWvG?]`)~?%w>>͂]_<*>jBa n	4d/(3p$ʨ('2FDX*ҥ*6hHǪi󒾲(}e:	P/?QDxDd{p\p~"ΓZdu<^|⾈[[kte!¦f7ݫL[|
߹ 2(7<ʧȸ_v, _۵m$`U1vMb"tʔrJ:{^OXOA}P2M0~9䠆U(]зD&voY٪mԱ5TEul-ֲEQ
ztKb`!p	{y<C'9rB(.d;B?$j nė	*d$;0)I&f*\XB$[ze\/gb6^]J]Vf|[TLȸIK 6*1~ͬg+Ke0C0=
7:S6؋-qu=+mbv2KnV[W5, qRvg(w
{fod+:"F;Ļusq{8y2*/Yd6rz2jRB%/lSlM3ͬ9ѼlBd?sW@ωjq<JIމ
+It{_s_s=$9LGJ)1oZL&\mֱlB/-LDֺqt,VX!V(x8EFO~ۊlIPAȝ#߈qSf#drQXV$g
;JBO\2K´^h"F8>4=cRDLg^]3 ̅Qwg׆ܶ'`"VTHNs1`J%ȳNڀ73B-3*1i4s}È=(Zxc@"7=玦;Yd@_nd}PԑMJ)AN>Fʳ WH<sÙr<s.AQl^MuC%gv9Yc116c-$Om؆FQ8^L4 {=^c\_SNo
"86To$E5\Xy*LygZ5OwjT闭l4)^8+P9֞vSW7Kh*aJ¨~s[v}mHNBBÑ༌7.ț$Bk7uW%Aɰ$f撝|~"BC]?	Wq+
LX<Ac=ӱLh:M̈GҐv&3J^GCeIUD|~/A.i)ɤhN@5lslG}2 E^ǦlKaNiAY>YRG߂nR|g?@7dSE5(A2A{^d&{QSs>T٥쏇%cgi˟֑rSiϙg\6e:v5_y#fucQQd 9DwXMoKWJn\~xlD[ZV޳|!вOhty,6vݾϝ6vI ?,-C9HW}4?}%ddLܔXLQHL'e];0CyF#^yq[mw0v?f||W CGBwo
Uo-/)2Q%?i4&zۆma
!k\n <uWǙf`ۗ8GD(L98ܟZ
P`hE!PiR (B+Ro^.M=V~ɇ5m,R,=HԅڂpMz
>t4-xT
nEür:ub!F LnòF!x!7M&Ee+]߱:=#"w:[gV?ߋ/x,nț{u][ƛnx[ކ+Ǚ47ѷ1[N?Lrk5f[OHFÆۜ=#3xw{HBu=Qq1OIG=+
:g'wˇr±S.Tw>ev.Ō)pk\ϰݥͷft_dd?kc~k"ETu}Qwq{flj2]c]̒LVx#`6b+i}Ț	5!*-L}8PdQ'6})34ܮ	%c9SaS?9
qvlr}ǋyCWCk7ˠM5ɘaz	AJQK#Ǯ/J;i*w!z
7B*q-#gVz&߄zBqW$b~ZZ o"s3ǈ=oCI!]ENQ<FAܷ
lol1-ϩk53TjnL;^޺8v^d(ЍrXk&۝e;5.36@}Wu<H@ȾoX_&^7VJfn
uxHӵ+æ1AӮګRe)"Xw*'˗ۡGo[C_08)z:6W0٤BhW0ll˰՛YoHRYo.9	
J@~w>7_I6.jJ}3E֬"{nmq'
ΒdӤ=V+>scBUD'3etOgÂlTW=bkk믆2*J{U^ yF
~ĩsU%5
K+͑֍'h[-=R1ݙZe{>^z`aAM
U*ƴq%dFHAi2Z@FW$Ndtyڥ;VBϻaGTPIDz	SϠv6?nxkl-? z=mmjVklg:0co!~z<hl7eFnw2'bS'g{\e'- y54IʠyTjCK׶pZ +|e(fT4hP,jڜߞVm&`k9p1QSiz|Kl(*xbUAm8֥?m=MaBn_]x&c5qIhfb0Z
[񀓩GÒìMV0I!zBb6_ԝ:z;v%t_4rY撠FpEj<y8b]*|1tD9DS:}1s/e#<>/-#=>:Lte!{,UX|V
Z)9A.ę0}kvŴmi+ngbXqo_Mե/Vu9m6qwb&92xU٭Ϗ͕BDMРN:~:߾u\6j084+'yq~	:.8 hBa8t8Dg-C*	ǝ)+kMp->r]RP_?xf>y< ISW4S
e[Rn.>=(53|E`jz\0ä,,[7tlffjo*^ENUxi>絓˙D%zfN}/~F˵d)m;hxۯ]9#em=cGjL.^<:Ŧ!+em]v'e!ꔩrh&.SBDZOVރ}%z]'_|
jlp>B/AV5'N&:o7._lx/~*Ȣ F\MRF 7:N!{`i3OVN,'y!f#w%6q)_-D,< v1#k87hLȤ.X$>\W#+p$"sݰӛ[IBa.K>	ZQȥrrwN9*ݲA Wy;arڸ&z狉+x˴S(L_byӊ-a]wI[SȤ=#VofJ6>Y=إ@Ћ@hi-N=<'F{mc&8[
-1GHykSoa6*9'6N>Y|Mp=,qjpp۵$6J6*EOkt>0Ou{ͰCTKC*'CV*g퍤E"JzQLu`yЀ#!TeGA
*yaĽ|WY&Ng4ReE9KE{WϺbU=
$73A5~ En8sfO&3wdM2fbde)ѲV[_Q~:40X\ӕ֚B`n>%:}a8I
vG;_5(_E.3w2o&8#.D%xt)waү76fK*35e#`4#TS&eϵfO#/Kr2!\_XEtΝsEo!xn%%./%Em]pX=ٷ>Qd%{v[S?hb͜y??cǼUFG~δ{Gfv]ixk_uDl	61J{Չp[>G)>)wc.~߼Kћ>qMx`~n0ƹ ءX;<
!&QEc`G+d
qaNr^>ruzN̂|܄hʖӒYQaa>wp@IPȉfb'~ KG`{)rv\]
Wڞq@xݬ(g_[j\XRݛ)fegQ]_z7G,\qqJJ2x*=:=2@%XbaknWx6UZ
U{_,کg[UABYQׂerTrPHoharP_@
[B&vJ$S44^i^'6Z_Lc2ʋq[NܿIvy"o=EdʬRgf
u}+8;6$.aN9/
k;X*,\{Ly!?2B]p,YCD]k8} G-`$-ߎxVhɎ.3#z'Ҙz[Zq1²rt#MuLf0*\@P+\GCnO ?K.1vo ϺCAXTH/.[5pxoy<Yy jZA`.~WƥVj44S(:Rئb~u1'!_mnY3QqZy색5	 rr{wdBB߀嬖rW!3j7̨shZjX;i4rA
!6LECU[vZ3s"J	rLλi67?oS.eֵOFǘ8O,<XSn!z܌+:UZL>kNm97> -դ*`Mxx:>##OjPm
3(+[~t%~Y(-z)X`eKwi?'/"v3JT|>Y/XB7X6&=j#$+ߘwiv1NDb՛/14ݑ}ިe~fffV:]gI0(2mI_ݶ<*j|Jja{-Qk<p%s`F xx]#WC47k5ueZ΍Ej\n
Ka*7hr[aY!z\vbBJ|B@\=myEW]PL޻FDR15u\1jQH~r%a A~B
եt%,gp8;W>y}-	#i!ls#pｴ'!_q᪠a|kn3AldֽÓ>\QXA*v]EcCC3lO *g5T8bǉIEnmV5PDfWnBפ2'Kg)'xԶ\,R1wdt6;]gKyNؿGSFWP2J~e@DqOX
Iy2)y>wdt
ٯ*b_)sy}r.P+y0ÜoC?[׸|$*pB`{QI0L=?Qp;Vt3}84]/Z닜6f3v4_z2ppj}RsjյZbу𖙖
[$-ݲNSKζsb&!)_Pk,0kJp
W1mٲޟtF-Pc%1iL.{31ٯR݋{
2ywIDZ[4
I[O_FM%O۵8I5&l?v@&]T'(9I㽼Y,P`3J//&[<,WZr~6 =#+1祧aѿA[g[=d#}k kp?XXӬ(kA8pDx`Tv%o9mOmQ;߉ԟo~[A=i]M.K,x>s4Fo.TPdX+QJ-RkJj)K_Hܞ!j>mCt)݅e
Z>~,oϛd(\,ʙw0郐|}AeaH~\ndH1*BPR/B $͚	7.o:'ܴ%4VK5VF>j:$畮:u1Cԫupg4K{Q8xE8,T|OAק5`>:d8Ms} ۈWnd00ȓU<XDUt8ӑp2?=A_;zZ>@e~m('w9悝ZmI WC2TkO
ByBΛ,VFgD لeS'wc.UP,>c&:.[R;\	bfxē̠=#X\iA,18)EH)
)F?Lh
0TZ0DG'/26K2q^ܥ;6}-4-1`v,ezfS` s30I}hQɄRq^lK|UFQ{bDlg/4@Xe#-$ twkxq=b5on(8(ѴZq7[yv:	߹ `*h =|7;2dr8K	)w{;eGQ=|rVBm NtR&cތʴqRJ;rbkB]VP㽏̗SmpKz Vg'
%)2
K$AW
$9l+}aNW2]sjU^~vmHN2ctT:+gBW>9ltD#[-1[NՇqC*,AQ:¡S4&!ei|,
~)Q
[f8/1u>%@H{\)2&SL.ii?.1^VzjbtzA=>c;(ޘyϕ0Ӑѩ Ãˑ3=m:v8Gu1'nXvMvFX5FcKZH	MLRM2Tކ ź8>?kS399]ljo9ŧq? #ZVݟ@G~?+},i
aSuj˸l&w~^.Dy]IG[X04d#f3ش'QQ'[$~yVDs3Yo)UK\1zKyA%b.O6k3)y#T5f2WsɲAP/Lz*h4	HKWb󮬹f&f5Ǝ(~ֵ
ݙ.K|TLmd{xXtkoifLuqbC,
t25{0-.-WN)ò@ CKK՚U"i?ׅʑNV
hG;tJma*nJ.|Ce׾ZLz 
t(NɓvtJ5OL⍝h>d1-.ѮS֖Tlis.&`%AbbI9J
>x3GoMW!eTcDddC52ƉGשv0.,#RE}۳P$ѭ^K{d4	Ь!`#B^ZIYzԳv/'W+T.9z冒	k5*/^=hSr+o/4VU9ٛ$Fzhq:;I}5u4a%ZN?S5v/@4M=%UE
3ExVOVD|W[.5{]ٞe|%"4}dICqVَX5FP')PUBcxIh=%,$Mf1kB'WG+΋oLg+[cx|llM[/ڮ`it(YW,)WǀuCĳz;޹&AnKk2y*TjYr.WSZ:UMw16R 
~9K˸Z=paޛ.[뜡FY-=~[LUcBhX!jK!a\o[6VhIz^j8i0W^^UyJfd	8j҈ȗ9ܧf\q/vJߝtc*nlJh{f)9$t
s?9INa3Pl~^ֲ߯23$rd99YxIsꂳlىI՛nÖ\q<Msܚd~
wbX
a6 zECc`=F|LS|8`v :b+0;Z6޹-;#VB'9QVxzz3g61+gK$P@o(O[#G5zy&c\Ƽq
*3c( fH	`]%O%p5}dOk*nb"xeL?cq؆;b,_{O5ڊ)[@eP̒di 4xTbo1#ku3Z/Z=6-/a/kCB9"`T
y+#-PaӪY41K7?*t`LX41PȸE/'Nխ#o@*MCn`˪Ŝrqzz9$UnWZ0K sJ}#Rm+0=IVnAd}[	wGpTg@K/UEgci¢8UA7	H,?y_X
͏tz2guVn
Y{}GvJ<
=*w?y"*^e` V dP2@f|j#h
ؑhVYl_UY6v?7]ih?i([L
gvrON#ڕ1n.e&A͵voH9K&Ɨi-VQl.|GݜUHgKfw߹'k{}3uh=quzoR'L
TJ|ޮ']n6h)%ƗM\k2FVՐV'
=C,d?ek^tq{Y=
K~gڠ~ѩ5JT:R8so6|*R!O}T&J%~8qO'#KZ~_z1ÍvK^l呟.^{le=mZp6'9Ko+g&0
@/t↮`J^[a~m;]mI\Q,(&(T+d)]{O^%-Ɛj,oK?e`v֞x{7}wR[B~K9_-Q1Y">|?Oc`JN2z|[d(r5EH[}6qhmgWQ8wrżGrIOSPLIC*C|=*is*l=f|#KQZ!X39,W?Ե9ũ[ˉb뚗gڑ4T籝D1O-[Ocj	ӊ[bL*;KCd&oAߗ^j!l${5JXlH|ꜨdE͢ڦ/rmHKK󭝇yv>Ӻ[)H' O.c^42HygψTo7n&ܞ Ii:}	t2sDx$$I)riN<3K1`efSwiAS
|Lb>;dQ|1EL"C<RCU\Bik]aέ(B ,hu-o!{uޛ:~ ㊨m #cVCԙ[dr2	
4*RQmR6ؓ&T}A$\{w\L%@(cU{G5 
(T:tEz/t{oRB(Ut Az	C@PC	 !|:뜿Ϭ0{fu_Ҋٓ[hU)	a^mMp:>AΨWokWx("MNu3!27٪`5F|P5!U䘚E/y@?YFE7SǙUo'p~x[pI5Q9(~aPs!Bu@=;M׾;2yp2:+cG6edìN}DZF>ir7'I;X8C\`d'|Y3lRuHneG/*Vq7tU\`઩п_-*]#-o-41f~i5yS<e_l9fΛ)C/)4:#wF4l-33aNgG:L|V6WyW	z騻0D4c6Ok-%P	k)yRkyIԏj3$ma1=Suk%5=\}];:EW%"OXrOQeyH-MtĄF"۫4PwY &W>FK0YLB߷MyǱN!ܻtiaKiaT\ ȞMF70N(2Қ2j8%RBTg`Im"=ܻ%3&37_UwX [Jfx"; 3EϹR`˅.ˣ)8ަPEB?Jj&٦\;xS!8Su`J&<72ݤpzlȨl!E:{d	;G-ܑi /zJpLS`0(YGJ^~ꯐ|VoS=<::7yK0?0kg#~vkBgŉƲ9KWNL#tbOa;wPA:҄ zjv
*2"zS	A,UVC. V۠ssK^BSy1
*}Mz@TyuzOI?4|d6{lE7:>9G$E=x뗷[}nEd/6nE}֩V;dQ(#ldZT 43W{
G2WA~4J
%ZfnVlA1ºORvcapxΊ3׃9Fꪣѕ~<d?m3kl)dOo>E3w_D/T෺:5spYSIR_zw:kX͙Btۙ/,Jd*(-MQ,G@y| 3jO[p@J¯_Y/\ZԶ(8=mSs1t3SGFI:/89xּ$DaR' T~ף+}.x3Aҟz^)nH]*Ex&6򅦦2uZKn
>
5Ewɫdز0ew{Ƭ5Ȃ[K	,x (rzJ"<:775`q`=1ݺ6QOxيW.><n@+'7ҪIc]T
vpX-?Rl	'g
Ibԗy+M5Q+|5u3XӀ8JŢΒG~$RY&hVR쏢ht5S)d쵊 0}gs֨>hj4hʏ6|nrXb(R0<fi;ϧbJ.,bq/x-d=cۚXn1~
K9cƏ͘gNzLE鞫mE֏jI,r!>*"#a$],<ða/O655{k+J$4d:+?I?6S_W?!
/3,0r(
6Qp0a1$lъ?%:x2v_b|fDޕk3%aRyΫ*Z^d絎Y\
lAG# n&^õ=?WՀ~mjzeb,3ENF;^5Lԑ	;x[{7֝
+U%yfNdj
(u
F=)KB3&9y5ҧ;Ge~}02+$ôv6,)xԮ{
#}OB3{.у;-&/]q(?\{h+#gaS-B>~+0U9XOݼbg_1|w/YֲOOϟ?0U?:^Ģ\:վ	߼(yg5\赚+#&&J}XϵSuĨȞ}e/BL\%d::l'ӟJ(
hvzwW-^i
J&3#
4_NJN  a]v1ؘ7ԖB\OMT
%>!7][Cmki>	tP3zG~=Ȗ_km߆X'"7VJW4w&&l:|XI2װ/) `&hy[d(szo4y'Mmx*N{^F?(6 <]@T|;&0yK
[aW#[>ooM?q3exnaޝ,Oy?DO[HoW&|q(كV?M[}gա9q:w%+uOK/?v(Mx~Z NSAOǢ1Q
EƄWE8ToVt87o6JRhQY3Y1+[/_QD֥ICfڊ ,i
n9"v$by_.i-3?Dٺ;<xjfj-/w5=A0-=#H^{kEO%Gi}_~%@"KM/Gun-Ex|25A 7ĘM1&
nȮhB#sIRB@^dIt82f1TxB8qu'sn #Ki%~
5Mg) +|?}Fv3N~;*?y[)=s;c YKj\98o7\9:ـYb=exYB!gr%{W}!"A,a]74Y~T1'g;]Q)Kx	9k\{&"2Z0}
VYskNٕ2!n~e>8fٽr}=+Vy#m,N3ϚO>Te;FJS@
@əߨsݵ~o8W|}dX8_O՝HXW@叵H'8WpbOq>;ޤ> r1V`T2dy4xh#Œ-:YR֛޸q(LǶΖEV3D|J[L<q@J$?#B	(-{8$
MrGI֬gGeWRfޘh6n^iFj
q9tix![kw-$)+%v	P6
	3[ey&]yM
.̍Ű0e]WdA:}ވr􆨙jyޮ
U94Îö{Z}1h6
n4iA`z ~&Og7_5<gm|]ðMC<TM)L	mL>jWњ
*"6VJlbcq k^T-uT-ۭqtYXvD̺J8\<q=-
R5XSM]3k̊Zn̓`=GE^ś4l`K-"wpTLgU"q1Jv1eWAGCAi1mm-ɝoE/T Q'B܍C߰ĺqq @q~-FUmb8Yf9_qe*\0mJG /]eDc+,?R;HOo?Z-??RΊpXe52LC|+>XKa^	lG_-%(60p`/ۜ8AwP#-i JRua?5nP[
Wirs֪]d46t]˪ߡ^{qnm m/a*
j᥍sfU T.I*}ǌCŇعVqCKtcE؂N*6mi~ڋׯ7n>Bg%lc=|Jbve3!gC87VhyAl4 D=1̃r]όg9-FnsCw7B|_{AwÎvQ`7;;[vFxv#s9A5Y~Hʮ4w=lIJ|(q[j$ՐW$={J(׭bݘ5V7-3D7whѻ
f)nm7 .2*f%	3vwz>b\lMKxP̅7h=COfYEEaW[q0Mg~8ۖ.?Itl|cgKMaYEMxyTjIxF{ڞ }$Iul;5/^ R+mT'Q$^L4acq{`wS6`>89'2/)H(W#eMvQkX_K?s޼B]8RqCuU]r~qQ3阺@eej" PÀYWO*-^pFi7Z9h./G
Űgz)l
Jή5b]O^fݡVՊQͩ4oxZD?y.b;n<d < Q*1ZS.-եD3耢$|!`!,!\C{vP/劺3[K%H`w.Dj8='tjs??:``<`7,:̇h$dka*4ږYu;[Ij+z@<ah`I8d@ y3 q*JQZg((f-Y݂Mk9ͻ?sp'YyK3Lf]Zo!Ca%p@LgH6K]96ȳ_T~%?B$Iʣ$.{;_vXfܽ7Ʊ5s$Rt帩CTmy7]rȄ-ϳ9|$M(PdC}cVLbEOEQH&EG(8Hػ<2sHngB8`h_U/8Yʆ''($ShŪL>..)+lKX
0'DI6Ēo gy/qDΚw]2C-O_v Rd("IL2*6k1P^x\"K#HyvrJG
L27St) (2S^|mݏ~󉁡yuEfs\bqO	gFarNfRS=	)[,rP<EUjw<
g7oe{
<]S|`L`pߺ{M$[6?aOm1	]g	}$Pfw"rf 8*}<vUN2Y9!:Ȏ7e/5H9q2;MzmWUo)C%Z_7/[!d,AȃJ62|#nlǻ>7708Z1ig1T'.ǆFXS)zK䆪0bL*~>^YlL m'h&Z)P._ʤ;53˅_O
ޠX`V]_j7F82\پU#K]K?%""lN"㓳%uF)wwR%,2kKMx4:! j,-l'n
d3<a%"=<V~<2Cm<KM??:)<GV|
+օ
BImDBW"Yԏ1>K;^{ZE0J5tD{A3u0r,l0qXt2)ܱ
+8D_>j(zba|gb!atgYK7K$ڱ6\^"ݵC&y 01[Tb0َqTz60\rБr{7qzDGOa6ތ
=l*uN"@iK"?6J]k<jOˬ@rVj\FBѯ_2Z0U$txr*6N0ǑlvH;=E+t"FwH62rcRhK|iW:U->Wxo˫+*GDK95ŢHLV{@TŻۻrM\W2dg-k7};,cfoT>YkWnQKN<*CųqAyGo2vm_lSK$[bo;ߒ+}lPS5dJ2KnJ;ݧaD&Kߩ*Y2ӨnIΉx>
$ugmjʒKkLBU{/(RKp^I6ppM&1(Q!v&@Q	:SkPahl96FXN:(cUDئyv=U'maĺjՀiI@g"ʼThI4ӞkJ$0VoTC#3n<uFkNC03'
2hNAѕ;TְPP,#L[tǉXM=H8^{0<ܳ=0DZtsWXGs8Rl/_7	ƘZz&f6w,lU|`2!3KRބi >bc
Rp_!2Ed+@kfEBZＯ/-R£W9_ :zU^+9.y<#&3lXeayƏ3PCUv9"
޼؃?Ƹ5&<l.t8$y(kf*v@8Ⱦ@}qp@:eU1)M}!
ہMYNXkbu//MV"G|-exQ,zYQ͕V4m6M|u'C싨G1\q60[d;$NhpCY̘;|
mɀ⌐
7R֬_XLts3/;{qNtAe}{m;uߓIsaǩb
kX۳f\d	`f{dsLJD
0/ee=0Sś,&	lw-w/%5"G>`$v]e C!RQOI7PgJWn!W鱷\~ zl	p>(nޕ}Rd|D< E,q':f"6ۺel2 ?nz=:JPVO4?Y.ٜu#%/enǺ,GHZ\cXADia;)r/g`Yd6/A*P鍬f
t/ՏKRuejub7&	/GMO]@%BX1]Ck-S^,:uXn[Й _ Һϴ$*՚ѓJ5|1N6neK^Ό9ڃKbS$5rb21D8Tl#y@z'xIBRd䈨y\'65a=tH-PH!\_Q!PA7,Uae:d\7LL"_zҞi&Ia\8ĺMؗ6%8 oQ$&6:{ɓͽWʃ؀d=&U xf&3u?DKjhJq)_Y(g{\L43b]'C֔G!0!^8j|3ہ,yPD[h͝n񝶾(~Z>Jv3$lHyԒ-Rkٻ)\ө:˷Qf#M`8:FC,(?$YS zKko7\IVޒ	uːݎ3$IWUw#?ï^eO;ہJXf?{PXYbSWdů_-DDs^F3m_pĎW= 
I|'Y2ֲ+^G,r%DU/:&˦t-4'Ԙa]J҉PcbdD(lӞH@Fbr7.,ea)B~ޒ:491Ul+(Ib0&f91T桂dp_]Wfd0i g%-{V& #'}^
7@x!5@1܋lw]9_ՃR)z2U\'>[hd`@Ҟ Qȵ@E,΢!&c^eW	#rZp#NTSY1{'{:ݖGe@:_|.Rm+5R}}4M{zR'~Ph>(wɢm|3ٹc;#ET{arúC3CGŁQ|NɱxꈺK3VLg%?#4MP]zNDda6,%,+=6<iC [޹=WIv,u3OeI=x[SgI"\N_" H9o|ق^*@Z'k/Q%.V!ÇEړ +(}{sj܏s@y:JS.dCwqw"xS˾q\ywҗQ!'%L1
Z2AyL]D$UޚB{v~#U+Eҩ˔@B:ң#
c>:ޮpF%~RO,y3)ᆗ@[F^Jk|6Gkn=9$7Xd3Vb;b!*g8f)$ve=#wn;H&q1	#EnbeSY!ztb(J&jeȴ%{.߳5Dk{yU4=3 K,q/ct	zX`:׆kέlҡ5y2yqX#_L5HLC6=cfA6kuP^W /B"rN[PZJ|W̩iUDTw$\JeP0vŵ~\6J!"8:D2y
ˈ+yPLK+ʿ( wN9?~u-w?{H@L1LD;k>-q,D`lzL9 _w٢T"j2e.ܤվk#-
\膟z}e	5{JC_۷v02)%퇆w~̸8T]d$P+br3WOGNұXuaG
_<L(?y%<T8=n
8ӡS\kAmmN	fj&\&~Σ5utlz/\ci3Wm8-E(;oPA\zBN^+ӿ~zcVRui_ݒׄ .6(:KUQclXALJ2!qQVs'phZOTue>x<n\qo,FEWi	ሊlR'93szFvfD\*YG4wR#+]܊Q6^1)o$3l[mpGIIfZyOܖ&~p<0 Oz8L.n=LoowMZ3m;[>¯E)k\7\f4Q/`ger;ѤjY!`f߯;q	aHZb鑧ۗN#0:ͬ0LhF5f}O׌$+,`&ےW,
#euՈvuvq*㧎oXÄ59!c	aCW4dCqƟ_n0s_ܖZ2pѯۈN!J5tk*  i8/*꡸ro]7HI0Ul!ҹ5f`bX":ì3yN%J4AZt`㑣ISu]˗IE}鍲%/7iѯ
cƬW}ػJgJR-b.\e)ĺi~!š(*G^VSC$pQĔRܵ]7׭?uVVOT*ՌR~PVaY|Gmso:(t33
]iu0K,;N`
XC1k,uUq4\ڃ$xJP|_'&4̪Đ~#j̻<]Wg	,3U5xdB78PSn{aCdsONYhcY| fgk,e-2%F^^UEokQUǉh?$v>N<¡yʅ)xCb%6CC
O4ǆO=3SJ`0Ny(PGNxd>Uӭi35=32be9tzm-+oJ	7aVC^]1煆		z.ΗKuN
(y=PM<5jbv	S#$җz.07:4`ɺ[(u#K|+\CKnZK`ˢ;Av	9xqͯmpG,D'(DJ^8?7BĪ*f[ȋe,\Bx:]QQQWyU	gjeCn@.cr#>cCz=ѐSJ̝10ixXUcJs]<|i<`h
G*w\V2L`F3kw-hKO'IL{HJį?JbGnnhEC=6ȭǟִZ~GE"p5#ȼMRX4{;͋A5ʧ]{
rؠn;ġyy{FUue̝z]7Ws_Y.!G/v{+ȵMz┘aRv-;8;qr;e*їhG)??mXNڷ!:w,:Z7}wDGf4
*NlF)z0wàO*SXgT;-y!ޚؔ!CkW+FP'|GSfs/ꝩ&
Q߰ow@/wS&P2ȩYx>_eGy
45mfF/ںݪw]֒Z)?Z:j]wXGr,"p
ȓQKAlRs\0P*M˄{7=I<D-&8`gkdNk`:jg?Њ{TռpܤV޽:5S)p_a./#4\qǻ{?jj.)sц:?pi*#	5v7k<|oܚbKdsiCLU(׏]zJfMl1rXKY%mw뮥n9z9["΂ѿ,^m P:VVz·.ڴ41&{reO+67mqͧ;Nn2%>1(nq(%T]tһ[5k(}5Pӥ=geo־8MJ\blZyE-ҌjzF|̝C	l'E >`c`6t>*^$s!Vn_S^ǮGe:DS"NLh_Fx(( "r*:=Hc{;xLY &~(2z^r\P!ۚ	j"ۮ_s]r%L?,xeTT6tҍt4!J7" -"%1ԐC0ts?>>Yzfm9w\us"U)񱰰5{n{1 ฿Qк\w-#b)H_rgaOxxGng|y7n`+ xq.aV.AQ#G%GFCrKjşY4ܩqUϤIg?tuޠZ] 9!?F>~02.jz!#xXB1ik&w&%?Lt[BLRΦ<~wNKŇH$wSbeCH'Ӎ^N+>޿*=
?".ҙ^!y
DO,W#Bğk 5u=QeXR8g@*F]|s@Z^'g+##gۃ.ȋ~QDaKKiPEzg*NF1Pfeuum'r3j T$]iU4|3ˏUPE}TY+%Gavp^$b|ۡ(jã/ҺޕFQ|+g}(3en;jƝ^g$IL8g3=
<]~iY0yI:ᚳ2S{++ʃsc=)C.0RB&yv.Բv/PΫ!Ԓާ|O [ɫ͹UNu^qPtOxxU}XN$
=tBz<m+CT9:Ц)(l\qp6#ۜ:zU<IkD[ɂmJ'C%Yxf]flOB\|hŹO.Nگc,Kdi6$?+B%jK=l=y %.xfUB!R';[8kXM";S,&j_RhFc}g5hNMȾ}UiSheP
ϽIb*eQLT	R
#+N[̖Ncφ*.S4^
[tIGj!ĖWkYas**Eب_sx/LWU\*] :6B~u7mƏ`'qa"<]7+W,c_4tlmA;U,7}.l0GiBZѻӂ9~nQ=X)`FtU<ӊ_(I";`o6qIw8vc׽1#nbɂV]!O_/ceFɋzHcDи3i/`*!~e{ߕ|^M6LluU]$5SC[eoƅ7?zObn]f"K-ńD\oȁ'QpÛ1wGlŲ0?牔XBD<Y}4=6:9GFKOL;/{>HsI{Ov2Eo$BK>:e%)zrfٳpCj^K'O}PbIsp4>,TeHt[dUSSƶޛ7|R4Gkα@gKƋؤ~' q)b,h?江X袶n m{',K͛q]jD_
I*4VCx0>bywxP/ bW8K}q~Plhά"GBR͚0ԗ\8IoB;G2߿JǕ高EpZǤM0l/qܚRVš'C__-֞tiL\/h=k¯UV(>VhNR<14th{kyf5f-Fyf8%" =@zKlS#zyjG;G|t%@rd(;Sw$hu$Cvǯ0`50s<*wZu}Hfx=SvĐz'Y>
H~IKȫPI@;UrP<֮Jg$W/qLۇj"'jx>w+\.x."\.|[
a״Kl+jl?edx.WHVa%њ	ޢVunyS,hU ʠ/N4IMR}&U,OaL;hq>A"[҃EN:'(RCh@QǴcpa7/3%jr(5*s$UяjΝK<eb
bMbq\0ک
_X:Hd[a'#5p6<L)"bt.)C׬ʳ.x3Փ
{_IvWj_*]XBld!1yw0 \Z";܉R-_~t,ZaJ|G}^K[|^UyO}{%	CTDĈ"ĸրۺ+*=A[X'W6?V2{}mćL /iKVI|ܰϯ0Xk}q|2 !
Ǹ4R
9:\Ӱ06*¼S|IrzZ7(LMdgc/|&awxԸ-X<
gl(zyecO򥓇i˒Kڨ?g_Jj^HSqe'=,+	c)Bq
Q'C듹FtB:t{>~
:5?SO )@{
	%v^JY~5Om~oX~&^4w~$`pww"#;XW-N$DXx r6xh#`mOmL!b603g8.\A*2Вn_{Sq3gbC﷨Sp޶ZM~xáx*xv8ޕA\R=u-(_9|~$,011o;b;u:@]R,Sb=;|?M;ǉ,tɌqZi=&2$NL^/0<ViPJS}6^C
"w'z~??BY(-Lh;"4(:Dh.Bi#ICIk*fdмrSՂ6u9;v(|i𶋝^YTRۼ{nP{8!tp^s`	3Iego=*ޖpƝFuptBAEqj"߭ \mx=c3kf'SKZs;ѼI7\e]Cɲ')IA3KO.Lj`MEPƝ"GO!oYǱ[ŶF+rzeMb3[r~i96˿(t0*=μq
|XNd:A2^b2uEÙQS%Y4}yYrMد1:B u2R,rP .G_Qiq!l7<ݚ7ߪy2&IDk'u/(lǞ$lڪJf~;ߺcG,	b4z{xѿM
Kt<Y㕛1tO^m5Ȩk-5B'+~9Xh/R7@r
\;~O#Z[~V9!xo')tW/L{u|\R]
ƿT\B[[G@WD+͉U-9k$q"=3A¾bPN&>%N?|a?KNcDLU;sV·2b9l+N`ceQwJX)des5k_U6e51I}.ݬL@Bn/CN3d8'~[R z;p~Ѯ<%1gj
\9`|)3&?lׇ\x#cz95&8)}.d3mOj؏<f3/Z_	޽W.
Um'5\e/6EEjagS"8{m*qP }>\HWbP}%>#mXs`d9&N6N?()=JznKp]`5ۢc+k{X|sϨvceaM\*NqACC8J4Ns7%"Z?.M4[
+~`]62=#PTg̋:zplvQ*hzdS+d*\9pf//MG˯	hvt;-<"68 jgܤm7qc^!b$jtY4&MLX{XKSZv  śr5z;l;&V-{D{[M`Wd@
a(X^+./|i!ϝ8֏מeoﭏ%g*k#Q48mOI?fPo%gf5X]!z[>Śu([m	W@^x_;JQxPs 1x1tsK4&}1F:_ڦL:/vN+'7* b.'O;
~Q)Z^_#$[[t|W~qSm4lLqC]N\.2[\<ɻ֥iI?MDˌgkî%U󍱙߬VͥaqՎi&TrsFj?=?[Ow:_;^kv]3c,:;UN668tcv[֗Y%ZYk f[i,AP}̆lDqtK:wWD+O9#u4m\H"A=bZ/3t_j)ΖB3n9:AY"ߏfPVEVf?.uM㧤hɎrzPn@p/!՟6%	=uo"jPCz|	ڳmg3-3mg*Bv!HUvz̖b[S!Xs$jθpYO-ʤGQ2As4g|_rAa'`=cM}ҿj&
ׄ|E_c@yN D/	ruƹ;Kv%cpyI<IfuK|d"rTs"
E<ʻv.n}! p蓕m>gOXM>ԾmW|sUOe$qX~㚢Auq.JфPk;Ӫr'4+7["T_x-/QB^m~ݔ-GNŬD5#q8sq3(耴}4ש{g48BK:цgvñ+٣%ӎ+m47ډSy]ufگ)Ti:=Nf@qzl*CřD35Wor18Sڎ7fTpdIN?Kz{ݬfpjXONOl6	kxeحaiE|} W1P8|/~:F][Ph]mxۇV& -8MOF9MRHvꮻ^%T_[!~fȝT(G!Ĭh?渙6n ^ZH
}OL	v&x~iq>0zBqk.++<@	q&u)?j;^Z7d?SVF+&)>vadp;j뺛]S?q}MiB49mj)q.R}}'vV_ߋdqt~nrn3ޞj#3s2ZYgU5~k;!LyFru8v[x
oxfv>;d_>R
E}]ޝ8lm2$PH! H	u(^>pd#e$G<WeM-ByX
EӚHu7:_>[Mm9?~R./l銬-%5FI擎L6Δi
17e{.oV)i;ri#i=_>E_}?E
̍}XnUw<kX-?%GZt0F%cVWgܜ_smFgt $Txyx\<M{D8/hG/~9=wPgӪ;55Ж#³*u~'
{a֤d9CD-XbACGgk_0󳻩uͥf+KU6'=5Uik,oRoMD¬|f0 *];G)Jr~
[Y'i9K\HwmLV!|)^̍#%n1=<6eB\ІC"D-BOp~b^֚mšEZ]%6u/D#q'.;$ˁ3އH")nV1񽉅H<AfėE6Ssü4%wpֵ|<⓱aԉL&NPW,N\2Fj.t?rIo'@M,	1\x܀hb䤪!JINOo	gS5iа¬~tf7oq&T+\Mb\ga^5g7YΏVl"-_+S{$0Brם2<"6+ס|M;>:В)xS˱ZZ_y4ð)V.U`lZTTf	k%h"ǿ#VS~W:;]y:|Kyt~w4זBuY"BE%{	0HAQF0x/L~'1=by:؁b}J^$jl՟uͰsV|м͝ݑo1eHG#mZR^Xcq31O'x5,Z^\Û~:ai<lvԘ$B\S_C=F'1+WG
B-fDice,v&']}@E=/HBro<J1}_^juE{ٕ4P.i^ul>kJ'.**zքīryk+㍸ ÑZȰK_ѹ@RO<̰1y|akd]zXQ,>Wz91!`wPӐdUnJ>*{t5ONu%((RX/xu!o]df 8[_r-~ع{m\u'r(
<JuUS+6sv*V@Ld7lGIţkPځ^hJ~kk]FmxFWl.{8N%|7?G-0Um֗B
ܥ,),ټ$|'m*RaB7D?Xa)Re*9n'䳒ẟ/gz:?ݭΘQ6I%ƗIĚx#@J|Dk0S|0kv>]K]ЯG7N[GQ2xWoeMNZTfFN;mlq@Wwmrdkn6:dXҒ%͢Z2$"Kq&y/fR{X2vLfދ	W[hj'Y8Wi+"7?*<Zũ.ӳ|;ߠ tKאFi8w]t;#NSiJ]ދs$9\[Ro=P~|؎KHOX׶wӭVX UxczwAs̙c/I
ζ*5^:av䎅(2
Fު<-XSd`rM<+
7N?9]wC]fЅI0+\ћ>d:!5>3$Kut:Ri>N0c
-\/ ]8"J"	g{~<(HSʫ0x\ǃY(oA_95p@n»(љנJ<?.)u}N|Eq:jl\k	ţu:5*W0{Һ&/:pIsxKɂ3C^y.#I@5(]9rQd홠yW	֦TǍc#G&E-"`&+_l"emՃ^^ζ+nK|~qňa&̡pQyŽ-KYO7C9+b/t,D1?Y&G;ڜ$oKewҡbǫNQiD*H<^Vs9};#=ŽKNi̩W%9-Y,aKZ*ҙ[~9GY5f&E틍3XnAGG8.
O/(gtɞo
y/	S;6VC_hAD)nu>xaνi,!"Qϱx`-RE*q!F>86Zɒ/~}޾Fzf܋?X`ykPX!=-:8\1rܣ<Qjϧ3 w\,~TsVm[5c%)g%zYU@⎿BwkJ>| Q0/}1<2X;矜(chXBh`͸Ec29vzzIhXkz}"j{tR9Cԝ>lě֞EGp3([ؙZJ\A<F87t/BpFFK?.fT<؋`!WVm+{|"jlBI'&MWTPֳ&"K@8ZE?oy2WNoK:Ԝ,`_JQ4MGWtCx/6@?޽ԠCuxa{*)7g\ZxRutvGj"v#($ۋɉo۴:]_ygi=[dfJNf7Hvdy'<>Nɽ&zr$7]
p
ݽHjiHob!0$(^y,wfcz[5%ʃ[~ةg6RmSQ޷]PS@s:ųJm>0qhϷnĐcj2O7(]opFrD/%`wf/֨ɺg~Ǯ@LEod${CQ_]O䤚l~R}_ }}!E}p"ZL4hq/=_u3
--S@JATtHv';5d&Qb`eS =yd$f"_ɷp=L{Zϑ%,1ڼې]O-&FS_k_J] PyUܩnIyG#dl6EE[:UGc)iLN5@
p}#"t#ޅ܍S5tJ|OE%KHJ!'_b7K{)jο[%iĞ c~JUȳUK[}v8ApXf^jo9|QoO.]u(/J$17އfQ4A|qU~9R97Kj~_,ՙTP@2iW< 53udɵL{9&J[aA2\.؀=@Ы,XWsVGrkD8[mnײ%cCюeFoF7~OYHyM6(k7C_J).މ܄bGd#BzBzO[T5PsԴ5q}
,(S>`*)y O9n
+Åyl*~w?Y nΉ
kߓlKIRó/p.4Ou~CƍG)[LED6γ7GaqG(VPkjyy "|E6-UŝK_y!U:>(*2(n}KON<)_wMpRp.|~;WsKUY[K:<w3/<ז K!$C-6D=g}&[O.νLRVJ\:A'WsdcXj%C}>wCF?[2xq *Ȱ2:MR=K\$kNm͟iutAիSb_/JOhNxoeyq
/NVX])uS,92qIբn.Ԟ%wE~&Vn@0j>PLouֆmz+~z$YLg%whZ/DZrtL+q(*>#d5.U`SYƾ;rJ>N*:iFdko
HQ)j%+*ۙbzcϙcC8(M>uF CN37{
ߧQ?|/i ~g=$'Oޔ/
Uy𡺞׷dddf	F7>|"(Ϝd1;h7(,Aj`N`60KTT	J:E))R07/~0$v Sb7lRSP[35Gjo}}}3(,U~UU״
XzǴ
k^W瘛g
;1AKn2Xh=ʗZ5s|'6B_moDJX_Wc15$k#r3rl4`$J00!xk0Vƞp֌5񷉢3=kU7_f
l~4V,'/Ӕ?
Zq~bT`zوCbhEJ$޼2F0]Cѽ\6_	x\NH{!٧(1̉z9MIH50Zv)1'wY+ |?<)bvJϴz ,~tt4K
ڲDس藛л&V70Jܟ_pg@\=ׅ^N!Yz3:3Vln	ɛ6'-݄6XːEUvO-HҐ@^V{?	{F=<Vfg,$2SQ K@A! ~q>x֠eu6k|{0P1b琘"MݞطLXpdMgڽDTɽo~<@Nյr7r*Ð'ݬ3g*?8Q72I~?=u0u2	i7|LY`f 7X
@Wz-S׊ֵuK|w>BR{F@OPD5mFշC67ʡ?~g$
>ωyI W=&pk$M?oe)cNbѸ@IY%l]so2	T53(MZݴ/`3ڐsQ#L(!qI(.?@ZѬfw%>~x!r{EZQ>ND9GG-J$ |%(;h3tj\f!EY!P:uN/?g#z7iGoJQis#|늊" ~{?}wk OTbeHM3%)  !&&T_Ttvv1xH7P YYY䡯=h\e<TsxOH¾Cۀ!!@Շq(3[ՎgQf>'/ECy@[Q({
)PάCAy?,^OnQnee<kUYY,LLLZZZ	Û
QK$tQK-ja7E682֎$dl`͊baTtnO|v,Q
;ػNWiy`*@/L*VV)sMu ouLS1S=PAe&3mM!|+s!._bel|AAU";iraCК
IAwk|8h[nKni@G6SaECz!Rf4eQ=^Bt'S{ui@@ @=	 ; $&ZxbeԔ<cl	/]ätH dla x;HVSWLϏW񴵍ͥ?E	&
$BkaOAvff]nneC]kGxFT	P'M7+[_$$J
T抇@_*W7ϋ812u"./O~"|!k 0=
H3*Ϋ1$VqϨoȰ`E*` aU uZzLe[go77ˏ=e!زZnHS
lgdA뗣޳
z黁0NI0>gg;Lw""9oͥa /i8܆LKiҋ/kK` @62v+-! 
Ӕ
pknYS{<HwI3MvZZq+oO|X5GY;dp|i-V+\/9"܈bs;g갌/)h?Ϡѥɞ37hvFCCDڒ-@!흭{B%@idGڌRF?`)nR=RW0)7Q$;3@Hj\P3R"0SE<gl׶qG=|T9kBM^5⹐}[6#L2ߢh	?]h}<*N!oK3QdT0ǆj<(XdƘfػ3'?OT-,g]y &(3	8ӺGG2IAWff;r0= 63~}[===3F6B˕fjXAW1qtX[eU#N
8,K~XW8$ǔ*/rpOinRR%$$" į}ga)_@{Y)b#JHiNL UL\5T̐fΝ{%Ù 2ix9c@~l bRW
#l>]<N?QڗzR乕` 1:RZ-`cc5*JK ¼w,I{.՗#YHmr~mɤWIm͏ʏk;n]7  H;w<.:p'1srrXC@o '#pk|RbƉOY,@tSR4ջ}=e
IZ_xQ-a7rjCI?A\
>;CW 
 , O?6YG;L"SVr J
R5A3WOe+\f( QVi1E*}M_3ZP~C2 L?
dBl!R5[O&8[d>l"xs*D@066L Ҁ:)&Z`MOD{jQn_w4Ā.ɤ^kr02 gM`9[MMsc)c5ttzֺ MI[ݼݏk2'BQ+G(̃gY;UQJS1]>R+6XY	{w_evD|̉xEޝ;Ht0l+0p؞5+Ļz F>ot^ //sr6.ی
Pi/A*N<ܹl*
gSQ|PХ1Cق_e=f)  >zi&夅7S;..	
@:==Y1?Y"mϒ.Ѥ2 t x%UQu
y@EAe@;WJETKkȍES`cb3iqN; j01`E^
Q?zD,ȣ͗sy q5itMk89xtE11/YE@#}کB751HuawZA6:1nQGlz] vԭ8>й\vb+<Qu6J~lJT4[-wYHb'B6q?R3ǓRJV2zΘ3V&T/Λu k
ki)ղC
?o q(@}
t+ tDnԀgӯ	
N) O,o\,_,G/4٧~ dЭtaZc	ReY?}ۿ}_EC%'UxX!5 T @&%%#mýPA?}tnHT>Ҷ
0> 󆆇-7S~!|b|r0-։>jTk&" Áz+|=W*Q/+0_JI#W`1~.dU TU۵~zWe?M#+%{{{'g'`Z 1*@~pf8/>b7IwpD
 ]DW]R@4ɓ9|D*s"qar;Iiٮv0'Vmt4Wst.0t:oFIRdHlS[ pSp~@E;|'qkF0;`Oϣ4ʠUd=]
N|M]`v4W'B"7yל'697&X++2$޺ӆwkX,lϾ-iO/v~4kø+GAA9SRRz3[rr!8|$euuRMN&딿R(iGӻ>$7JVjrgt44VZe)"
n_4Z|N :	Q-.eGjN|KVMP\(}34(QH&R/{x$"9:q/]Jy+sX_W~FǘVh]gA?tIW~>\=\j[Z
K7EnkTV}3[=M*9vtJqnL pbVMWTfNT}cP~g|_)Ywɉ݄$KހhڞjM@Qca!ԋ.čgUg\IvQk.^PgǯGEz6splb B폣QKP4!1@,zvwYefjb>2FĂ#mjVᬜ?sZ51K:ny=TvK/ټj./!% PK+biG
;e!V1X>/($S+ҦsVaߞ+$JwmfqdL2T#ǂg
hW"*Xzu$Y+Fyt:+ir<زȺjXWh i39Mu\l%ci::)	 R⃺?*GKҳ`/c&ϽG7}5[dO&$d''F]={%kȈQ4[Ȯ/9tq3s]y9;j7
z*s@!x{]h煈y1slf9z67-Tg'!I8X0t-VTǏ1w}/u`C{~BZ
heTKo$flG8W"ʥ?֕Nz+xϷw]PWU
.5;C6Loa?.Cst.j8oSJ|tx?a%^qM9'r /nS3eUZȽ:(YⲲ~[q7	t465[[i)6U^T[ݍ}7g$l*
qTᬫMwөecw?
8o)	~E$94<z M]kޓ:{jƸ؋@V4u5i T62 ]bRzlw]2xDpy-wMWQq+  z2	T̵$ɣM+`>I%z*zYJhhb&-\80sm8LS.o7m}h;2?tMZUg}gLGwτLM-QF_ʍgn~ƜN}jA~
dUV57W6C(`.sp.k{n'oA
&d)9F; w5pChBM7z饨SErZ_ӷ>V7NᣏգKb`Lʘ tdHQT>9Ǹ.)11f%(r	B+S`&N;T_ki] &*h9ݚs}++
rrf ==}M,%nd._cnٕl8]<19/BX&'nE/N&koQPA:+sd'ν5ĥX2ӐxckP'bJVV݀wa-嵵ӖC3Mox#\B;EAH!t,SbKh*g6WV1(KYm}Ͱ%riq^H󵅭pnB&.dyuL|Ǆ9LOUYVc7dҹlkr!	B99*sʵLt ĝR`,cޡRK+J%@E;*4,95hq*$Rsy>oPt<]ӏ?(\V1HoKkk2s:hv=ªdVxNn51'U#QbH&S괆RWtՂ
>?绰MzRl-S -7]EN*ğwYhq ז K|s
O,syͽia D4-tF	 蔥St|?G-PRƗXR}TnFFid53_RZl4%Qε)O<{w"ҡ.٤ӗ!G'Qton
{`rJbSc8L~M|cTn5h=!C_Uf,TlDI;uVǾ`'F_)!]Ug`}ܚQaW~8$5>WieY1!ܼ|Hњ:oO}{aY%X"(sTRg>JEMf|>;#Ɨ|ۚ("HI||úd+  4IQҙ_N6`UGi)XȎf+j=h4UJ)lsL#(Z.lUᓁgc!}Uz7[%Po	۷PLy#v₀#ՙ+VJ' +;9pzhgbi"p׮]#
MVRϼ>zg$&~.| Zj@u#֢B0t:|dM˰뿪s9*́ϳFs,:pKSG!rJ,UMe''Y݌{KUɺAք09=_	425Ŕz'*ec>0@VV,_OT%B}Q啕~ژ&+T8oXy_b-"=I_"W憫җG2PoQ&c[c6"
UUաIYO>نڼVz#z3fssD|/YUf^4oU y ۠%[*KJ/w%'E	-.(4Wp,жZX8ɔoIiMjN4l|֧egn
@p ppj*FG?G)h_%svr
$`r_31$Ixiz+&3vOM3`FMWķhDT]m㕩1
,v|J`z"971I
|\Qk 085};Fpp1
zlV;lQlwwv"pL=&ZnM< o޽y<
i*Dq1fD* %%%%=SSSQ|fl%Zp@bb^k@-Ȳ(IR`c &~%s
.*FOӳg$;|h۝w@V"}K ̞88ΖǒlYiF+7Dc?_<=Z4E4Z103OJɽDq.h@r8 ke^r5y|}_Շ(t"ҡvM=Ƹ]q,r>7)1vqZy2G"1Y^e!
#^"Kk~Jݯ'疠4xx"E]3;hW;{'v~m
V1I1{CnNZ-QҿE{P=-]{-LaŇ vp;}ZpQm}#{
Sv`JLb->;N7֤ %GHҼ+k^݄#'Cs.9wSQ1Ռ.<L?T@3kZ)/
aKf6o^E\@S.|w,˯֜#f)7w)1 J:"rލ"֙1j(>p ~f>tlߌ3y!{Ԕ|YU{F:-/S/|iulQ`D4PBz0m2iḪrSWui|~U>cnvuQ:608f0L.#uHy&F]߻̒H];aѳi9:$[ R?H2)˘5X9OϕQd+`AΙؘ1Yszlތ,Gl`^?ْL -{;#@1< R:N^-
b06mtcDM{UyPd
J	([xԓȣ#p C zR&fC  H0_-zV$ d	lBUP>!j]!JlT3q Si-`c|DZ4cT]>a uȾŖqϓd4lB/8*;_¾^ѰR~<rzDO\-J'"+nq%:Ҡ6F 9"::-,,..x|:@5࠻znOdgٿ6{40GR>KNn8+ G;Bh1&MMi 7׽T0kIeJ~bDr`OZƕU;I`?Wr[UmCVozz{N@gwmn9jt
-y"3cugq	:vjȴYlzjGu'@r^Ͽ
|^kѢho)A FCCx+<Sj'jǻeeӀX~HL	?L%&ΕhUg*NF"Ql8owE27R_1eaII;uLwPRĤg'tVeJY"-dR@2(..f!\TPgLrthCkntwCeiyQ?#(wBRUJn%2G\/)ٖJ )2Q=k
?=eid.JQ:) @9v	N*FEu-~WEIA& S.[tE,j΁Q2+	1tb)qy5T͢1>BܽݽHB;oyUUNq)n48{lNG5SfNW8e͙9<n;g_'x)>i: S@Xu:;;110P`*rgY)'IE{	kH hgOc(LP\m>u&&UYz =NըjJ@HOUWiL(<CgQIu`v2S"aq9h%;1DqM P$+)M	/6\eh%.03;GO3jx;+Ɣgw/~ry}7n
r1{UX t,pj{u"B5E@{`<
Ҳsv\9iG³<>nJgRm`xu3ڍҪ	mR[uPԐ3G>wKV12;}PZ
	ߖ6( 
g<̃@?I(KQEHuyŗdAs:cb>Ɲ<:p\Cb~[.D?!~@BKٙH\$t%K%dI"|y,y>G?K^j*+7]~]u7de~gO
Gzz]'ܑO6@n %΃8q)R@ۍ~ˡPC]D~5PҸ7Z\;bdC3
.b`|BA$ %
gJ"I,8h{6XW\﬇H4eֹ:EppirDѤ>\)C+dtZQƄUaZ@gw;m56V[>>C@&x`%GRo%w{VO\\EGKA^{]";57A?zԘ+	2t%RṆ]}9p
mmtYG1=:fq"y+j,Rܧ8$#lYLb] yA
fnԦnDln;xGNud9LˉKhnb,=6viq)P}LPr_sInd-+G귐Qi0/r'>ѯaLn2;#cvgP͎<8T1Ul^Z<vxClier
x_IO9	 ԩ1+]0.E9ݟ,wKRLSC_-]59^GCΙY
)
p@S	m'b daU0Kp(|i˫xΜ3uSlp=Z9Xiw 4Ϥg.9Y	rn8T/5?GGǍ1j|OVd/{s6iʺLPG9$/&;yy=Ox/7eUOjMHGԳІ*%ʈaKVt
|[r^bLɤq~azP?~>i6l5YcX驄B^ݘe<+_h
SM(DрKܳ+nEMMu~[<0={%2e#s_pe߫dOw7ڬݓz3I;%KA
1t;`q4t3x7?`*Ӏ&da<?3wQ\z	8;<eo^
S(vFO>q eQJ*?`>10"!$*l銅Lvh-ыC(RšqׯB?{=l5'u~I+d(4rt50n¿QPU:)$^*E!slޟ	Z)%'0Cd!i|&k'e;׉Iց!|'ԡZ3ĨY8қy[]P&F<`c?88O;k	%1iޅS-Lϙf7'MyD1 ; < qFFF.M4vW)))e/B<
Jk?|;r!_ IDFނn]^2wt͟U9k (ODNM\(
|:ǟ9
4j{6?mvi2{|_G׭Ӿ1oX8,!Fmlq')܍vS~}UuWTe^d?zۏDC4Pj{WxL>J9~Z⎲Ak>kmn˗c-H[Jߋ蹧.J95GNN:&
3TB?һ ;PÛ5R۵8,TV)*u>;[JQfѐ5$Wb܌V\sЧUUUōv4j2CBDKȻ5E^2iOҟۘ#Z,>OG<_iGq\ڲT/O\yM_y[,6kcn/3M	p]лޯRXl֖yϓل7PGGp
Zc>9%:Ps"3pQQԩ#-w<lkB#u[8sBHѕa-7k`Y^lP	5F*Cps'[̉ϫM 5u S.NaGv#>HC 3Dw"Z
JmؤdM|R[xAh8nr nЍjS4Z‌#AiAnŶyh 0IKmkHK b!ғ?7qlSrz F<.7Ѱexjlwf;ȭB
ɶ9&ebLӳ)? $
trjt4B&
\l5EZAJd6PC/d03-[g
hf].清l~giiynz}	^#"j?Vᑆ)?$맒eZTܩTnRQdI=zƏ65zƲ@~O֙A˄k~>ٓ|7kG'TS<Կi~rȀ|5(FMj}f]JP8<X	`Wʥ[ZJpޭC#$ɶqKX6M^]8Q£{N[x|? S:6ڧkMA 14tǂ|b!5*ڊMd8y#aij:. (^X]uk'A:GP+8!F;]נQ8K:ꥦquK'$ZAPŕcT.""4=Z@~JSL^F
R2Úpպ3,ip7n>M, .y%S2\N=X;j׋`4fo*'moj L:Ԡ;'O+׮]
N[

^˛öi㷊Ô).Oݫ&Lz'e"l0-$"imY2,TZ6W^eq%"̩C

@]ZH76nk(GReof48`I
5Ɵl#8X,:@ qkkS[(ӣ~IR]|@2eq !J_ԜwVw?~И;ʳ*4ܹ@޳-{nǟEsJG
87h%g# Z6`; āteU~|QPn9F[Qzou.6ktV/փzW&|#p$]=:V@'㚧#`n޼)=WR7DܚxԴl3҂&i~4NȨoyъԲoB84?, ={FCF+ܔ 'UWA)cZYxKM'vk҇  DAx{7ތ0
R{}ڴ.`<hmw}ǺrG#6s-}7i=ȾUKB[7[buh`(,BIa}tA4ӖE>Ed+y~ٮį``Z}%" ˜^V㎿t4Kv6?GhTOgpqഹ*("a]u XՊAy57483XJd:8Ȋ
|tl	w}(lqiZ~ߦqmnM)QFRe姦y=.<piC-!{gp66꟦{x??U.٤eV~K7@3ŤʦX	<DIsvEȤj>;% N!,D@bOrgoIq4c?Z ikɋ 
z8Qlqvz	V{<A.-wU@bq w˙ -2HJiC&ʯF{QGi`-_+cvlQΏetb`*4bҒ=¶᜜dL6pb̒&Ubي'X}xup='N$OX;:8	i{GvNca4z@"1s؟v0z;}FBY|NO1qtj= 5$NO_7Dץ.HR<;__G1_oqC`jHҍ3Lӂ.Y~{Luc^-A&tnEss"Xsn Nk'Y} N&[h~/]Q1zf1g%:a@E6cM]i$)#y&ZhdD$?rTxM{z= bbtEdD0'	%od7f;S#Rdn$'NW6o|_J:a>? 2;S>ŗ⪉M2;+`=/E%$>1ڏ|$Ғj#a }RKC]qLuF/X0|6TcEo~Q]\5s7uřn@?OA;ޤ[Ԛ?U90mrtK,/]Owhl&e	97Qԍ}ll,G>Դj[cH۔Zh[dY!}	׏U	_U7lA0*W%:>iMeP7@;k![l(,_d1N	O˯~ -Fbuv*+f'aOBPP5(4?.ÎԳgsWk4%g+咷	v͞g:o2\7Ll;nă.<qpl9}Kd(9q=u"D&ZCi`jyފaį\iq7v`KV
/.CS/U
_GZ;} g9'7禄'X#JߝR^}IXZQx+I ]]);qB`*_5}neSż
$aN0-Xk>(6sdY&#G+Ɍ/;m
WIQ1ƍkB3Z7	* r^WeN͎Ft#F ?>4mۮ(ܜh\S8iY`@ , À ˔,a{+d.^ql
TV .Pçp)TqoR
m, /l{`B5Ïb>^]lhcCCԠE)J/("%BB|NS\-L'.f{cůlҁ.i2wL1xo\@v\KHI&3ZVl7^
`COvQuͱ@a_1yev=g0{&SV㻔dҠ
6KWٯ)#BKw|;O_PԍtL*}UB-]S

[>ܟ4r/ |wbJf嵏g"$,^
]n
p%4##@Z^6@/Hu_ߘӱL=# PQ3}xjA wje;VWm=cLC]2	F*ߴ.B6mڮN+Q6hd[4ܹ!8ucP0Tt=ȟ#	Bm﬈u/Zw:AH̀Ձ,V*#
a~Zhtd8t@F񚺀AYK`^tתTRhJH<C(
=X:X=mI{d@VHsЃvO96ߴ8shI'"imQ%	U݋sea[whk*b8!쩀/CIkLSσճjNGSґm 4֗k|it\|A?ct~xܒ$y7ڸT*S>Vw+Jx(')-n3[J os@]\?p7V战}зkO"څߊ\ٿ,M.ґG,BZƾ[J#a@: 0Nq hoxIaFmsgͮUZn<3Zb4Rew	Rv קǸ3 >rHQ"|s(ga*8gCU0NÂ [5.ʎZCqEd *dqՏ BaW/m~~V,$VP?}~vT]T@5[f`O]C`tohP1Vw+mW~pllN{ؒw#
!<|TEΗyLNSTB]bGzKY
w!{<YQW7r_`d`3}wgvVE<"F9C bL[j4O%`j(u^\chNv(C*U;[Tv[6R9k1Sf3sRBv;r^蹗|Į	q60za1O$nGZo_[@@=me>7\3@ 47ҽ69^g>:9D益x/ U,(Vjpb*!tyN $N緙35:ak!VWXF1tbcn['G/k׮w7(mŽ2
V9X{T>ToɣRv3EEE#tT,_>QH?S0PzRh.%*β?x3Rjec	'rQl y@öƌ9wFhq,5  1jSz7үZw7ZCJyGIieO</{QKeWxMW$'''ܨSOӪ6Ǯ-/G#Xj峳b@nS37%[VA9xʀ'jgbX!g/o#-ů(c@57uԖOvvHgߣ !?WLԆ 巭+躪VdҀTK1xC7ks)\wW#~c:i%."OC`8	Y>{_IZ,'OW_}{z=xGxsё@qS
J.ҢQx27'VWVCͿ4UBo-4ik~kUlJ*3`+9f@BnMU]ݍMXo5_P:շ[9SV^WWWvn89Y3)kwfXZZyY{~9T?'t6~3Nk7$ss.>^PK7(BhOcdkFɮ$wÝڷWBiCAu2@@Ó񑃺Μ2;]h/׽WP{I2~3R!9ժ}97"<ν<)+K{"qe9?O{Q/3x߼)m#kbVٸaįfbLՆRK82u>߮	KIj1.+ ;CJ0NQvB"KQH7e0׈7d<Dja@'@glv"`	A&d(Ta]nB7Ӗ1(KگywAT^^^#t	efUm{"ɼ$LBv&Z
ZRXY&)"-EUPi\$EY
?E/(:rmXG+^lKOұOSfr) <
_f(U?\jS_5&NU)R7lm}KK7Sy&S}'ϧw+)	UoIdlУSi>O5+7fp(1]
?{r_)x>%tCIAoA5郦IvoehD8?pfpUIfJ$ӱWL=f<3Ϣx V;f0awpݯ*yoE69JUaoM 8tBߎjM.arqz~M}D"<>r8\3ͼ,^oNJwN".Dnb|ު+ŚBofNON?iֹ
/&OL7/A<-1ӳ<_ `A5K.
.stl2C`rX}W!r#mɋ7_cOq]c#>cԖԅ;xP"}d5 gJtAbX'+jxkG0$>3
'/IߏݘNA Ɛ̖|^
+T(N<@pHrFt!٤mThV@I5O^?P1(imPlݵK>![!@&u7@qqeEeB;i}1M?g/Hλ~
dXH2ݳsu_3Xh3`i-D$M<K6)LHGh@x9VAth[5u;4;DL3J}c\:\OI٣2srhYS"=E/I}سgM(>}z+I2=讚i-	;
[׿㭭7Ԁ+$v=$zgtW޳L)jz)I"s$)ɤS@#IFjBo떲ӅM;iQqĸzgR.-pg6!Y}`{5+<
.h+W_p6. ~}\0tuU',bDܾcӭ{{	6GsoE>}8m@̤zlJEEU)L~m@ ?A?~R$(,G̸ѡgpShԶ`#;g+Y73Lu؉2a37_߂qslι
P߃A<^_lp*1sk&7x*j|._cP;(vy҉my("_ì#gq9N6/Ocw_,bF!;q<daE0<$\H	l`WO.[VN[x@YI)Ke(g)?WdջAwoo~AMZ8/>3HK40шW!M7BG+)nHc`HV?G`*"/4k5-F+ T,01L@чz?wf,4KHJi^հ`DVmz랩
RX-E@`}tH{I
lPd'R
>yG,Z>&QO=͐wu/mHRg9(	 :
nȇS];wCv
+̛,?{~ICIGBL}>Nmg|N^&j?l|/3U{~\~TaS/JȝW^[3]^jd&vBA{ؘߏP~6'#OESEԜ*LD~~P20%74avϱg3yh;aqL6`ܧ͇lFrfr^#@Hp둪'G'v	~e=78tY)h^ɢb][4d[ieΓD+\t~<>bW"6bWZ0LܸÁ_3BNKz<4~6v9[b(I	&KLgr[6fo57=F2Q
ƿ'yxwb]ZxffJ}W+CuVi\gtHhTs/fRfIn1Eί?ƫOjs
r^k/4V5V5,5\rv:kT*Meh5&1 _gy2ӷRL}@
Y3ءڹW|`CMj$zdMۜ1`<#ς>9<x,0'򂅻օŰX×ki!;!uT2VWӻmj[m[n3W}blu'''ێ'''CtUǻX񯒇kYq}Qm2>9)~\hݪ`a:BoLic!Vrodx`kpNSU>gz?wl6AtVp\iyJJgu2h⃌{y͘MyɲMh^RMoѤw?<r~~4+O̗crJH>ach܀B9>OŹxkX&m\s5Y1-d/Ae=){-l߼tCwPo}[K~Ud9A%ϰ'-;0<YtzED)OKu,:Oqw8њYABzCg{zG8!c*}ZDĴK؅WV3.wZd
x17r~?(n_
6;6s>j\!p_s`P; %ݘwKca;h;şy^C.߽`9+"{`K8AyAm6F4\d|{IԚQvOŭUUKk<m^IجG=	joa[ycbb-7BxLn*W/V3{c~]lyCB4sq.YEP/
? MciM+lЇ|+{{:aca"?TN[KBeW.',mOe3IJĿ:d~n,?e}n

x a2հoGk+aɺ@ܕ䁸h~k=1O4J\trjAh`C'ޑZcM#i	(-HE*>T>\1.
I!d8*c+5o0?ke&YkXi@uEg*cM>_VK{(vj/zCYԡ"oL
Mzߗ}$7O]!zEޮ~l
4t.*RK"t1I*#8*sQW!6Z7) >}RP!څՒmt
{mZ-[fQydyl!3[rAI%
} G6-З/,8߻1JWc58HU
ᯮ-qVt3-'\NN:`|B~ҏϵk5;X
>IFZN;o_#;KV屽RLCc<u:(`mDx:<EKMN5\ocJO
=ָQ\rmwvPF}
Aޕ_ųn
H?EԨY_Nݶ+_EUM_o{6$-^ʻ%
|e+r2tH9˨M'!@`݂Fw{pqkqi=yGYTծSUj:M8q>Q#@QjQc!az.-_[R{GI%/pB5ͼ-W4#N29<۳GѪ%s-݂%Ia<s2'	`PL+ri	]AXטM^G{eYO\T<s*	r'7U	,K:m H?q!oҠ*VKQ:},CSnP9JM kv[#0Ury[CFbt$ֶL`M>ɖn?=hF?&0[>urs%APxHsҨRT5fȫA7J"B-l+&utWr XKo&!B5"1.].*
SRn/^AH$u՚ c.IX
?cO#ɀ9}Ol (Mu5*QH-fjSz"H7E:ђUsQ_b=rBk:xЌԺ¿h`"X~D,[_nb{Evo[8X\f|[BYH};j=6Hf<zF蛶*\H%[枰!oGd=xJ2|ʭ>wDdb^|#֍;2fwfAL w
q<0b	򔬊LO<d9_uj!`%¸Zy	>$6o-	pAugl9P8i7N,أO'"
ဘ83A~Tqe"9Nuɳ&I#"u<Xb,̼FkMLvV{>8b
R2U6c+wu=ޙ2mt<3g⼲ϧmk߉]S%Dm ]6s?w5>ݳQ۱5, p94mgUEIؗ>ɍ'{&݁mV-1TF-l(K4+5wjJ{E8:&5I-!_^
mlȊ~h=ـ}Y)vDZZnFƵF%
DcGC,x"bKT[C};!5D4c̪xv TYiO+jʣwUJԏw*6z%f]XG>uhjܨlWd^V+s?(R{}ބ_2K?=Cg &}"8%GNGҽK
r;]#krܢ&0T
-wCc^Fzڱqɑ=@4bqmb}\s(GK+>դ`Fܻa9*?9=*ۋ
P~
(~0(@D&'jH1z38kj_0Өtg5.QЃ
H$K*AYVcOās`vH^SZ*nx>=6
B.ӍŬũil،>?dQt6WM~I^c,\ZLߺhٚv{?e'[}3tkR~	U"qXx|zx"vjLIi Nѧ~Py%tk
'pgaw~jK}Zɞ*'+j_26UMOrEѹ0;}I;ުRADNy?BE!4לs92G
XAD^]4Hؼd2q
")Vx&q+!iwϲ!,g/X\J55w&

Wɲ]V7lU qƶ˚m
&4Ѿ{}RL"dWV2X['kz	}L5cd Ԟ4»_2=T-q*idy$Z~"9%g7TID=UUr#7	5f~G(c?:ִ
d֚
?4ZRbP΁}Ӛ1jSNb%쐲&]HZǥF47\wԶ25/ȔZTSY2׍hkȔb%gOxCɁ}:q0&\loy9:f"Itݞ&ʻvl2Oc8ekݟDێ.`'u(Ǥxyf_Z*SV]U+[jyn;ר3rhDV1zT`l$+0Ƥ0CTmG`.
2PoT\zĉw	9T?T{o$W3#ns;Si"QZg~
.'BS߀G,1W aZ]p|wA|x']`bb61S&}.ko%,4 E4xF]BQjCr=u4^aHg
(WE
BGfֆ&=%6NEt6#VG΋4양!liX?&uTz}DJU2P+C8DӶtL_[|5prhO<C/Nw/+Vo(B\w-ޜ<*'iތvH({G4/+l+[,9-~=$B1:AF'qB'|ZULGͿIWe{YFWp4uX1D%ǣ@JZ%'x]tݫ:Xs"	3؃.ٗfjQ6Bc1mdӦd:W弈W߄g"]}ߞ9pXA:{Jx&	鄻}:S/	ºP{Ɖ&༝lZ/K8 ~1-(, 3::K<ZNH]m͍$7}+;uݨλURjd1YrP˴LKv#:Ȳl5y{g'+xE?l'S	s_<,ժ0LT#^RWh:e'7QlKS"W!qD1
Nu.:d[O Ccܑ<j1T"4e~PlC%Aʰ]n GyAONeYߕgr<Ӷ'OUANs
4b|'N \gQW8hGvוyY g0L `yN𦃊y0[_1$QrO^xn(gÍLHCfxnYgaK߿H-2BwV	MOnW3%_^Rm4]ƬoXF*`Dc>%"7,ʅ
aK%s^8+TZژ<$)n"b\8l_;yM-`$b,XY?e_[Mz!F@v8k%@wvL幺)?l#|9eFknhǾt5764K0yI+o{ 1G#4eZٮG*OҘdTPO2+Qڸe*$K/}}*{/hlxG-#J,W`r7U51X"y'l_먱$OA?梫i m5D!:
͂}lch.0^'h'˴`Y47gk:	`q%D'pHr๓~s$Zu1
d6sAoر1z/
@\Mpe1Ud/-$%@ƈcRAýBSA~S(_M&k yT
NI}2
uW	HZ<d:RsU7KUv]o]{bYl ]XFQ'a>p[H!pRy"JY?@:!_#ff1!?"i=bCkæ1d;xmG<!5je"K/E=?Uk96lc$e<kz/OP.QULas}~hR
WE]ۅD	d޼;ܳҒ.Q+%c[pʠةǷD~ {D)Bgo՘2BdSUj,1u
Ko6d$M>g+ø/~URdaf=ſ3fLhȂI+Z tO(
z*Pphi,b̛nS◥p
9=Gi7j*>k8&[S;:3mZy=m=?v)>9z9e~WWs렔"6ݎU#.,dQ?'41;ąK9,	AxU~2	T^8ͲKt:sCmE"d9\_"c;N+ZVǆ	<2CΤعo.ֳ\:&]EN\?X
_d:qTr3%eh'!?
E9)j cUXm-癭o{r`(	KXOQ^cG&jj=aio+F^7E6菇b׭ϧ-=źǨ3SVM/3N;[QUS(ma3w0$mCtgoٌ ƤǱyՅ7b;Fy?5mO;W'RI<FYz.M1k>Qj_9J5T$Zw~P$Q󛚱xq{CQCM}S ƶҒ_s)P@yٱOmLu{G)uZCLȊS- 曒Ȃu
j[-N=ubZ')z%nCQS'WZsV4m==5eQO&<KwnXN
dKSX
bg<Q7ku5uU]͵EE6otUz~vشOMO@|=뙙e=aTVNhZ#?.	dSGpgN@}&$
uK=>}GoP+R7Mg㱫FJ_5_y_t
E{H|F|ł;*0aɇZ:񴆇cd"'6)/nk=2AЧL
2)pg)h6iU|,pëILMҟ|tw%ސ͞ʍ-|MbRzŻ!ܳ+-CyWBo/O~cR˱$
O_X^m-?dgpiB] nckc ݴ
$_?Xjܜk]{]c7c;;%|R8(s+4n+\oM=uӠcm<蒡uRp^usXm}@+YtRqrȇʼnbɳ)'ﮮ, CjmN
F~C$&c7Q_dd,6fY{s[&D!ؙeJs :e-# 'LrSF&8X_?<&ڸ<}j(],|`m (iBHͻ;ibKm}CC@)e`eS6Z_"hp.>nqWv:&l!r^!żih234v+VV(ܤv7=m|<7i?R!92m[Kl`-^§Д [ .%	R\7g딽snI9B\8CQ3+9&jy!z@f6L 6͇mӃo1Ocjʯm䧌3Uؠm8#.نSBG*cx
t>d	id=	=W%lD2;ǰM?9m]qWCFXU\8SK'SbGH90Hk9vO/#b,2^⇩RpN:w8|pQZ1%))4/p)/c|ai0EhL)2 j5t K]j,+#M0ǏBElLGn"J:s#;|q<BZq~GOyڕ	,94cQxC4/
UAm\Y<kAҬm\ 3(5.]>%ܵN3G0>bI*6T,Ia
<vOuݓW=R_qA#v~Q=Qq*bTmǤ~R1K<O,_;&
|&cqŞ];z=Vބhah/,ߴga_Ķs?|@HB=flڋd*`''iVB-f0`gĨv,Ә0z_?g?ѱ +-֭mo1>~Rcktft'+f@ѨA4jC ϝ#`7%">	uvQYp9`(Vkf&Jq>9
8-`x@jY;?7';>p)/Gp
FxTNs-ڜboX5BuP_E`=kS89,w+N̈́zh*mr]|Qo zGMh~_݈SN2zxz]p')ErW׃<VnZOiFu᪣mPȩ=-F\S:;ɛ* Ye glz}zQy5n.)<ub8 =)iJ>>H|gX]S-ZpO_ZYJY"ዶaŅ]b<	:s}T/$P{jmigNucs.ky2h;noݠ·#c{ꚗ,`8z_4d~E&4c.6	j}Uй7b:kxM9R0xTKF6
CkQ^RT?m-~+yoYڬSgjx&qI(%ovZHJ"sᙳ8@7[h	Xovo[)d!XqXͫ-.B,)_wE`s̻$KrynІb
~F?ʙ.xȨώՎ}i;T%,dci[
5TBn=M2E-fMe;j1N[3s&Zfp!gK[KbuzIu9"df*B{ ).\Eɶ#_Oچ);?ӂS?5,6b?Mqui6G3Si32H/8s7a=}W(òSwєZAU
'!"{fW[
WcTя>,Jxf"EHob;_znw=
x[J:K\s(Obgmڦ@y_)dJ
x^`_
[VF2 &<^YS'V~lRTJǝU|4VJa5V
;al5I29%TzKYgjnq-p;&L`٭59?%Eբ9ѬMΝP&yu>Jk~ҲA~1msP4-AmuB5
:wLuXzPsDyP
߱]i1K^Xb<ix_ĶZDW&l
gٱy&BQ-6s;gf5]U-[#@m}^-țJj`I1\h~z3ݧht(6u{Mt?#檣2sb]wP}¬j?:
o~&rAĞ/V9볊֑ڬ3_S{5tO3b\Mz}d*s/OY^ON9;JM(VZ{|::^_A] *F|PSb#P+/}&ҙ$s"69۟L\zWv9$I fXWP}O*}An>B(pw]<q>=>~*Ri6Oq"T̟{;ر~WCr3Cs禼At^6ɿ~]`ls:u*4LoCC$ZPnh8-&%S>6iٽCuɓSAPV}S?jY
\a14YA lT褐Ub"oiƐSC=r14{ST  8)2GTI,iD)CW,aIvy<RZCZr͂Ʋ<]%@'s8LGVu^<>q"l$k{LPd+xXPi'?(!OneY+Vj*jxuezJ@\'m%;t

0{Ȁ'UX?;<OeL^N$J-y4<|5]y =yZ8Cb:~C4$ُx-aŖAvnFQ(+ymL0)u1nO{MuVomD'sb#v9AWǋ=Wj`=W}DRP
^#C	!qsޏ;J7jSS`6pR\o
@u{ւ>º>NO!`.-^W)`?Mm"	~~}J#]-{)C˶V򽚏^zAθ4~NƊg>2lj`-0w5&C=;jh';"r1EKXvTE
w2IEb	?ڊD^v3's/E8 Xsę0@;ZB>{ sbZk,܁Q뇖?ȼqBj|k
ɓ.F~NX)dj5
!bC{kTAEށ_^E}zo._Yb1HO2ܝTY}t<u-=
#ܒr٨\X4KL5Vp>|)2mb4>sԙ8n"Mo3rQ&>xe+8ϜS.پ3 <oAdoǻƃΠT7OKO"bބFrq\9eR+}l(CKh #lGx!YpySٙ\e0Is1v1$ȕ
m"Ry/`u߱
1̅[BŲ Ra\jb=3{
sSy"ww$>V(T'YqId 8/&8L|>;k,LG7Be0<n/EU^XD:zrHLPͅ#xW*Wϼ]JC\04WhM4%/AupM/M=tCM,rGra֓dQ|R:`peߚ37<.B~Ѵ_cН?ڴCT9}bmW_hDMqBT{I6\&	z,kPώkٸ~3FE
"M!2<z9_-E{ b|'J6Gbg0B<77GBin-6C=ѭ񶌇^kSû	=0]3uh|sPJSgix`'
|2smYh"{u<cGJՁW-EʗIPZƧK /a7Z!*=+"zBư:jQÁ\˄hE/B-RDalRo^9	?u&0~lKm).GtzI#b%COPDϴ=RsShf3gwIxht'򭞇`-Ύȑs:zNtTΟ5z|?:&L&8?_^iȡg,s판|=˅Gd`޴"NxVw\_͕)棥2C]o~Y+'oc{D꫷̑z6̜ev]2J|D߰ׂ4@ùQA1'A.N+C٢5Gr/GzQOzOU_oSX Kl.|S#9]s1xq5wF =p1 [{b͌Yj^1ZGg:=zYXD#9`[Gf
 vy/?qh_DLvv:7ײ0foOo'NuB:RE덒-8l&HgEdُfC\c62ҷ.j<e:/OsZoc	BZ(ulQ&չЗ=:]y4ݘEϪ>|,ch>117D}L!CTRr^!ˎ:T@ q}\,gGlC0C^Q@JW;VҮ"gQ͝1{4'@p"G:wmb3qtA$B\± AL,R5١1ʋN[>Cu+TA~-aFD
KPMx״E9P+^*zO4эۍjY3_l0UB;{s7TQ=
{2Մ/OEԣYHktoiަx:_ڴr[>MAq%I&5fhk%xS|aháW+Tؐ&⭅M;険έg!;}Ri>Oh}g|"O.Gc,jp6C).HQ#1} g7Rv#UӶPDvj;
"V	<F,DmN
ㆍ?CrQ]!¦xJgjdYxu3KĨ2 *07|1qM;!x]0DqQgcqOf~(` vք[KY%yFTV8j}&,L݈q*o.LZpEIcRԡH$NJo|Zطv#1dTFCg"Nx׹x6lUUg6G}rs\d.B|WtP«!}P	}:@NƪI0I͖ "=&O<ryxWȋe5ԸW?ĺ^Tg
Uk
vׯdrK
Eח-/E26pFau ^b](Rf~ ܧK	l˭lj"	2ksap;U+i!u=ֆF$yrv7$ C)(CB^l5<IQ-0kHk(L`L"vZ;[4dӜ_JgA	!-->Շ|brMcxXد=7inȠX$Pؽܻ|#B1"lD[ntc]#h\=}tLSURM0sDM7RP꒐zYCB
4/ȳr`bIvz.t;WBd],LSW]Fԧ}7O<a,yq<,[*ddni;ɖ6鏮!)R޳KF~g/6{QTW6ho,l,Lw'?)!^u׎gs"{#ZzI$-MD6
+._tXm?]:F7^;nVH^ֈI7A.QS_v7/}: !
p$-aޑyYlTz>bxA\j24׋h5	IRj%d#)J:e.ԘOoLñg^+Zq^ĥmQ>r1ҤE%+܍'&UtEZuG3Yۊϻ	ԮǶ`6fںlU.	?03 ?a}Hp2fҨYu(Ofˮ5EqWt\"N5*zUpu47y$y*fgz2x;~vIBRdb,jSwzχ79ya۫:AL{xIYq>SJַVf	,-F-Pdb-[zjNM(jK=8A^Տ(Zc#^xdF, Zivazy
GHwӃ,1u`?
ϽH*?+2C6P8#1mЧr\oٻKn1`7ZJfk EZ:=a^VjE1_St =?'͇z6rB
{C"b8ڛE
<rqn,V֘T>
}\L_-
WIgӪ<=z+VPvξ/OT2dCCA5,_%Qyg) uKCKT=!Bjq7Xk	@EK|G8']e9fFob3E)*qպ%OPXb>gSۧEz_=mIkZ~?R	0u\IO$i6#Bqw^Ff>;rQ09|us@M
"lPQu=laεK2
?
Rz"u}`W)}3S#')#L5+nA!-)SC(UzEt8RqXa
e(r+5<m$@{x9l__{6-F'tc~v,$d!US*Z=gnt_?ۇ?pSq|:3$y?DkCҤ9M츔gc{;:Hya(L2F)|YT;}=jgd%hspǍ$Μ]QTU5\̗K|o:nN5FO<(u1av;}{9,?e`:~?|r	Z?ߺxK*I([e{.fGl!}WP;tr'ئtWc[^	B]
jߢğ_8_~vDO]qjW&^6Vz^p j66baN^Ш#cv7"مTlТ9H4ĝB^3j5ޜ_׉>886xG81V)coɶ11j檳=8o
'̛L@с#Fx/
	 55|Lf1+)2eAZޕ)H^@f#Gw²h
޲>0GyfzZufj}/πت _xmWb({x 3H4Ϫon'{1v6fpMm	KݫȨ7]x-zyM_f{CM7~mD*^Nք_}ɋ|7)~ߦ[QPQr##E؝{R]^j:GnK!7RaB(uB]T=7MNv䔰sX새SP6F}ٻ[NwGlsA;%yzh$Y=p6rڤ b
ci
e'7G6xwq_+A8?YI0dD/Dw2 =]Ǿ8#OxF.LWt8S\?n@3Y'8"h8j[?s7E?07LZ[5G9Gs.
UT&JapA>*(4OudXZ5m˛"QBdNk:αuQU\rg8	WǄM^8>-<UtbQX~f.~kO4':81Ϯg7b5}Y_\2P-;
ȆV^E*ϓ%mh:{"y_ƱtBKzxi9c
0[<G )S2GWeP&m(b0Q.ܟė('Ep<v~(#⿛} sauM<RU	Gh<[B+٩mpR[\)B$${H(khKk:p?yuK59K<lVEcء?ٻsa(
o~WZ|4wҽAu#٧UaGH
gdq[ɱ^og. zGG)_Bן|Aa!&eH#6{\+1lz7> 
O=d9<|ޕ 
\=!Mi;<⑸i︾xAT*y_Νy2Cd/M
#aW@eAx<K;
R]%
:G<BT{d`ocUk<>U{,mSz-ǊnN=DaMP')!ahq0^#[[G{A͝ǋ%U֓gQ+5ҚBQyD>,;^U,P&G}<G	9R'/KTg4IFm-;({|Q<!)!f_|X?0v\Q87=JOѵWJ
`"RpbR`akb]slV5>)N;
Wj1`ɾTn{c%<M1O1 
d*U(YwՊgw1ڶh
,B@cYwXէѕb+N$/:R49DsʱTFWdqLaזmje?l[0Rc#>O>	c:GI7EHxYpk1)ݘLVm7Z'm^BWj
S-Xo-zROg),l5->P/a0@ad/bW}/lHkkP!N9=8fN`I9K!	cԎ촟OfYCC	\^
E5~^B+
k]Rt+֍fhfO2IaS>sWE_ǉ*cv䒳6\!o[K='JX]"{c
"-
,}Oo9twxžͪ5ϋ7c,O A[FŵEiIH %h

ZS{Mq];VlҁH4jEjmh\A6o@[S!mΪ@1fE«˗WC::&bYC7,k۬ikc'fhW#T@i*\FV$ \rES	M*KT҈ER-]__*&
,*&y	Ưb;#Bt}|iJq}YB@"6QF5ݘ/>Vk%&/!-*%z8;()j'ȈTw!E
:o*;jWϥuօcv9] PpHG_
a`46GJ4^gYLNs믛=Of8gF=܂kw+)j/gh.ֶ	dLg[awE`VHgr:~.悈u9@]l޻5 >YqV3w~1#L[23TSn;̧}H}c5x:j	L>kzӦb;Xľ{	05Ӿtzy^a,monLBQ_JZnxh|4ad
54xa
6͎
A4^*hS23m"DfgJ<O*<^(XFͽ w[
;J8-ߋhV>pj	ptE 9t1ՔʬR}dDMbL(a{`XYէ2{`H兖*?	xLN\3u؉<df@7g x>QmFB&;2Pأ~rsoJ ;E1 h;,๏=[iӨMޞ{oV2Lmo;A|ddF'	],3vVcCex{ig?Pؾݫ@>Jۗwbˋ|mZvш)!6spvA+ﶠUv_pCe3GG%-W']PbS;}%ṱȎF5 ns>@iifƥBtc)2
'Hen]an|PI]f/h*ϙ眲6l@WK=*^v>8wuڮ?)ڮV	T6瓰A!Dӻ{!{{MQ3gǎM̼ytdfr,@xI)`,ݚR8]!oiotj]zw-|	Ӻ,7E=Ҟ4	|L'pbv3I
#=-O/y|1Ei/8+phs]LǺ~M
:Ĳ2J<8RṄOϓ<ӚŇS,rw\
`>[nk6WC՛v;wV$A&	$~XL^X (lS5{E|TfEqDQf!d"㹩$XKдxY+I)3F>mŀ9:ޑ|E	Yv#뤙\<f6LW	l!ŬVs,u	ST6ۀ^2˯E*ҽ=OBNuWw.:]HF,nBuZ'G8hF=<YB ǝ~CQ!!f/tMG<2	jÃF^wS\,#B#rMh@>8-o^nfiDV%ʽ!'hْv^LR
MtIURm%@u+f3\#9\yp[-
yj9ƀk+*VLX,$q$ˠ_KY@?yb68Nsv)ihO/'qu.E∣ۖOr|.aA>o
]y@@idLXǏ0:>hd&ziZ4P	T(>dM5e6^y.{ /'ϰ.+Oꑻ}6WrSp&!dqC<..rhmmO#Cl)@ 3tᩔrB!}lՈ۴;/iINEqۙ;Gs.S홝k%VN+knct_iGZ\
Dm~ʥu].jB$1P'ܯx1s2sQT<t|Q߸x4|$i?)A
fZlZ;d;[03h×T湚\!rӮ=eJ4; q<s4G҄cH\:IͰcbY/fťIsBl@(6%36q52N:MlT{zT	٢47BoK{xi-^yȯ}*|<{t^0ϡQIWu`B"ZLfa۔ߐvby7+W+&žm*/Ծpܢ4g<!kMy{u";E.&v;5;d\]ʵ?O _=WnĎ
[eS鈣աSY7U##im9
ZԸؔ݃z0GjR,(eߵ:I85Mڹ4ۇA+Nr
j>YKMĐ(&~ii(zL9gnw9^̿Fe[s<`=+Ȇb	Am9*<o[VF=0s8׶g;,i2#^+3;dћנA7#9OP[~~7kVFQk]ώAUGeOu0𧎝JWӌk9'4}-sd?nؖ";<d/bGt]{Mf-:. }O Jĉr{Ǹ]c?sղvcb-M;sV TݳFC;Tؐ-Ï 6 CZbRhɞsGZڎ\蝳#,)[Ƶu#тy2䅄
xϡSp>BGH%&;}}ta&j5RuyF!,al\Cq[ƦS6ÖXϥSE=v?Sn'@ítgA,UHQ0VDJ~wfo̫3>?z%IXd61uf:<a6spR,;dF~-$>_Mnm}wR_>T
,f&(tr9MGm^A7YlYA/=E麧RҊ9im@0f巰8~ܞtn.NsNNCclq5{\YM>h{|*GC$fڰf.,?WdI^`ƴ7޵|iUTL2ɒMކR$	OHqʖ/M)6}I̙]t_iӚvAI^~`TƏKz)/15C?ob8GJLFZ;]Lg%ex͈:>Xb:V$Yj/uV
}kRQN;*eb^ևftpEE̴1循Kgs/ߎ
 	W+jU^&Xs8]:S0*[ e8M`O☦RLDoJM:$Q6f`ŉGM4Gp.wͧJ`Cv]~sH%c҄+Ѕ-
+>uɴ;G;S/T[N9Qe&VkTj}?eʄF؛CUq4cfC.
s@ҬehVx#x_vډK_bJyamI;n{wvDǻqG~rڤJ:F. -3G퀟zE*]e?R`S	T:jLG(nڹ)Z `䤝͡}E[ǲ0%wC8CA\YIN-gۗ:o5`_[z
,Lƒp%JX@q>׎#TR5M->DrCPnI,5'_9HdGۋl)2pǆ&BD:1Bp}r%vG=U|U_01ZZz&-&ꊐx
1| "
:D	.rhRxǷ%f
1/S;>/<&,}VkӷP1~ƹ.]o߹_Af#ipoP]/]meԎaE?8p[DqE;G~^?NGHepyGBVA2>s-LM(naGk摁jbڊˏ?tF
#Ie!x[Y5{r-IT;H*W"ZVԸ|F~8\lMlwGoyCCb5\#Pۚu!t|@^ q;v`M4K@DR޻e#x?` 	dHDJwJYlGV>Op++r06Wsƌcl˜r7M+
-5xuOy/ :4;~{^4\0^
O>SmE!۽CBwISez|-ӌsFo_`k\)c<,ܘ
QeIi}6>>^)'1ȅ>PO\ӗZh
{m>XRL]qfӷo!dDdy[eO+7x<~yZ =3lȅDR౉[Mnk)F)&!rlY#\w:<쿔}
Op9(^*؄jXA!V;v8}SCCICj9CU
R4}H(gݽ֫u7k1hՕ/=>if*ZϷ0ŀ3HEKK+y_&_.3@K0Pو~B\<_/(gɟqY.j#iHAǇ@yG΢Cܧܨz=.[T˘1vR_ ;I:`28낍&`.p?nqۄ+yFBCj)%i>#߿Jx Ti
a^^A|Aicg"A1te3-Ӊ:޽`Ɲ=c,7qDS%̑5vGC(+W/%xu.Sn-ݐ442N%6⡔3l'Qʜ:g݇-=5h\1
eѿjW(z1֊k%yfNxHk*$@͞3zȐiwiދZl5iQsϽEh_
!t+إ>̾
R}QhC:жzlf1~u')z:.T:txbToma
/鶡CItwOd5Ms֨iCSËM~H)O]+##K{sOՀǅȸmctY]kCTVm{Eگy_6<=9 ZڗJX:s-U|,*LhPoo[fRWD?jN4/~eɲ)%)(>uWcpo'K6
&
ןs-*1<Ȗ`P=[ȡ.FjIU3/d*߳5O* *Y܇# Q>lvsߣ/ {7i(!<LZT7cSBSr*晄^Ŕ]wuڑru6ӳ<$Myzlz]/>u~Gu9l.H]uN%un
$8¯J%u=[WO
b|Lܗ7*.O~}ZeYNhgԻh	v{K
R9M<J,"ֈY>*ӗ?\Lp6J=ҁ$'_ó
O!x8e҉K\\Cb 0ھ`kۥݯ;K4{͏#HwkZ)L[]Пdh0)Rg߸&q:?͋_c<nMwO*~=ONךMc
<2;/5z8
@wnm#.;Җ~D?~̓ڎom4\դɻŀYV
ǛO c?IA䮞&CqFҗ7Ȉvr~Bۯ&eIaL]\l6u&>5q;MK$$=4p4`J{4O{ }?ˊst//"wB?t啂0	("wj_ifHp'm41EP`(.W"׾넓JSoWTπipŇaq̀NT!^6j]so:e˯~_~ˇ~2
.M,,Xg嬯`/1!MӮe[ǈty|wV:60^7b-^9@kZ&̴zĬ96Uu܊57ЈSHNGEBOUCZَuO4=t
LN*e6.4-ӷcodw|[ON88zngW\7Xl r%z2#U6ulZ7FR_\ex2,7ϰ4%<ZWQhvhϬ8}S͛I	aC,ڨ9Q0^pIgSBYҭ})w5n^@an۽/5{?ͼȾ[[v]'bK.y 3cpJo;FBeq\ĬS-ZIٛ`rgM/;;.z׍c`/^..'rlnUM8eS-5
T1o792Qj_
^OMs5 䘈)aX6Gn^ 83sQj|:F)9*B4RIS_5&>*2G~miinmqR!bf4e1p)eWkrOӫZ.G׉ O7E!fa-Ũ<&4c@]e9EPt_>O
.c?pEh(zcåH^gea?ֺ52xTS,Ktq%o$d(x۷`/~O]Kհ:LD>O`Mֿ PCM/] W`H2]]G,@](->etD#:dpdџ),V)?ҋ̇`F
=^tsJd])$CmȬ{;Q::ƀ/)VuMЫ2KiD$:ɦ| sdx})G=̮"ш1+](k۴\Sɏ˛"J4h 2W4Olm^~P4PXJ\OmԀa92i,?'<t_Fl
+
lx^My(aA&'#Is&o!dB]HՑ9|e Nґ{>9'9|tkW:?NtN+nf6Ýi|噹̒SgAc2E^|ȼu*;'٫z ^'l]Ee=g$3jkű{8,O*4\EuNRN}Y?"+lb}zI*$P	<
0G뛎=;ї}1`hZ1-1^w*>g3nЃ?j2w=:i^!f;Ann? $&|48Ҿz4wf$e-R|y}Z|`_#\]YtYv|72g AD8l$i701_v̥5Yy!0I!:R<;1u<ଂ|u>@=7r~0
RuUX.ã(%9e({VѬ3{Xn4U%@a iI~l3_܆ܢE?]:Cݦm_jݫ'e!ySk~\뙨53ˇO.ߺs*Y0twiǼ	kmƲ%FdMcؓf"w3iz. 3[M[?RͶ꜈ǫ~ m%J"+į$0σ
#gĒ"ੈfZX !7q@[;y/Īd[~G;$c$=3On Pv/ONN'[v[yJv45Gz^ 1Z߬]&ra0ۖR'{W&eRG){'#W2-VG8ϫ~Ty}_m
z1^oO2v(vZyI)!9IG6_b??$+OWܸ 	Uhu"Uxxe$H(X[xWoۉ#[>$A|WO>xFCdj;1q>z1),xCcJ{Ua0?ؐJ?(&W^ٞXl!4[yYNPμ
:)36L	)𸏌 :Ƴ_KbS':e|[^ælA:eD@[rGT	Kszf33;B>A̫Įg^?Wvd>p'<d-Hx'.Tl:ncWΡ:O]A01y^h½ŗGuWL
:
H=(S&L!CD~B&yNQ=<BU+|Fv˷4'0`Ip>{r)BCf2;8Ƈ3[X3yfoixxuP%{F#}S9Ű`2"?ۏT!$	 >B)&9b3)/ cNC*Vfq&'E0 ;@F~mb@*}iQv-BF3e%9utrv1͈E=c%9T؏f f\&Ny2kB<#wqZG@M!VR'O/P5BxX*id
,GMjLk]Fܮ`OH`zVJbbeN`ar'4b֧&!s<RmoT؝,#-xR}i%6qS9As	fgU">?S"Y0e.>vb(F'{lk/Rӻt̠wgRŶ0
"o\mJ$r@|(6{U70>D[Æ5 _~YfNbj7hT7*x+`ٜ~p$u4ZL΁;iZzKIethg2h>y/oaWq(a!
E^hpvuVJ8J?Pvi壝ӝ_-X۝k@agJ"iF.ĺr1mG_9vq'߫
&~_/ϝ^rwU:/PBGA;6M NvfѳUn]5 ;.b.93Ƙ^ERgLnȨٔ>ͷMAnU;;
rorE/`bkսΜi%}Ϡ%5)P*gA+j\+މf:uJ9amT[hʦ/??% ڴqY뚀̿r{a(w?R]ڊɓS`^&$V2
hI>Lˠ-ry ;Nޑ,l26cmvfcW\Lٴ_<D6VaZgXWk69RP;6Ƀ($wA;AL|Bo=(#d'v(ne0!XXS9uyYjק]̳uT%rBp
J|J@nк"1Fۛnj{j&mIJ{V>a$s*Zjx7h^~ :k(73/;dTkyeJ/EN^/O
( c@Qܟ	.zwzW2d֩9|̴7^]پ	r];CD8ui.t&?8,ۥCk
Kb%$u!CHAlZ
zHhHoKqd/XakLd\9hTrD÷b@Mza3&4ЛŦ0`Z4Bj$Ot.bK|gޠv@(^>VgxEmd[AM)D-n}vXZG$#~\HHy4Y%af?fŞMɸJT낭~]xFT+ID,=H0}4]|f$=lHH1e#Ԍ,%~man%k	z'ti]W%6y
l|tzvi&/kN=:o"/^2!;
Ԅ4;sz>fQi^}KDk-_+*Dqûɚh:f<=<E8OvĉQOXP.2iDU!,7n6	Nt%xr:"3Jz!M i4m\6Cct{|CAgV'FPjESXNoJvc2s\o.kyCz{	P(ֵ`+2"8EkҭSUooD?{O(9}צͲ5@G뤞"6S2wt3`BIQeDy&DW2Jd%3ԛZ)-ڷ	EF0t!h,ĢuUAy1'~n,5RlQ+[4k2'zU%}OAe!<iq"ĸ$E{-h%i/Ň%s4Ə=o+?5K͸;	(x<gM\R]Eܹtaz Ŷ5\kP5f}<iܰuHW!1E*#l |ݜ83h.oTKu|c!#ɧ\gPōz]5mS*C@ܫ\|G%8'G0qf3Ž]9qbq@fWƻѦ<,-թp.HYW+0,qp5]iWɌ;ZdF^)žtk]Ln)ite6u1_o[H4jǐ/")p<hJFh]]'sMXŕ}W)d!\kF6OHr :_M\}_ս"g*x
/X
ٳ
$oསxK{MϘXQc$brԎzIs߹]4՝I
ZJPT9mnSQ3"6ꏌRBJjz9)..̠y#EV)65歳Xո5-W#M2w7;DK^51UiB|l?s>_^nwbQwa'N'z_=1q7+Ƿm3#W킓beIGcpW[8rY({[E*ڭp"/lШ$qh"5C1:4tCoADp!ǢyMqC::ãNIKUXG4%$P0.^+ۼAvE4ꋁEBABJ4+h["/ɨ<U?߸.moZIHKIjo\:gCKԉ~D	%<g6HR+lfаZ%p|9's
X|摇[$ۊDiT:k+@.n
@jC6rMJ5RQ͆ۀU$!i{/x_.>[%S/_^y$rO]5NԊ9#?ZFա۾QP
P=ǺU5ƊA:N!_7JFèhjLsݵR_!3?޳5s.zVҵX,T#FL3ES ɰ{z-<xO$kh5R2%XGd.vG(8& yi)@|S\ϫ{1lژpg#S,y
Kl_ߏr;6B.DgI*d=r^ewpLh6Ȋʓ

K{>يo}L
D,(W k&e6:̥^Pԏ5EnUA<9-E1Qh2t Ro${F>y;2j
cIPX- QTjL?Unh5\NXB.DĔg!	!}cY!E]'pc_ahOeDh8uhzۜXƬGק$UH;>gQc Rd	LɘG'>KMƍy{9$\SiCޞ;Xuvlc <_N*"-6ӎ߀y.}6<=⻸~:\[t&;I#ЍYA@0
z.KKN-u&B}KJ!:CQ!~x_P

;)YJ6%&<
KA{f7)ddD=e}yUw~N
h%}"I6z<BHFKГcKfG*߀hڎ58񵢂&/s}E?$+fXS5O2񚣍{̓{q*#2Y~-²	4D{]MRQ&bWú꯰juUcZJ,fU
[zI;iJ*sckBz~PL䉜:`Agg7ؘV(rz舿YR#._K!#l?~RIozg࠷_FE

&G3t3A!*g 탵wmy2՞SG7Ν2H؞t{g(CByQ{̃g1w%36=yr{I^9d6i >8Oz^|dx]maٵoaw.nW`Xi?[scEhΥ	(M68x@pUfst) ȞѢUNjO9l/5xTǾ(27Ahڭh55ؙ퇆V[
X0k; rm0U𵇦#%mN`>wNi76&/
Ss%BՂb2d@9ij̫a *GH`s=7Z?-!/uDˇ~13m*T
jIi\4j{/[C\̌Yi'/>NEN<oBܧ>jf0+XGP4YXs#	siޓk[Qo茼$ۛ"5_wXt_ggn3?hU/>$t6[:w:2
SDZ	.a)ӀVXYqzB7RzO_VF%@Ml._Pko QG|0RoZ^ y	ֳ3Ksd*h
]dȊ
k9;[h{~`Nf#ؐp\sޭrmKYJ'hUma+E$+8v['ϐyݨ<
dtO<[F7t4xxnTd6Y=fu";sO.	~nA<̮ہVϒ'.0p󌴟˕0V5UBDT{dNKG6ZY7	#nٓDlrG)&Fgd<_hxa{oݚt)Yk2bl<AZەIsy5C)ESAacR	ux.Socs`LNHxu'p%wŐ
*i<Q }oyjbXݎ7 IןwFjR}I
KͽMhؿ4
g|}ٵ]=_3õ5*;A:f=koi3XA=tm5/GKQ{'YwdII&]HisXR/];sSQ%I,O 8BTa4&H K=Iya*`كvOtp&m..Ȥwmu;W5{_u	 6{႗|M1u^teVv$)E9pWDqOkOK^QMq)Κ&q&w
.J^}3>,H˺ii/D"8j}~W"^1=\C֋.Rx;VN?ӧmJ3_S|PwVzm-pI`Ii5)]{Z "!0sYsL	!T֘nމNȱ*_]׷*s>2ѻޠŝBǝG!4.WM2kxS;x*yH:rfˊIZ#ZqsT
qOD/:}>D	h
u2RYݚo6m;K9߈4m͓k=mdcBs3]v/G|#2k74@`^?좵ݜz0Ug4Y[k_Ra&Hfx\["h^1m]/u}Y38=l܀3)g*kksYX`!w&ٱ4t
x"󷓈Yo)&'u;ž쮆SNv\{Zh-6nlWMcU

m;SUsҬz۲hyt3vM,V!!{v`#WÐ[&X5=.NRvАλMcOQ]b망o/*22hN>ƂK^Vp1o 7Yh
J2*k%X	B wkpwwt6@ {ơя侟fͯYk7דּNR{몪&ƅ㶷ͱj8s2E9[ӿ}gT9v)Jdxl!kQj\ku,g#@u`E.ȑV>GȮb'}EjycQ[b^Aǫ]%ʻIA[&69qI	:2ߚ}%LHÎDqZ-r=ƫml79ƫeŎFb{
xҸ-sXg9TˑiNkU=/uzۖ5y|$T	<۪Jbϟ=6j9!sA=MYu^;:7Pxȓ~rK{MrvAy`?U+j_~w
uMN)<
}d*(s88Sj		K
UcrK0C>Dw[~_hޑ5/`1wwdm|OȒw5hG*rt[{EZ@ci0?8_\.uf2$4=
\H5 ŖJ&X[AZ[_PYIF9DҢt(*[">dy	!X U#-&T0 d}/T4><p*6O̇6B{fim.E`W}wFT+V@>;2{]b^ [?$
]Jh	C{E|T :>ݟOъsӑy_rԸz$DؽFM|?87Pۻ'@b-g*>5.z	J%suV.l+UVX~ƴsUEd@psJSCr
&X1Jy}Е\;y=wpL̇+vwRpWiY#e5oG4*=x$B9e*¸IsxO Z8tVy%qK$.3m@Vb&&p\&r@^V;2ƢDcYR o#kCRHXTUb4Ttzxc"}H/}>}*vP:I_朼h	y U;N;1xN&߳5W^mg\$84$bT9?i]W犏W|M]TUB/H
4wB&VOndX/ЎthwBNnOãLߝ=Zގȇ'A|^S:wVKeIbX2 nx	QhғƋ)87w%+1Lݢ1E]ei{O9=T'=lt]uƳHm9ʀbΝ	$sLk.#L%<D@RI`Ga9aLQ:vr?	zƇߪDo}u#AįIYp^0G+0@`MgİigOgzU=	jVB^VN-m+Y݄)3v;1ݻ)qkbGg]O?!91,{oć2K|%!^OGY`x10Jz/KexIm3]_UpKl`$Y":g(,ub5";hXEBY}u.Zkx*Q<KdLkT
!}:dGo>/dx&:IT,*l7H7!g%[>(ӮZj80YMȚkm	=䟭@ AK3^:l1(+l]"J.߱bgk"Qj)iE}.¯0ڂ8Ւ%0v=7BnU=]:L.[Aq4OSRRZ?&UF\Q}iڈ$?,*=_iEA/ÉjY:ʑAbvgrMQ6Z4@c^07	ޛ_ai.F[M|Xߺ4CJلg|`nl%F%5Ӗِ٪ձSx|mJaI;_	TӠ9!\P6̥QQ?,)\zWxIY< AC}ik ײvf8M:O~L5DE;7Vfil'm`Vz &l6xΔ":ҷOS>L
2-J<&w8ORd$3{An.0|cgE27
VLUt.繣ѥ3?cO8>ͷ&er~Q蟃E/xvYw|典k(fUkY3TF^p[m.2g!1O4U>&O/Lx.f8+zFٲV__+}i
ÇB-}Q^VˡRyK"ˋ#s5GFeܱJ{2iLFzl6_^4n	O?<cWqױ/5Ň	lM+^XD(!fJiZfFxO-	$rzNCbb4bʇw$}Jh¨1FVUݹ@.z^pGJvipo<O~%(zlD
i֧xMltAf:JU`\CtzktY=4'kh2|:Q]cL:"G		 BKFw\Zp5իLlC9-QvDS>ݨ௾=kxj.XiHֶUk7bq=<lOCsEwɬ|n(G^C
ijX
52lyJ;"$wtP]I1\bM&|HeRI8:{K 5D? IsHo{%T%ĿUbT1ߧR=_
(] ,oz>sn<uf|s>q~18.k2׭]Y	{~v7Hd.Cq5.mb:es9l+/`ATeN7뷪9չ!?tF1`m*۲h}jrC4t6܃KD|J|k4aĠ#2E̰qb[V]!HwXQXNLj׏[$`Ϭ,B"I;s޺#͖hOKs6X
8e}:K)w	_DxV{ufsϮ!kǆe9UCLGN$̰h>N#a$WwOMدc>
HG8Ptֽ<gɎiPGB]˹qtðwfٗX"o1P.)EP!r<Ф6\<GT {$1=O-x"PEXUcxh\U"*JI[cz&>glOO`|"XOY`0X{e%V.hui|߱Ǔa㌑I9.m(gZWhjJE; gų3Qda@]<i/8+PL
Ia抃g,}}zwFISV},Շiɯs1Fr>%'87g-;xjxpCn|0#4JyoE=.ϐZv20U	ۉ+FECVnbF1J%sr=$gO"Y#x'dիӭa;'Wݺ+ZtdxQ4(HN9jhdYNDfLtX}Q=a37&)^gG{9S4je<,,
ێmHJvF
j4d
GT+gQpSbܻScgP|LjS\US8C?{hӌ|(Q[CmЄ@' Wausk6<8t+q6ۣTϦS⽣WR\
A^NLV}i*:}UyrC@cc/Wq1Cy{iII
|kEQ[m~PH֕v!ud-y^)tҰu\kׅ&cY)Q('ƽ@k`LcN?DLLy:֥Yʦms]Vߙw^di4'c1.a)eI2-1z}^p#1W1
~9:TXco14dpϞV+?+Mߣz\nۥvN`eImn<=dd2<*2518/.nf(1Rh8`.yTIcA'0,xI8Fe
¢'#z*"3qTsռsh=!&FNJ!0@6-@ɾe1\_Xų&03)$[{uU9(gp/aSl:*BŐ1	7i{l~d7YKrF@r&N)iHLzͧ6v;ɸ|lMNSm
P?3ϧٲ2?%ڸ5!,QI>1.\ߺ9~"BiZ29KX1oS O5V 2Q9N׾3XFq{[[L jƽvmsFx4\U'7R^=ŗ)si+MFB)Xe?YƖ4YdTZ%(ᑨsF~Pov!tq)X⬴މhi}wubцzZJiڙçt%18^_xА`vKfL
rԃ-X1CۡDvXHPzEfK@erYҷ5u;S:h>{(R9T< vœiFPVCEh?L{w=6ë|͍|4 Ex>_;^88V`x
8]ԍ`ÝɄxa[zԼZF~0}m	9kZgPUμvލuo@9Z/&ǚ< dAs:aVo&wKu*x7
Ӕ d\.dp	(FhA
cjHeU)}J	5480YNE/C!]jNdޭ1KZ_sMZ
H*Ǥ8ܛϜԹk0 rwΦ$WzzP5]fcK+UF7TΡ"2qLH`N:\0|8H}`dʠ_bMݥNxlrǵYIJ7:]QkZXTWE[}E6\Mg5Hј?lW(|ө
\[k81urE-gS+6vMϩ]+t/^"8kRZ&=uϾ/
:}Tj8N	aSY:?ݷ@6-CFNl_:4鱉z_SM=Yz-V~	.嶤WV_ԜBc=?%Kϝ@M7ǌż@\^nP.ubNFxyJ TbL@\£I^w1xoMArVJ~JMF0$F\!Lz_Q<ӈds
Dsb?^OT}T:gq%Le)K[V-$2pW]3`.'w?5nw+C>o*vzZ6D!qͱ$k|kG&\Ca1l$R4)a1OtoWe|RʑJQb6UP6W!"EF0t;d|SBDM\|bmw̗.]ŧAΒ$=n j|ug2쫖k ] bjtb`c&r87!(Pࣦ>9zx]'U)U(,E.UvW2Џ/YA<ϒG
nO$Bkn\NL%ăh 
CnS}[A([t;i<hihחU|OLC~Fxd])!nߤlKmv,zR0}}a$Ts T*mj`djeZ_}cBZBnpP3t^%ШiبThmbLKUeg-;'w''5anWN\o'Y`Ƀ!͛;brGג_	rIN[h`}$ 4)A&Z|FxY;%%3f=@*S7Cc\_CF+[l@l{5 _
@I }j<eAGޑ1
L#nbe0p!YÍ,!i
y]، ٚ_X?Q/],/yI!UvOh8~kVE
~uǼso*kʔ	\ըNR/K' lXT(I&:
ׁZ{o!pi\
#;YmKҎA൮//''se"l(Chh.G`yɌc,JqT{aTޣpN
kߴJIAY#	x
?چl2><QF
R+`(!
 )̖m5vD]&AvbϨ)7Ӟ^"p+|x֟҉?|J_b4&k.gX|Ghu>),Oig<fјVca)H(}&6$Ϙ1OWl`άbrM||r0FU%k;})Y.s/+)ct2\7JJ
9ǬKǨ?\Wf_\Jﭝ{ao+u;C7gj}N:G'ͫ[+7MVhWu

tb0Y5gx!x0Z:69z>'&6~AΓ|Z	Zt"UV
|R!:.sSLƌ?Gc΋\-9l=y	+>~ӗ̂QMl#c[OHۧz_tidhqS<V(&EaƳ#+[y{^%	S>pi]/f{]d:Dվy5W632'))QZ1ӎgЦߡT?{aE&dS׍"rel!}J8fl^Yk3$5ޱnt9"+$ݑ|II存<E#@$D#bgL~ƻ8EVBg)I䃼Lu]+׎	NW}+t9W-jtSvq^y
Z1)<O۝ZsaDܦE?g=݊L2L+(ҁcɊöK!iĝ2i8wu
9Dfp-k7Xly~i$oǶ+6R՞\o9)Iv%g֗xTfUX:g^˾Mlm^G?(nR*]M٦ByL"QbJ1蘨Ƶ}}4tUG0ĔE`z8R3XT-7J2:>~"?e'Mxq
cc#Ud(-(#9@&T0ITGdq#M(;6bQql{/ GAߖӔ`8!x|YwwH6Ydv [Nr@$^xnǰE,+R!}Kwcʢ[{/.%.ʁf^"7rQGVIߤ AzRy<x!(j<V>Q2%]QքK/z8zB|&NQ׋U/Ӊr=ؕ3Lxh=9ɷkDbzL u/ |JId]8}%sCN-=I
LIlѤOd"ڙ'+Yih~GD}h??p,YU<c3fxjaovbh]t
?xxҲ~e]LшRgRWCXY+èQjRs-RB|[$0w=$cMuTJ͖wK5x⊢1HGw̉,x7}B𤅈J/jr@U\JhŞu
k]V&4{Ԍ]	F񀞻?=;	)tYq5ϥHH#cq*aQCG>♶b.^^A&VSZi"%L[2)3x"P6Wf?RcIp\l\&ϼڢYw:O>vS(UwJK:tOZrSˇ;F[d׀[SbCpUH!KuSj=7t|uqz)LJpk(oS`h7~pӈ9y{	tw(>=@Mz`w7_yÿT=(ˮdt_}.:.GX)_	<QaefM^ٻu[SFJUfq
o p |Zi95>8\-uSQmd^1Znf] 'Wwgy^m$?g["ԿϵQڵ@Fqϩf~wh.+V٢8wSkӠa+'!i5[
"7fzgo/1:;wV{EVU/m[@<QNfjRDIskjxŞFR:[BPTݓ$CX\$c;\iZiQ}rphK?|Ăv!Z#16TR^	 ;cȅh=!L()HeN@.pBW/zmJ~7}sh}3k[(<_RT;-ׯDwOk:M~]ȸ*
?o	M_MFpHbEIe1^;6X(t0%ƫyt[;RCiӵNF˼ݗ IWÆJ7饏'6H7z3C=u@I-B[?4l&gOev֐MMF+	'[V^-kˀ Ae=xMoQ6g.^y	HS)ULŤlr}I"cXBq~iU5xok
\1
KrZ{X˗6""#?|\1=n!xW|gU[o>OWS Gŀ txw}Us̄#f+YT+d	
ƋrW	Q|Ww)1}CMwîn>]gЎ=K1y+B^F?-K#
D=[PLia\ d40	 tFp~$~pnH!y~u_D%&"T}^Y7:j2[n-|x0L0`kZ9
)ϧozr<=^>)fv%uT<R-\|G8*$g#4pohZ}d`1UgΉq~6n&5
tQdGrdAW;n[B>}$	+5.J:YB'wOz{TJ9d0D!EϢg̜Zlӹ^)7G U(Y>\)B}Dxٽ>=3tL
Bݱ+;ْ\G᤻Fz7yCH?Iք?AC_|cx⊳Akd*2[Sԧ
(6ii?O,(T/0eɂo_7RQ+'	Ws"?o~LvXjȖ:	";R?F#E2:3<M*
 \5?'qMn5r\_O?8`.qG0N֜9:&%OHm3b`VTEu}xF>7WBs@rod=W+;T+T0H>`ƎPsߊ41xsU܋WP*{wز;|Hy:wŻka/yzncl/ݳF?ofpT|yc9w 9#/u)(_@Hl:ҊhaHLױU:GAЄEl
!p*lʯ|L;,@%+4gvvNo\ɞP i׻>ۡ2ՔhOi%arM`A~؁^@RZÍ~㔒TckM1&cOO뢤~ͫL
?bނLZૡ;:<Gu	(l@`z4Msh1C) Ry\O a(D'vWhu~ڍP3xχ-eBЁVŏL+ cqCcQ$ =5D~x:Z:R
\Em.1:
%2YQBɥwFc#-VDK1
lzEΖFtae]q7Q8R5@* ?:%Prss0/wlf2Oczp2o/=x@lM?o&}(rjUF$1D8Yb[Mּ]Ukyπ)>㷞@˷bG`Ty*:Mq~,$%sOݡJWr"U}a4O^V"򯮉e%$Ww	x`|}tYGGL5_f}4$0*hxh/+ǀ=oE(qLd}!]DlZwW
_~TjOch2[Y
@5JYNt͌tK6<5%XѼ=aQKg%x%VdfGj?DյNyOJ=6H]ub>suמZs\55";#dU~C*mPwl&Pq)J [:
ޗNcD% CȻ1ɛydMP$fz+_vڙ{
KxpeBUZ
4ݎv	nu}8}{)O?_(NB\ڇ*Ҝ buZ^"bG[Pgf>r$d%-@7hP8`vwzQVƙ9RCoQ֋Mt\d_FFhWXg`P:Ϭ")R*=eThY:܄?.LIK&ʜJ/;;4ͲHSmgRS&\C|PJ7EUw`^ׅ)*jFuW\wϲ~1=u~rf%6؛7"OSUg)$:F	)QZO'SL
c]:N"yezJ|?pL麫Y銘l r/B$BK`pg81O};/`
I|K@Rk$1S/p~k	ڋZ_ |X6#eѼ5K5m`/@;2%7~͘=ui_ѡH4@W8
Rf0T3B!1{dYxg=x8/Cm0lh<>!+A0::fWoD2"SYlɊvU>+Xv98 5N
-lŋ~߆
9I
\ώ	{ll0X AC+qneo.!!fvjMO-N^ZC&ѝ@vԖ/I;U&÷_-4F:fszxWeO*d;x_z
#KA/$14|CW̓eaKV6[ayYcwBtٜ0B^:!ogVtB%_v	h+uNL7u2X/D4WvR8s	ħ+[N:(=IN;ߩT3	MkQQseGs3a`R`S2r_C'~<_ uzK^Dm#f#M`̀(0 !k^~ Ɨz$bvdTI63s0xv8;bND!X
Kx3qbX¾!QrF	eKޭ?+}>km2;8*,o9/c_wlJꃤ>Y,V,5dU?y6W^xpLSdڳ :C

+8]_ز Ac~HWrNN;XMFPZgⶉ3>!Nʁ/33C
CW]^T/`>W\hUAToD$NEδ&F.e4X7e1󞚠Bϥa@K]TAvн8	a4w,ķ[PEʎ}ad}Ȉspqke9q_c-s_HןA@=|
w^~l.c^fxʾTopҜ}D8|S8Z6o:_D`
}i)Q8L&
=|@|L^D&
}XHMF4KNnizunT%+|(hQO`A;[9!_з91c5:]6U<|;B#H\ӵn	*-o6ϩW=jG9	Mbi|k=#'NJbXOEg-
= /y'3jZtE,a)lY0F,rs9fwl:$<;?bƎ484k"\Ѡd&uH8kfx%ZdBi*Y*K<hܕyVt_Vp	7P+РvYdj/sRh!un{q/v\H^>
 t)zO78I*3>ͽ@G
7ĒDW f	+@LP>.vA)±R`Z"80R1ؾB8!f#>yiu}n#Ң'$i2DDYFRCd*h)j@O-`dvKr"1jg+VEcĿR7$A_713`0ֹURAJ4Z&$7Rm|^,WW#3ڭ-g]0$y7avh@}Ap^/pfL(iУϨFԨH̵kkДǈ!ݎxu 
M3]3k~&ZyFu'U7:݊JX0t^eJ.)iHx5ӹ"˰u2d64JV\ވ@<qdH(IԖ'*߬X7Euqa)ABawl=r˅/'#C03A)%ȴ'uy́3hኀ%sNپgw5;`19'26Defz聾<+M:V }6$%aJZ3r=ϼg,sᖳZXQ9>dɱ&ўFue%4yl,>;?@:Yހ7cQ¹dWM*ƶQxſEbR˸yw[=
	pӭYu줬Ʉ;s\	^kjCH)kgdo
0A-[KirmYZÀZ8[+IdFl[kHmlYpz+[[otZ%u%u(39xF&,OEV_agn s"d|Y}&~gE̞Ab?p`˽WIUjKTr\Qo;rI!5&"1[ᷱjJ[U{:g7
}S[Ӕ:pBt|Џ=w>?y>	>D\>BbF)/=*8^zߤ߿wgq]%݋\bBC~/?hL_{
Kqs?Zyғ,V0HtǿCEp#aUڈ"dpZ-R_n'2Ѳz^D38;eQpR_CzIME5+_.h98~><1fCXӇVER^CeثEMuqDSf4=V﹂dG
 rŚnI3}t_:wHxV|i+g#
'd5Aua̬۳oZq
wRcϛxQ\8Y A3qas;`嚰ac@RJƃ;ozKL)WZ;>j~ei߮T>+2,yNL bWQJNƉTjb*?#dgNU`F*~ZE+f\vU?eִL	Ggґz6)˪T)H
A}~*Ⱦwi6
;Ts~\c
]-&:TZ\M%Vuwݒ{>ʀQ?-vnԠKAU.씞lNK",ް5;'xTʷ\i#lB `lX2j%.JN{@S~yp}tLJn==`<F(ڧ%qU"ݚvEllG~EA)᳌L@ 
,0wadD푒cHi#Ԥؗr_G7bkY0]>&e<a?SC}^ψ9Ak	[Jp^Օb5xS7s~fV;2C|$]THiM+U:b$k&'Ӗ{
kr_{UD+I8z//ECB>D	d9X9@&aPju\$9kuGȱqՠe1!x^ҁs[$ e*N1Q]oxQEAй͘slUZ(⹖JɞA|FWﲰ0:w|/
sٶ5b^L&?CeME~c  /IDATfm9'j<QG^Jb=`>A`p	pS:VhJ$J ͷfڳ/m;6WSB{%1c!,N)%vg7 'K@bGCBZYL![ƌeLpQu-+JQ0vt'$Ss-M˘[bɎ, .C:Q/Pw^ZGzsP>b>Q:Lޞlx1]Ţ`
̈́k>|*>)0[{2Pߙ ߘAA<k"""""r>zK!9[`m ƍeo;=`m$I7a$3g[!s5vV=HIU\5ߛ-	auV=Hэ 4.9ۊɶH7]6rwQ:,))}~]]ki)[,r>chh~Xv&8ARuoi36*CAKB[sphh(/Bqc04*ӆ{4z:NФy:.'8ʎRj+@SBQ .!L|*⮝8cDƧ5V]kyivM׿5/xm8 YOB'IJ2ō$t-k*8FJr4eKXAJJW< b7TcGuѝtB2a\<c䤮q3ntڿPWQ\\O)UgU}}1pӭ݈8}	>Km}%\m<6uk
On<۾ח<_>Q}Z>k"""""r9sO͜[sqXVJy K]0ĈMS N<%EzY²f̊r[av~'0E
adƏKf\ ly,qW8 ؿ)<̓ȚCLQ#%dc0Yj_6
J.]~axЬEp    IENDB``?xmAj0E:.И,]@E) ͸3@zȎYH+oBjvзF`n	YU!?ŵ\nuȠKpV
5\&H_&3Tݿ7T`L6;I/X)KGBMyԾ1a0>tdhF8>Px<eFFa]ǜԊļ"Ԫĉr陡 Ҽx.BĒļ
̂ԢT< :xZD=(+%[Qt\I"!&$1xg<8vK9Sel/T7dr69SOk_v[Uڢߛk_F.qT۾6UmThvW5r^w^ӮRzWuO>S]I)ܚgRT~Ψ:ʪ3A9㕷<!U#2W] wWJ׵js\NuuoҝQmgT
nV{o1
R@1KfҪ4o*RAȢ{li.4q;{#ƫdR[K??77[NmPtӂ(?E=a鎆\Pɲ$ggUy\19G']
A$@ZP=h@+k'4!^_ٺ	<'Ij`*?{AFYgZ.3q]g-hah)<jZWצw
)8bə_$QTv?H1|C?7VQS'DJ;.W;sPFz5@c>H
Ef$R,pq80+ď(V=Ƹ|2H4Q3#+[L~O"w1+7A22!pv%1jx	'h\TnK
#)&'*y1o&;wY8U)KWm{<w!+<[4r)`llIH~ɥwg¶e\g{8K]뎿cm1':CJ#FPG3°@BU
YWpμYubyN"4)hGx(ܱ&$`H8Qx䪚 Nu1FWf-aRJNF>H.>)֨X-ط0H"O
o-Ҋacm\@,BևWʠnAŖ.	f/Lh4aAZ;3!E#d8!R_m1:7)B4j=o_ʅGHZdG'}!\I"ҥTL7TF9[aPECʱ`tejʪ 3	^c0U^_</sM=eml+!t,cþl"TtTX.6}SȁG%z<9C3^:5;u	>tYFHXy]%!+O0s=0s_\̣@*4{qa9TRn@	n-xZcT17) 
/M)?TPyH|wزQڡz֬9<cv؏Nh=Є.aّ>cy"ڣS:'WƴFwDR;hw
ޡ@M@o;ݢ[SEIe5P՗/y-Wh~s`wH
}F]D~|mm4zNJ]c Ndu`f.+VFҕʫ[Jt)MUHS'gcjtd} bZs`X\  @DD*`g[~G64H4\t- +>T̛=@,hKXc4<@1QZ(2.Τ1}g a:L?uyl_Zk
ҰZݩ>氀*.oh}FRm۾
,QjT#A#KɀBT>pdقE
);±J4.F?4p@,CςZ`9أ.IjٟԿHWd=[Oo?ۏXW;nqXl8M@2vx7xʣ\JƘ'^`W4
#4
݅sУ,PMWH`@|"A 
h?1 GQL;Fz[`(EfB1+_0>\d8r8OјrU&yU4K͋G9!շGls!Q޷L0%^ %_A7LtDaexp
|@mFp+z@Hl		CG|C~ЩJHZ+Ͷ"Xmu* yr L96i=Z>NnĐqDi
Ox5$ 1yXJ
Δ&%`g w+aX05N;ƒcBA 2¬G2ҸݧiۓG;\um1*{X'>p&HɕЩ抡 (C4)"X(*|(IjD>;?Ni8ˮXmE+rk{4=' `3<<tB|h5%_~AR9MGw6DoI
fIplb	Ptv
04<BO[2YAgD(P'b[{|i~f8"^7Q	a'%w22tIOV<)!eC;x4?)?pawº'R(D)m9bYx!d//@&?y2P'Gih֣d;_E'J<V4إ"KMQ66^OJ"}4WipƘ5Z
OaAH/@)wK@gNUA^S,g\b1vwipww}MG;T[b%ǥ.-!ިyC0f[wSb$&JpSR, 565*0k*Naǰf	6pʰQgU
M\@	]	HGԒ'GA3p6(zGВ%ı!1`q_Naxoc:/w50_4\{ETwLy^#ɇ
		8Fڴ.Ou>_J!qN1AA%N#u_[Y1sD㿭&YS9GN$Xv5}p:*qAA[|㳐ů+E}iie[bd"뱤:H4ʚ}SX|
ܤnFX5?:ql'шNI(
jhUC;d~86wRCVJq*, |/񵦪N/m;Źd#,F<]HUsrWU;@|C
_|+v6"=#5]aj5
3,ny&088Ǘ{_nGD"xMNJA"\me	~ܽ,nnU>M?ڸSy3s~r(&xNi8b;h}L&XG%yx/LS-uhZ@ ֙+6!Bx3!y%u^ccw	M!SށH;&(

վ!%ZC~qvz66<N_=|M߂i\x[msF_1ǭ=Q>s=b^Zbɦr) $$"`@ܫtHYNU.fzz~q7ybo~*+V*5FuRgPֺR,tRTwRʖmuR
THvRϿ~|_7ϞҌV-B%iR֪^g	ٔuSQ;T݂okʮ6OUR\#"01+@FʘZŵYԕֱJJ/NAp	V`0(օ%,M"nSs_ybI.,
wb|ת]j"lobp[J~ҤN}&Y
d*ؽn}VyVMSeMVnk ]3سzNON0!aCSNtq	>yGTĵ^l޵T]6 E)OP
8rcMީRH+w|6N D P*K'|:ҷ5)^ωDZ]UR툔5_N-bM<ORPn48@re5hO֯JrN;2pׅ^+lچ><!l^6x+]y25!h:/↍fҵgf+Vۢ(&*dHqF?dZ4ni4a&4KܶVEogG:k$D\^xuf9%۷Ƭ`I;P~k0JW"HEw:Hgݤړ`$ΡU^X*Y`Y|&⦬MO1'k)-%]9# C;fqYqk0ꚃSB|ZeN8%BTa&E)D@#<!ΓE .t+,b!;9? q}ʊbxt5QSG	}6ۚ"=oBP5	m`<,Oe(*c.Xf_F׳Wf7g?~n=ROn<ߍe2{$w7Z'ϯx]ޟ]d3sh0֑&%PyH[~ ô>GP8,dNNM<HD1|,O1%"{hbAB(ޞDKV<6L<nSIyб Ebii#O̦z(+:V	S3wao>рgT2T@p[jtls8L8>Fd+hN\V.IRgPu48l
9>vʪxH_^_j&)ڏzqs^$?VR!ׁ''f6hOcMbZZWzy::s2z?8I@ӏ
I)bnKR"m[	M>z"^"' Pf#D(:(8i4"
1!xt2:n@cpqs|qx]TPɞ	>kW?ætĮhȇHLR0VNQKyTϷӛjJ<bHSw\"@΁ՑZVQr#exkcn+ N#|agKz<M#ĄX=v.]A%l'pi{5^3%tTj|v5F>
Ӄ||
~Ú()ucb7*9pHEAR9C(E&^A8??s{-udO(/0_֔U~P]6F#׀q.@3dz(`Ap[Q渵DOkR
 RDi/q]jutsvR<	iWaݧt\޼ilsu(5]V";T[T
>=|m=g91|=} u
{1ߠ>|B\KxCN`~;m;,tx<^q#pBRn;Ep &PC
K.NQ^g̳뙥٤Wf8uulUJEĵTty8oi<tS-ª	~IvT{3wmh{pyr]S}, 6c%vb& ~-
($gp;ěv8Z+u=|EƬ/~KiIb}0TYiTN:m:ᘩZ`&E<mV &JjuKIv#f"
!ZR$DF o<ڣ6 4tv\2MމL3
$d,uwθW)}7qWQԼqCƴX貦nLV4Zqom&eǾW,秸K7ׂT78.egdk]~Mk<qLdSuxV5k
p슆42G;mz59u?j EFs_Yee%J:+,}aݭM6Y<%0$y~N>( F;Ub!ZF	
}Rvsvql(
8c\ȋ捯/#o_nO~RW4m,䔼
B	eފ tR=O0^hy7H_5{R(6 8f=s5̦z:-Kl
 .b?vcRe~b۳ߦP'oISw~U#v
rJ>G 9Wq|&!"ߦnk	)Kfsn<R> v#(PBQCٸBg
VgJ{>޿}nfscrcoR/
yyrϞ9B(
SwXcx!eٟUg؄@ap<2dal+]do͢g~9ual2\#~VJ[h&>5%Fb!v8?( ofѻs͜NS-dĥeCߝqQ9&8L50
Yqy]>\___8[6s$hl鲓NuPDO7i3^Lr=,&'e%%ǅ^7P\O0(9RL|<2aQҗWHY$VoHd]@9x[<Л,}*xgU_,9]~C`m;ǆӶvXڬqDgJHq DJ3<) m\ mNX@6	4q'
.!G3>pC|tL;};q75YZhw\TӸhCms4aZt}x9XY0PrLJ8ZWՉyZNVXO_)>6"I_s|'J2P/E4(}%.IWAsG:~T0dzKZ%V (hh1aPXvS=u?
X]x]
ɛsNl|QJ|v߂qƛ9r'Ao7nRٸ	;ί⸣3#[wޱ>qr"֓t<'r~L&	\ـ@0ГpzE ܚ	zy{l' ~EpEŨlϽ|{w'dKAŠ`
L}JZDp4KϴdWBzMjG:kE6u_(~OTE.2bؚ̚k[O s?Z&+<UOPeEP)K[r͓'SIfLE4{ѤbUf~.sǠFӻ &IWyBQQIQ}cp6V:V~J7+wEe5ލ 
D&gl>}|uyꀎyIt rt Sc>Q!ɤr܊%9Y(ZV7;j06asA1g۹dN)88ݘ^ўH^#sG}W
S4*ˡkZ=8xi ˻i'BP~'U	̤hS4THWBw?!Sn?û,ՇYbd?ӧB.GFKrOc}lT|Tĝ2iB\7qOY4_DV%MZSԩCNY#+9ד IKT$%w|Șb`sɴǞԾcyuc̦TdƠʔUFn[g{녴KCỬK>d.Jѕwbwzh8R&@G NLZ'At@H&Z	SAydR5h;rkLtid57GqHc:svF2SjF-$Qm:Hv<칫}=x-{jFD;RԺ9_9igF=Eɸ#r}:l/Ҽd9	u>fɸ;cRfNMw?՝uޙ|)@Tꀆ#S8#PUΒO+#>y~^:;{ݳν-/ajx9H3~xR4RQծ]\J
T#eVНVb"7._t3%"{5 \O1R%J>+-{iP9S]ݵ&溹9/(8,9YZӍơsCm3*O1b;U@x䐽?ī#`y@=*{_arN"՗R.ks'My{3&bB_IIcWnxYˏGcى8ä<3lFxwl/WvD陮lOwzCnAHA9r	$!@7$$	p3K{?~_';=|`{Jہ=lQ-X؜SISv^pj%A{<yקȳu`
G1Mn~ϥd#FJ/˥dGK]rFd	,y*~|s*kj
vޝŕƼtӺ8\S̥tJӎ5鍅ԙ<X\\l[6+˩'5#T~X|wGv~w;Gb|,=F?t0%G"$y'y<
ހ_Tw~s1Yu
|A
ѷĝ]rõִb<k>g$hz"NEl!B֎i12'6	B?<YcL5<: p'~ 6w|QhUۦ!
Gc{01={>
SՌ:=cQ7hG ̨zo|fÌ)@pFֲ?KN9=q';9bJȻ<a)~b-+qBx;ԳCPGgņ!jPp&)݌@G)V1եnkPκhx%|ú#y$SQg
s!D^7dQ'$ȶFT>qcqVsu:T[
}NMj"23#>6vZI9D!=W<aljSOB1sژ$L0em6דCYWUwQȉBZVɥSOYǔb9U
bĬ3@ܐSs5F̃TPbm3nҽ`!F^4`
w(lZ#ϩ>׎GmmށE},jSD7;+zI܌]!&LV&9sD3Xh}Փ^q+8;מtzw˕L^ao%(zEh,k3t@[4P26ܒM[ٛ<49CTa\W#vT
UʳR0(izz΀#,m1hxKw
g<pa4dlN%;r80y^YT!@0#0#xfG@bSbstЩk"I( ZH:hr`<;X,%3v@#mFid	f.̊ܒO2_)pʻjn[oWN\H=r)WȳwF=B6sJpa& #nFL6B`t'rcJBNT`^Ǎ
p@<ی[-W>F>]؂;'"SA%4z"!J'<3Z)9T
!hYǄq&QPp	Dp|Ȭc,.1!n@ yUƍI@Q6N]%ym&|	I4IOՌM=FPdN}-!Oqb܃ʙ:tsI'K9+`wGQ@`t'EBpx'
0TB	
~E,ԉ1
̼yQ#DS?\DiB0 Er"T8Fat+O200[N	%1{
HnF&貐2E]Hw7z` 0NXXZ-W#уV e!",
RQޥ 	}vqͅVA*KҙJ*uo$C)=i(Pbk4K\^!QB@(ɷ*Y!ȕq/:V~ к2vP93Ld;顩,<tPxpu|Շ'-6BA 8 'uu$՚`up,jXf0Ġzi!x/Dgtmy`Sߒ=#3RI
Uª +$-7ӌH6r6JBy9'BbQ$X|'^ΪR襳p PLN] ;cc͎)`H[9"OT&B
xݪ(ڣʞeb׭3\|&tـʕ{NY	^UKE/wAHEz9=D>z\ɾE!i0(^Vtbp+ULj}_Ʋ3NBwQyc%˓]yxΆ푬APـ6+Uե|P4M8>5+'K2^d<тC(
@n٤.#È:XP[*![԰I4o1=GTt&TXn*ζNī!ch_@򒓭)." PXːŮkți%Eց$JHCFV-Dxy>=YE)VNmTِv!׵m L٨d*eOa?
0㇠c{O=am;d ̔_d8Lۂp3-o462 XƜsi")ͩB&]_X#O[]
8%hU,bR$_;;uN_w bYd4H]]ȡ6C	'pq]HE.¦k佳WI;7666k^~#ExZ'_Ed &2.L>:{b%]suHW[K;/_J>SNǥ󥒙r4	}pCh8`\m nA6BC{a.g6ז8ҕ7MRI'yKFܥj5Lje_&CuH;

idAXeMs`P\-ߠ)`۾Jx/P\ÉA!bV1jܴk/ϯl.1n`K	|﷭
p6HhT6)7jȂ6@
]#fFvݒ|T[L6 շ<Ӎ7+ .,o$jZ:Yj`WZy>
]':| akr_zKS(Mdkf./Nf61R'SG_?~޺h|9A[䃩3;צ=s8~z|o15I~dY`̾5
waĎ//>>8FLI{"&ݟo #5ε8_ڋxޗ'~/}pqdgKsQ#<g'jO0ä 7PS"~O	RLQS)P 	aݔ6᎜͂:JI=xP ĳȳ	!LOCALSTORAGE_IMG_FOLDER"] = "img_]	#L	:&C'T'?*IXJ$xXmO9L~)j{"I9݇+=Nj:^^ovci	yyf<9
wjd2y*8UY**\fR%tË٧a`Ks}m%fE*mۍÓ_*:(aI5vsaXalNv?k0v(%L<_}X:{>H:ߦ#wKHe$\d
Zx5
4-5//%<o@AIj~P
;Dx|4/yJ
$[Rؒ8xdT6T.sZditM~J+1鯋&?A܂%ruFT7=M5%ZCOY1Ƥ]HlܵIN%* B&Z7n+a(t٥+1M@

& crt~-pA(pzK5CsQG	u۔/t1yqx5|Y[U7w9ϤB$f[E,kҨ"y4Nu&=dE)ݐ!Ry%<27DwJyju鳼կj'Bb\8`[6pwRFC &)I{^gϿ@/&[1
ڶAo@ <W(˗5\1ϚDr1LH
U2
̈tJJ|}Cr7\`o\Iܲ<%3'6/] `|1H=a-qO%	F˯Ϧvzpy<ndn͋|fFBüEf0ҳ%d{1Vb+`?m4m4s%S%%[݅ZQ˜,<2	CҦ`xQW?{+P~+5`HMluq5_f8']UFXbek6j#MH 7pu\6>/m=R :&Z'*'e0Nr7lvXžM(~7<Q]ps|eMMvv!,I׍=~fuףH-ZeEU`&b]C 
)F#ERkzפfR#yj:[~T@r*p;1@[vGF lKxi=u{7=n:b$ÆM66dFW~$07#Dڃ6lM6 7ܜ{Pv44u'h
~~﷢|>BREɭ?ΓB_[-;CD4<ɣ Fi"C|jXP6*
9Ե}`I#
"ы`h&xcȚÿGBbzhaeZyDA>w`u!L\YZ7jÉ~2``fB`I
N(dJc}DxX]s8|@%.%$8^o%7=	IX z EQ{9?	4]UJz%٠?GGym8&xs=2UMPL9q~"'gWoĩ)Kme%*m^|B`l{)m6ЃUmWJAポϽ
bno_n:Py.|$Yhpv6|7FR",Pn*%:,"m[9+{SYYRK~(&W^Tv
d
VVRΐ%~h
"~H?4ʈ;'mXvwdף%w%G^y.`k<ϐFNFf	|I\smKUҤ E .vJLm>cVمhPF9o>JZW1(6 fͫ AD
Prf5{"WZ^8U>7t69״ƾsZQmDPAЛSPT	?Y'@Grc#wd}v*7a`Z~w aT} 
[nOcB7$h[7xn+6vq<}1"vؾ26>;kxUVAd	%kAA}	r]47,	kb{VVpj)]9g݁5/%`Ѣ`(U>6uXJ' B&2؝
Eń;+r+E沭4kG}tBC\}DyzwBďkV;u0t'C1hQ)xBD1DHH
WtEt CB)sGy:VV:e0I֠hӹZ[2aIP@gYaHѴBY_mXE [ZFcTK~S۝)l!ՠ;Ӧ`Q$TEw6IW`)Ţp`F*\o.l&Ci
7i_ݹ+A@S֠sK(K$ie{9ubW;apb}ĆLdلt	Xls`$Ιy3\RAmIRi
\wK
Sw4Vq)ɥ0JpAYQ`מ&R?I2Upd!!hrJHw2:<^	ۣ9(r"	4ljznOKK2dTѤq) 1sf)0b\B@i/3Az=_XmA̋drPHVNYcx1.8ǔ[_klleQ\$LR
P6'	ӒlN	i좆1_j;HCoL"/fK`I%/o*.UY0:A%2b(:GCD)z#GQ9 }T.vmeK2@57s<>#<{~~:6En8lkq08aҠ4X/uOS%!#
bBDa
w~>MiǛ[l=׋6kJ;[njD"
(_ɇXOh頀Uh4_uHtKS&Gb,$"`f 3B!!˫89:I xބb-
b
6YCEP
8*o}J[:8HGؠEg8Ix1_K7Ꙙ*ꈡ}7t[_BQ=^As^ͣ&+5n{\ aRt{=~*tʳ(cWQJ'L$#?`
@1xT~Q*yt|ރD[.W #'yUwj-gxʈ{*{]#iST-:uļ+{
VS#>
̤gΕ Nϵ*@vdFE˕zdY
Ğ2.uC{\^JXߣgz+݄msÔBqIj§4xtEίÜ4縈/dד!dY΋ֱÄ]{Wu<ۻ8Gq*bo?kbZw1~BϾ
j׽g[^*!ጧZK9\UUOӄ#u5 ti\u9Uư0W%R-K=7ؒ<pX % N=2`]	ֆo-ꊮvIK< D"=KNUT6>X>&"i=+.)8$LUUjj%(ؿcPsQ)sNpJ{7fS*?nd
]vBQs@vZ%ܰ䡁u
HG@P
.T@:~9s\uáGWDxFiSv_tjx;`6D=$C##C-M..]@TԢJ̪Ē<ЂĒb| ;?7U!73/H!%?X!-"xjq 'Z%zxm;NADs $̀W	C2!N{<͇O+pAʉXcqu{Y~4oXݲer+uYMh	.Xgo4'#,(y.!	qq&{9=jJsCUQǮ=̼`dZrkJN9V/%ƚqlk򥕬(QLm<p`5b^BVﾽ4VZ#bO_cwx340031Q,+d53B*PoCXl!DYRN~z|bJnfH߃^Uᖯ~Ɍ'{TB.F'O7T[O2O&!+LKOIWn9e֛sx?雿YmANizf^1HicCmeU/xS;(?'w&@Z_ћm;Ԯ9[nsI~sʳ,V|&\SbEs;gM(^iC5 [*x e1%Wݞ-h|y݀-x^ <Gƹѧ:,#=JPa#gcdatastore.py 
Sρ :1ߑ'@Z7i="K)xO,-/WUPwrss@,u. (xVao6nSY\9ԉ̘6(
(DwGJi$
ɻwG*MH+I*Mnp%ˀ+yLsk%dP|ۭpJo1l+44Y\Mœ]2),K-`H+0Às*@蒫rї`~,H8xS	]y*4
xۭv+Xd+xtl"#p4.cyDԖ~BpK!YPwg]RH^<a">>6VCB♢yVic"BIɩSF^!5V5܏axcYAڦ]j)J4L(ܿ~ONאC		SE>.n7	dv{;ˇ	oƟ,P9b<?,t>^wéo=41puvś4_cLd.4?0Od6&#
E̋,NYpܧqN&`nn}v29]n/J"e&G:.Wù'060`*$3Rh

¯!w7;~)?ij#.sv"`yv X<Xɞ,t"c>N;GcL5"r]4`tU[
AhW[A9grؘ@.n-[wрEh8%&zÆrc<&W/&	F_a?MRu^ɵ
M mrPAg.{
2h[jU& d	ݽ"Ud!~v	gxhnoQNL
\A]F+s#"~nFjRA
Mk,F),Y{@hvxF'%L_Do8.IgJ-:{lY
DNY70kZ@NѧFpFH9Xb&8s:?< OW3NA0 y	˼$v.Qa5<{ AibC7pU,UcGC!1,8vFVp"uz8ŦvZ]Mn p	ƃ+h)p15X5ٚl^+<t<1Ӓuf0ܥ>0G-*Pd,d 4\RoYa*]s<|erãLHMx+%3Opf xyxVn6}W
 U"d'5'AhhDQ{+},a,aIu!Y.J7+fɪ5DMB~mTYWƲ+Z$HKí%sQzC22	vBfQrleFeҊKa|iQyl'vCsF9){s^^AF6L&S{8uTpjQt*Gyz#ڝJj<oE%r=`Q|U!Ů<ݥT e6ŉ8עǴf^obz0]_? 6!cGl]<ˆ	d?]_n
^~vFm/f|6<	¾Z[FEb[5Ǐ?~C-Obvwp]GZ@	iX-MF#ǃ./~6(p[p<=_	s5PDh!:S>blY8J0Q8( FH'&]8(!N>&$XL8Ҽ}|tGF#"Z)O'>Ch£}.׌s<jdNVAqs{i
 3bWKeDo}qÈ5f4Z4|k	'&o)9
RkDg	UM&y2Imb,űKJ]o!a3pq6#O O@FhҌ N-`VG|^I䥪baÿ3*$D`XS3pt1JYp@{jj7]ܒ	»
:D),SvX~Ws
4#?*ݼ|vpW
*OpF =2
GaP]!m056[uj&m@Ja{te3ۏb1#D7SmOS3T8.zu&'#Dz_#j@^%aV]* O8C00apc` rm&K}pNhaȝ O%x z@t;'0I'98	)x; zHtF̼{98(ix}QJ@.Ԃni-ԍMXjZ-2fL	eʕƕ	&Mtug=˹ox@R[<ä4'6s<~ڝ6iccj!\)+8駛mZ9/RW5FcCAU[n4[rTh%s|T._3}Tpz&H**,M_hB[ZOr\'f!Dn쨐F $ɨ☤8rb	fy"#H,mJ ,χc_W+̤K*'!*t:OD-%$ƫ}˝C.	(đ$)tyx}UQ8~p]$.
njUnP*`Kvz	%RHlx	c,wQe](*UYQSqV9f#*i^7e]YOp1V,
	Vm|d(6;U:*+NԐΕG㬜sfHg?FlҀx|7жŇWp""D5[&Q*n*g}.')gye,F{7|<Oӻd>,>|񰜾O#*#n}}eEŮrxB{u4[Eg
+m
)7a_y	8
#@̗uF*RH i%BञI',H_Sۊ'P!=19 ֆQg@1(dG
t(*k=SE>ֳ\ O9rY	4XCٓh
zICškr{(ʚ5੨5>IX GLhx
oݝQ㠀d}|4;_2hQڣu%_QMcaŎO㢁)f<\+I_w`s"c,*#3
kӲaBD6B;a6kW1-@-E;R,[=gRe Tn#{BC)Ɓg!=*a,{(d*?I={pmaUT
($(x
 b	1Ձ`1c(%:U4|($P@ cgCHnm_1Nܪ^;"|pm7xuRj@b6%tv7LS!
k
2	0(hTi\E77J~V=\]p>w-?ttCuV~*"Xb<y=W)AT<dP,=c{~e
13RpLW(v+xZEȺ,"m,B2{cCS&jĕ,c0>dysc:鄌5)Gls<YeоiȲu:7Is:NۖA%Q_hLm5PĠ!ÉZuDI偏 x	g,#BJX[Typyv )
c^MI׊a2#ebŁyы^tg _Vz]hAX|mimi6;ptNF>y~RKzqk{
 2*x;"|Qx3OpfwZ6 l;x*=7gR R+srR
rJ3JsKS6W1I2r YxVn6}W
 UcF'0'YAh(DjIzw+},s̙3CF״ʺk\UÜ;3RmqF.ހciHn׊WNԇWn
Jt!uj&\Viw6V|*oIb{wwE/]o
l;Ϸ+
LV84m \6leJw`(R:owRz:zozJ ~ߝRW!!cc	fVf5e%T#+ \QzBKmY[Uݰ-{Xή?#D(z[jbzvw'{G9לFy֝|vvN0[.nLM%0J,!'x&TX:zƧ_8b\x`bsx}㄀*tHw\G>`Tmx19\&bu>u6^UFbOɡZSrW2&tVTeJq,Z$)g[myz#`(=}E';4P	R$8E M%v^h%8SJ6na`0`Z;ns&>4EtK1,lƋ#:ăQq3uH}Pa0rqĕ @?aZ!^BpB<30;WWS2g?}V.S|@ˤe|Ņ٘ô/~7n9QN"[ۣh78lKZÍXܑjc7C@tûB͛쩮)&X~ײ?N~[G_D.pG(Jޗ2n9V;:V6i#_t^ۮp(b	3)P,Co[ؼk̰q,NztAϿd΄(kNR+ <{$`A
r}u3u&."U	Wq!6dm-~uK IZx[&2SdBc0 1~4rF搢ǘZ7{r0ne xx340031QpON-JIe8/<tf-
ֿqV!DU+CnJ©|MQYcz"lnr~nA~q^enC8[ZNu=lYUuQjaifQjnj^I^IE	R鮯]*]h\ZJˋ322j>ѳe'z= zQxuM
0=\-RW(b*(.jhN).*UݦI)p_rTUk%ZA-b+4Czfq@!@ۆ8ma0 0YۏykBS9xm=0w
nb#!Kq
(:EldQGRr@aE|(
xspR.͡N3+dKV.<I`(ԉ~a 2hZv#[ȜA{xex8aZ	u]!]w,̳OlŃa~D_U&1FhT[mD&3hG9ՉSA	{#N0YsOgwY\cuo yrB&Q%b0x2SM}׋^iUn!F{W=ߘkgveF%boV< uhv":.	I{z?	cX o>Vg{+K&\ea߷ݒ{! Lat1]:""c}ZIm3iHA%6m򆗴wvGl¬*&q*Ϻb0pjxF˖..?Bx+K-*ϳRP7R*N-*LN-RPH,Q

I9)V
z`Nr~nnb[Z^	!22E%M


JVJ ٴxKI,MOOK*-/N Q:x.-/Nό())PUP0C+"pHQi*WAQ~rjqqj1P$(516O)I2s3
 mCx¿N`y1cD0և{Ň9***(9*q%%eG+y;{ǻAԦe椖'QGpWx׈W`O`ht%(
36W1-`\*!0__
	s62jr MR@x['[`;Opf7 h	x340031Q,+d53B*PoCXl($ėe3KN	:+ڬBRk,+c!J3s3sK~E^gݥvۮAԕ$'䗦0/_<'}˦IR. ;x340031Q,+dnzZ7n=]  xmO
0)BO
=K1?gE%|b~1j`ou|̐qI/Kk 3-#MtI/r:P.`)徟8ө
2L'&X}ռDV05$j5ǭ=F26e5(_JGLcssӱj7)qnx340031Q,+d53B*PoCXl  x340031Q,+dgB֝WkС]m?i :gBxuS=o0+H@ ՀEm2@S'E*䩱}I$;"޻wj52GNt?8Otg	E#y9T\"ʨabxFUEQ4BTFd	YD|W@<hc{X9:>52J1~O镳vVH'e\s̓-anʸ2A4`Yᙪ4hݕ1~n=}Ÿ<GN￥rat=?bkiϨFeƹhIfG]wO1&&V0UTA$+cFt6
Yv>S,~q[mJVh4^k=yV1cg8BN^n\;ut\6>2wiml6"Y6sF?>``x340031Q,+d*-k ejիUBT%$%Toп{:Oy3
:5/=3xlO8߯q.̛U_[2XdoBJ7n 	USPZ\_R;gϻOa?Puřy9`X[Ewzt̴{o#(Ӿ0'Ma]xCU	R`*jxӛ$|hl-L@$5 '$X]C7}bqPJK2!~mS!8j2Snl{JG/'][tlrᖦ,	ix b'100644 __init__.py JW_ȌhxBk`W4'~#gcdatastore.py ;f6lsH~	@ёd507!4R6(nՊ~m{`4y]Fp-)a04$1C,x|yBw+c8E;\5_zcU# ,x|YD!>>3/$>^v4xey<x|y>F !wS"~Gׅ; xmAO0V/@"qa 	44zm6Nߓ+Hg;G4a+qK}R8VΉVĸ'jM҅ӿ ,?]sH4OubR]>.شpԾ$(ydmG6fzc/Z)iܖLeʦfkQ6Q oE('+
y^SW^͢M@UQUa5x,(s Ċ|xg̖V7UQo
%
Թ 3m/x<yC#: |4xkołJ*U'fEݳs	
ӢP
W2/#W3^R8" cwf3L4-#MwRYzul5aw-x$rY|Cӎ5mjd&_V
k$)n.JV6uDw
e
nB͜^f;99YTyב_%YNN
$YV%˲rBX~[leyFфte@*M55pH?ZYm+>A:UIkFR"8I$*&ź?!~h-n5-mI(Y̢-	K>^,>.nO)Ѧ84.tLG*
fBلl;feV&h%K_UX24gaG,e 岤=,|b۶`gFTl٢n>YBttsߴNJ0pd`&F>XUQ vW(t%, 3_r)B(脜jZ3e|Fg1jP;c, zKcԂ	?ɗh7҆˃~Yr0vnph"86>p銲dt@O?,9S@"pȝ肩sߞ
#«ˋχA(1?pդNf+줭ˏ)A-3>Q72p4tW'l7/tD)g@0=Gsy;fFƳkQ3Z}gN}HQT8cAn
8#w)\}B<`=o'Gѩ	ovX[nG^mi~!nee} "~!<=8DA#cUxqX c1F豨peǛ>at[GAw6axz|jY7&/ B& !ZЊ2AL
;EQa	X	:j*RmkfMO'EYtBd]Kz|5IgI`Y/mA3n"wneӞLQYg2_M H#lT#Mey2"<d3&KH7Zn\|3]||*K6Rzn!H0WrA b*<#EC:fS~ JvGE^;
zi"-Z0@(,W庄@$
ŋ%x+ܪiniːF5W`1j6d%+DT$(	6W"x<6Fs/"ehkt iOSk"	?kρ$6thriP?$jhb rw	vZaFq0*pj14jUԐ:'S% jT$?Z<F
Vњ636-d8PO_!+V;4`b#&
1jnݗ!{5M|ha-^\Est/L+\~
QW2Hg,oaV0Z6M6
\zűѐ]MYaXBJ3_{e\NF.󜯝tt9z,Γ'֢Pe<"y)Ah)=*z0Z-
޸3|qre7Lx`༊Y[݋*43amTPϨ7fȢ/Zc@~d]P_Oj!I`/M8~(".qD5 {]` JK(Gq,.../UE0|ҁC	y-F\#$%i
V:_wh##hvzhZv
~3u0.ƍæ߱vo
5!_/Fzll:ZBAxKp6#^|DZaV8V%pAYka5*%E삜\پ譀pGRb,o79N
֫$2.7RԔ"'KTSxe:K{"lqGy:aAωcJ$.ng91CX5y5x;^0Bk3L=HW@}$QD%%P%q!!J2+ў>Ք/+S/p4`j(6P~,ϯVQ},Dwm]a
~/-~7da#/- P9^;"kODA_X(^Rp~QQ?/|'z.x_CHc9n/EuW)f^wvÛҷm[s(;ZSn6i8vǡ-β<[^/iTqfSZ<"Չ/|I=DN=z+v&:wslIrlg	_:<>ƚGĵO:vUpuc0~x1`IMc:#i^[
dde}1dբ+wn*l=	
>Ņ Fgk&$e)l!Z_
m=مc;R`YGgׂnaI:߶PSﵜ|
NAz3:BxZn}KJn
xIޒ9{RCAblEd_LMQ-gL,^B:	wHJ><Ívie$x\VuDgzө7~7}(ncTxTMlU^IغqumHn
m,
b?[]ww-bZJG/7JhSA
W.JzA]A4fy3SIHhj))Kg//ZDD+=]IU[4dQ7vZgz00Dq*c:L65~uBԝiѽϦU,l;k=o_If>	x%"]^=!\ߙig,OSNCp^\,E͖#V!esq{pǹݡhyey.ĽbRi\c8>SSƸ:eM~?j9*=G(mW2Kգ/eK`?
v eflHDR^y2?B'r4Dz9rD
GUUվ^.>s ?gP96LxtP]~^RjrN0xIvzwȬYwkr\eU{ST#5vFh'#*%M8"IWDRaaH`m8GS}`%ƺeq6= q=!M٩M	%r:wPAN^T~Ix3Dd?'q8@
<ҋ?ӽf4elZnKuk?+w8Ȭ 31yҙfw4ޝ
a!FlD2F79sܸ=	|c[ݴ'r#5WgGgpf4iIlnl?$}ک!6H_^yYvfQ7DCmv:5smdn峸9}r}oR2|
Ks5/x;z+u%&cCQλ7d[6I V4x:?mŗf'd$&h[X&&%gdfeWTVo`> 6j齴xXKoFW,C(@eګ u95خҀ^#i.~wfA,<HeěFvݭ[q@1pۚL5 6jj{6V͟P<VYqkcq<36Z:,:m#<ZVm:D갰`nF7p	Pf
#OrgYC''<V'cKF*٨1*~mx҃aq
3(Ik@rtE!*]r)'׭[e烻	J98d
e+[_?ZmPu*MS`H%pGlD^<@YΣz&gAYX7} +#VNl͉yԶZ#ϊnF>hQ]Y/ٱ2a+ʒ]yvAi\]"VXn12.Tg$}Ny KqYŒ[3oi:pdJ!ᒋ|Jl+*Zwwb|ւ
q b+ӖZ\{lmJ ؊Uɽ^pa cʍ͆Q-<6ᴡc#DDi9$"&Nl-t,>rq̵o|H;rBléb*Ǵib /V*?
ujw6MOJh}RC*$hc!夏GK?F(>ʘ$ .GS#lY
vDV)+4Y}
NF%F:e[xNDX8W܏u\SD:`yPF(:8+[DɁ_rZ/
_h+X.J[J'.JJ%2.9%OzQRיҍb
M3 
]6F#M%ĉkeH`/V=Xs؁ͳ7޿|_v󡼾Y_͏5g_ȹD싏߉zU툮M1`!Fޔ|H0c5Oxj!'}3 ؞S.Ep2r뛏WBKDŉ.J]/*D"^a34$07ۅiuӋ6R,h-k0~^;qqڄ75T8	c	ډh:H7I'ڊ37EU8(!Yة{h#VѬFn2g'&FɸP%3<40נy=Ŧ-C:Տ?,pz);NOfKóˮ茯PCY+cb$lBSyECl"JJ7r2"xv gϷlCPFziMEt;lIlZwkZ'-r
A	jd78x
4lg^+]u{ 	5S8x
6Z706Ft9|H4&;~!|u7ؒd3ٗQ<$"iŐh# .ϔ8x@᷹Q=F01pw
q04B?(T}WGBOgޫeɛ>dM}dWx< s'&?uY!uu^ɣ{V%SZkrZEsf14?t~9Tx}SO0LV= -2zzPFvgW=y`&)Io'7xo=
`N뎳lM~_o}[3"<f
i!d	1)ǈrZҘQ B"ŪOXIyRg",VWqJ,>0Q
 R?4YFp,8pf$$jy7Y5CTXUfK
`\LkI^f*qxL?qn%"!ͱC1!a0g"1{~ H#UJϝb9 pǽw[ukWw$LLH?g]	XI:|CyvBru5Hw,0Wz-5^?mXV_== \_k[OG`<е;ʱtyG]^ŹFXjd?eTw懿(xۣ{RMf^̜҂ĔW&caAR/(KTpTpʄ%RK&2)VUq)@UIeA*lL%y%lL<u4>YGx7O G%TM+ PV
4	D2<h2 LYL2x;Q|6N.(<-dvNɽU8g >
+x= /0ih!
	 or self.unN	Z@box1n0Ew$Ch2Q+mN]ϩ|t=+e6^q,>s
]cR{r0229IԽ ̘nE'QWpnޗ~ؙ?\U4vjְ.W/b
i1UUm[xͼ;(?W!-'8;~#F K5 x|y8KNbqD~0q0# b#xXK6W2٫]@aZieWTGΐD-Kt)rCSSxqU"jq3ռc]KnN OUJ::@Uw׶J߿1u"En+8A)*+S)/59v^jɡ`I+$P!& HهV
#kGۉjVrkuW0[[g"1ij:g4+oBX6!tab <et;zxa$d-g*i(%,#vhI޶뇴la}xw5| f/b0o6aZ#U)9P#@bwޚ8OZ `p6O0=|6D`Xv*=@
>&-ζ'V@kz!EZ
giE+ьX%:8J=5Kx>MvqɪZiـ
n7pE}sxEV?R	݌F~tz:gz
Xʣ~9]W8%
gt%my'0 mIBJ-qRJ!
Ϡ@
ۺ@7M !KXPǡK5Y4(dA G*=QoFW2Rc5.f6I~!0Kv&*??N[JₗX$x3 ]!'/E9vg88[c06uF@x]'p,
'd[J.m)`;){]z˖_c<7G
&ִz8av<FiEd}58e vu_}Y][2tӉ`LeLrqD'/7_vt,D78,Nd-$mCϐ=dU:Gߏ;Y2!aIX?4giz%F,u:)Y*5ONmn&`]vx[FEiȢO2"Q3:n[k}?p0򡒛,<KzhTLNۜ9^\3gɆo`A
CSC/.I=
ї5:l,Eo9!0,3ޫXwome)I򡋀:1w`Nj8ADEL  %0OsFo)%!%^/7{@jcf3vތq2>*'>-/东%{#=4*	tR0*\*)~bdg6Æ>-?+ɔ	Nˡ5r^uiiXzF̼{^Q
5طd|@ZR fowg9ڻxVMo8W̪"^F^f7@(8P@RMwHꃶSw
đH̛yoZ¦K@	Znyыm8;1|4ڱ=mo븕LqZԾbѐ-.'R+Kˎ
bZ.-mv`̒\\JZ_^T3=B!#%@mj{zȾ*lDEKeytD'jNL?J+[
>LF?^V3c'aNKC4Z#@)e !
@cZ
5C* ՗r冓`
AG ۠9 )~w
t61.\:%\|N݋Q˟qʴlʝ[?i%d~r0xIpkA-S5]$ܟx%]ZV繗
ވ3`o,rS+j? /~/ؓLeDPh\HC|GamP[U6-xN)
3,64:ju;7oEU/wXYV&x87!J^4:Y"oI3mW*c@$p)
x.#i@?$*Ud%Y,!]>BQS=uX<	ZsIn
{qֻm<7a1͖<~2<O:Yo&.b;2"aV}#$9C
0m+(f;HT36jMz.#j`~pE5N%tmW{>s ?>M<!@MbC/A#x7UO:r%Id>Z8ȉ7{)%ͦ;6y
	N"i#/PGPΔ<g }ƭ#9Ls#E"4 $Tft3C?hXij/4xENMK@E
-	xQ^`	T
9Qo"jiv܃We 'h(|yX<XThVcD-'DϽE/C5*L.
ds7._66%>8N.ݹ^L+҂	ی(`l\p"Aq1E7~M(jv߽5N
(9i{hBb8-uO-9}\r:?ŜE9
BRz?Oh
x;%F+3 D(k\,%E%񙹉%V\
PPZ`s2sR5mb2sbm4b554Ae$
V*JKI-JM/ͬ99UzF0%JJ)ݑSɾYG{k6x[#Ad&NF X*xZKo8W9u"? @^@@"[_cM~IQRMhigzrcȏ)ы"mb[IsΫ,uS
FVFԭ*Ȳf"ts}wYdgkhe
(q4/yb*8-.pʿKaQ"WWlZ6
+aA-3ڡˡICkx!VYd/k!n+.v@AmI'VWpo{%x[$ZD
Ҋ
ü:ڱk]w}[[Ԇcy;h$L8(<KXղR!m2ۊ+a~Z:L)qvp˚C|Qgv39'ǻ.l@IPR4Δ"(u
yVclY:]kނ-vA3zd-}[lAw3'}@M|H\7yCk!AOJZ)*BKm]2WCRT{G#&,n"L5<fGfgic{OMJh>83(#CceywŎBj([)J}Y	'h}uH93f%jƵCK`k%c"`A1_
]eln.Qф}E;4>5C3;:'a/0	5#CarR<=HJ\zh	8bi~N@?kb,9]?ƒU-<!H,bIVW@ˣE(2՛UD'/G/	=nE_^6a0w¦S#fn)>Ӎ 
i4Sef5J`F8ㅣ} :|hLw^ުJ|f^ CXoB<o-z5B(Q>+;v"F(q(r{i4./B	w#zeqw惢j=Y}g
ϱ"fzmC0(m Jp[y0&2
EoP75{x[9MNp8\|QERP*I2&z6zwLkǷU9%#	S.tz-M$>ˏB,kv	=a*PQҦmnд3]=u:v$6nCpunk+2l\|%?Hf []=Vؔ&2s@ά})>mBfRqǽְ<7&u[\Cߵ`Kze{%V?|;B򯯟/1Q%b2!݆%yӡ~#1hʼS{&D`*`>!6!δ^Q7fo*w*>k\]BH/ݸ`t=x/ G>O\

=	x\mo_ ]`8q4iE?Ɖ:IHEV}WR:)r"3lvv^ջT?tGr^\ͅޖݨWtgT堇z6D臶+/Zn۲<ɑl67ZΈVt3jt)ZWz]oj]~2SQ><CC~TCW_ʭj7L,<yI4iQ!d =qU[h~"e֋=|
lq$ZVycL>V`gWWQob&53_Cf۱E2(;*rg;a2Ed	~(Ѻ0uݒQ!;;+svV(UnVa+߫X\1_GʌzյWn
dҎz="M5jۦ.ԏE!VyosԼқr lvv3C&jO4LBs-mH	mQK`(~%l_`)m?aK$q+2XU]0/؍aWd
6vm顤RN+~?a?ꮯ-\WDPnf;zOhR7s>@n	l_N+Sb=GvEʪĳxıӍ#mڇd|՝tuD7
PL
XxqM3dȊNy#XnB
qP631W<URh]Z̟ }	
_uD3ynYz)ͨ7kJjӱHqSnBY	s#h<<חQlQ%ruZؾ9,NX7aEWzXe"Pv=iH (pXτ#ى ."Mw,׺7epdԜddͰNkGw]>ؤp׌
8⨯]e8&Cdn
k>#ftПF4PO]K(ZlځْcԒ@5sOe9r"RĨu=\F18HdLD&~@5D$.q
	i/@G2?$)pP(ѝgqb]3o>0zư	iz?EZMd4
CX"S<pPQyV!-c2WB#< H?(csR%[JN$)*GSL٤1!SgD;Sdgr#'
69rޕꝾ9}v^N$$$¦12ttMbtl>Y_A}?X[>-uQ4#Eʎ[>,;~M'
r,04&rW>(vG}ʝO,Zk*5<I06vbc>;E}^ D>=Rc/ĵ_ (r 
 "vNf̶c*i=}6hDxqx:L˻hQ]8._MuOlѺI+c&0 S@@0DQ"^5b!$6b_ߏ&C,ߘTUO,-?Ҹu@2v3tgoaԧE)'"6>l0xB̉v]52C!Up^^IYP5D=>L N	]t{oϞcUX-i֔fWz%HŎ0{ܳjeJ)f;GS,tj/62³~b(ЂںIDIړN(ҢCWe$)pE9..zDU)&ᶙ☙	:vDuDRSa捑	;fʢ>++"x@Db%+PľEs!E_t)ߦnkjl5y1K b 
ǈoH(ѳ"iaA$˰Ғf]^~;[Hlc,C 4f/,yeI\Wǀrc
27Y#(<ܕ^0Vʤ2VU otЊC*v,/e;!RY" Epg{	SxT=Y1J~c[aD
=OFm>e:Gi>O&R(>r[3b
Ɔ⫺B`5%p"O'Lg2>2%a&Pw,QiQ;6ǡZҚ\yAMa]ɀ1Ggھ+]oePf߬n8_L/茗$Rጆ8m'bnF
΢GTv%Fo#'Wshknrs8
G.X$Ambjr%g.HzG)-.6"+ц
ހYy(vxQ-%uNG~aq7CϽY`pAJ2
Ө :dd)#i/o
{|nq<#FU^eA&JRR%+KJl
JЈ8L}l]":K0J}"=OCaKrU!"jD~|Z*"d669-pXPir:3Pp5+~/U;,6qj3Yi9-[UD7*RL$gʱCba;
L50M*(JLtS,:!*(C! s4/a32+!Kn.%g椏%I4Y 6כu!)0χNR(IxBĩߛξWg%8Big64:Xv8
/7[~Hi>vgR'"xu!Hzo6O{lO',@oq}/aW8Bd3yoqoLf;
i9E-n1Cu>\oWҘIt&2#}!W^!RI{`v1"2Fze7IZX?̅ں쏎Q:Gbfby1͞ޭȻ>V2&f%}a>\j!"
)
<Q&SE0fkdbvqlxi
0kӀ=;! =3axj׫&,F 1ݐ1=a 7\ck fw	5?TU4UsU܈&M1>+Lԟ{ӄ+̏pɒ=p"X#cWM[8fs3dD/e(	[G@1{_4av}ݡŤ{R6_:q˽J-ppP=+w6~ؘ#f	R;3	fnU=x38=ƙ@p=Y
P3jo/`Ns꒒4ͺ1xd)zlxCʟce^jv,A_݁GtLE[Jqz?OBK
EtӨC:3Fw1Їp%ե5t[qV:e;(#=ĦV|1	flP}	/Vwd{iǷyTKv	`
f?/|rO0<.XWL̌|,l8tiith0 DH4y DƄ  <>{M^1;
~&'mcϋSx
bf&Xp>Hd2)j@Xf!.)DAoC_~iՙF=O,Z>͢l '<s+A $"^ꊾ1"]k^>0xuKozKw;\d,vJL'9'c|"B?eΐBk.|B__47DéFV_Y>s
鍯q8
x`1 ̵ɕբ35dq|^Hz@'ٓ8'J()4 ->My4!ͱ	WIq@:-,XZpX",%`O6f;x0[θw>1'ʢ\Aܶkqw5\{?a.83XW~Y YmH>/PM3TqY>GpV{xXKl%"2="+m+-lYرAHZkK.mˎKEHOMQq"hPRKR$@[4uQ
%$E(ʃ;x<͖9exb3Yݰ
C7쭬lUCϰ<e)f2E4_sVRV]3uMs|R7oZMߵ$9g9[@r^I礼8"ʚ&EvP4RdU^,N|Ω\J$49e)-覅»׋
l"6#dx.SVb2MyUӎ# wL5Yqgp+ghtj;Yz$NQfI'_Uƃ(pKN˖짓]Rq^xۓʆ)N,yEV#lqׯ_9g]EHMt]Qik3]6t
eUΛ.=Sk|HKqf!+Y e295n)Ydfkbf(ؠ"	:E=/rmMAqAZV~;or6DU)A:+X>[xbULH
YAKQt(C+k&K[
>~uzr`MVuܼ@oQZbAZKlഋ|Pwh {gme]wCe$M*@#OVN`R 3.e1cǢl̒_FLgyY!(,ْVD\nB
e'dU
lY3n*جRp`>tM݌$T0=Ofp^$E<\hj	,p䤷_Q<%k0:V:;r8j/%	=؝J7_ԖG4R\S2ҥpp>ٲ)7%|gm1R :BX9a3Hա2\|zfQW+vCy 08{rp僭z-΂Bb2
\X贯T`5GQp-:2sQ5d[KB\̮ȶ55_'J_>Y&wݹ:,pBm08+4 <i;FfK0t)W"T*LnvRLl#tᔊZ󋆬*Qhڌ6Њa*##0PjʚBh¤)d6[Y$%c"kh5LҟEj58*5Pjx(C
֓6++}y[m8@몳HR2k
-u]Tr&+HVK
RS*].=FŖ*y"p~M3oJ:j;ug#MWC9*ҜHI 	#RYoU
	HDMsR9k?LuU^X ,E-X*%yA&h5c(ՠagrIteUe:Z6*p=;)fr%K[-bEg`sk_]G]1`mF4\ꅭvZzg0E6ϑ3\/-HD!@xWt^lmbAbXFT6#
&ixk橜
>k
GPZJe#UpqB OP#Ke/Mo࣡7323QSavb]3[Æ4Ta-ɞR]6?^Xii*.HvQ<>x	Da+xa`qw?\:mMqx-.
o	!_тZ!nvA੶Q9@7ʏ>+f*\+
YsFCkQ+X-|K*:! j喃jc?@#[dxb;֡
Ϫm;F_ioN8wjHM|z26ǚr{5:Om~9CG]KLN:tWL3|lZnW7
z`khQfC3?Hh2z| I~)Ip"n&d͂sȹ3C!f!N_LJO`=}̀S1<45b9mCh'9eԾ
teÂ"&T֘A|).v7eS^	>q4f"X} N7SLaf
O`7Ox#Ӵ:":5,<34*I/O
ݤ2"@UDg4	+pӼ6H$ޞ:}IQ+C.A` =
#&
a`p.M5Q -r*pt*@րOǚ!9>TㇷO4:ߝvwyjO}tWpyz{<<
?;}Vtff~3@ cy=%徝OOxݹ7_ IZa4U{Wy>ڷq?<ؽraѻ{x;xqQ
&3ŋN^%ê7Y[Je9)
-'xVKlEI6N&i<HiLk;8[h:MJ(<+;Kq[8P8(XH\@ܸq 8!K!!E3konxg3P'w0ߕc6''rqǱȦ.qc=S=.peP$kK5K]vLIՊ&ݺP5Sյ,%aG1|IgU5TuI*[.G-yi[`Vq$fu+h2Ib0Ny>
e5ˡJڦ5|4?dsB	rz9ysB{PX٧XH_m@h>,7`߫ӊ:0rsx)`QV`3sp4%nIQRbl`c&u4p=FF%\F} §ɝw2Yȸx")3.*>B3R[_sN!ǩ^bg	Ej5Y]iqe&xm>OOˁ,x4`
6"
	G4{*+OB{m\~{;_zAa.wtْ氼W.Y,+>nTlX8-U칵b)\i
(tc3x8sKMcF9SyRY7㎊]L	`ΑJX^&΋eFQf

N"o>Lj*%Lm<q(q4J
.&<tHX0`}a8Y42ϰ[Y1/7#0M(N<sI`/-l?AhX771sÕ
J
yَe3}YmaM5$D,K	7ӉVȢ/0syS`ӦZvwx*p@d2ʱl%-iK.vNwCPR_jevlOw]p>3qicQ.aMq#9搢vygзwb$JzϭDLs.h8!93Dump}~I=]q0L\aŕD:>N)g{Hw;޵ʨ~{(LT>Sog:5ΗJ'Trot RQZF
L\-5הvq;o)TjZM=?7HG U'&2N@wjhTJDQDd2V\SSMvg:V!'H>v8?	t(J1mS
D?p}*tR.L6	2ICצ |9)RnXoQ,xSV%"&2$Ӈq|Áq
:	ٽC|ϖ7ng.c&&#♔x1ᑞpn0:s{SH#O}7z<		lԹ;Ď s[S20'_OjgnLZ, 0,U/..ͩq3
'}]~rQ SZu<2xR?kARleeW\%$rM,N$7vdnfy+"666b,"`g),|>V\2kaacLW0>'RyWo\?Z }Έ`@hThT6wEN0Zv:{-oH`
P
AΤ\2)xV«]]bo0av4'	*Be6IWtSh
[ 
C;wWbU$qZu..wҢlQ|=7ܧ#uIp0$I	dTSt9?7gvYZEv/?/ @MK(m&~>Mriס@=OMzVHܽ#OxcV%$,Q&jOLiHx[^y:AF. Ax31 ̼t9~OZ])ɇc	XIZfNjiAN~b
tjul-&#~~~2 |x340031QHK̩,L.(a
kwr3ջ8B6CʤT{\4P$-ɦZ}Ѥ/PE)ŅPܖ$<K*aiWR@dA}M{3sJΝLI5UZQuiϳITc+j8fTUnjIbIb:[1=t#G|n-PP:0Et-_s̜$73KRs*vkug\r.?Ĝ̼lG398nQԭI=lB0x{iB5+G5g][j;Ol~8{ ǉ
V+x{iȥorw55px{0ٚčb 1xSMo1+F=CHE(J!dcoYk'kf>>A-tVy	UP^WT8 NEd׽줇U);`AjlVi-K`?9GuT_d; +jH;
:)Br-Zʣ$3u`RĲ?Lv(CcU1t#؆
#3&Lbx9|PQWl ҹ{iiHۊX*_<ZgW{<m	.G OuU9OI=0bTnBH5m
gۧum 9ʵ!m"oAb?!'$)^TFWnD VRKFM3Lnnc>txyJy	}`A+=ޡhILxζMZU!3M!9?/-3]=~"o	'q 1
뾰xVmo6_p 5P8.M6 !Ze:tjE8[;`lQ~wLNr5k0$͋	Z)f xU6yG^	= m6; xS0֣8.:˫h&F~d[B|]DL=-*9Hib"Ή^0fpBs$dA[T<UAG2w!vVGobkYW)7158vz$6xؔ'~_O	A}Q,)DH؈?LPS$lNW=2kۍ	$LVP&X!9Y~LdhѰZ-s^D&ӟ\#d@~(/h$Mo1:02؋`SCaO,+ř<u	LiC2*IlO#*IOb=l¶2UۿcɴE\}
<R<C,63+4ͨaTԨ;$k
ThBO9@)a5ZPseAʜ|r>I.>C
rdmb)Z󙅯N.p`]"xXDTqJ٦{P	[{y;sVV
1N(F.9B#
!AwZ`0X@3 k]':4x9Dw8@:jncO%:BX*g"3+ nr9oR3kz7>ROH̏{YkMy$/Wn/Π֗XCIbIבT-:(o#?P	_~%fyxt$$B|ؽ$~5ܘ<M\OQ0RQ[m\R,:(\N/kݰڼFn`!	|~X+l!2}w~P!q=W{lpu³`(kܲo x$1!%7$q.vCAv2zuBr~^Zf{SKhB~Rm&S^|gEL2SlsRJS2˔6w11gMa,Xyz. )N.,(s@@E#%?475DS(51R#4/$3?OC
RIa^ZbJjH^qNfJjh)Hݘ0<F!iԴFjj5!ЇcVHF. Daxx$@b.fV^rN~iJZNbQ^r~~bVb~NfR~nbIcggك )t7xuS]o0}^R
sC2-
ژZL{NpWlJ}{|}qbIYl[o*A!
CQVR9/5k+CUńjS)f>m3ߎؿYK.Mc!*ҠO-͟5y{ڭFfO%<TZJ]МO'{ZHnh?Ӽ8N)k	R95x%p	;,?1܇QЖɰEEY8.Uf+@3+X%A̱;Ͷ;v1dT5Ee-k>8T45nvl#<_s=)3rsTfIZ)fv	//gIƮKִXàݥ"cRuχ\QQ/
kO	{S>fjZWj*}n֬Ϯ<pXthP+)E0|i/i
tx.V?	'#[FIIAff|FF. /*xVmo0_qXIM<&&O0ʉƭU;g'h9_|=);'*n,SzE3fE\Rdw
h70Dj˔
96ΕbFĹ.)[;dfiFle|_܎Mƥb"'>F:*]jSB)Fԕc ˝UJvQ*cl
n!y6p+q(+4Oɷdv vŅ\TVsd)VY@"yJQԛRba}c 6|eY[7x˛A+5mm~2:1ZEG%rKtg'GsoƤa# =. Af$n@&b(d
XKٿ?#E>P'4<\^aQ{NOL>2laS̱Em"%Ee|MSKlͪB:
!{TPj#ez aNBTbmV?/mW Y	EX!3?EB>$ԃz4eX-/gPet`+KfsEz- ƘCb,XQ3Üsw}BPcbGx-:֠?_dߴ^8n[B
#!۽qUgc)xVAbY)]8m2W~H=	cp{`NУc50bs#kƖ]XWo
kX6ۧ5\įs+)_9̀Hx)WHZU!$5/XA=)'?==3o#?#N, v1x+4AxBf- 5yYsE!<b +,x OxfɎ,b6
%E%JI9yJ
EiJ
E9iEJi9i99)zJISV. VK-Wpؼ 6`$skx' A1gF. .xky$,^BfBr~^Zf{xkhj-LRb  unVf Ux{$rZdCXnbQvj>9yf	jUԼlԊĬbZ. moYxVM0WT$RMV{	pm61̛7o&a4k
ELeQłJ#˧lhÙo`D^Z.lRSޠLPvS8*{vٌ>urxEJ˶)+rDu+5S(^@r2dN{dUJ{];ϩff']//yY9_J*z)C+7k:]V#g 66NRmC' 쒇&S3;iޔ@ I:2&iQ)zg|)F o#J'Z˶&I2]ج ىDd@ŮX
$31
azp53	'Am֫Y}_hv5g߷*kZ*߿egM
7~Q`<ڛfL,41O}=_ #mx#᠘
m}R"0ˊ\1ꀕ=8j`Oe4>ηx5o_Q/ܡN.  xC5o5E1/#ю41p<o^ ՏB4E(ˬfЮ}rLp\V⿪3`: Hwќ<op@FXUdG7Oh	]x{#pX@ZU!$5/XA))'?==3o#?HnjI^fq|iqjQ<X"hr.d/F#
9
KJr&2E7`b  f&V$jN6djĸyLvLE8" :4vx;,pD`.lꛃ>0 4SxT]k0}WEe299ck
Mhni7Mo=ܛdE&	hJE\4Gs#H5v$Jwr20RލFHYMuN<Ga0x}XK!1F/TrEk	a)p%%>KFc礮h7Δg:\;,foO؀D&-YSq˭q69"=O]JB5X9Txiʓ-9
%4iv~`ptoh9Khnːr;K[@c9_gETChTj$U2}T\&]	9S&ymb^i0}E}.☥_I}%fM+:,_pV>7xNK]ggc{"ܿ'KܿxVM6ﯘrױXVmeEc %')	%kmi "5yf )e5|UF3Xa%3)cWaiCE̙ƬIPQ	&j+?4MX}E$@#^ܶ9'fp֪kd]Je1"ӈs,4rM>Nxr6Zׂ1ޮՎ;+n<6"okC6jaO[V[|&?Ya70[iJ){JhiGpZnq.{mi׭"2 آ
84
)OhZ
R+ꤽ'ږ\nXFC&+޾SP"_9cXӢ06gI65<aI0%M![4Z4_0,
Xᢂieu0[lcQRY
:'eŮ-z
iLXZ\FBy&(I^cqMb']-0J8?VSSM_$tO3"t^LnwMezJL߲Ϣߌn._lH}-XMs?LGà5HOx*mq%v7P'yt:a'{sd26p-4hg< _ؚ69oprni8VF72VW'Yٗ9:˳."?:ĝōC+tě: XXaLl W']Rh<pz#WރÎmG"{C ks,P*%2ܮߏ4
!I~spTpؐl^_R="{Ld?q[Jx\SΌLp0~
MEgcJ`]4MIڰ}&9ms*(4!?$C|7dnj/NOGzPxB	ox[/rJXZU!$5/XA))'?==3o"P83M!7$Q/88(,ZZ˥ 
&>Vp:b`d^y61M>1yde&ALJ,@'W0)N5Y9erXRfu |[
d~Jf^n~JbdMo̢\_BJbIn	q9J[ԜԒY
&o`YY_4Iv"΅0jٺ셌@d;Nu u*dx;%<KdsnjIj-T*d%甦*'䧧g$e樃 $g+d7ʯ ZQx%rLdm8EE3ss22JrsTk't :x=j0DEh[Zl@69c΂-Z{Wi5PyлJ>Buo^NO{y0vT{ӫ<+hz"C P/&OK[@5|5,4uثx}ue/'Y:S@0BK[5vh[[G<Su|x̻[!QֵYE6/0GfJcx̴iN'wwO?3f C xti9j̒Jډq?xQo0'K)6QhRSGx8*>'y}w⩆L2c(1%Q+5D+#S6*5jZAUg2(j@ԓ @TAڌ>
֒WZqhoɹkr<([g	b
"fr1O_cڴe>Z#Ȏx^0O~}?sO@_%:H2Fɡ- ~3
X;<ۭvJmt#Yrr߿Vji+K5rbޢS⬋oMȒ	jMsJ}#£Pv'ņ;09ڛ^4ыx#{=&atL <,Uix340031QHJ,N(aQk;i{IQSd׾x{ ZlBZQ&f%};t7fc	 ޴ xe1k@
N8.SHv@{qH{һ# kMjS-
,Af^ؠjZj.SJ QYGo5LAwF%^xY]$8IZ\QSc9.Ȧ+g^.#s&kz?}>S	jӶP\nM"15w{
ľfyLz6O,Gв0heYBA;88(W=|귮xZmo_%pSkMZ'84HWԑTp37>;hآ3ϼnjgdshMUݚ,7yUlm^6mb6mth{UYzS^QQ].?pkP׶lCc]?+v_eLIkw"m-~8@x׉PɦWt+K[쫲VF/#ukzֳ,oĉg[weh]m_DinOf	gJn}a[tR;hdeY,A)\ڶc>%`CP_>-
[R˧o<{߽zYnH*FB>9r]#sm4l&mZFL_KcG
YHuM쫦
oerV&=۪_U(hulrTT5xqSF;pKu&o9PImx5IN"]?QuC8gko0xUpJ0J\X#*lf Rn1 ,'xP}&,3\ύ_Lj캪:
T2dX#AXҖgɖU;.5r;(V/d:{g
]LC*G~E~	pʐOuΑD naIsF}art3$-=)'P[*,:gA'HmeuF
]LzaеLiLm|[x%M=ϕg3AJu/o&`Et}0|' WFģ>Vo74ϔ=X;tXW`\8_7ZV@ehm
9ݢbGCyјc͋pknJrS6Rڗ<\^d+rq]%u2ki23(yA'}m?$$
F <Pr8R`c:ݸ8	L%|֜>TY0z	6thW|ߏ4DԡC(}I'a_3HHD4e,k$Hieq||y{RFm*dzy+/&j=*A#CQ7Sٺ:6Nh@f	i矖3cKH?и0!ޠL\|V(TUd#&iolYi"oZKG	ˍ>ӝz@5-עBuM*!'q2=IQZ?7M~9I_(ԘxrЙ[bCnT⚱>{? IX&`.mFty.M$بÜ:hzx7"klfu#"1M'UMzifˏgux*`d]C1ݺ62E3>69BTK^ZY;0"%FΘ&4_ۄ ٘gȎ}_&I|xpQ.0{+!!dCzJ{o:?2xig,.eg0'j|$aoDx!(CS\H{_
!B%z̨]3
(
`Drf1;u3ǉkz؅O5#2j?Ōt߉IxGsY7	Eͭd[ѬnAfp6֪rܠ0(RL3U~-NqB2m5o߿9sCJQ!=fn5:OLGBʥO>3uY1<A^#vy2w!qfAY/*̘DEڳ2bl$B5? )ry:= w]EÒTn }E3,dEG(.
sOZ&Na%b}EΧ:l
u9H~9G1Tø>dum/CQg>0s7nm K>b3X6Gǲ3u8uU#3/A4.vySw˙}j~'AĢ2pd!}:q$	;<M1Y#{Sѿ+Tۀ<Axf/&
x)ߜsȿb:wѻg|Ol>J[$	rۢVBMWs&ۚ٘;)h
vecݩ;1#faC=gLIGM,#""=x0[ Kx:0ѓcp?FiS%]$([7J檮q-%ŏɪɡ]MK;o=满kT3Z|4Y*	q{$Wpk79"uNM?=̖LQ?#,}fYjJI< 
POsg
~Ev&
xEkbA?~HӍ"_ˑ)$<utt[)Ƚ.wxJ5xtv@\̿1Ӣ0O6_YoF;o;?{gtRyvgb(ubͿ8$7$uUXҖV)m
-Bҟ>*J3=deF_6P߂<_&A'-0/x饥/ꉧ;Q3])3=?%,Ug6W<y{Fn}L\DFe%m]xY[lYV4ݤNKIvxRcloi)Q4M)-}q/evAiUBb
ZT"$$O'Z6v̹?߿qWXƭ^	I̢%-%F`ce4yT|V	Y@l4K3Z2USXJ̢/>Sь{
MjePfZI?t
ΦәUV7~KrJYMK}'ʘ8M2h]["v^V͒JMϡ
V]UqkI\
5,TTˍK껅U(Y*?z6* K,(@jGY1%+otj(Yώm'i%9S9m&vVU	6b=ǥn
щzs(/)&Rθ?=EM+fTJ=:|(&p2Z,iyq
u+3Լ/&nKQ^z#
ow
]d Lw}'/T+^T)֑-Ut~խJ,)-[ii,A.>$r5ZoExMsvTF<~qTUB閖0l0R1Tr5ieBA]/`kXe-~US=FU	܌%qdV̤dU]><1O J"'ْ6S.9rFYpqyFY]8$s2|bϲMH^`'g5Lԥ(MQp(
Fӣc*NVwuI,LHϹ`2v"N׏1}~k>sQe]5mwCt㫾[__u$9mV.!\$Jk9&o6
:D8o<!-%_Qɶ	a6Xn@XʘjT3i1Om/A}LDDa}Ggf>4g\p继2_no']֣N;*PQ[S $
>`\PvqJIGT<x8KսMwrnfCc1תEw:wn5Kf05~2qzHGX\dil R£c_q'tz"2a1~#8k3	prG`ZoRO"^wGsgT̂dȢi	#-4@x.4B'~?&fnQ/<s+X#KZdx;8CG=-:8+\`Qie>|7?(qV=xƿSޣ's_xe_D?
Aτ'z`>0Ht]hb
~"u~ѣ|b%`rgq23'5i4#EvÜ^e8D/
ɟ\E4@(U,D8>x%|rp70 t>AZ-#!$l07Na2<,hm3aEbOnJVI9C8b,K1	G Jph[X[.G'`/j)A<ʭ;ۻug&ﻙ|VEs|!vHĔ>~ԑ^[k=ؠuVXRӒΎ.3j ^VtZQ[eLK6^"c `bZ4NR3w,)ɜV-_^OIuLk* ӝ$v&\_6
ZuV<ʘ.\^~,~!)@NAlޜvtsJiYf^Iq7J9$[0	NLJkҥ즪o ɴpӥÉN81;kU^y
l+zPB"bRv*iDхc(C!l@kE*jR3K+R,.,~<-\ơ9Мd" gV;I+^x9gltg!-%@rBO9
"%}+
ŊFr%Jˢ~묌81xCZgi
ʹJB]dugg);O ![Qimx!J^
J3]۬
{gv,REkWgh,WxP<"Sd0RְakjT7:N*U!i!Y(.?loǀ?J	ԃƍhucF1WK˚ڎԃwVZfSy+8CZ) e爴KG' m#(M"ÏK(}]GQN
veod~
MܰcmjSOqjwcb
O;Tr-h5Y~b7n*4	#!-nrf
&h * pyl'ҭXyݗ&Pmj|V&AZɍ^o[A>2P.4jL1SjTR UpQ]x0qT
T5
K6PaO>>PhZKY'([Lv2$P xVko6_qa%2LÒ>hxȇ`iPJRq_CJrZA$׹^Vk2m+u>z$q!$NMᴝXO$3Xڋ-W1ŘX*	G{ww)2 63x2MnY҅1y{r'jr,6{=L$j
FS個DDeB:aSG*dA'tyn/<y!tH`}cLq] 3ka;0	ͷ
 aeF~'
 <\Se1=EХapp_*RÝ'+t-XV(ES'zYZ8$Isɧ$O7~yߟḾ(kL0]Xq/CeGKB1C&n;m1GCd&59M]\\9F1foVkN	
'J*@Mr?ˊy'I;{_3&!=nӜ8v,!<s%Hh3/eb➫X0e1,6qY^Ԣt/i5C $7-1w"cAgZ4
?Ҋ
M#4G_SmΎ5'>'8!Q=4a؉,x%pYR$q/2}̅d9r8XUȫ)$
J.7-7##q/w\?`s.m0RM8Y}2=H=/r싰R֠y3r[c8P>:Y>Z=skפP{^n0{=se5XwBjR3\nM٭Ɖ	*%w1cn@eB0QD) T '	a)?OMr!:7W3zNDSlfJKkt'Z,-=_bo]Hy^BX!5T"xM0 nz5R.8	i2/#PnܛCq	jTcxKkkZ`$>3cb}{^}?}{|1B0}ﷷ뷛uxy֯t1sK Jn-+>م.Lɿe+x"Mx%/&O`e3|]4| ax340031Q,+dTca 3xnƪi	B䔦g9vp]gjڵ$$>9(c>/߽YɃ%ΨY]qfz^bN1H鋜ufW|W=%'(JsK&+mqykB<k!+/L-+TaW&h*ec#QP%U~a b9Ε&CF ЕooxtiBBJe^bn~J^A%Sei"_DKl;-)4d,ԛjǇf&&
%%e bo:/n6ۇU 6-xx;ti?G{咵!j6g&z6udeF ˡ,xE `h@Jv;t|@t8#gcdatastore.py YiT*GqׅhL ǹxuOK0c<4=X[[neYB6vCӤ$)7ٵAKx/b8kQ5N
} #tZ>$!2jm+7(GW@;'QwMf$1MqHƹ#ri)5_MU?T/.r4-|Q:_nuͫcuG[(4 (VhB$ŋ:?,?Mn2zI#P7+# G-l%6xɼerZQ~BZNbqv|N~zfBfnA~QBhqjofEf.'2s%+54 %5M!>>3/$>^85'MG$>3 @z)
09. x.|x[eC<ĻܚJ>>!A.nΎ!~J

n9ũo 
]
xVn0+⠂^ oRؒ@RIۯ/)14Ofw8;]u^a{1LQjD?ٓ)>0$ŠWom;Zݖkscf WUIjIT%{RW{S7$iaOfȪc׊WlK{|t[>M.CKOVpXO\kJm46:+fS-G	MG>5Ө:_߭ft>;sgNvG}tO~L
[2
r,Cv
PGP?oꢚI<M5تb/Zs 9ifdg, 0f cݯF\X+b՘KӬ^Zˬw11h_Y<f o浭chY?Ff,}jY^(q(CHXRo#6!t_9_z!joOi{Mua#_HdN?ՐCPm/s%x1>3G+Dc~r|Q d ѸO/ X_VY'+'mʠE]В_{0ZM#;A&io>Ph'T$&c[acbD8mj0 R$"`|
 (
  #G"C20"(y:('ӛ U
Rx[(?A~s̑}YsSKKJbu2&糊qD+$*N^
Vj&QZ_\84x/k,\nD!{B9';ôC"͡> EzGxSMo0W
@`-u|Xa0TIȒ*[}]HdR=c3鬼mctPjcY].{{u֨ ^DoWZ6]]YoP&bD{r#MAe
fa
0]S,ce4s!crSǪ	0sXE+qZ	iE:>TNu$ێT5Rތ}_8"h28~D;E:iV]4fDc-Zgɐ|z̿Ld[ϧ4bX79zHKoհKp{[(BH/j1ئlro,0ϸ-yyM%@gg;.J=Q(Db"n؄Lj}(
-S+ug,n[HҮi*w?=L4F(*EzAz?:̃Dfs`lxϱc$Flx[űcB>cƒm kx[Ʊcd? <x[oFbAL .8]R4.+q%W;3$E*n],o޳dVUX[fJ	2}DQ/\J-`˜ˏy^VYJ'VUWWJSpLXbc,zm~7`5.^YUV3l^13̊
;?~5{Ǧiř[Zwۦ=5aﳳ$dJAZ/^юXa֠K/w$Y5@<Y	EQ
y,P`p%u*+cȘE5IQ&vG pgVSxI/<R_>@%=؂͛ 4>Cƪ3QY]?9]&/+y0G8<rfj4Ld.@K#AoDPbB%k.5t{|\\q =yo:Pp
yVӐiO膼t|p|*oR<˪a`&=1]
tLehF*S/N'8qάlz
_Q@
 Z͘	#FU i*ɩ{3@])O,cDV{	|=[:~7竰Р	Ǔ6D]	~_M?֟3KYdj-PuDcmqE@E]`2L@8{Fw+/KbI?RǘB4HA
 >n].cF+9"+n&O> /֧Nނ":p梌iŘM_AZ)nws+#i=uF)}$+9S+J!0
uICccX6PRMgBBjk	J$ wb*HZsX\4PN2Y7j5<R4ӲtF,6rFY;|djCj XZ$d{ZsnSˤH)X8+m`ĵ-9
MG$X4oƇMw~yU?1I
z/ xmSAi_6)
\Ox:[DN@1~U9؄&'IgYj`X]4yOWAo.Gۡ	|XH~N4D}w^iɅ>q?86ۈy:2
4B3Ѯ}L4"%wiHIE~f4&HQHtNT"Mm:`Cf̉fy I=gK(~d?V^,RCSeZ

pԜ"p]J'(}̘)nZ	YT>и`U#HOS^h8ĭﶳYl9`(AW<+'.M5 	#:)znzva+m0NVVy? ?A)_ˡn>:ŦAtJY	
,ut'2[t}Pg|}#n*Q*!t},ۦm
ҡh`XԤ^n9 Cp@ֵXpFAԲ&pa<v]mp`L$hj_0tpllh;"7_V綺{
/W"~"@M@fd cdLc?3s MCB i_EWݝGP5칾I#
˼ӆnjleSņ*-(}SCҗ%osŠd"GAAV+u/3
AR&_O9FǲB5=`F'1'WO+.~D`">)F,>R[n?]3:pBg|J-xj8ڃ͛i8dfKx
k
S0N,	j{A*g;ܠ(sW} ݃8l8{
*6`k^l$HkuȞ>9|MwVDG1LLRS\2`ۻgwEb88rGnW&A<rsV@3Scۚ@=5~JVPnYJ%`BPP8/,RLY4/[X{{&m+p\:/$cVZ{y5ዏf
mQd)<WI
 25-<pxɿ~E\^["dc1b^ vpdE3
j5dϻe=xW.N|XnKҦg w~>};xRMO@B]X ݱ5BJX
4vvi2)!YP ͨ/ЛxЫ7xijLdwy·yJHO9MnYh5|mg2&=:if5Ʃo6pL^ŅJ5[+zz[k*Red\n%IFUxl+hB?qFJ
d®QƶOJ&l@eMe]UXxTnX.lL0FߛfHFh S/7cN^c1&u`T-&N$ Y.'+LـgC٪sFf%-9
yw4$uIYNȤWc]yf;DCԸSúNq)հRං"wG`lzUo=obgNBA>שNVfA UûSQ]7`74`T/4\ς`/]²(T2to+,	em<6'<etEH^K uCx}B$J+. -/*QH/7x8ǻD98MbTqlsSZJ2sSJ2KJRK3BrR5
QPKMMQpKԟPTPY ֯ɕX\To^Ϩ < x[}Bĉ67 @xZ[oH~W\U1Zj<lH
46
UCZ!d9F1c3Nʿ3݀6.g;6E}L}A't ÖЁo.\qQ:w4ęEd3T@$]CG咲'.Q2o!i{Md-]A Xp7J&H<`:>'C4H͌fl_|ts}y1ڗǣΘg">\WtybQp	q8|vlGy}?^p0[ OC@$>Eü̒!z.u D1k`+U-Tt2C_d}%lԱC_{lb"p")fc.u;L	|*Cǅ!baUɃb+&I-
9 'O*"rҎXvgk||Bʓnz
oʔ@>Դ6@R:dܼS^{{G2!.lgk+frF't ,祺(2od"
ꡬZʡ4J*B<-h>\B
YZc/{l7`s7lUCY>KpSPRFm&ƝM56fh/RÙx
"3dU Y 5;C,~G8iw{E1$;#Viɮ$yC8<I	2q+=x
t0t8e|}%	-
r`R0j% 0zkΦCڥr7+h[Hς4&*S_\1mBtyO~ ܰ)kwY3'DGJTⲭ>e\D)4YA}ESIq R#aIG 8;,i6,~|fK">*ONgU%eluWT[vTYES}p^<Jߠ&?ɁjI7Ŭ.a|s3M>ߌrA1V~nViG<t襑Mv'		+C̮v@NtJδ|e5ڃϵeo'%Jzu[~DU'ۋ-/_RW(ˉ}A^Jg8C愮}¯ـQ}tɱ5zy+ebLp{Uj;y\`b{vv@o>:Kiy$X,g=&Yѳ׏WY`-}n0e-d<<VV.טsypl@KA]+kuZ$R%E;pVd=28ocuC_k/jBZs;ThVgzURUab+\Go .?y)qI?Tٲ|;)[\;flEik4S PxW[O8~_aEQ21"$RXyόIN_'dE9߹W5HQMI_ۗy+%uFfN$+d4S2Kz{bsK̡iV5^2~w0dT ⟙^]EVN߭t^#%V' k/wi
rrNVւf-Z5k$sc.w޲bNNܛ9sF]%ZotBʜ}aBpe/Fl#
rQO&l6тNvHM<|;0Z-CtfQ%Yti5Bi5ـua:)r v;ۀ]ƇxF|vGA[yF0-+*XZ
qgWXq<'13HGue638x咬Xca]]: s2)Q/hk  MoB"5ptEq cWYp'X]g3+iCM2^KVf>>]L~8
0S:K3*?z>6LhbONbaOCޟ~=>>r]fgGNQdEC\% TW0t+>jdek&1}Tu43NvsV(cjrl x"^w^MB}gqCi~K9މB-zީmdt@Y
큓G$@7s$GTW*р$ 'b{D@׺\,طL4<b:Uxo{Cx2m
x_ȅL`OAD9Oh^ޛG	=bd4OWю/+!"h8%/bQnF/j`Of}SɖъV
4|zUD+N4Lv4<<FbX⟠gLjnY3(8[aGKK[2]ٛdqHQ_8@`-I|r[Avtރރ%JS,TEUrjo `l\V)+	բzIy؍ȘgL=2db%0e"ROoHƁκ稧Jޠ)k}=PS^_weEO}{y_}wx<Myc/7[0	  HxxUoV)n7ZmɭdD;TnݨR0UUpcտ2Q!qb[ݤ]Ǥ]Ƒ#C78M@g;v $|]-JXj5j&Aa[EdWdlScc9Ŗ῿!.el싖c\	,Ӑӽh٫	q ޑS]˖}juEu}8FGq)[. SIT!XouoE%뒮]L[Kp"xƥc,۰&K:wK-PdhcؚN ϳpmԂܡ@s
TPI"6UBbO"߳ٙ/)yE9{0a>s]9ul[T:. a0?+R|2&6[)nexvR37 y8^z)r̓AKЧ*P75>z$|W8^7-ܪ؛G1[m$E%NIc̺	
7l:n-D^Y^Q~9Jx5
SI4:<RMMH(\eLrD`UCr_%ϙD#ٶhkՄ]ƻ=نnٕvm(p5wt]xI齎Ҩ'G3PUL{h~W8/~/X0;.+/?_PcQVS_#d }х"%lZtՖth21L9j#ے:ˀ@6SGIb	
U]{17ԛSDt`­G.Wn3ןrO"cJt~8"x;8qC 䙲
D''Lԟ^}rdG~iyM.$Z\^Z:ydIU
OGv+~Q@6dqY8U@	ή/E 4f*xŸqOs p(,)I-.+,L)*MQP
/.I/J-V )d$+)*&)d)%e+8{)iN)1,d~ͿUx%psx[xq_lpnN nek"xq>^Ɍq+*x;:lV1 vxr8_+jW$N'd];;I 0C
T}ʶ>H<}Pk<R</"QDO"gi-Ys)XNy4iDgB4 
4IX\ Hxl[)Hev/R=XTdp/&s&	,O2EI)|y-H盓
69{>dLKŤ_!mt	^R	Gd>W2/idzm0>99K\J.oZW'o"E>4D"b!xW? IK%>^x͌ & D`޿8nk{ӐMI)+Y4M, S"~nm{x[@c!%Uswc"op@=A)Wx0<%`!IA㊉%DWg_7, MѦQyXfM	SiX7`+lK>.Z핚ִUS}3@S>g^?	?:{o>
+V]p5sZ_eו/^?5<_fL&vfk?-xXBI젨ulqhP~Jh)uX^/x3V ޵}AD\jQ*@^ioڂO-$N?Rti;zߺ6v6NC֭	ݚdyuB'l\=-$zg΢H ms򂌆EkDQ:kVW,X
\U|..I'oe'ݨ gN79JǟW&!&l!
T)vӌ?r)b{IA]ˆilWKJ#B$)H?,OÒ7RN8\Mh,`̓zҟQ7NC#L%d=nJ
 hqaejl4<#.l7dP#7HM݈pl96l*J;$TϰKwHhơN0q/&
PJn@@B8f6uɂi%3?^s5/w:0(  sF!3rCIZkY&e=v+ѽ,YX9#d
[OZw`fYm ڋZF:25+Ck[tsBcm`'ڊ
_(B+d-D[kbDԨ [I8f,5;AE$(,]|Q|K;ipLцb$$:o~kuaV8i /<3Zu)3UWFKUG-^B^6l] r+RBCǘBo~A"W4	d*m^mc$
qkc!zR8嚂tGqJ߁ߑʆǌ_12?ˆ.Z1݄o]:uѹgډbK	h-8wӛF:{ih>kJyn@YVU78{-R,X¼X,yܱb>(
!iMyT-/bkQ
mOF0ئr|pbC1uW;9|f:1 J]}N[ꤟ,Y"Eܖ"M]2.ԯAB'Ks

ZgssLNzN =*kXP21%P:Qtqn1&WW`'4V-ek9-R0O$ MKa+alٸ/&Â}X*.2EtoYUb9e,rw~# ݚrUkӵ#_\^קzDϖrW.ج#:0JU

..|N]M۔;&T:Q\4'GIؗs\^i{E2&:^Bu
I'pDGNG
nbj=nj|Kx1[V?jZx-gBl gWЬԚ
%CRmܘ!1y2<}(k+58KLf@hWr}_B	EC5e(16Ƨ:8'~A,KV$˂@*O]cH+NKms ~ܢ#,)֖k/ۦT9]i8HN*EHFY˚Tx+x
C&PoMn!FovSݻpN?=8{Ťػ&13vcBcǗ>#Ei1<}Y۟֓(&z5{suՁn۫stqڢpWwPt-@PX/cixklydۄ^}6vG/~HN`H4$Sʣ41ks͉&}H{;jSwW"W?BwYsa
c&<|X|np3x漥oZޙu^ipsLq)rowE>j=+*md'I#8ifg@[u=[P6úzNzVh0+]g3;[[A1BTxOA.%-@bnӈ1`Hnvö	 U^x2L<^$DR	f~gasrAzøFC+JQJR yxȥ$9ِZ"TV,.p~$66%nOݘL\A,Q1WX#yaU^"ZB`)RDم$l^ꄰYhÈn
/̣, 46kQ>X1PN":퐼IW`9c+"puiSBgi#UUQjbcE{c\8XH{<7,Mjox#Ȏ_rq0Źm m+hEl-NXj}Jv64OǮO2OϡQZͰyVC=vG^?zAok`CWbC1L5{be1
0bsN
7 ogŪ7d`6lp"|v؈h=6<D3<_3+Oj4C5؝Hyw'>^<ҟ/5\vt,lA*7?pSMUDs"AE7Ȥu4]2'\Y8+*ᙱsjR` Sg[\^ݟ,(J?G2Krr}FbH,[䇸$
	Xs%x`&$ sF9Eixq3sf^f I=xuOo0|z(!%z	xl/I`ތD.z*յL{RAI&P*}UR@W?{R\T>~AN*rP!]2dn9|VPZ]+CaGRxPJYvh=.X3zq$a!E5XI-k3i.aG
j'.0_[<(
Yofymnx='ퟤύdaI<@tunru.&\6(D11LA;db)<3<A:y(A	x|\3Kfێ[t<gXx¾}B+F:
ZSK	hEfXe- d&;:cuթKa640 k64*k52"kl5rƦ,khfPhcsXe|llap*sL'2  pMM7x340031QK,L/JeI*0q[SϘNz/CҜb՞Y<iI+`J2*ssV+^%miˮWY*tvve;9,/xFA:ye1x/:z1A:0<YW~#]P~gyNŉʟg9ԜJ-,,JM+)+(a\| d[-W~on R=6OnuMp6"Z[p9KhK\Vak}HI,ΎOOOKg)5K~߽/VBUũ%z>Q'pV]\TJR[/feHn_ x˼YDA/=$3=/(azɆ<6emڵPY<j^fչ7J R|T$f'~KsDȶ,BS+srR"\]@>wٳnr HgQ:ÞYaU"忭ԧ'_U85R+l MLCx˼y4N0ݑ} @Ļx+NOLIMKNLHK+J,.rI,ΎwOOKKMOK @xn1y
8$hQgM!"ڷT?Gpb]>RF.ϋ'@LFF#)ÔH/1b.w
RBe=()QKh?/7+ˡ7Ď/Hػ() ~D; elX1pOު@,+/̝=Y,Y[!)&Jʟ*Ɖ*`x̼y"Dݼ9y%zzfmd 
1x[ļyO1lĜJ[[#=É?W jx{Cw0n~Ǩ XxsI,r!nPO~zfPY;'&gr8 \E)y\EU\ 7dmKxʑZ  x͞WPY[SV	 J9xK |]9 R$Mi9}4ˇH!=6-U`q8}) 	ϐ5Z>ȱ?$[x[´i ߢ%ngf5-tv x340031QHOOM,/+Kgp={@VfU&S.n0DRZ
V}7Ak)֍VL/E x̻wT_."TT;(=*RC4{	] 4$ %n}gq{Ƹ69TW|L 1@IN6]lI뎻N0[88?b	/>(qpn?wzK,qprou}̐Ό3+ċ);Z6V(CV>>K˂	}"sE;[r6*#8ʏh	½NmOJ_i'*낥m{JKɁ788LbM"1|$ǅ	7XcDf2'ݶ1˄Z@fΦ0a1؉ډ'{y88.-2iq_:E%K	7]ȩ,ٜSClyx88[K]M7'5Z}*oN@?zaz#dt.4Mg&hġ``C.]?΋yNe0+rlvFtKXE+LTf9,W?4Dmy3|]3|ռAl
ٔMּ!.?Ef3$D=wI0B@wpr~|6ΉRKm]ů.?YCj.N7f sӞN{j7:;٦,n)7-R	ēn=<i=0Eey%KFKW3RRf	kU~ ypY7w o/d.(4h"f9L?Z)K0I]-/&<0
,w|z/_" r"-RhH.oFt3y~̌yÕ_[#-L:UF=ňΠ%D6/;0W5} '`(OV*ʬk>@j;1HuQR<ݟPDkze
 '
9k"s$qw^Un$se /3J9WdJ8v}{1*>پs&]_
ۄWC<j@ÝӲU
p~F>v'eyN<GǛ>.KApgPC/VK]*@/W+%aV^FLM~3J'CdyyY^2C%G[OCK wSMQ;p^Mo;VRq5
tw%-x'ƓEqEF~Ik+JĈs MX~rU_o?EpVlŖknG2;1y'@	pߠށfPIyYl/mwI1h881%5Kl.?_?KS5y
o7dT%Ă-/!ykNƉu/^|g?;/|Mg[)9a%6kʔ֠y 搧3U0YԯM
j~捤Y̾.oXbpcK='v+OQs7i[g*=Rg<E
&E<gl	+i9`_Po,, GA(GN]qq|L	F~,j.AksXZ:OJZ]i>	fm\L#L!CQOc2d/z "Nqג
ҬJ/p}ԠIb,SȂp9zg=W%QM-d&(7c"-B6|E)&*$:n)T%(5ôrZ&:6)?/roq:	-I$ֶW>{#fӦG(	R֤*E7쒴	
,D?hN$V!ATi=58>0.֫Mt8a"6!xR_lDS.'؊
_
~@S>^]nb'w."
ژykd4mE,;-4Taw΀+2ԺX&E	F;KP^Yn@q~:yxfoIon뛧3_wyJ	&tJ,BJfQQe|^F`}uq/T0Pok^9v=􀬾\jk0B+E&O.nsTt@ /v^7/lы쌆mE~afK_ˁhuś?]=Cλ_-ͱY)sMG7\.n|όwϐ7uUTaX~-F۰\~yT,6Esj^%p{\q]@i?[Pv1PqO]7 !Xۏ;d YS3FyTUUсOA=tsGbWr\eބ ݎ.Ki3`3M&j V s #,|ZeܪK-`9<`l2UJ:PIlcJ
pX;/2gBs
70[L|ј=,.
d+fIfQ2w5f,υXFxt3V/v)R nĔ=,|#x{}כ^LdFzql1"OD9p,߶r{Y
N^UB@[ZHlAK#K#a?<6=[jH.	*#KZ*intnw|_Jc"ϥq
Kp"$qqe.$ptR@:]nW\#OykE` ξIWR@׋R-?uԷow0eM~ocZ}8hK!!ɿ9cɡG
d)fPgև߿:BDdg'x%~CeՄT!V#{OFoZ]ZҢ|`m͔gNZڜjήw/V;Rf{:oM":K1٘5?8Y]lnnJq<s8RuH|)r9&ennVg|Y*3&jG
+A8-,/,}5nzSܕi^Z㟣k]loC}ZXrTv`b?1{~`4倬H@'YξƥFuZCʈϗ3<(@bF!喖 3
UE.VWʶrH{eL*0HПꖻ)kUJpEEnx7z@:vNؔ<'+_;rhAdSPљ]qKR?im~>d269JJ
5B-$k<:y;`{|bS|Ke=I?P7nQK48֞Lld0k鑸ށ,>بNƪtJUmi'KaeAX-KDCܹX',뙁u8`EͫͥȯF7A
NXu綉.^Rj'=^YQ4R&.ba,j	z+o~ q
!"#y^%>u/D?N7Q0l.tsvZG$D
'S$`7+|mחڨLR9.D6	uS /Xw.V5Ւ'R
]wk>2乢oyF
&7.cnlG6%F6ͣxB"6G74lpctm3hzzlN)jb**N*oZH~?{w}Q$)2swzl,nN:P#^zX`w.	I?fnDDIUM+PSDRWC-<"]9a-1?[jS<brƝ=*Q!J6~8
\_bhlH]>9ǈbZ{cړu^@Mi#aKABDZ-c1ȄȪ6m5hPVDV,	"wQ֩=Cq~/#
+?ԑzUF]E@i0XFHnAW-w%qġ5F5/i󟍔AyɊC$uCiTqIO|aiv)-Aq|i50S~	+,<Y.]M"3\8a3g`6k@Ůd#	_-ѡe׈w6<;wNSh'54-;B{t'S1c' c旇㡻Fݵ-Il%s"|JWE;*
dhOR&z{G9</m<o8_*&d 
xD z5 Ԟ׵rz5JBT:qbj믣Z;ЩH7ꭤ-S_\[`ӆNKǖ6\`Ow˅.g>
OTB8ɡo5⫒qܙk.IZ|&<n+F25EF_m]b),L?e08/ -ZhD2jyYV߹Ntz6>vnK$?><jX#uq
IР<A
g#l_ӑ^Nߢ_(])k4Uofm|IWVAY;U7W tגy ֌vIWcE)5zܐ~zd5G,&=wq7ӧlrf	t$^>j$=>=&dNs 䂤{^Yo~{j3QNG_l 3z>s:NI} L=[]qg)\󘷢k0rOQј!'3#Ӹ;pcoN"'|\.%Ί,h	20`NB^rRMR.?%ziT1_hϼXt֧0k)5n{S]oD"g<.vX9*:X9NoЮMA9z9x.!S=/CPiOG**hb6 $3G|bǯj׳>#!S껻D}
$kߩ]Y4 p-#z%&7'?~4h)+ר	L?-	f~afe<XދHgBI|־EgW@\}ٝX"ua'ҰgFjƑVG3m&VU>7#*zTc@3C*
\fJS 5Pב2ɿg?XՃ;$%qZXL|W=n?_^ƙ%k[1[t8y:&Z鞐4֪[:|D].GAKu{70 p|A$ ZVuFQS"J[j*)KbX_ 
ݢĒ"A#,jC+&@rut#&KRBm#Ę-C!i2}"j`[HstQ|3?ۀG>+({iӬJlHovzmm/~zcDq"Q?Ir-IC =g䷇AY{F	=Meo~Ю:`])M(i|~D7P	1Aˎ1\ 1
DҮ`58%:!pK57!irGF
=`7"6%jĜ]xNWFJunNm!'wq6:yЁ~ehUMX EYThuCč_T"ړ^'Ti]u/]
ys;<]5C R6Ӣc޸I :N1;;sˑ,,Pi|I(քSBο8Szbё_9;:Hk88x3*X(Wd:`^Z>Di?$˼67(}|# j
%Y.dW~3{lrkN%bԥL}DI1*7:.kmTUiIu$P#M\q;mIǶmj/3OxJM2Rp%44#v &/HqfK<ݥispF7"
gz|Þ .aoˣXnwù9l{|~ᥙ!_#^'OoVsG4c%ƙWg0[|	&Թ;?řdm B.w8z^V2 }ZI0>',#=r8[AtA)?З|?go
hKt?$rǹJ[T`MԣJ8ZcNexTs1D<<-1&mu[_+ȸKJǂD>T@C41P#$AE(7D>_^kaumlV"1 ė^s6	1-,Ȟ>zϑ	VloiVOcK&y
},R	UwԄ4}ehwr
Ҹ*|hiϼde&x;HiԊQ߳iw'G<pë\z4o(ʍSh܃:yy5{.c߯cTeCC!kmiŜLmPg}0GiH5( W2kY#u̕jm^'H_Wjߑe̩ס]؇aJهDMq?zm/>JUN"1}Tc5
86ܘck]?׊jZ*l$ͥWg}Ifv[B	սS&ns܁onO<o͙	,rtW~qoj6LoˢT8/|!tYFZi\sI	}	V1ӾJgX@<j|T22ϨN0AiQdcgx5>LW
0wU5ȝJ
^yn9JY?-hG'hZ*gMv/0-+<X.EykJ맳Ӹ1HQm$
jOiˌ<2kM04S,&L.R1B)Q[*}qb6/ѼFK{0QN?qa؈bK>bexaDcxT]fܑ<38]c!ծU24Ԉ.XZ	kǜ_03
/q|R>h}4S*4@X|8TjgzM6ރ}ɆrڭsGSJ{/#DX670;N%݃	4Z(栢PX^ưu
i?7#	n<_
<jl߯A͖aPvqZ	K}/8^Y_'poif,,ټL
3i}YHtߪe'3~L_몰[wY݆ӎqӅniiJ]]0 \#`+n?Ҍ)^5-n>[5"w, =j@ds6Z/h UOi|h\`{CDɵE`i>jqÓaH8[rBq]qޱn@)N^Az
m@
yd:uL|1)<H3Ќfz?xsSSh҈`|^	EJ$YQ0e%\gKv|e*XRQ$
	)6+
xTmɃFtVQ )L,U*l}B	=LwQ2ٻ0L.laޒ
hӌZgۋehX}a)/\2C\VI+izZ{ܢ6|P[,ȉTI7VsgPX
cTē&t1nd;x@Rd_wvxiԃ ~Sk^{\leȵ}i!Aǅc͵W+MC5>AfJ$y:V`T%
V'7
7vx?m%^љxmz;^ijk48؀wh颀g#?]q_ڟ9(8
nYO`~O"/NaT6x:I.5, a^,Rg~ߛOA{lnEۘÒ C~a`
.uBFRJ\Oڳ5o`O:4<OtnN&[TWef"4g;
V'vXWj@[{$91E60OasvaRqF0)Bd%Vg+!=>z,k|YОAWVcqE4b:@PU	
:\si#mJ]/':+'|=MR{v':Fw5^)1Lc^G_C`_+%w	V3!KBaO}Y&\Sv}E&yˣJ,laM)-PUґQJzh|'_Q!n](҆Zi${?aoe(m1G@\P2b*OV"h(5Bz.VL!uvcŹcV{QnBlp$
u 7-@kcf2?aŗaU=w2BqE@a[ф6+̰Beј|:,S%d3<pUQ!J@o)Eu2neT4KEP@]NvïlMxOF`æ&)
E!kuS?%Lֆ`E	QH+77ďƼlg巢OFzV22+aLSPh8b^-M|&U"tAK)8qMjGV1B2h,D|@#t4.H W5ߏػIcAamxg66])anf[=%dzI7ћ^7$5z
sKl%>dAn*qb>CwFʨٔ졾<h<O
pM{|hl	9y-wyeӦv""ّ=5c&x{K
"]F"Lm.q%P:Bqj!Fj)e4_]Wf%oHsʬΥhؼwVx4==-qCK}R&ɜ~5몢&mm6ܠBQ_앾Xur%kqt]g߫y*s<dVpp}U3[t(X`RIkЧnXvi|~Em{+M_$t~B|&SؖN lo/v.=},>fZ0zgGQW
qS4) .NkA}{F h9j$ql3x*3_,WzN_kB8[Pޡ-)k;tb'NGؕ-y4$3sH>!T	e`dYy^r^Mۯe,%4kNة4ԇ2~֮ǀ?K< I$6D͸fxyR~b1}fQ?|4GTm:/ sBȎ/o*? dU(V.M)9og^Fc
}j aD}ydrao	{=Ȗ[^՚ށ3t p6}K e ;G}\B@ŧFI;5%(xsIu%b$y߷<'!r<?1qgǚTܯbdCgvE!WQHVNqf!+Y]FxCThJsR]58GMGG${#<2ϗ):07)5mq4w^D|0IS&a 2Vb}/.;+R9{/nDp6m~x	="0[` hzlT"	,ORb3%g(dܢܥODKԴ~O`rΊrf+0./`SV%ћus5NW?3$Sw2/ȗ
f6WTZ/%RB
4+8gJ{~{-D	1kslqb %c;
ɓ<X}Iм7ȯtǧ	aDd^\h餼,$auDf9w[b4b6¤+DДNfuz0V2vIY⶗esO][G`]jl}|ՖĿ=BA8M
q%<"[\+TTRH!ɴ7׮sM;xc3ƌ%UQZjnb^!V6
I4o:ܲO
hkn[{5e2EpUIВnVw3q;T3oH'YmrE㎩oҋ{46g*Zkbn˽5(FsJTjGr;l~A-?ymB/Qyn<0JU<ٟ)g3]Î 0ánl^pjq00??5ֹ1qTKa)-Id!W$k+2Xۦ
Lq~
&G󡳳!U.Lu&X
C(7I	d
2$M')dΥRq2n۶WEΕ9 J֐o7 LV1eP93E5e>/`L-Lkjvɟ R3'|ڵ2P2~y9'$p}T;ӿtOW^yy` y]ǤoƵzlINZ,ftmLy"ێne(aϊ86e٣|J*ZfUG\CozɃ-0,ӆ XJ?G?6c*lQk
RwPa_Ra5d뿫([Mjqq?~[+(9gҘv&܌vw]2+4>gxSDb%jkxJQF7K{_c{5CKE
0>A*EHXq(j9b-'`KKbvCqo1, QIP2=7hLT#1M^r}mJ[nU$?u
0%{1
2z9*
w*w&%ۄˍw1pDa-4}<[I#R=G\oqj	U )JC#n^TLu֧S//ӘdӾWǶʿ`q\}NT7pcQԓobGfGHό;
l?7]oi+@vPc~h)z׎I>`Gtxd\y\ނv~l<`\h*O+ө5"p@(iF)]u@WRPZ!"j,6Qvj4ĝd/Zˡ>%H؄l:*Nk==I<)V8|l'O!MA5lNy
43n2Ĺh/J=ȗ IE(a DZBMsTů"3lƩ::o,z\*#3SJTYq镰+iHۺAl,GTJ{<bM2_zX/(J1_<Ldz'1*:p[&Ukh<DC1ׯ7<%+2 #E4.my*nKHE,d9,2XLޞYe@+Ɗ5'wCZn(qXW|zf隠#pC#Br̺c|Mc*%2:WWTH_RI2l4HfVZ<kIlOA&eRdEnA?J9%iRn;q$?Oh8
Y*Ҽg2huٳI9i5?]?p,la|T (e4kSO)C
jKq#%
wBJɕlUE*K<_;Ea,:ꯤR/x"۵>Moq,V* x YO
ʀc]󥓭$Ɋ2G¹LrzhiPWcZf-gGO_#)_WZ4Th5q;gҧ_}YػKa= nU:q/!/UWXce}Zk/eF-wW|n;VQZM?|9#pC@!|`TʩD*©4R~=C[Zn=A#$y>\j y+A5$%ru 8	_Z4h㋡iGs=yQyCH%]w>$+b4l/&u5(9J5|uZΐ̲Q9_HhǘqtR=pBE<mUTLq] ֻq]vS97ē%G;ƋX< {NTtSXpʈ!\~ذt'a7-%=S1xR$(7
AkmZ Ü"u{eXPK\UHA~Q%+rÿeL|@7p{`k/*Y|*ME1zeBfHR8b27S@TBњTߺ)r7"1`n@	MX:;d"kp,+tva"^qxRf Oȟ#UgC%9w;^ՉorFK9/vTFt7*xtx"W%@N~ƿWriVԳN&sJD1z	b̊
qj 9xeYLM볯x8;HLD#rUWg%'.U^4šœ`v(*8T
9io\LDƃnRT9!lp钰A(§⫍K5に
uzi%ׂ5{ك
5*]v=+*X(D;:\ٌwTE8]w}eRq&R6bY;j2~nO/nˌ/v»i	tz53mVjWh!^m	`-Y۬- _B9;
Ϝ捿N+zбGԢqK
^ۺaz?H'N8zuC@=ٙ#/y{Tymdb3G-ZюDL<*Ŀ{gY0ɗbsb|y¡X,.';7_\VYKIeSHrx[;_߉]H;XWF{H_jQE(`Jyem8;:,d:nJ#ίx@#Vv./vDPÏwӽLJ)cmj('<E.E`c*$V%=Mڟw,xm
xzxhi
ѸCa,z3"U{0YB޻y׹Q/
_fcqw9mCcqUE܉9ZYвdH@xZ`F52{w&G[	D$?Wb<(
K\ם,؈\;{ĴJiO0zP^D?\F#ۊJDҳ:yCom{ElVr<|Ml+| LQWz>/Y|ؿ˙9LNR÷Ow5p5dњCblSs<^I}X&͉w^X(ƺ tDDHV*Bt
)9t)TxK9As{ę-
&wG)DIV(f9FJ<-,hl&J	kfk国Jfk:Ɣ&b׃*x}c2kv];Z 3ݢ GB+45T><d򑰸qWGS:	_kPn5ZJZ:kK3.sA,K[yE	rsBnA&)&ߟ_UD!I	r'4qrd%]E.+6/&7
|[ZH]F\@ dFSJWrnW&.k,yێ8,p}eny;8l$U2:R=gre)ꑲQ9AB	"ߴE;isePq!cO漻Tql]
mİ`(eAL0[-4\d&dJ~#[jaC<x5U6&Vd>y9JD"O%%H_'/Jʚ=˷5%L<#,Ů9I0J=\1ࠊU.LPey4|8H0'Cct[}b!d4=m)='De?|oCcr&9JSm=((w7jS?_Tv4i|TN^J-f$E\އV:gj̝'P969.`Y:#{FmZb.sVed1W[ପS#*}C*\н	l*M5`5w/}osQV`k<UC#(h<C.)8J@F)'լJ4 @?-mui^:Ք́oGiGˣ$wpV&	)͝h'P
IKhbuH![5zx]dT&0R^܂J;

H+"o	ЊfN8|?ţ$sC\$U0oꛆ42 B	fVgmIQI+N:{לp:zT`\d9L=BE-
459X@@Ш5O]aS^2,vxMj5ǨT	|^$B-4e2:VtlFʶJV4@Xd,$M}\g!gKepw"H3̩%ˇ{&^Ո{9Qtv[/6?ߢ_&:L(f nt
qLN^,9?9\PwI))2T$@wh{ov\.pě\w} c',N6)痖jkXPP+!RBG{X%AzD@T`(
"z'RB-7s׺sOܳIv3{3{)!TQ؉Z\4$sD9`!4峌&nQG#4kv 
WL	C[$+ʝnGc|*iX7ғ9?j.tLݭ<L4=;2^wx$x3_>m 3[QT	c'8wTfF^,پ" ƚv83CYHm}.%p9Foc1cHW3ݽbxԫpZ#1*TGL#%APXjWM´;,hֺGHYm**b{;
B6%okRQ:0(2x/w?hulUvrc}z;؛'Jʳs
t$㜞ׅإ>`*
5@}rJd_\j;QH+p.XPi ^/{?-005.Aq.P$D+UF,,Zøeֶv&n4.p#HdonhElud;%:@8q֑L㭁M"1ohjxdμyHmSh?} B;I2Ne@\)If8$
sꕕy9j$ర<e]L`&{ҽm2"fK>\mxzF;H3POg(?@9usxGg6¢'mEK	lFZ7T4O(dIr?rlL|Y獤 0	!-zASmDoF
2mz!)\(}<GCT' Ӧ?
y%7ħeD&[8"m2p
zG6I @R%ez99b]?eDWtngs~GNEǪO>݌<z;)/cw>HjWmAx
>Q:-䪛*f?)ɋTHmz
ţ/֥Ӟ[Mc_؛4jjL;WV=xo:6q*9/Q5pgH)liRBFa+w[pHR
Б
rZ<	oV<V{1Ru7&Siպ}⥚"	O>74	n{*g=E<֮Up\qܐ,֘RסWvZ$SVkdm](-ǫK?.Sc@!?:V%͓ކR]=	FB	/f>A0Ol sp?p1Bs1
x4
0keKtWPf8xn/NH;ܮI&v
f/e3ĄƺIÓϔyZ:*
tx`FҺc_yw5+a\Z_*{F/xҾ,rr`~End0/9D8aِ?-V#BrOPą}}/qqIZyі1Yy-opďtp{v̈́֔wu^<6 aUCĒA@
 [Mw1. BIC#∻l^z2(d
UwՆ6V>C
L5B X9K(H,sƖ5!
J;;̸;U\+h*ht[/zoƓA4,

Dpk#n=R7ʤ	<9M)Phh-ࠏL<Ľ{.fD,+?uS=P%r۲:+;?"l%]>;0LF-_*))\;P
`4,1Xvqm=重 \{`k\-|)@S:dE@N瀻U(:i=fHOY.c͟"H82}gƥ
(KK85)s|dHyh=?Nf5#FGhDL7QAȱmB`Z{/H	kAn#lX:IB^P=:Z 1τ`rp+wMf-
CQr#c{W朔Dr~zP.W^
p۵2aK,)(ƽoX~U ctrZS(~"Էg%͝&JR˦-3EtesqŘ1<MnJӍ/O/sc3rϜ%{L8QV-Hշy_c'_ʼs ^BdsDpFq[$[I=!Ҕ!Laض+F"Jw:ZkMG>Ϝ|?ډy S5R( gbqkR	JQs|>?a6&H='CʼwkW^ϖhc_EEZ!͕Z#nT_QՠK=;â"+#+b-	HgX#I#HLaZl;oդ7te3Vko#u.L0
jmuN_o8%WDJɜN,!b7Cݘ}J:j9ILG[_v4ZK=9Ѝ"|9=C[.4|$]Ҳ6G|g֭udחATtO,,>j87{-'u	t0z7oV^]h#<@bx|cw^º nE6XРMI$;nDeܜ[{vwO|T$iX~q>QO|߉;rzXAoW`J]`f軭x'7"`s.X.}!}E?`$,KM`s6׽Sz*j.בQO٣WxY}~l@qK%MzdOo;BtLSx^lX[wÐmDX9B@]k+I|Y,|%ݗ۫)ϫ0ۭＥDW2!kOods?$Gm<%hY+UJvP'ѳ5q'Iى~1~5(xl}y3LB\DS}M!f~͎} ï{oXɥ%SP]DKiw2R$5oBBgU17n{`[4PRlbjճQC?=,?cLr`hì,,aU|1pWLtsDv|/ąߡ;:0@HO9NtB=
XŢ);w0?U؍A<
 eMahQОO?E#
g(ΰWfdWI@ث1(l
*⏅brrdc;pDT4EOZ,vOI͏u/aާ^5jc3$D]VV[z3԰|w`fY/A4OV]F=koJ.(֡x2.QMzrאg'Wj]Aqtύ nHmg<2~~4Da>+jt+o^<n{2a6HTU{z;ZkTVG;뉔 dՊE?MA
LiTGGbϲK dm)0$C/6nIފ^6DK+0+,Ueؚ@`u7rPGmDUKA]@t*M~CK[(iZqu*6rjwB-zd>9*	\atLXz}]9$GiMqGqy*߫?˹8y®6}LZ](΋bPi! ̾[cq)T+ʟ5
;Y/^ܘoWaʘN JzY/@w]g[\`_?%gĹӃ*'ܪF4 i$E	BbWxmS5xZς-c3y1˻v7hǚ\Yf6 Q3O=pc7GAq'm
0_)%sZEq\VZeu kGIV%]~kj@wyNG_"V{?2լl/k}0I֥XxWNG2q.IH3J'Nа3JG{>_AiwS|C1hc\4{A`jW6=hXWݱ6ʢR}^䯬R'yod)$,$~*Z71.F2frҹ,N7_j+ErV\&4Q?GRJH,D2\:o)03ުq&y[IWl8_F!i2d#rnw砛FCnARc甎z{to7C]_3hVܳ;2ޓ>Wa߱Ѧs_yn(+:wduLo^A_[}
tyorЂyw7c((ոk9®Sn|>wS6sNѩZ-s	DXQ5BTN+VɴY!d4$=*zI	BN.JqFo(p4Rzijrn]|4w@Vgwd16Y/_nwSp0Z!5.bZNm؄fN+.²Wb/*g0o-dn"OQʪ܊QCdA3f4^qQNW"TT?e@|a}~9=	iZՅa+Oym6͗ i6gQIG[4hQPғ:bIJSj?olH$}@4W}S%P;K߂m%f+J,?&,x}v|$)7<k%!v}2[C`,m+L2	PҵvVٷz= DT'x	UR	.vH9ڿ=~ǂBLLKӮyHU0G_gٯkY݈TF-+~N2 /I@Ge%ь+9(<eIߙжSb7,$R`ŤL^;*KS5MTs Ikas$d0	ĚMmXǤ8jH,Y΁`ދM&JFd&-cɏ3b\U-uKG3qǯhӔ]d|4|UΠqLH=__6E[XAŊ)%C)ty-2]~ӓ#ۖ0Zy'2vw
ʧٸBwp!rWfd$@nqmyV,9{i?({5_r@yJK?zO߀]|!&XiɪNY6~ҏCU*X*rz(%~3Txshb	Qd{W;8_rJS.XxqUMqA_')禢fNN6q"bnvo{k_If(V8,[M.J<[z:auS*:`:"{3(oF]m?H3:O74YIA2
Vi4[EhoESGߚ<$zF7@'Ӛo&LXl*J u!@|RǶw%㍈;ޗ[l<^&ED4=5ɒϻK
VWI87
}mus?'f!N5|O
*D(rd@+Ü-:ۗ5\9F+2Zз#̩˱Zv̔%RcP9$%tnP~hM˕Z:-	Q{y3y.'6#+^@&hSE%|^u{px-T\ B5>̱eNXy{?jl.R咳ڗ2ïjyC!09q}
h7,٘+'c!bK1%lBNv~ׁbHhU2 2e͕׆]IXMG"ߊ9ş
wWu>0Zqlⓗ֓{sUyPT[ѶzYź=RU7ׯ 7
-$M3G=f4g	''5(XI4lK>}8	UW	M|mX(|:x!6sgَ1t({V]~:?"F7Ke;a2[W2ɴxkUyJQ1W'6jFq˄'گh#nB(-gޟFV'K7cxnz{@ېqCHσaS:W30D*=7|t\oC?007շ`0+)I@'9xy@ΦoɶSa{z؄c MDQ_z.2#9^Uu,F1&rc5<ezNMM9Pݾ4JP0nlxB彈Tou77{^:J)ठ.չu?'
yDE7mO[5$Ӫ6E=c{I=M̑S;#Z4['Vf)jd*6խ7$|W*tw)E	Z,ɋ-1A`;QE'׽]k=@4f^Y~Խ3^yHIb.|+dg3\H(ico|%#):$9،csq&6jyk#Z8/=.?hu}c쩡Eޑ!uq4Kw(aܠL*,tdcAA4W^kNyܷ"NblDƫ<9ȓk}\lwtԞնNS+f.ZPUiA:EəS-k$(^䒖8yc[*9&:,ڊGosmGOrDFzaXzN\~͇g)z")ەe8*S2l~ɞP5(̄gM}3!ɓ_e7*˽3N
9}t3Fm:"n]s*v.We/]e䠸琾"0Gޏ9.Q
zOBy_߽k28JJȎWc{td.2BJ},ҷꝚv=sqX

eެ:21-+C
1RԱP@-tl?)r;v;ZƍUB}
kc;s_$vW %]^O!{;>߁
:۶I<|,d*#NVA~ܗtVGUGpC^f&&#a㚂#Jny_BCºyrL\r׫ͨDd^Xf-HhbEDH֩%[h$.&mq1]8$i퐋yV05
Z!BKƱW'x~l
dmǄS.`ҷ'O
{Sp g%역HE>ӗjj	R*^̆*
y8?`C5G/fׅ$ɉTQ9>\*߫N_W	rߴkZv-|*zeyM1Y8FptRX[KN $u|mN^ӞYYW%J?Ȏ;ҋKUX1IK[M>VE矚xe^Rȵc⑏6MtU#&~jO&ddJJķD
GTAә"gf3PRߐ]b
5]Ip)C!$,u |{cJR+`#ѳ1ʶ̇0^X	2	u^tnsmR{G;iB{!f]Zh!7Nqr3\ydKk'cM{eQsFEty	Yp	;Mq~dklF]뉏c؛yH~L)Gmηui$_as;N(>.^/[;Rq{+3cXk{r%buRI C{~o?$,puq'%O|c:> v2֫boRR5{V*es&rk9Izeu1U1˸vĔԌI
Ȕ}J	wāj_w
ЙUw'*
ݝZ@q^tF9kWq/hX'iMH?ϝRs*XWIGNw/wnN^cBD- s;ń:=ăC
ǃwnoC}UIJ>PYEDޟ
z~AE|(yyJ;縯$m2f,IfAR#-ׂ&2N6GF'
lχiJ1{A}J48@PR}GĘ$=KQ	tq5¾$Ck,,1 HieMÄUoą{^=/1[4$<SU'6Bݩ ˶9)ڏUwy٨,\3|Q-K&nan$,;Sǖg&X
O`hef`j14V%BH$^e[_ThF,tKxVs=Fg%߆4@Cx)h؀k#|Փui\Jͦ^}_Rџ:<TDS]j	fiv	v˰&%W-R7B'}7CJaK
k"9H#Z%{/<-k'K
	vrD2IeSv5eJ,EOѴ"RշЊ1O8z#w	ǒ6[ozl3iyddHp^FYb55w?FfjOt]`Z#gQ@9ީ.U>&yƺ*"Dv.EHa\Ko&tTLL7P^ӊ8:S.|GdyĀC^qg@=z[{ol7fY{seI.s'هH%e+
tx	Х{Y|nUR^, k}S	Pzur3$"0qhȧA_輙ؒ0{/4c_4-{yS҆B={FZă}Ȁd_|w)Bq:bmļl ܿYj0We6OJ :/>iJ 3O'9Y  gi$R}5UHNaPXGy"]3E9v=l4E2Yx!#G,[kIRJ0 NwqbI-EªWԈdJ:pǗd~eQ9h5>I(f%L&}q
R OIcskY|'C6hp @^	WW{J)-JF-VZ66[#Vc>+__k\/u\~~20!  MBf|,6 tѝEIץ4ÐBΏAdm??<uw&¨N
#CnoTe:=0&%j1Kt&[4OcG(2e ?p k?PC
i8_7)	px|FaQ9T;s{BxzgK][X棭tDak%ixoM|*nŘ.$ǆlli^(AmoyTTW.D.a
^*׮j
aD< go[lYjf],dz]?z
vtvf^uu.S)O*l{:M{WG<먢:UI7nt7x}^^!xN,hEŖQ&)tNg~\فIT@w 㘌as?E2}s6M/HmQ]9=tP
\?8QRڜ<s!)&)L#-3ϗFҭb
,^^nkh0N<+fbbh8YmAT-N*,O6Y
,=~ۃ&n-,&Qk`V+
gEp~"vXj^^k~Wg#̷K*KmCEmk:+M Ƨ0 h FAO[rڭF<sǼ$upqQOc/)fTP4!-خtD>~B\V<6*[W3\k>/s,rGW tr(ʮn6ScEAk>*__́JDvOZZ6$j#{<}fɤ[t]1d8}Gk?B2W֚e9*"4L7KFX܏20dQ<~SPܷLKrݟ `{Q2zAdlc,Vx;vD#aҭt[ІdlLv:/l<m39]8j< ,4r9;^nzdj%ѩxH0pQ iO.-C!cOŘg?>	W?Tr>Xm8[B춻Ov>NU %y5~gmGԠ:
0ٝ0(nجJCE])n³1fCciT9.{rzQv:1eZA~3,e
t䎱?Sְ5'fP&LYOڸ}2koq:&-%?[mHwC(Oҳ
}(.3K=}pL.hLRlC6y,Pmh3'kJ"*vႉ%hkqj8%6u%<
p鋨5+hX(St@Ҫs#.5vį*DNqbxm#5(l7զʕ7_yt!B,R
+Lܽ
n2q/"]+ݭ1o.V8extP Bʂ`'#<//+	2ڛG?wvF?Џ2A ?LwRZ`8DpL}Ki#dB5}
Xކ7
Xo)9@%7x-WV [VZҦkVSmrKAVڭRkHHJ}
AP@KT҄p+hfT[1<[
	I:=BA3Èe0jClzfuC͙oPK+D
,TC]ߛ'eN4%PЋ(M6&NtI	LˁϦ/}k7t;u>U0% yoQN|-~tc=O4O^®5Y0*AlDlaz&FQ<ͳGG>⬅@ KϟL wQQ69QL!+dW' ۢ*?O&H.
"uɰ-Mi&s?V$-GѿZP}#@@fXGΣ3jva;sѸAP~
k9(A-vOmsjVzxbG5~Ɠoك!^=%fɹУk.1ŚQ_BmAf+1OMbs:`5@Tˋ]vɼ{=k+<EIsnhs>?N0L?xr98з ms	\\y
Td rhuxmm_6O7tf}3`
7*މQis8:XͯHN^MI@b|~yl(+(:}u-qStZ42aT\8HyOzQ]ke45'ǃ_^C&?艵:>dyo0a4K*=OW$i"DS&p~ePf&.jeeQ	v(9`fMZIR.'IdAh!@&{~ ~k|:HY;]Y#́#DgMBzQTf&{!ъĲh2iE#?t:oiRO~f~(@RPxᜎKSW>-eڜ9['Elx,T1~k 9ϮE]Gi,)Ԗp>e{&@!Etr{^`obTM-\(g^ft!S:yrUƤs۪M5rI=+g	т `"NBٓ͂g
hUTHm"xQ4kt/~wO|,92\;c3%O4KM?#&ؤ*Wrqwv^YBL":aY~o{< I=WBDeH2lv5А#d2v}te|?OcL3Ym53X`x(M,-"#\ w`oSD^T7(Ao>4p542]Ng$FZET$o59
ٟ-Ë7~:*n/Wp{Ʉ1j(k]).Iµ m~KX|uLv>#:G+}b 430n@gg|D6a0oW%fj}'~6?K!%Zy?~9}nO(@
T::xĺeP\MI<`{p
0;$  Kpw%Ubkw_LݹR>|ηUAAAAPCAyzz񊲖ታ
ld乹(
Je$ڝыsT3

FߓB0
J"=T׳Ѣ/\;.2mnPouq[%{CŎf}1|Zc]<{J:ZAm?JQَ?4iq3^ICHֳ3aQٟ=}'((_PU^>>}/FoL	Й9Z۳8Kzc6xah%Wot'(mӳM1MAT7YD$ly=2zl'QJc9{10vZ!ˑyW3>IjZ,hT:oܭX߿&!.tQϦ$vrHŻ1LpFJ(LC5
&Vt@N7ls7p#_j7g.ТcLȥZ-+Qip)~7^QU:00vץse`
6|=:x߮Ђ,@)ZïEĠ͐Rζ\N)@J @ z['zp{P^C\Gh =1p7f㐵+@l}	stǥ{,5Z*<u{Zi6\}h ߟ1FЛ\D;sL4.PYFu1v{aGO_}
LaGs8?5R!w\i	[xIdyoէ-擞jd2.CsZx>3¢f1bO滲ג1nV<kvҙ8/ؙ״[*d*rMt[8V#
GH^`NA
B'|O!_~&6c=ʅڛRh2'<U;{a{`n4dNI	"cvFn=%%Ypy*x!Tws<cqx>WGӐV]`t+:^+9YkUk;kNTMR>A/(|~REP^bUlrqo2ZQ)2Pz}"ԧ%z"Fܕ4;aje?!;Zܾ8b^DzbN	 ..㒈s{`%8ٱ*%0er_sknc~nKX`li+-Ou-)ͲyGLevy\%cX^v@hT_xM'ws8qyHxw?^LVˁw,RE9̊a&2Z]%=27nORzyz*'kmHehQwlh4'era൳ZC_Et$!iꌇkEu曇6#?
v ?߂M^_<aP=?}Cw˖腍)W勆1.ﵩ䙷g2},pJjI`ӥ/xYi}=4e`>g>gDRTׅ]B)c?69MAC$<5b"I!NA2-A^y"/U2prja%#C@(5PNow|x/0ؔ"tJ],{2Yk?o/)Z1uR$%-|A;va{7eP2I6sJpr-S|ܶnv~c܉TzJ}t'`/nߺ)Y	`71e?ռI_E36I+ƍVt1Дڍgz mA$`3Bm͝$EwQCI/_߀	t0p|15,ሦmDx`J%כG/6B%hʦC>B:aUEgIȆ|/ZCle
dŶE4_qR37^i9޻m
'ybz:~i{hZ|l0nuz"v0Mi}s?v+e
AΆ0r'((RR du.FPcmhEE]NNaT.>^G幸`bT0mPtx\> Qg,ܘ
	F9[z\:][G4'\&K!R2v|>zYZ8/s
hxm
~M;0ѭ@]@V;74!Xk3k@&x0Vzfpyz+`yX6E)dR`zh]/F&*kJ~ >Y&!	A7ߣ)prUmLk|*H{`o/ҭ5}O/N?z_@N4N#n8x=L\9,yX#/q߯xu4T{wՈ>Cy<HdZD:AxHI"6-GWlFb[.[]cMdc:S<EibzKa@40׷I<$D1mviqgd;Y)B|hGv)/>W̵tnx̛E/Mf(Np<Tر@QѝG'#_k1Jē(m9{O ?^s^FW,I<C͜NZI.҂ٜ㑴ܵ?dA7^{%5,䝌 Fy̋yix.d{ҐӇSL]vS֬0Ҥ!OW6yRڜ;*rU\kfL3))g	sɸۜd؋+8xV]z>n,[U<23.
g^56u=Zjk ,mb
Z&EM[bJR3V'Ji3-4Rz*GNf}oTxA$w:ɶCo|	Ƶw`&L7H|=*3:BAi/xw{*D==w^h䡧+2b
Z5gR}@
*!	-f,d^x{Έϸg߾a+#~*JQSǚ5}.4oJ3&>=SsCrp.'s%IV1Wy,F3[ؽp%$z\;WgTd

ӋЃP^#X}z{u}'j4ҁE L;NVǯZuu.'^gŶ	-7S4J W 1hk)l PEAR]83J((>pE'
c+O;aȓFe|~+OlkH_ǫ.SUIn8$uʋfD.:WVJ˙eԣͽ験4?D
5z/Y#.BxvBE107|*DP>^Ŧ3.o_0mUl
x9ƴD^OB1#^WDyhf翽!89J7LcNWY
_Xb*b
f6sYc\V?)?FPmLڸ1ϙL{oφ!!>!7"{꩙}2Rܵ
oߑ5;Ge
o|~hQ΄c=wI^Ĥz$xg̿U&U/fH|s}O_b1v2)᜷o~4|qe >lqWgZ7,l=??fT#qM'Z\"W"?.K_rK[Wk e˗gtIB:[}~AVƲM(^qsrse9D}wa5QStn"Rm"NR,U:TK
PE4+:HM4qym]A{_P|-4^fYf%`߀BJ9B5;6!?;oQHDj/X)+ƞ=N|8BvKbɇHB/]e0Ó`(UBAwLah'/{A<Ö6M |tV7̽P3o+&n|˗COMR͈-=}VZ0ޖvyxF '/a/s
Eh	.i{o뚙eٷҳL<-86-1[)QAZ
_fgXZrctr)w-J^?E4馕M\sާgYfι6,/H<'Z3lR#ӞfZJȥ_1MkL[]?ow\ܪ.ms1"|]Y1ޫ,,6SH(˯lV*>GA)jբUWTr'Ƶ:NB	N C; o|ݗt+W'%þӄ
ʇ_p{#:FEJʳ+84eX<"6]{L\x]6~PT}DSƹ٩eZTi%BIЫ޿cֻ[!E|d4+a
{+"n&̫xEC?E5W[w[A_<eEbz5V[:L);pΦ
>*\nąґֻh{I6o'Pzr
xj=iZdcfN(_g"[qT	Qk%z1VF]`2UŎƬnBC|9%W@i]PE`l򭹈i&yFϾ,"\rRؐ>-C2eQ?cMAP`,bPOZdgBhNߥrafV
c } (6ug_7ݤ(;YDZ)ܟsS;4b
RKe(\k?l6XpTz[9!'?IMnI5&ȋ#"Y
)#(CBdYH
uiJi^3jn$X6'ZNJ%dCF) ÜHTcq3 q~B2
OX@c
dq5-ߞaY]F	:{X[1%3Ex##0 M푪.jeY
ہH꜆ۣМak e(qkriDwrNW6{3Ҙ<lUK
УHRYBV:V[?)*Eɼ	l
t
~5e v>anhi]lsYQ`ڼ3"hEj)8&DY׷M}a~WQK5!	7z/ӷt昫ʤ
ӸEx(=uUq$ױNoMnA-$[O*lwKOr*^QK6BLu5{gHNXmܒ::Dݔxb~&BfL:/V
^7,!FO&-5	bhJW5gsԓ׫f"˵4WP
Cd"ưWr4/lOcԄ#S3
IIIs}~ENP\RQsp
G{Ց?P$bXzD!q`FŦpP:'G;u/Z?NP>&d/bMnbvP%(j>i&`X
"FUyD~wW*߈70nse--GKb'9H4' :X<DwӡrQwWghR}v99ݺK' 7BTJ
4<-+.BC2:l=`b_C;[03?(Ks0usub-੥w'[X3}^tL$"vu83ӎ+3+٠C.^\cY+eE܄74b&0Hw|b+HRhXx\^z3
g5ۿҮ,VPRH@P3r	ᢙC믬]7=Áhv<SX~oV~;cuϧ<i/ @-UwlX;mh){fcvwl<߮]GxK\T8JD&_[/G 4C,%EEodE҆i8lhxp4f 1mk!_J '|S_NBWװfi*Y߉:g=1m/aw=Rǟ'E5m);đ^@Bk"\tp^(FaX`Hu qu$-/tj`$=}Ck3L'̥BȂI/smӑ=U,j"Xrݳ>G2luO3ߴ/l1-_G6awӘ}Slwφ~Ly~LzԜqd@]؜B:<7y!ֱ:4[gyfܕG$	uȐ$ͼlsX7Ǝ?66&RchgyژkymFjZBfV>Ƹ.[]R=}%GX`os0+74V(l~ٮcxM~iR$\JG S6y7tr|PjMf> T\o鹊2vv"T[[9P໼D
>]<hav~xJMBI2˼2p6r||W^u!)+ӧi,.`Hu!^'h`t)RFF`vV	O鉅
UrxymTe4pι\84HvAw%ݐ+uP3Oܙ݃a*[0I@vwYLN5:<1
{#QPfW&j-kfζ$q*$zyqrAhT]ic	&oj?[mҺB<uvpGl`ch]l7JqA^P~_ݔ|}}vB|υM~pUQAHQ½UqLAo#-c/@& ,B]SPTGWecHoV2
6ϊ&cyERS0Ovm5 <)bǥz
^{iBfBA,tFo
pK*@CoBfZ7eǚ	g	~wr%͌N	}\Ӱtmų9A8Ә&ltG=D->)r|K\dX^\y[ttdb:O'?D\AdՀ	+;>.W`?5	UѠOq2iaL>ݧ..	FʬwYNO²lSm|Ȏs:8WB}Imwê}j@ UyJU%#/kr'_ܣ_E64Vs6Z8\MKvwKr5Af@+br;_*j
wTrw1jhu}d#4(K]ӞEoi 99bL3KJGG1	Xmˊ)S_z\b|YͲ~ݻxH$Ic+qt:5	Ʌlw-frՍC;G3[K@?B2*KkV;AēuV&'~kA}(cQM{U`7`.R{$ǛgZ`
I`i932+{IkenHzjƽcN'N+B2h\ϏX3_f_dKzaDj520+jIIK`7 P*Eoy飒!cbI(ƸiL&q/WD;~mxvoT1
w ֝m`ϯbZf+P3.TA;Ό<?R!&7(bk{T#?8L=S\F	O3U}(i0kټrY7?^#
x|s	țU7^=U)E68.b+3BlĶy|r"Tu|'[U͐.*ٽi?JDQ1CV<i(QUŪγ[/'=#d"F	.er='OABd\.-fVi6Qnx`5Q$0+W#<)s0"G7x5W-9sߜџ?Nn ɕd:swf-ڷkci{o&-
/5[+Yx,)-tk/2a#O:e9\!R
V;%oWW i;F	הӬs\Dy"H0bH>i#TJV')FI)
'L~jq̷M%~/T4b9Wƚ%y.GmѾdF9h5fWм <VثJMS.'X9v.m
I@%e_M;!}R}Úfuak+ɹ*IqjvjYk?VD=3KI/hM3 !1\Qjk7D O\b+s3[țQ!5Z;Nj<A>M9%1Xz :WnN,
@yrW +nި'7ޜ,nC3GCڂ W;$吖
ޠME3k
Yjf?>@/	7
^2KKա0zY%uυ5<ڰC
AL2ƃƹ<|[8&?dS0A)Zl<9_).<aJĊNA-)m,1n
ݚT逬1Ӽ{.b^Jhk.yexgUD̞2MHDXkM@ͷᑴ/|K:6z$iߨ/b66h vvcn;
aeYezVC4oGfgeiDWt]j;b.VM2zp]+;xNL?uGhjn7Dǲ(0!I\L0U
VXd?pEmQS߄eYfSWVjv͠r1=k7_Abjj\gQĬŒs*\c-6{1EyE/f[~El%A޼!ٺe]o#4fB
"iv̏HJ1 -B]VhYZ4pAoM(A,#q=`I.F~NAwm}B[oSog6VX`
qD}Gřb]4]Q~Msw1@qsb'pnŌ|c3TتͪQJi|t!1g*$͍mpD9:~ڂRsŦn5 lbR8)PRc@Ic)Tn&e1P'T&c֍%76)'i}j\从"rSIUGk?rSL Q|(ܰgyq{<H8|aHgEܭ܅^>I&Vi>a0+JdxzEntbԧޮO+..M=F,YԪRpjy,Us&"΋9s&Yz/Ʋ~_MZJ#ɦ/+τGt[cx	ZVgN1F=v4tl@Ra G,	4Y;MEb<[B>̝^o*Ը9JB]$M}vKLHURa۷cX94IN%̓SD0&M7+⋒u$xrܺ'[t<*cvDfȴSr?)76ZexZ
7Q)fSYJiZݴ{RxS'/irzH$C?c:aIe)rSp3`Iw{ȅ`qLixg]7oJ϶]>>4&`f[|eP*r#v(LdqB
+ɚUMh䇕k8sF6~Y*_>q 5_	mDME,_޷ME7}0@Ԙ倭7mp/[>-k
hΒg>FxĳA .GW ьZ<KN#ѼNqK-%.QKMKlOXg>,&h d%5 &@9F`Z5G,5Rc+yxP(oCpWH]HN?"GZ=6>xkqz8e1K;d{diU.qtʞv7=c*<!6 yQSR=W;cP#CjU"|#uAwZ-.4=Y6{]a..obіd}tgE
qm&-賘ԕQĚ<Ç6,fF6" f,7ӿ^!ׅNT2ezB:uApkSϼUZv`DH. 	>ǹX%k(_*=^QYaZ'޷`A3j	?76A*aPʿ{GiYP%gFjՃI	KO"幭)(vm\%DGxs/b*)ӻp;AYE9-p_fkX	%&F{-TA/PMZ@KؕѬ[
`TKߛ75}%(1hePrؓ;wL?.d*I9@X%1bR
{T3ްPV#dAx*A|ڥDwTRI3eXGnI^UE4RL1XP HjJq*guCNFbo)
epr*6uOs"#D|^\7%k=ŉ%
RG'\'Tui|]+ߧ<z
`b`-֬Y$[%j2Ja"=WQOˤ#AToj힚CmϜbE]ZHPnk
ן~m]E'!3>X6nl%W-z+
	`Hi,~U)uYo~a 7U4t}iiS[_5'0\+3]੽F^ߧRĮǶCxO0>4XEN+ f4W[ELv>0._.Ae^,Q\zf쥤
8XMaݦ GiT+-*Iz2t%,;P HGO&@CS>7QLߘ(QgQO'h&':8yэd#JDâS@x
Ml5zY<qi e-XC[mM'P?/(V/3:%TmwߪC+!x͐'/8y&rieup].$ACF:`}ܛŭ3		r_w+ٍz\ݚ$98fyħ$^
q	)P]Qw~- ]e;פJs?WY1}-*RxA-21_ B\	&?&֎?=o 5_"/;cIsvh۲ϼi&(}Bqf\tzӄq8'TBʐL2Qtg	#yҔӋYԺyZg~[	ިH~Tp38qV?^rX-0<+TaT7n=.RfV"ͧ&H+|ŉ1oM(<HnʂKn\$BV聟6q:Mli8$;}\N26@G+=B7H"C|YheoWRdF>L~MTù` ɋoz@x|3W/kCiG¦?dꢑ%r":{Jwj`
a	R}?+Ґzk_pWѩ9WhN!޻tG\]bl쏹Ʈ*|	Ui|^G0ֻWZHg~vŗu᜗
3nu7OL<? )0h;xT8m$D}&GOoN!ifÃ	kL>޶u5ĺҜvJ_so/$.Dy6@
:rumx[⾠_;zLuN{BMiux=b:0k8nHX6Bdf~ї:? .lgS]/g#sN_I-a"ʮZ,WRƸjg
4BL,rK|
zQ9HGc~mݨH)lG:ētd]Wa]pY[gz{Ӭ#Oa;Pj>aXȠy+.H&?Y|(*<Me,c=:\2#fF,wfy^2gh|IȮ(l"w*LbxM塁?_q	;V(K퓗=vJP&sQOIYT7=Vc+z.es
|S*@\wkR}ٰtwշî)ӵ"4+th
{&N?jDڗ1z#ILTlwg~5z7PJ?ؒ>'u '-qr6VhCt%P PWl)*Ͱ %uj_f҇H)&4e#tuuIK+VoW5y&QÎ#1~Rgxފ#`a'ii3o)rUV1gY$ڮ}ɋM}?`,dMs
o.B<LCiDۄ5}~Zmyc"W{f!	-I⒵<vUgn.@\T'a*U+qrvz`0
]*?KQ)dr9+_eigP<h"vz?r b)g_21
vR'
E"FTCKZE#qj}<	gi֙%FQG`kJtJ1zW䍭5Q?ʾYg?
13-^UݝutRj@D"vONa	tg	gsyK|GY|J"8tƔ.ƨ|KBBy.K$},h5V^L}c՛;"&6^M+U|/a,[g:щzIPStȠ
VI5]OK-llgύ%9kjU2l{Tn>U:Cj2%E/:WsB4mS;VJv<}A6Xoҡ/hż	/f?YxYQ4i'^GzߊSX_!gD
9s]EvȥH.k'ǣ'A9L`l@#3ܶX:L+-L{|hiqһZ٨3e3REѺ?~=C=.~f)BDe@\
gP`? _?dKavi5.Dm{Sـ*vDf'lqgg6}}*abzQQHSN#,ȒqݨO\mZKfbdcND4F6F	 79=y'%!\A!Om=ilD^	Vl}OT0Jt])tRe̍@τfZnCY\
.yK4-qr)2sE;jŭNC''l%,6;aRt]ƆW|=, C?uLp5Gn_u(.i/mԡ9KC47o^$_7|_7svJ[XOKar%^#[\2qcLTt^Hc?~}P%E#GrZ1<ƛmM]+qjR~uHjJ.hkm	m_O9 >
tlT5nT*{#zs_
p#^6~r;'a߭X
V (3c!#S?8:'h!v|ej?qloBAj9"!C$ :Һnox3+0|]
`!IAI6e4Z˜}Ŧ^m[1rx6ouZ)6ox|ܖj	l}
iЪkm_'G8dc eRJg.Pp4ސ-?bJ2"ÛX+_'8C_
xv9Qlc!@N4B63$
2ו_?B GfN8O~E7"b5˅r
-t0	Ƅ+Ldʨ.t'e?\FSϱrl51n֟&|fg@ޤhY8(؃xʈM Q4MCy;ԟ%&dYڿL)ȱ5f+ؕtBYuY	$@Kz-H$>3
{DТɵԯ擩Il.Tc0>G4öVzTrvfAg'V^5f0HAVЂ	}rpH:TbB;UY-9oj\{}v&^=^_LN=ɚWڜigNu7#Qjm|~F8{ֺx}FMۣ%pT̰مXW:c'|L|^2q&lrΕ~WR)I`UnH׻ß.ߦےgӨ+#F5g
I"~s-P Ѓ<55ZEF%FI	?zN6˾}q&lȘrL\T	Ƿ'z98@B?7>	qO|TMG
M&ͧ;`k],3J4T@/YZWpUH$ܴьs,
-3[OT7SAPsZkZMiV-UG4+j7NSi[
CWOq͗h6$h];j1֑
<άfy뱼*ͺ e=ҺIN*.G{	˯<'2YZ9Q?is+omEٯbVپiYaR]nCJbL)sW?C7E2%fjî>`;lxV5Ț(d>g];2>A6ߴ]0_(N>h!2=0GIk4g+JgGcĿ
V^x:5}=%[ћ1T"-ಊf -qٍؖ׮G|7!_arvLpW
IMtJW9ARlC	O IitPcrceq3SD,(Ӧv*Wo}eP[].J)J)HK%8ŝKw(<H\͝oܹsmI99ZzֳN
2sߓ*S3!)oK(\[cW|8YRMLVmcPMt/Ԇ:3xQ>+e[K@V::Db$_{B,IwVV.Tw}BG_d׾;j;֜Yۼb$ˡMg~g4.ٗ+zAy6Qd]UD6אRx]g<VI4evCU)UJeRTK+ىMr$a(Up疲eyh-Ə~t/gu=߬Ƚ(5VH3ئM[XO8B~jH/ A|kjBOpau858ھqtendϙN?|}\g]~㌁W(g[8w\~i,avVrרvGV*)!ǽ)_!YC}\7
4ş# "y˅70Kv&h3
 bٖSyy\<$o@̻c^?UoDbyMkK|N}zDE 0%?٬HD+@mp9>GP@g[i`3Tw_T061O}57N{s[^*70^ZsE?[
`|WIH6O㶞eIs=<lw'$lkpƈ hz&12K	a<`FKEDt(҆%~*h"qnl6\
ssiToRS=7waM@;T1-
zsxoaE];#[Ĳ
Y8w=Pl
ۗZA%GŎL+Z'`@#jcYo$okҩv0V%NE"}%pB,&\wJLgb,77kvgV_*?}1z GlK|A)^=nEK/Gͪ[~+Ddswr:-e5p
p,I@0-n*:1Pl(Jhx\z)s&AW9'owO%kaVz#GL|*ӖtHb@_!VUNpMKOzaǊBv憳mM$hS8DK,*|8m߄I5$+1HxN峣>?l&sul1V?giNakMvu3ܼ zo
RaQ_,FfGRsna5n`vx
'6QaWvB=/X9+KVz{[nn	ƴaDokR旺OM<HC}\șdg[΍aO8͜T5b{1#Z+Q%MP:Sc$U1ok=3mZ!ѫ	@?:-4p
\#瑟IuӲվ0 Z#ߵ?twjL⻞ky4kߗ
|ZRZk!j)M+1lkh74sr7M2!1uv&e;q'r*3Jt.PU"5K!dpŪ;;`qkm$νgܾ^ՖR^ǮdެsJ+Z2CUVqÝN7hͅ;^ꍤ
GIzG:dDY\+kgnXSQQSzPq<U8LQIG,_10bΐɜYMr]oJǪ
Ty.=y2Z%\ __,~=ojŚk<fi薪~(^֭16yzI1L<8xfK0(7.jMW!M,JR[jͳ8b(ݒJ`v-X'G`ul9ʻ^M
IrJWę<ouJLBg.ROH1'_5
&s*#&[tiXwQ1SmZ~?V6W;~Sp/Yꖯ{>נ-MSf^cq5e:}e<T_ 8U'ZvǑrs#'1لk4ft[|bg{GFKgRc2WP|p14!̆O	bu #Ge<'#w:eMy\lDkbiFZŖ1:9|MqLܴX[A}$R1dW7ͪi&(a7
mnLҕq3iMɳ'\ElD՝ϻtFg"$$uYEtg<D5X^ѥ?e6㒡Xg!e/?'RjM&ו"D٤4&n51gw6xa1ݭbOћG2aSr '3T-;hMcFo ~f̜d/
-2hAփDY(=ZJa"ås`]GGвc߽J@[CCK_FStFMG7?"{^P:؝iP7 @ e.I]J<DK n0ؒC4x#;Es;*Wp9˲ieIuFu)ׯ-Ih>9w/GFZ 5P+P%0]XPIM=]P*Nӯ$R濪}q?;pZ`Sf>'撤=\I!*!N!Bv
x [NYC&7ޡHsʯ6V2H/H>XyS]2W3-Rz[a	/4VQ/TzT|QiQCҀ+ˊO9^N+H`W 3;ʐoP쩗Q=]a0?3>b
[n3N.Vt#! l]O |?J?>gZ>mc${X.FY	fi{aa]t	;}NcVI,I<}VlcP!RO4i׿"ҿsrGun6'v"kw(71iJc>4QjǖnxDƆU ?[dttc>}_42d rys'v	y{TO=-& "r=)@:B+JpY~;/^ 屉و@+H{ۖk\hր*sl0+K?}ȫɄi,rj(^"6-#{[81Bub#4][2me<見F▼/ʋ%F61Wߝ0W7~qGCv8tj%*ޣ?)c S_,={W*Z1f(Y|6/+]$6Ҭ'жV(חdz=39Ge"_k~y="
s{zx>
 (!QbQ];G]L3hr!xVڽO@JMR٘

bնBr\>PO2$Wu_\)2߷La$tKiD_i@WCײwxϹΧ%8Ǖ10Nac4 OG#?`gЈ9Oy&}
$dpj}ۦ őG(s_v}1=^Efo;A]C kxH$:NAM[|D#O}%Tt]H,L=LKh8,qv
A ys(q10|0pL$KK_Og`Y@KI4
r~Q$80Vtޏ{c30?9"%]VerO2{jkKK=R/@	̌bZ vjaERd=(c}^9HHCfv;23:^6lhfYR`Ո۞Me6-V~a_r8
'JU/4**fm߭#V5QvFzaMU|zSZY 6tsn27,M< z."د#&K]6851u3eC-@yw*֜p~ =3 <R\9޶#O5y=.E_t
P˙/lCG<`ZU5јeNa`3ܮO$O@X%XmyR_#wSX}g2/3n^X :B
xKӎO1Qd);
6 å⚹Ox/{}69a;ߨ5z[ӹǓcviB'|iMjްD2Q*S>0DQM H4`Iyo
P"x)P+Dɓ(>Us	EJQjS}GɃ?6?cدD=
qM ,A<P凷ˉh1UD|VꐑaKwh6cͨy
q!޳]/i"]h>a)x\0O{z5M2
+<i/*hU';&y6ĦMڎD2/7{Ԇ42g2ͽ'g1ΠT#j(Qs+>1P,:le#Q1⚐]!WܨN\݌EgbM}R]9%<۟%3`9jfFVV7׍6nZ-A8u-Y\Q2ȍ|r;u-z(7<_ڈtHL,v;gb&Zeq	ie1_o~k݃Nמl˓Y1u+r)ܦޯ$50UUv	3F?)~gTs! <OP3[1灿*we泧ôxJ[j{d,˩Kt!LvPOn`7鋯FIN-!׭ڧlG:x@CG
Ak/ڹnFƸ Pի
0\LuΧeQHhv !*@t-YV}ʹ:1F$F	;ێ*ejmb/߇<~F6i4+s<j+14~԰rHh*+3GM٢ׯ̽HkT'_G#.$U'l!X#qߢv
75SK(
l^1#A}2UM9r$,?.wq>vov讌f5_soNrJssoG?$(OVò	?MT~h&Hwyyolu~Tk
1+2رWblߕqyJ[F 6%9PvϗJ?UoJLc:jFtSsZl,sY6)P6}oea")|p@h:w I7bRx4ʩz[l/XW~T3@(<B/%ycc-;
Q{1t|>7DrgC:{#AWΎY> Z(kҧDGY8+K{ K.)Jo"js%2P54c(EbL-&@)y&9TB
k=`y&	LEDsDcL54WHQav^󠷕cBW6Brf'#C"NPGJME3^\~m̻21;%EպЇ565o|xưF#QϠ}VG# ҆MP,R]1(')d4U#z9aFISulcTj&]N|ͷ:C=QTT}7}z/M_ux 3J(
t)NcQn{$}GJNu!c2R첏%~Tj=QHyKdmK\!r̙gc`c3GsF|
W(agI&+21+tGUp}{gԭlm8SLYM:_Is*cwsC:/i u
:CA2-,U-S^O=aof1B<?McsrZQc.VBOLy~",ٝ妔|;GErY1J&3-@d%Ħµ+'
B-Qd˸0!CüM{_o+/JhLP87y6κQE0̿fz~^J+IS%IwwTdhۤ7fDgԘ7鲛pMkqcƜQF\	\m/T4F\Ղ%,987#(x91sοqJ;аK*P+{ZKp>] nֈ)[< XS	GɃE7T1&c :)3fSH2ZkoZ)Dcsك)-bTI.vCo*et|ٜ	:ڍG>2e#"RHi* &vdlz}
a0RѲ!xZZG}?a1 JؖW5ڕMrڪ̰ %qy}SX$Qutiq,3>=;u;L0%$D%\ Cs;{זkG	Kݓuj&Y-Ug;RRJŖ0 =|Rs1Bw=6[>N84Vaׂ ],ps?)
) p#IP
ѕ:]}5ZO੏:Ҷ	"?t5kpj
Vzڙerl]P5°Id?XpϦt|RڵWB5P
gih%);:^8ɓc4CMZyR)Oi=[8"d陟{Zfˬk^#ZW:[֮#<iw||p,φcIϭ_v~a6	v$XBL5:aY I8}ڬ^
Dx/ (JQ&|!شbٵpJ]a2doL !Z}
qb^2\W9/6sf/^Gы!VUO]kiQ:뙊ҥXya3W0=-pr<Y<wX9c8X&ss)vttJ
,3Zq/P{~-&ÏSmlqH]Š^֨\@\8|uYui7UXZ;Oh>\p3s#b{敞k6) 3;ohvqrqǵvN4/_:Ҋ@,#F唻٨fW0SmZ».bvډ?Lvո`)A(m[f
IFCǪqMMGe¹O֊siUy
<?6<unkA^)7}0!Fe[\+Disy+:АMaD3Ӛ4gx|4t̾o2ެ;˓[s&a⛎ŧJP?0 &sh46:f[vԉ}?ƽ#W'qɲë1ߍ\}[U۴=_` NݖrʲF?,Ŭ/
$c
 s~(j9<!ZA- P¸skD!`%/+-[LCD^kYS˩\V|FueýFM;+CqM١k:R}S9uE
d1PupP	ڷE{J2lMغoԦz)J4"
G[D^Xŀ$C뾱m|ad$O6QE
TڸE >Cꭠ2Q	bHgVncCen[T[7w}D-785n5Dq:hO]o7I7U%Av|~«v50`oV=(IT>W|R'KKsy.[ rߏ18s]=uۓ^mȸSd4`)N!+ҋ(Vѳ.H N~<=C5M-5hXtn;7\}_εĒOELjd=ʴ7;:ae91.,dx9OZs@^u+hpq\!ُ=N-HD֗q8~DGghQ9$鐳t5%	r㲞|%':XJGN\+*9]Ѭ'x.9CVtRRޠ0uRz7+4n}|
ﹹ~LdW&:	O[v"T a?Vpd7ιvyeMf*fiIG)MnGV|Α)#Bﵤȣqà9$) cJALC⢛s4y{ktÇi<:I}*BF_QrOdѩTQ3Vv_ؕv)P8Aaޕ(lfEhto%44ac&A(1Wԑ1D[<`BU<V_?<nBW
>n?QiiFf҃l182O	a
9JzGOȱ8vΕ\t}͑
!ȷNiӒ!9/c_hG~KrG R˶}a\R@ܯg/1ΘBAyI_İ3['
m*)]3X3u;h*F
9ؐx-[Q)qIOa^BϹqe8'*)(싶[bj5wuDLDjrpQ ˱]Eω9qKTId콌B87F&GN_^rG@M$ωQ>XJ Nn)6~_ڥlt㟻IF"iyq=.0ᨢ(jX;q
CsuC㲋8ed2e!_.wf-G_C:ߛ]@Ӳ+pS
mc؊Ad˔wE hi^磈Il$QU6KTs?!l'úv`r66?[:Ó_?Ft'
r +U6Kw$GmdO5$4ѓw,8˚2Iϊ88L<|0x:xγє6C}Z^9
߿z0b7dr'mL2]:(uē)kBi)LZ92ہê -Tت":E1"]KoY^Nybrb-3$|\0;QzVl6c^x9B(㜰TYxq"{n^RO~ qũFE`
{c+II 1#M%{4hy{{l\JW^=)o('$.s$bS7C7K_Z*򑒙	VK;>JhߣJOɽxwO(9O2B!a'u,G9Φ8%g*_wKJ?1X«rӛ#~Һ^ +tmJ
vJh{o_,ww"_;m%vCGG:n1*hhWjqL޳-1d`ϝP9۝W-ѕcuǘyI&.-KéS.xp`MQTLOiXE(gqbiaw|k=4[~n0U>n vN|}[{lB1p:9"Q(bv-QxgJ})3*W ڣG
p.ym,gw~O覻ggOv99)[.dyyEgJ/ÑJ[:cgː~teoZHv
V:[B=#"z̄Z>^	Yx	ENt	StTHPihء(V̈́'bGL֡]Zسo5g`Cb(D#-Soj`:<9l  10w-'i	7{.p`ܿ2ŋrźDw(*,NMv zyuGfzwH
јY&aT4kZ#ǈMO@pgh-MF:KBsq%I?͖5pTX#\&Yj,5BLc-e_p/nU07JW?=ڗU=.+ӊc6*^	0?Ed	{>u<t5޼MN:,Ō+,,弴|}t9PC]cL
Sll;7MR"&n?mM/q Xx x6ֱC94Keԇ!D
 z0.JB|Y*S`P#4╾MZ71hYhQS:1<V7GS"+FO"|7\wMz XX0ʎxz=9\Y|3ޗKqCWmfyNccqekXAgL|L
;f?Eϴ;BѠU1ƺyM 9,^E
YqNwH\HGOmv[4L.JD4fޱL5jl=_I5߬Jz6:q`t6Aeɧq9Q.'6;Š
D~w[Ţf<`e'Aɨ0'h~qwvxo1KipRpr4u׻/9`:Q2t3gtOۄ]k[\O"l#^?˹
Th!e?|oTc"#>.0t~CɝX,"3RUP0} ;׷y%Om*"jEM.ݨ{Zǟ{&YP~//G]ZGnH+r;lNby^%t}q_&OPm tQ\``ej<4VTR&NTzi.3ft3ݱLn% |jzD
yv<=fߵj?
L_ˍ%TsDHu&dSKc࿾4lq4m!1K@ȫ|?DjMa9W2k
mxj&qovQrVc.+||
VYzg`P($hTXV1MBdZsՀ0߀0~	NvE$x!#l<_\4\9s
l3u1-^GgkSyER.(s\oN^?`%EӷYshUz9`iHa7DY]~ p#饻)bgW
pix^NKPCv;#dVT=SMsO!*ΗcWv,sWbs/R\?ݤP4@NAP5lbuFQа/y#gڛij:$iy'-B;djJ\!.&>bWg+M/p(j:]j*$btnq9<xhxؖ[G!VݴC}_$r	dG=INmٰ|@IOR,(}!;=em5W
KJD^ՎkU˥E\99['	hC}
;s̑؋uMрdkۢ.ɇgW)+HlN>29Pe\Elmf;nv8c/S3i}|Elq5
p1g3JsQƦ0N=W35[7XV3ئt|pNkWoHïd߸$g$EBPĿ'%h=#1HM8HNF{%e1 jh;ރxK]o.C$*puMǞ݆V傮Pkrt"ܴ˫x럋b^]P]
?k{;X@ޛy؞Ұ	fNxGQ	qM$}9Q߳hԶ8/c@r{~9@*i}y_Ǜ
9<Q\/wb<]>ǳO8v{'S8+W< .[Cs3luKxeO9b~|(It&oY}Wt}_cfd`w-[z-,	2F&04ܘ,]ʆ|^iǽ}[2$~G5
6Ԡ6ل&FI4v@۩&&lJ{0U2ys9S&]VA3#';m'=2{ʰIo<[?zy03*/{xqY#B	,KwM iݞ;jCympM-RM+1}2M²ݟ
&c6Tՠ2~B_8m6
zB1ո+Lnh`ntzOԸyݩy8((k
;^..?,M$ΰ9gTtg+}ԛC[Yx(JsuP1h)	N9m]YA<7J(gyk%/Z}^b0Nblz=S
E#x6ۘ*-0c`9P[攷/ȟm7;6RI:4:)-H,s5	(9@n4E>ҥ1Uc39%տSC>Z4R XcK>y8ZXAmt i23a4}zU>C jrѻʏȌ&b0etxxT"(l$A%x;WaH誽6
:<WW`;WR_q̲3-	.җ*m4>cHd1stM_5q6@
³C#uXtSgGxNVr", g
rDtQ09EhۤfY(=MkJS+ OئYE[8$8T_5]Ni#?*RmJ
[mp r^3mk,@Ns@ke1ҳijmisp4h4~oɠh> uDF f^gVM/vO8pf$OFb9M]ivIB-oӒ)3dgc:tEK_ p&Et N]?SLr	w&	wKxX6',w3yAsw[niMi
P%#aﴍHj?wdI>2:2EwDu/%ҝ8sm`"N(Ҙt%B^Ji\ÁC^~/'绳"3M	C3;0i=ؼjIckn`#s
z gƧ&hrOu2i</\)Bx'iQ<\KL eYǔ9
vz<TaЏj{$έMSl֩y~y1G3K[>pޝt|(oZ
H.k9YsbRD_XCަ`)W;Bnd1خy p,Ê8!q%qWXzM|3FqansDÖ-_hrNC[q\s*E|1«ˊRHH`
:*OL1ntR&رЮTb~_،5
D#ʍ0FVNx8fU=U5z$cXJbu{2.ih+SbSFF:Kkxw^-JәsiV{Ҡz-Os$gf@6}jvl
 8ȡT
h~qpS[zIS$u_ôni6Q}EFm;kM}[\^kfI-&KRDίҼExNahNPCÇwl%3Zd9e~:"
"I1>nމMm34F	uNk]y_#|p~ʡ=EKܓ́%8]u#8qh/LhEbEAb!Fxnؕ%s"<l6-eIU?թYbn^v7Q[o7CPj7
V]P!# @Z,ރDofhŸpByRR~	_>rKcon==,41xv=vj{G*7k- \V$=Җ=7W/zyq4U$:# $Dc(AsY>vu&(CNkqu!ڡTyoۥԑX/Qi]pZȑy"jUob?|R<KG;ڣ{E/ǶNk*~*<W,vK+IlD[Wc``"*]'Fƈ8\}eWYbhN;Lt_? p OP-QAZ(9ZvŞb}lΪQ(mc%}k
:6Lں*XE6s{<;zksˌ^K	oUZ
?8:z[3B%FpVz]mF4O6=c:H3Jn'X>$m{;(X&*i֤<Tqgbp[mdQ{:3-t\&?9$,H	/{Y<2;g(ȖV\3
'\'мvQ J&`$/`bo
+F[lLфxTt "i)62C&(OV2!-r7ΌzR0OS}tĥ$_
P6q&k1q4Z{>pN 0H*\6:@~E<}C
J{6!E:Lg'X&#Ģp9<;j^{i2_M9>7Ҳw:21u5^ٞfu?Ϫd~Qqی+}kigJ&+vkGP^P-ʴU72~;qk֟ٵ22=C;#BNw>e
QzKduz䗆6V,,T6^V[\<Yiio}eP&-m[܊b]kKqE
)n_܃ Y}3;7$39ss{Ͻxg"'1$vVI}#j8wdcP` vl#em<Jj0Fq}HVOAY-ם~>h,s+qu^	u
GJ$9/pM2OٳGv|i~.d%{zO5-HkiA⹳aԓ!dէ!.ZҔ+~zHi]b<0֮QxM9=bNi짲UƔ=vad.#7wk|IqD0.?9VZ^.6­~<Л.qZVt̪!xс.$faZi?:+e4+]lf#amI8Sw\Zңz RLׁ\\:4bX%g]Iv1$1Sq79#hM_T=	űs
,O-h)PWB"jNXpK䠣]weVm:x%e\?]#y"gr(sS;c ᳔'OxNccw:k<)]O#_nTmf(Cj
,;~螚YҀx
J:;5ZC|6\y-eľ[Mkg3㸥2
UW]V0k;=f2+"	stXgߕ-wq9Y-'V_f(о<ѺY	m))h7`3	pȲc@d9%ڒGbTѦimnfJƦPcG,jv{od}U(e*Q,o{3>n[O;)@ kÔoe?k!\ķ?H/7^&CiN,݀Sh	XcMs9O?lHPyqDa+RɴVtJ]

Y{BuE'&ۓ4m%Ӻ`ܴ}+8GkIxiX |
VC
hXR+y6->%}h~q
-r~ؒ^ާaZtȼY7hIZ.7_h쯶=rcW Kf,hZr̲-Bf3x>)_}bCٰH`,
^!y^jlzzVB2G۵ ,ڬܓ,zR0i{[񞴞+\]o?nԳr^jiDy+af4S]B])7	*n'僷QUFD)3d&"fYTfjyXcNgˠ|ET(S}up:=[s=AUk Nۆu8̋lN^$!s	vPAq9AbU;>3cqh^%x9/jQGP1fۛt:61<VHV5bٞ4!O^]HΥvơPO,`"\a7|
.'y&liNGBF^sbO^(ի#ƕقFS3~
gsq.^qyJP4)U$n8M
ˢt\R4?$~`^1I{%%[C#4K(Է4$AQߞE%6L%@[(3gʓ7]4
?miEs?yUJK U7鼫.#ehG-bKE@V/(n!_h$Z/)ֺrL:_>4ip5:oP x+#e7#' @KMMKFBF,	'j	Ɗ* ~H\J=Kp[r4B웵gQmƆNGlV$Vl$B6aW}IZ|
"=+|Vꬱt`e&q~ɿ'KФxxvh-br{\\B~	9EOnڌQvل3F3W[zS؝/b3)(0(F'O1ϥv)tXecvUi(p@E`pǑ#bO[<{uםnSvJx%^>,\uGķ!x &|!3;*%  tH)?!*.~*7X#?1Pˮئ{_	;=,k<*.RyE%(#H>4sy%6ތ(&IץEOȡaZnٕRf#rF0+.B#@7hs{fFH&Fxb<lPGPx/Ϗ9ۻQ$IYL}ɯPf 1=6)\S=]$p,<Ǳ|a)}G,!~8$}o^KaFϥnUS˳c(nr<*gr?G^vZ[]U"q2r;Ov]DO~Da.mlb*~zɔIq]];;B9ϘB:7=L==L)rT+tihhDkãzT6br-`svY3ۯ4yB樾=0UZkhPG}F!siVWOw6mPZׇǡwg;ݍ \GMS
r,i~)鎰DuMX=l({_
-c*:
J	[@Tf\r@c c
?Vҋr1[v,ŀo^Δx#׻pFB.;ā"I$]NǍFx (~2uˉe趦\8*;v]&RȬSPv2|oHEE9**-	9-1Cb8ޯwA~?IT%D'/,,]X`d"憕֌
2	N2#'Drn{!jlNcW
ǣ0}'I|HoZ?vvϐvCԏT
K 5r&vQW*blFqrߝ(toYY);lG^G-Bx̏h,%#F
M!ǱSӂB@\ϥ2=w]˾..CgDl'FW%a%Y(Q|xQlȤH\GeEb^hs,	id.ASHy4J(A:QYy|;!,hcɄ2Ϳ˷Зw!qt8wM{1jȨH`V"9c]]v66bloTޭ'$$gqsX[X3s	1eRc6Gpܮ&8tW79kf6r xƤ?ܰVe-Ro݃Y=v:B.9tl\_S{k|qW&+rOw.C__JWzmQLLԳn4SMR~&ӫ$Cɩ"qIn/W|dJ\q<Xl,[27vpbI|:%-WZtql;Ķaa3CrczV)ꑁMϑ(g6-~a|*eG.},bRg#;Ѝh4&0h+ZFZ:FhBbHK<~r7's%0m'b͛l,M'շx4
_\{tO:%=8P2`142<vL˥yguӀ]WItI
C9:>8DG@';65KdQI?զ,&ub@?v//דj?2DGs2kE6Lq)7:!L͔VHә'kWg<_b~Yhi!wWlnud?\2꺶n]L]čQk	j0yiV<0}UWlR')9͒M!(C{ʢnE>Jm#Q*(2d͂=iz{csB9Lp>싼ه$LA><bNCƒ:J!$ޯWK.Qƍm1h]eױ~H	CK=YOl_[EAkL
p[k4=|Ղ9â}tvVktOy[68~DBtYEC-Ft	G-hQMFq>+ĸdD΍V5#Ы˫y7P#aZG}q{ou)?'xiBsWeII·|T0l>n%04l7v"3@?~Y3
kWj@(I
i#d^
]`rwߙ9c٣G/7jHo|Rf"أUYuFs͖tk6>Z2	׳	[ޒOuˠS 
GST׮0G367um]](Ӥml
B4?l]t^|MҖ)rd@nk2<U))gWu[$`/cyLL]	 
u}s(.%YVC,=-AoΪ5nQ+_k`kfRǜy9p}Gh<>nIrr$W$.w$
SB5J*s
Λ 8FaG$ɦ@'s1*v:Ӗ*λCг8;HZbTKQl*!o||r$

z^xwO%yQwο%W6BAb]XErXKg^f!	Z.QY~|#߲rQ[9jےsL2|6}I	VQA;E,Et鍻@V!rƪ~e^'큂T)aTa|:DԴЕ_jCķv7	Y{Vy(Xmf0U?Y<Bq/ߴB:<[>:g>(>
D,lZn<^Y;
~4Y%
v4	4i+/]X$7G:x)I)"XZy]:B˯ru<pwN命TㄮC<+aR<u΃
62ϖC@%K>cǫy ﵣ}8!t,11:5	sӍ½k$>]TјW<TL@dRxTB<o7L4Mǖ0Ks
3?O~U4k"X#++x&Xi>,j
m][	/ʍ	a>/Oe1s\7rP5Wsh| 6Ϊɑ41kf@i,q ]sV|n"5/3px0>^0~z0OIuz(uoY%3c^=H@@)]o3t>224[:pA&Mn
emb3' -`KXh4LeljQ[:BcYf	sP7PN/?>ff1Tl
Z~&)[eE?2Hw/oK^#|rb\~nv*|<` ;6׬uqEuxWq3q5(lWveflrrQOrf5KI~l?HҥE [dT>^K(W£ޒhU c@>[u."$0<s(k!7ݯ)os^ꨥ0E:j?EEڮ!~Eg߀ǜhO6&6qQr#!4З/oP
Jʞ$?S?|KhK9Iu546{'Sxlk.=N?y)F"gy[+O\?JZS؃ןFu!U(/bqS	ʎWTˎuz[(#))6ٿ~3Ms}wcH-wd"NTz;\n(Dpc2"'&zNŶ"5
%Nrr{tw'ua苺OLXW_kz^O6bhNy2 owvǎtZ#
.rOjMqy֙#Up񂜚PedU̔bJOHGK'$=0.,״4
=HNYem-wP~
_%6UMLs̜#PޙĬ ;łIJSYakupyQ{#U;5ʴT9׷O^`?khjK<&*Fsap$W7N[sR!&5Jv.5Vtu5ۀ{$FbvM7֛M^JG6jd>*)I~	:75/_ ^8tQ)r^Ł51ș
2+VvHQЬaʳ(˥v̛5^_\LCLCK? 1k%*4-C3U7j?+YkԆs'ml A׫S;5.I cURHJM%e*QSŰ4!5VSDPiGwmPa#{b]Tn9WIuIHZ7{BŦf}#XPUX0ʥD&\>f7S9	?"ݸh%9F=ޚe$4

xj36UlRRd. v*6љIF=g)gpU_^-s\~/w_qүG8!sa\W<t~}kъ+}/\$풡jaeAT~i+B!wJTI$鳔/>Y>Okz޹`$1^DqImm?y̵mԠ,LwD@nC;DO0]uӍDp<Aym^Q6hZ#qi&Tj;&!^#Ԍ.E*Fvý翉	AZ|rAkGNv"0U!Yʍ
-*fFn^r3{o^D+1hkQrώ,H͂.k-UFz^U-~x
{q:ځ:BNB
%GF3F!*Y-IcI/
r/]+1nү}$\/#cg
1[0Ȇ2]ˤ"-+AK-H*,݇%عxC~U{r乺MN-nެW:"W :˅F/$}ƒhJ+ļ@&ԖR˝LBX&J<*xzOM0ܡ_d-%UCB
G)S 3'jg )+_~;CN;?cآxzEP$vL"f->HFRҟѡMEuI^T~oTb
[^]lu>)4U;1)WkU}l8II=]P_l\ "aW\@8#sz4:Q^߈m,Ҧ̡,@eLY $i^^lGrO!/r
}$=ⴿVZ
MlL귕7W5d\˾Mł:ED~5KҘ[sI=X]1wcğh/7#FKk/8]0цC
(Cc/8 x+< yЗ3xmŖ>nCj#(A{wڭ9IaZ!?yJiOqgF`TV\L25xJC|49URi8x)8;6UkR7Dbcզ$5ɖ10	IKKotl%{(7jhOF=p8NPZktŎ]Жnz?(*W:+2U2Usj2J>`32MCsyljHWnJGwѤYpZ^`?eGEK'7ʱY~ޫ6؋)gj)=_vfl꫑$M>]g36QmGVEiG~3_//۸:
&SEԆߪ+r^漣]+o`S})b:g1@\i|Cuj\|8.pڕg7+WB ?K,߂ͩs:<DnF]
$
F:iWzZkoVX
:nPn&+{
Gw}$VT/;׽qɸftmLi0;ȥu/?][yi	!r냺"5fy +{"R'QpAzϬZc(#XTy4tLaV5Ȉ'NW]Sw߀yvX8*ȝRp,eIxR.?7N8
x=M.O]r5raW+VAm,
<4_x
ns)f0Ϊ*QBߟJӒ	YO2Jmn<TWS
;Efmdoj7Z %t#tTDJ$kJtRY~IICGnSGgUk?]@mu~֏]S@vZ#kd]#В/3d<4m c+\ hTSb$'v=ft))i29]Z--GBP'c?.KB.!,&z'Omw	
f\0sf\
*QMjyO^)0)./
p
@r!NuDPEQv
\Z,7E@
c&Q&H}ـp
f9-eBaX$3]48UU)-/|[nj\Z$uLl/H[Cne
Ai& R9;eon&EWWD?މ"#"ɭ\Ii_߳rg퇑8bL8vT:o>'w@{1<ɴH,_@G5lKYFrvils]z#]CsG~ۀ
!M@_z+E7K3c:V}a䅚@&l35zVofWL
G1xXFͷ;(G}Y'(dĶс`jV09/+^b?#vh4׼RMU45P'[*οTY2lxUKV)e
=Q:*# oB<s:z.KC/: /
_Ní'oXxDڲ)%--MPP-qq2zW  eglXSziP6fܬǠVƫpG ;6䬟e-]7_j]qYθ鍅&-^,[ӯ[wrf}D$!!A@[̤2R]ɾ{͵o"֌-ѫe3ruLQ~k~^c~syߠڕ_;+t["6{3`^)Q7ɥ0]Mz7*8>Y-#ƌNkI-՞WKa+U|DZLr:EwC#?b2֥ۤr=cҋ )X(]}\G ?}.lE2pw[.k2V^e챥O!7MU|~iUAK@i
F?G=1"}RvQ#:
-4w46,Ԭo<yΥYq%(292[Q
2)	J
~ё!Ed6-=1b篙cڗqu>/KU7Q
F&е;Зuzq]Kc\ϖ-;eav_`ӓto)4fuz.};BP%ȳ]#/;[[FĩagXa\#Bj9¶+SǪĝX,j7IĞ^.xmf,.{GIܢ(Ӳ'FТ:}pwW[+]Q%!whlL8D32*JDakRHe7`JdNQņȡ9:f TZ;)'aϽ~Zfa
m@=P)ofh᣾%_=0홎51QOQtI^WZbYOd[+5{Vu2O̝=jq.ɃKEW6~teOb}ߥmXX $pU(%~r4y]k8G96]
,~ЇJJ^WY,?d|8[\cZIfnH:=F;CHt4H	sBl\z<b:umz^.|5MOobN2`4JސL{3^=$5r?-x˱s8XVW5
?A
3${E}<)ҡ5s'#k)n3}ʖio
-|CB3dE(z9o|vl\낝Tb.iшdq ]^ӼAH Dzn<r|+Kw7\8݃%obN/ e R"ﳋMsڏo2.%#
X~+ )I1Qݒ7IU*
w1k<Kwn<,U!ypJjqZ/"e_?[c&)k"#yC@;b΋gܑ
H(Jev`jg2@x a<`gK&ojrC?<qsR2ڏř~cE
P{.$]lFͭꡔBv}`_.qxd%18k
ظ˓&{{E+5ںzsIԿ:OI݆.	5=׶mQuܛvȊmu|o٨3:0ƕ _+FD51%dI_
Z݌lkhkCvnfbfwcVm!!üԝޢs2S
X#-5'eV|3]N'zuUoFt,p`dcDJFxz|\e+M(tR*+s]F"Kv6^6*CVh.,FJ¢Id}I{H`MW%
sL
O&<*o;9f/(W;J`?"SԸ6bj\x>&=ւ=)xAfbH#s_PRɃ	]Ej]\4 5X3mdu.{k|T+==QxCMbuVķ
xs+)L*-/*E\\
	%y
N9E`MFIIA~zfIFi^r~~:D]R]B<HcbJfN~q"VP9̂Ԣbja0xO 
Jkuxxqex.. vxVoDVUV%T=LSHMADJ)ڦiZ)i҂B~q6۪Z$ߐ8ri%\ΒZ{?ߞ囙⏙ßfH
p͸b2dcWwe$fd1B9<ǿ>.Zg50Ė
=q,׵bL!}Ɠ|QtGQ9~Ț3j!៾3k<#"^|ld*OSiuXp͉)	iI Y@z>>,YXKDi55jbhO$\	=T%?Zf<RE7&uZ22&5CudK Z|"bG<!`{G&{aе2Zj,Zہh@y&t|t˘cW)TVhcAm*~k-4MZ2< ;8^nW.ƠmXuŷn5IBqN,>:Nqs/6Eöz,d1Tk+躤@5t~Ri]}Ԑ|ԴH
` bq<@}QIϧ#[JDjzC6L|/]uƲ-~EgsH_2#`x箷
%a@J>֐PT+q$({d	S|}y+TwT̗tÝdvG5q@O*偽EhCJ:%vZCaUoILtZ椮SɁVm/bFbqr~'^64_5,"U)YUC
,_J<	ݱFk.ɾff_院$N@jq *U9.mbU\ښ~ZA1SXGD?\bRkkh]'vǻO 幼B\iX)r9,A5m/^	i;v547u>:0=ju^h10Jpe6G=Z7.]O/kP,T 1;"pB<9]>λ<^Zh*$tTT)*pvwRM14a7'Hxr$*Aq-U{(g1G9~ڿ0pNxuVQE@D ..!Q(IP/NLns3ݓۧyQ  ]_ꞝLWU_}]ߞ_|ZL=Eߘg_]~tJ"tQUI%ϯ+Z粐 . Ǩ@]LݼwPed gz:	'铋}t,Xa)A3.KaVk*m`.EvPW 
MAgZr3PL+p
p>Sa(DNf"MuY21<o*JGdpR"o.۲'1|B5aR7Nh땫
*$nN;("AF@?k᫫9̰G&WO]YNLdim-YQD0CG8$+"YٞM$tU3rF^*JϚSnBAA%zR#BbZ iJl3gZ(1!U'mqm|-(ًI
؋ǯ6y@OhD=CF#ī޷AW!HZB1az0؇?Z:d".n.WKCa5lc{A60I]g'?c&q6%䅰ǓXYV^rmˣo=rڐڼi!tZ~F*BRt>an)Tl4jtm'00moH
G7Jm .L~KYpOח:3l2,;5[,0u;;q;<qcf+NuT^lAOd6z2gFdj6n;xcd؏/38<<EYJ7ܿ3:b*hzѴ\]:E1tQ[sti/f\g+z ө';ѨL
Br<t'pe>񙐴޾Tef8:)f~f1|!
9Xu+iV{\:43ثwMMcq~$@uK^~'/qXd<u7b!JuU;.h)#MQu3jᬃ2X9RrgJυ_GS^,2%EiFbXa^έl@Zq
m>m\US[buk0JRnVLu62 8eD\͜N$+2aa$Df"w˷>l`;z
p?+
Wx%1
0 PjFGOn
N"m~@LKo^H<s}[\&z 51JZ7R@F`I*ɒG+#\^BIUitju`7|p)U#x{$r8mxuV]s6|ׯδcI1'uuDܾ 	I@_=t(KKvRxI_l~g4xt^YCWٛj<G#]m|6	rD}D,&Z'vCHrT)S𕠢a+$a9ֶz <=
8C:hC%ޛz<[U:YV*Pc} g۠=F;'ꊀچKRT9ePO@my2XDY&xebz-
#^ſH
>
GD
GN&{A#(B;MQAm<̂|G~Tw	Zօ*6؍45wr$U>Q5=.siBBz=кV
~HW^lrQx6G2@
TB=?_-=̗/KyZkB,RSU:Ɗ4~tPN:bt[U@6qwf6-eS'MۘD##p":25[i>Ee<q,g^PF';ٱ\Vih|k^$j
,,%bjc=<NI&H|vG7'6mlaҩ&\1=K =~,
362穼J/QB@r?C7elG7RC:κ˼FmYC:w
ްkgX:EkHhkL"SNSϺ2{-t%yeq^doȷMc]xǳrmgo/&nIl)=5Hb7k2n+Ixyp[blg!ę4@Z+Y=?InE
GG102/rŧeO8DkJJ^@Cs^.Yy@UBSt@M)^qG17'U<"U<jq 
6K'"VGÊ.-4iy<+w>t
ĥ}(rox{L+f.#"#pl
v9-SܘӴĵD3v77>@C; /bM?>
wqH"4ri՛DY7ļ{[ǰ]Fs# /l7<C=GC	vY=m;	IdCԡ=-8ȁ0]-t+@}
7fOQ4.&lt'mceog$cZA3("lcPaDǳ]F802UK=.ڧ=kv㫿)GWbxuTnAT!9#qi	IV~ŎA$P#A\n;dwg(_|+~p3]UGߞUV 瘢of]4PAVT'r34$@cTZJC-tlmW,AZ[lZ5FR%;<<5EXv4b' A)E@
"@:Sv|SAA+KC.T"+%v5ٓ^y0#q_g8ŜʎW"Gq̘8$}#ie~&fMVH1*31NYF0#fzFd8PzI*q\qDm=e9
nyТ+SmL}=j^,)K"te[(ݻGuM^btʒez)߳y
K*ϏXW9bfҕ%hd*ri"yºgwƱ ~2bkU4-@ՍT9Ny}~ǋ?UW͠w>ic^^kL4}#U",
3+0Add ڰRbׄ	Qk5WZfy{z{x_ĕ\>323z_`0|;OsPF>sD\3Po[jזa(f8燃3Cg[zru.lx]e/F_M! #wx340031Q,+d53B*PoCXl!DYRN~z|rbrF*HF!>W;WOG<+̼b>ǆF˄.^wү3YiQ~N*XND{n8'<YW&:݆'Z>ƽܘXdb 
Pv̛Pj//X m	[Mx QBիmcECx zDt;'01ogl u.7x[&2oD7+<\iE
i9lncgk&WqP |3 Kx340031Q,+dp+lM0m`z&CԼ̼T"|>$-uMkwYwkyb7.٫<֛gWj
S@XϱqzoN̯!Puřy9`RkVv
4qaeu`
sKnsjUiGFk3۰M~OJ*>eʁM[zۂsgH BIjnANbIj1oos)a0SC77ԤҒLuf_*!?/!rۓ]俊oWd
6 7Jxu '100644 __init__.py 6JԳ[舗7o2͑']Ej0X	ņ_K8-d`VD.ƷYj24Հ\/dʤ );z73ixg̖V7UQo
YLԹ ].cx}RJ@& uz$ZiD8^$,=RY|8-|
$Ŀ؝ffy]\n,E{&<`
^*ʁPN5
Uuq*&>rM"	zyѲM9?u(8مPAʎrq.il!\J	~v{;ン>m;u $B)Ʌ0+FȈ7!℉0kԔv'}m̫A!<|IfB)`+J1oM2̅}u%Kj@S?*s:̪	YEs
jgtQS>~0k&3ڲϡ~~Xf0~qٻ/s+HxU_lSUeewnCm.ʟuts"FIN{O?
aMC6'P&|0d1ĸxν]7ڗs}~Ž{f5#[쏐K%bj=e>ز^,DKhXu^Ym+e"-i&ru
)&)˗rX
q]*ᾖߎ6]6(a:u@t	4K*:E1(7IvԲ_֮aA*9/XsM.>脑<$q2)h%l)+btʺy%gˆB<2fMYGe{ֱIawp
8t9A2
_ ZEHEB{O0≔cR3,CQTgM,Sɯbe8թj0Vbb4FEXC?pIO݄_Od+WY|jʸcw9Re@W^,Sxq=-ZD2U^όsw\cp/ dfzxu}y^y
bU$#"j{A5@၅5nٮ΍ll\qO졞FÜYpc"F1HFz>M^;,w߶:"Y^L$RH+d&H@LT/
c4zM63%dm*#6R螀3<GQ'QPtBn>@m}͈̓e55F 7DA`T=pKbEOn&
+&R!}!az
=(M+Fz4oD‏<ΤQ&"ymN/j'B7_yI/%Ysh$t$'Û#Xł{v
bɻ{U GYH[GQp~!9D''{a'
˻};Lb	ȫ[@&T&2,GlAkvv#!ПLQV4%1K!z=m$TfX< 6@kP
t
,'X$TDLeCq036mk'GZݑ;*YcdP-L6/ _G/1r!OX'}7B[ױ#B~|Dm,?mOT<'zksu[侻Ogi"3y<<[SOo?!Xga4cSp;xR1kA"$DOO;;XEӤ1`!w7݆{`& rVjaO'lܻπE)fٙfz_>gkw sy`gR*3r'<$ٛ8m~\`?/FAգKؾVۥ7\"KaDh^3ɂd_6`žmlXj`c5AΪK)xZ0qڭ#{Oi
®$_SEdܴJY@,U	C7\AH.JԜ@'M7A[3ʠy%>7r7G_	G/vƐZdٮeN%
`A#Z5ֿ,?Fe\E{:	egu <}b.N烙]8Bŉ!Uw[n<1c@x31 ̼tm#&གྷD֭ &
cx340031QHK̩,L.(a
kwr3ջ8B6CʤT?[pW?E%yR!TQJfqa),Yn7zaFԔ̒"im#}΃۶+Pey)UD8ם=7w.tt1UwDdg3̒
'o,V_\/ ilxggpE$bEvMNIw/KaJa"6: +xgg[dWܮYw&~/U)r 'xgg`-r{ J%[{aۦ ʆgdx%a.{|gELy98ؘc
^0x%6WlCc88B V6fx.V?	'c# C=[x[/IDZU!$5/XA))'?==3o#*N\(ZY_ZZVZ4Y7H^jJfI~z&f&aaԲuAf/d5pg2&qW 
t%MĔb
Լ"]U(@EyřeJt nCxYkWRgwݍݽ^*If<agɆ"0Q33Σ4ď"B!_A(ATQA T^R_
@>>B%VZߙ{9;经ss
~"/SzWR5#ieUd]r	*Z9u!Bg˺q^;勲rSW4E*hIbRVaU9s])rQ,]!)9)%u&Z{c%xthWwZYbfCRQsĻYRVe:DZ%lub\iiIbPW͔r
[6JM?VyxZeMʤw
|W-p<s	K]{Y$Kx^.pI:qMOfv+dj{Dx7 N53 V(_,F$DHl˾_
Z {^r?yҍ!ESc by\(`-aRZd&St"cPt([4.Uu9yErp"Ukl"udA'1jΦiXJW檊B*+	Ωz<N
,1;$YBD3Ǐ>.=snt6QH\cWNS%l"D=>FQꠁ%a8Ն<91i^<fgIX9tʕ
YYln{"ax׷q]im(7zyy{{b}Wy9yql H]dhE<H/V"燣]ܻRѵu>w.nD2^8Ũd5@ھ K#"#}ZsE"z𥘿%xvBB.Gܱ>	ԍ[^^IJ{g>(,l1z''F6jy,CxbF+cu7dq<&{)FGAVVOڟ9>6{nNvƈ&m f56w=IJ4]4|^(\:UcQa$pBVr|ͺ6пkun>=#	
pwv
.`'׃I"qR2te-wG{!l(D@(J%4̔=cIIi`y0NLl}utD;@{^fp`ErGxG#OG@͐g=膥 ;O#zsSqajil~?
|`f]ȥ$cd>ws5i6
_C}Ha!Q֌R1b'5Y^C'YYIX-F;}M"BVbBMX
X[2
	z|shcՑQFY
"qߵfqt |!XܻQAKpz5\]ݗe
PCsqN[)l,H8CМC):p]:laQ4Yn_rE~'t:O}ԴIdQp 0YEphV	q3cɕS+xad7kT	jSz|#q#F_ĜK-aSW܍4*, ^lHw-zOHV~b!'Q[&@uA4JU-eE9Ef5z
IE5Y-`d3Q0 gmS]k5@lc#ȪmUD֞[(RtDף5UǗQr<C	6͑	j2PJ\>r*s*7.
HD [ɲ:I3kMQナM	.!~[4Vvr旍ZJ\"4ehL)en]2RMi;=2.(5ߵw\h}IU(i"<yDG7X(uUטN1X=oE,5%Q{!Ou`ـ#Zs;+qXMPSv5PŞ+Y*["0vw~JؐiH[p?ǆ8~SPؠm=@MN鎎W/(qǖo'"i8}eR:B. W)Y3.:|xl@8hi,"H`Qaih:Ia/I{L
|
O'ykozyr9=n (.$yjd[myj.-fI[Ȏ6Xlc8gWLܦGm؄5{}kD#gߩP44b1%E4oGd
e1ܺ:hRx340031Q,+dhnYF>-ͅO/TB䔦g7ޒ[S>Z]JRKRA>c݋[<X⌺8g%YgvAhwSpQ0'$(1lrbNum<k.D|1o҇2Svm;r:(tүr'%sCdBnVqكI|:Wy r?\IxTkAfۢM+&ZHbZli՚ԃvfw3H7-"{"GP:Ikzhvf^penyF͵HY7LjXuv)reK<b v]m82!w fdU"kl+Ѣޘ/7j&<
v\͔tukg%9>N>UȢ:&SDY%	He%4)dϫƖp<hJ;{4y=/w~#ŇBѤwO4qo9Pip 
MFH:3q*79ןxEa%^SzfPk놋Ih Z	DVWe^e	m-\u5s]h)d#"X'OF"7v,PװOER3L).뮅RL*d"'RM0+n{,Klʎ#2fKfޒf]
,^x?Rib;\ߖ;d"RjEdPcJbK7,)i
ec#=X: \j0.éx~_7t[#0U|۷#`;`;<8<cޱ+x 7[xn6=_)`KQ6$0t@[͕]9H4rEywfLj.4˕Thf:<\͸`h&P)VrŦ&ZdBy6״sF.ϲ6eZ+*鏂-b԰U1様 Z6FX k)	~("iCæXV-oxutt4HM#Wf(xMQوz
^
	g$gkpT, `l>i)	zl:[QJI1+'I8UU 
{V@!
[;O#4-n ~L"YU_ˢ
[מ2{4q~eft9zG
nWDRl7$Gtk>X,]^Eא@*?mCe%S
Wnitbn/SԪj!rvid
K
]dD,d?~I޷w\@" @H,,n[<թ p詬'H?^_!5F0:p&й%&L>/9aB3XXK%}#D- D6B,L[V6FqrM+7vR&Aa`´02	uG1[WbKy\Tx6}PJVݱP0`>a)s"
Й6_LeF<r^

$b_q$*oxZAo_<9'm|g`T3BQ,Z!xJ[ u u1i
USl B[${3rʊm6a5 IHSv2.Ÿ¡-%5_ ta*`Fm/ޔ57hpc$q^Zd	/KV<3Q5a%9Nn`S"O"iydwtЗE$MVv(@?V޳x[E{}4 sVK_)g2,ыG%#C)A_bDu-- Ͻ}Pm
N4X	sjn:ЈozMr9ۨvR&WJA[kxMNJA4S>j-YWր0yXCa=|EFY2&Qjyjd<: sIE[=Q5:Q([7?HɚP MB(5!T:H[rؽa
_s%8!pg!؊K>ߎx'/`e8y=;_&[9edB~]#ϭ*w@tϏS>PP(Oh0:i2S7ڬI%;sL^V[Z73Gu8julAe-Y1eݲy&bM7ԣRҳcI$/`GNȕUb~{dM5ѵfws34ˠJ;0k\'ڶ]ǻU5@ankTv$(PÿtA_zlex\_#R#}}}i9g:Bd,exWIoEmouT:N:'&@&"%iOxt75(D	nD%q@qWH \B.X8rmzvaUz^zKZ:!?0*!G51Wr&hh[:,꺷LIJr$+966Uos)LԗTκ[e	-`,tO'r0w"{IjkS'J$4HgQ2WVɭ"!R5&3g4i	1l6\ħ%nHXD]ѬR2:#D
}([`a3L9X%XQ
CXM-e"qi8cɰ8)s0)9&:pe#&A}7/@4eggNO+s'ٹ쉙sEg0|
Ξ\'u"-73wa}C44 N%Ǆ~
n~X7TLmHJ(mk0iWMM墬қ8Gl3τ# ?LE:~4^S.e3ٿ6s틎SmXӉ(2ЯKuqF/ߕWтNڟ2x0)IoHP7JhOR+qi~?N@PuKByqbEjz$Y9rm.y#݂M!%4bhEHn#wB荆o׏F)9.J
	WIvvyp+:0ؒQ }LnigkGUlc=
biՙye6;zZON
ȥ@fڍ xy~&m5zjWmlP*D]Kltjj,vGHS8CS	1wS2ks&GV 5JOo^> %[p@Op!|XeJoD|RX<ƅ	hJ&ɤStmzt
gk:%/	҆'jN*ʱM=*%2Epla|!BG0&_aŒ}u$Dz`\(}>`76f^Ȼ:>P]1ןoЙ1hc5yhTYs9mFm!i;0:HMC*	rYWV"ZfEiٗXJ{*V3B MV3QAuH9B2X\##Ͷc]+&pYDqcÎZ9A9,ꮫ[eU&vcp%fNϜ	T|ek5kuP[B042>i%$}w@høh-
VĮXgڕDibiG΄ރ60Y*lylr⾉T|ٵAriZfe7bԄǌ~؉nAo>N!(ϴ	7KK^w{%%DKV7,ɢc8~Yeᵑ,'xWg"ެ{ז!W7xmwFsɢYBn<<nL6-Aߘ e͔Ʈ)Wd(WE_Bz=&؅tRT$FGվ!u5=߳
 V$4	Gx h&100644 .gitignore t<@NkJy>&6SYLTb_`Fb40000 example XEmg\>Q/7.pdyz/w:'cкzFYk5|C'x8 "7xR|5Ű
X\VFA&(.PzCFGx˼yC{_s\fE}9;9\ s,x˼yCHv]i&}\t6]QD,x˼y4HC4k|m?d}> xUn0D/8VʡR+88;|}"qyݝ9ZrB0,AYRVP[ӸDƐ=zcșW'!UGg1;>2+q9@NQ/+>y.!/ܟBp\×].
W<yzv0tJ<]llx	~5ZF?
tz0R.1bVxK |]9 R$Mi9}4ˇH!=6-U`q8zwgu$7!&y>'%"[x[´i pOH(36}># :
eWexmTjA&xn /
ɲوx0A#J_ī;];fffO
JD7wu`Y}ַDgNZ̓f' GQ8w	Zvj}{p/PġrGT9$!#2cu!(*QW`d*c,J9KLi49{- 0IXN(I8%Ta% +Ls+cbZ+p#S1N?ܙFchn/yjX W*ahE#ma-:XyGP9F	GYK(qeTYt J	0br]s~jj9j\eXSW&GR:'gHqI}?y`XS[9O>O~*G/D%cӥ!
xVX&*[9?k,׫{ڞ)dkrnË4w(D{K\ܖ6[aJyv:Q S1&ZԊ`h=c很m2AY5,kiиk.-Boq+*.K2'Uc8n09+S:h>
KjlKƏ?ׯ'׋ʿ	~""-"=X2)7;W8
ϒ3gކW66Zz; ZxۦDeL=VXjQqf~VPjNjbq_~YjnRjHt2+2KS3K2sJâĢ
\m )x5 d`VD.ƷYj24Հ\/dʤ );zo+DxG '100644 __init__.py fr9«_o`C(']Ab}r3{{tb~UxiB"g2<BHwG 
*xID!>>3/$>^!U;@mۙj7괍 $4xg̖V7UQo
Yչ Zk.x<yFf#u. kx<yFfcu. }xEN=KPE
-	ڊ.I'BHK|=ήk	$gsjo2V#x<jQaK	koP̀
ˬ\˷>`ɅOε2tn7n$%Ï
!hE<C6
6X6(iBSbjѝ_kʷ9ǝo((woS(JN ;^7ځFPr5΢KKsKΡ}p7ef܃Nu]1gQNT%hwxX 4"7xR|5Ű
X\40000 build j3\dC zo|:VFA&(.PzC(@x31 $_^`nl7?vګ' 
x31 Ԋ܂T+r$ϝc3HI,ΎOOOKgp[8EMNߟ4Mhٲ$F
ae\
 bB-FYxID!>>3/$>^#_ԵVK/OpQ= <x;)ZҊK&ȤV$(xA
'J{
&e)dU(leaIK|%1(8>$#H#9XG DG8HbESK3S44lmJյK4@A@),+!L\ZTW`+&̴9% MRN(IK SřyŚ\ RWx{-zFhBƕ
b%JEE%J

z8&7JM Bx9 ;|;F=

v/7+[?5);>OÂ_zCBHx9 "R&LC0ZJ2}#o/7/7.pdyzCGx˼y43yކO1y"Kߝ} )JxK |и"S&\A/43/	`$Ԇ/đ86*x8b򶺏˫Ry[T%[xK |s2Eң
N4
&^ߙJTQn8zwgu$7!&yY$Yx ˇH!=6-U`qLݲ/x  f/7.pdyzC˰xs+)L*-/*E\\
	%y
N9E`MFIIA~zfIFi^r~~:D]R]B<HcbJfN~q6P9R. ̅+,]xk`\8[W!8' x(o  K3xuTn@VPE*$TLk%iJ +x'Rۻ' '>7av6$)(7׽=}wM jA`^1X uBPJ焕SUm	
~&qQB;>#x(z#]BRkQNӻn}LQg%N=p\wwTk#BOve#	ڢQIHCU03tjպKTs	bʺ e
Ɵ?9<%mEk2QX/0r?:V\$cT
Og,OHhfڼãwoGk5kU$WLvނwQ5Đ5umO9S7եtw(}$ףv6WYvlRř2\EKYG!IgQRA(UÚXk˲H~4aao"Vl@ZeOѫʷ
9`|r-uՐ}	+;jlK=yx[?ܼ9h¦O"zgojeH!kA$ưL|)3r骃닗E2ËG[fuu٭~{p	[x h&100644 .gitignore t<@NkJy>&6;|;F=

v40000 example <p~P@O0QVy`=-dGgMz/w:'cкzFYkC</'x9 =XEmg\>Qң
S{3mgzC}Hx  f&MG[Dhϑb1zCl0x f9v@_+U+xiHJB={3	۾;a֩W= ,xYkWRgwݍ^Ͼ<coȫM7lfC*0QffGR?*$+HDH(QT* T- $~UE qc{c{)+=39W;n _;C&
W3xDnuu0|9TDuQґfS%<Uwv&
l_5	euPzQ5ŚgCkJZWXxMVr5M,<Hptb*yI&RZIoBf
(U-|ZuV^Il#5PM\TI6*UM$
SL9شcԲ@TǚQ3:P̎='9k%93=m&
vVfM%vn7^)&
*,N)+9^QOUL,9Fx;\bRY3W]U-~TeK{|_/Q}YŞ}R%J<V+6e)X3Eʔu֓c<."5g9WT\,7PUd~j	&'FEKTYq\Lf-mck6>'z;TTx֒ )i95${!.,?y1ӫSS=/gw.PEl*T]C@@%c48,>xjd[[*+?IdIX˺x*d3w9_F-01x#V7c.ٗ.A9Vh񟆯>_U})Qb3|z/Gܧv*,dK¼(}p{P/}mT;T]*c'8CmH~8ɼBI(-݃w6|i$va䩪/w#I"#_J3C=b}7GmGAZbkvG;&{{ NL	|aCV3;ES,`:#P91yCOZ)i;0_N}F_æ#|èWgvZ/A5݇l72͹
'CaRR0pnDIV Y??s<:X;ewj
wE5\\]Vd'=?O<a/KevnO<?"d3w7#	<QRw"T1Ԟ0R"x,dg̞7HKߎ.vJF5ѫcѼb :! »A{ 59vbc<|tP? =:N=XEk!;OE6γ[8p|
~<VKɭ(W<ȰRVugbBsA;Mrdbp!^,}ic;۩[/cQ\I/J!ְZ*REr,O;$"5gygm a-Jm3q${(+i6ɀa"6hڂ%HlMë蘤4Sx3g`q4P /G
urq <3o_|ZU/mkOmio`>jQڜaxor2!~3wcph*$љ;XkG΅٬>5AܥE[_6$~UnwfRZB{SD,0>#]4eáz>$
ZJǗO,
ps`/kp6D6jz`پ?O8*
mZR[	rK&%~3b^&Αd^'XĀ-HL}\hU^I(^)k±e'QV5h2Ldx`$F4YS<FI]R IT+[TUSbA?ZQ^{mM+-)R
D5eCAr<YBH2TTn>򙴼|"}y#Q_Uwyf/*9 $,$\b=Xjv1-Vq^5H,T>h)헉#J)Tgm\VSy0΋ŶZ]Va+VO*٬\^. h/D*xJwv;dɾh%įW=O&X@eOURm6.lw}'V،hJ@Sp?Nq[nBgڸpAw>B3jrSTي}p⸐S:]H	yD\0
)fMmI	eVv0iT8À_,_tiDRAbSw
Խr(F]|l:K+ݢ,5	n,Vdu|j֚Jnj_ɍfLoA?z١tbB!"E4kGT[ʂcUv6z5ux:T	}'K22oȨ	 a"x;;
"N6`g|ވu 1"SDX&0IL%Vg>y dw)Rܓ/Jo,ue	R&IOㆫnS	M.b)6 ⓻7U%2"AP+8'L,9yYHsSPAíӐAx31 ̼t8ǙZ-M_Μ{,m:q 
l
x[&DdC0P ?^x["2SdBc0 1~4#''# uAx] &100644 .gitignore t<@NkJy>&@ܤF	Nz/:-r9@djCZx(mxs =<p~P@O0Q=Pa[=B2@z/9w:'cкzFYk100644 update.py p{71+]=ID"0`x{ļy4H}=ɪ^ocJxǡ_ S'x3 3/	`$Ԇ/đ85IL0z^?R>M
fA>xuS;@։O	GXy]
Ds@'=qzt??IH%x{y;
^ >bb
oEFM@e2#*\(s2pU
{Ug9QjEckBƠQ݊X$0}KR0/zkjiChyNUS%B,ه)#rvPkxb40X֕\،ĥWIcIUKک5oj~b']eN?b&4|($mི;SA"}Nֶ[j {kwUiAIErowÁyjL$W»TyV27M-#"6d"(Add{m
PۢhhGcyGi
l;y_\HMnUˋ9BЮ:;G::w}n:
ndHI_o?|?u:=i=R4c
\kw歉"5;&}{+mn|q+i*y>	OXxID!>>3/$>^YK{^MIl(٨ S1xg̖V7UQo
YԹ Yx-0C. 
		>.][~ɒb/aIgcX{wdY(6aMICA[udԉ),0>	Ro
* 9(-{t+5 h]S
v-_Z} Q;x˼y4H}=ɪ^ocJxǡ_ ux340031Q,+d53B*PoCXl!DYRN~z|rbrF*H~Ķ>hQu!"̼bҖl6Ǭ(?'0l`[ҳnλT1%H0713dn\qU}B PZ?0n:(GE. XLx3 g|Lw-;{Z;ns5|};xC5AZ[WSWW_I mtx[&2oDl613N~q5e+Xooe{8G(M
 Ѧx340031Q,+dX%]$̏+݅}rp+3(KKK)R&UhTsEkI'UBIoضO[>jb@tM-{":s+"蛢~3kT]qfz^bشګU]4
v\iYx]*tsU#Ls6,zFoArkӖ`&@P[XZۛ\?wJfE6M
5,3.?Xe?~n-sO _.xID!>>3/$>^YK{^MIl(٨.XZSRq]%6#%ڦP	yIC|q@
*L-XGƪGQ9Z+So*-4x}R;K1F`!dB-mD89]dI`w"bem!
Kr>Nnd2Ly]\|ًbWфLa:LxB9ʩ>
"BiJ* kJǌY]nnqD$$Ti$eYOY!S1Mmk!ث]n>9><ӞиNRH,dqLB
bT	*&`&ZSZZ2=/۰r6Bs=eNW
J+VƼuPDBr.ZuW0kg8L?3Uz7&Ef|:F
h)/΄<&v~ďP8,sH0x340031Q,+dhnYF>-ͅO/TB䔦g7ޒ[S>Z]JRKRA궽Z7G']|Y]qfz^bN1Hi/ܢ|"Q$%Mn:i*_I!ُ8e]}'}dwk"Ϸ bSx? 8i/oѮX &100644 utils.py $6X7IC,ԂGK2hNx &Y$H
qSzd$\CxTk@&nv׮)iq-[-jݭ)%lMTZD'iy=xɥzԛ =	EIvdf^i0joX䎺m6T3iSdY!cYmnX"!w~h]*7(OtQWpc3ݜ4r6<jMٴԼTjtm{w'wRąσð[HsT,yf}oclcbAu' Uuj%7{ݏڱ=@^GC>r/;r/[AgЇ83|=;c{S_tUOu>93*^[lLBЂI#*˲k+A`
՚Atib"@Sܑ>FDQ<
KE0BmP3I)R]qrۘJRHWDz	fcˬ"y[b"Xb-ѲxkkWjܲw/<iI7t)oK\;g»E?
DypĆ8Exy;cpɸg>
osFpU)H|jWP{ǒNM~xWIoE㽽mlǞ8I{Ɖ	2HbKMӞ4n[5nD%q@8D+$.!,
9^6ky}{Uգ&i&^pي9AS˴IƶMǹ}l7\[s@Y׶AdŲn]..`v*&<vȂmN!s9,8W$F$֌f):
D4ljd]CjM#	r0:HI7̚:t&gj䬒,K4	'V1aeT 5UcMgMGbE(d>sf*Ӭ!zIY+ˊ+X<)H*Lʾ`='NDlL\@gL$D߯mdDʚFN[]Ϝ8)/̞gf3^s~U"m8s~s2-wrwam]
0A)Nu6?".zR3D0LK5'PS4n)W]#
U(GIfy̕7q"thL=BJtp<Jf<gV!/.t`U#-l)__=G[b6+;z36,y8y4X8FTaz_Km*nS	D
`i:Vᓣ
XQ!hRjո4,@ĆB!&X
ţe(npBͺoG%>.$7bx+hKb5u a-ax|}XO;ۊlPLfa-Ɵf[M3Yyd]v"4GӻNAk+ Ɩnw:{X	(?p]NTqI޴+q5"p->/gh2&!,Lfd
Ptl˾Grc:1/ҟ\"<<wct
N%L dl&ǘ+y+p%M1VzC
W3Dh;#z XͲd@qḿp=v~G3~}94okjdf*cv.(V]#j0L/FIk(͉#d \(8/ʙYI]AOUJvpW5Em)s̬i}-ql(XIga IV
P^qrXJ`q+G*F-ۼ
GRTUpISEq{*#:'V{p4̢>I^'\SssSۜ-+AVʤ6Y004\uwO7}p,6>NsMuKy@3wG*@+y*w8t=b-Tawxm+M;,pUU$w?6NL{{_l<a:Г#=H>i7[)7 3-qRrW%
_s.Q^RB4}?,in`+oϾ_{w4FR/$zv9ZZ]W3m\)x":ذ9ް16FeM#דƈUA!֗CNk,hWl7
Qx`%dx3 3/	`$Ԇ/đ8~2
} >'{t8A{xuS;@։O	GXy]
Ds@'=qzt??IH%x{y;
^ >bb
oEFᅛS&5dFTP2eT9r ,4 CAAN!,%Ia̗a^2yfޚe6Z+CSՔ$u:hrFʈTb
L.tXWrCb3ҳ_mT&%U.	kˏ6ּўv~;5_Gc{uѢ,.RLNZ;ZngAMTm.$]Ub=>Bs@1\	R#Y6U2_(hX LqCa[+Bn6JUOMώS7˳}sa#5	:WAV\,/AtS}	
7hN»!%
x_8ROKUT'+s9!&옴

xᮤ$;O]x] &100644 .gitignore t<@NkJy>&@yۮ$Qmz/:-r9@djCZ(4Yxi%ciIfN^A%u،kB%%=ah``fbPZV3[i/U
xsVx Fqxg̖V7UQo

Kչ 
ux˼yCK|/vtn89-U xtiHw
L[n 
xYkWRgwz}yݽ}y64vVM6i%IMkffGRT
	G$"$h(j* T/hD_UH؞GJ;w|=~q=_yՎoW",^ri]7a[WL37Jzn Bt:U{f&拊\
_euXFI5MU׎bM94hVg+,_*99%}6{c$8L:XM{[)ekM7JU+2VbC8H7UFw
T@}Ȧr-El9Ue
;PbYt$Sg)N-pIWǹUl3njz0Eoj.1eyMj@lm`އvtJ9C[\:ba	Luq: &zߝߋ勺b%J
bwdf~+ZVSK_ ]|VeޗzuTHH^l$V^#RWfY:$--MlxBDjbQP$oD	."|ԠLns
2j*ZV|{Ov,29%q*ky"?y1ӫSSe$ڽ v.P%l)gT]C8Oz@%c48,xjt_[*+H2T~e{2'?7# `{gfВsZٸk;CͻwUGt2k|:ro5*1ߪQd1*fP
K2$7)Xo>G`=j.
q`6m4
Ѕ~8żBI(-w윇.|y4q`/w#I"@j1>6[k+p-1ѵGQ;`bl3 }!xtFFrk0_IF_G#B#WgwA I5݇7͒͹
'íaP|'X؉
KA~~y.uv\ތծjyz>Nz~iz^N<"ܚax.DfoGdu?&(1ԙ0Q"x4b`̞
IKߊ-vΤ	F=ѫ㟦|b :! {!{ 558kwy
頸6>FltOD?,Fw@8nBi)妶\ JYU&Yχx
uuV$.lj2l(QCaU4@99ԚU*
6>x=~Ip=2 Gk6:`<ZbftH:$rQ,dW&"d$j a~yo]Cp:>U&t50IiVhφi a^oxv
1߾25Kޙ7־k=w<}b9#|u&JfnG|RDw`m:f־L=p!n}#۔UݑKkQYO!!Ĭv/}
]K&iR&sT>|byU{_s_3'B	W3+Nd]9Þ϶%xU$dbYC7#eOY=AIS~"bbБs},&Y>~~>3V?$
Ȕ"ްS(PAZ:0Shu
_%Cʮ)Z#".HY!fv9-NZծ(Gne-(h挥&;Ӄだh:F9,Bsu$±J
l%[#|6#.Ȝ|/<	AάݪxxQMN<\C.1
qU5;q˘V1˚R"qeu4Ɣ\.p]ijZ`G)|+pU˧\N.E(~XA	4/3%_f<bm|;T_D͉
k7zYfh,8\rpa6\NRJZX+FlF4O{)fMoHs@m\;? l-s[.eA38!9c
E'Q@)-SʩY</ytH@(hqxlBxAa]Lo'0%[DMH"h>\5`ꮁ9@N |u`u;^҂Qڧ6vcb'[!v5XËNB]6㸮PMTڳRWȝZ+y1ьQq3h'/'3S̴R,K/QDsNDl8[e/3:nD?x˼yJF@fZ8v, $xWMpE.N~LH6f2d7JʏKLO*?8gz )*PpЛTWyfyĊw=x*-/
=z@_$AV׏3vbLp~
$*YMm>8Iں7$ʹ
"+urIte(gK?ra;4O1sYDliESAFV\&T@IEϔiLש,DBLfs
>#\؄Y\NPDQ͒ZTڏ[zW\裭aFVaa3LX!XVt]X5f`TGrX*>`=/NDlL\@'lDߏѮr
3''M3gK`9?`H+6>3YOj-Ŷ73wQi24N)N5c6?R")yL3D@6ۓ(mm^y*T$s-#6τ	$#R"nuIDe'lܾ6{ˮ=XՈi#[Jx8h~F}4UJќFt:e`R~E$=>h`KR7~mrB`' 6D(Y%X1t(|xƢ"VTf9nc2
K<Їm
!h,鈴p(}	ȝ zoH2ӊCRIz)NJtһ(!nYSY>_P*e׾K$҇ʹ՟HtHebYٹYy:;#OzVOFȡ` E
N?iH6ѫ56(cXjA
N4hڵwZXGGV̮ICl7G4ӨϙY(=</dNသRK*K%Wm\ ވf5H&;/Ijpәbc/o{-@qK m-.@P(3ʡ\,2="xsD/_  3|Y,c=PDׯnzOfx_ec+-k [eXs:SXml@Kz-P6'٦lp!Xp\}v}K]4x]S*|ESV"ԚFEiٗXJ*ֶ3!Yb! ¦Mk8Pl2X\##͖m^#)*pISEqcjYW	GX_4̲~RO3gfgVn _Ydl]Z .
^ t>$}[[c18}gP^6Xkk2]"/{:D_$M$On=w>WɺV1iU&Re˞zTS$7/p'/Np=_>owvRn
sIRrrW
_u.B⽤7fM4v7ĩ^sOg=;kJ/$z3ז!W70xULc9d?7iށlQi)BkUZzuEaQHC3$5JEba6胁fWXX׬pt@7 ՠ)Tx< ttCD&i579itle_9&>9r1
9)9pass
x˼y*FE
ZG9Jqǟ=%b `x? 8gZ<#J3@~!100644 utils.py ۵#dS,O`uF*_}x˼yJFP7їvrUzC9 qKwx4ic3XM~d~2rǉU '
ghxRd mbx˼yJF[ZsO1+ߏLM	A}9 ï
<x? 8A"$-Q⩭ctp7100644 utils.py y:Yb\zdD{qxMO+a]kvk5vg+LBY5a3J\D^)'JQrr(\\\x-}>aOia5ǕOófJOHwDhdWҐ#ZA8hb<h #qn*mĿ-|h 7V(}~aR~+]n(SOXMpPqV9L6bc۵9SEDآ}7v
vB2v>QƮ+x(ؽ.ѥqm3uM{L~xeYP`i=(>u5L("efE+=NI&ElP-tZ_㕌g\x~}%f 
:x+NOLIM 07xYkWRgwݍ^Ͼ<coWI;foX5٤͖T$a48B1?*$+!A U@*/_
"=㱽v{sqyMA"7P0&Z.t3%+"J6T6*j361WPgI(T-+֋a%(T8j^S
Fuֺ򅫲s̬lgᠽ8FàSHݴ5R6Jz2kEjY|EjTbHrg)l}j⢲HQjP.9ŔMۼ<6L~*Vt98{=ɩ".p6DL۪+LћKLnvSEϗ9$DXRVWr&0=ףN9X:?!{!xswwBI1Er1;2f¯~ɫZ	xKϗ_^}tK=:*J$/yǭV^őe)X3Eʔu֓c<."5gWT\(7PUd~*5em܂%u|q8.&36ձY5_}Lz*<k>)i95$<vly|SBs;W("6aOe!'L]f Flb<92-
;dHX˺x*$^ٻL#w;4cbnK.A9Vho9WU})Qb3|z/Gv*,d~K¼(}pP/}pmT;T]*c'8CmH~8ɼBVZ v윃u_y݈p?PDčxH$iFKLtصh'wĴpf/1d5#_?B3<g4&5éOÁ!ht^ouT^>T}Ȧjq,ܜd56:uc9B
m =QaiU#HOϥ֎kٝ1ڕ]V5WI:-Sx?CqR/BD[p>2FH7	.v$'JNjR|g/"LD&YFCu߷K2z½,m
蕱Oݼb :! {A{ 59vbc<|tP? =:N=XEk!;E6γ[8h|
~<VKɭ(W<ȰRVu{bBsA3Mr]dbp>^,}gi;c;۩[¯bQ{%kX-S)"fŧވ`\6Xv	{L"Brfk&b6-XĆv
d}{5YBT"qܳfqt )ߒ?$b}e1kj5V3o֞ai0O`gޟNGm(
(IGt&msa6k{oLMwwib{7;
_TѮ.ψ,f~顷l84{-^χAKQUn~&^^M>,wksD#϶%.NU dbY]7#eO'Hz~"bbg},&X>~~.0JU/$

IU
Z`;c\`$J4YS<FI#e-IM+[MUEbqL#j}@j .Ԕax@=̽	E+5dq>ٴ|"}iz?/RG&YƿZk878
_Tr@HX"H68{6*ıV #-cZ6㼮,kJXĩ}S/enR&۸tabWmbVJ.TYd\	$l_8v?/LGT|ꋵQvȒ}J5'5_sX
꥘M(d\cs10ˁ*ʞ:s10Ai+mh]bn \끦~f"q6= B3jrSTϻcي}p⸐Sʃ]H	yJ`RVX%yɥGgFAC,OB(}`Ҩp~#"Y%hˈ$y1\S
Q
,Uf[P=0*-heuj5,VEYjaW,5Xn3M95+y#[}%7&1?$n
er;):H)BR1KEh֎:p|)j+$xWoEWI6It]ة~lc{zwPVnT#q(
q(  8p)C~y$3o{yqAiÑq	9Y^aْm9$8ت:25$c(yˑP8$j۷eNBg1Q_QJ{oaW$]r{cPPK2^#fNU,:u MBEB˞)'L\/Ye	1s
>#\d㧦x23}3l z9+aeYM,rH	8V
 K\lHI1ɀ+1яhw{-,3.'̞Q/QgWr~V"o)8<|=+<c܍G-MpJ-ͼ{LQH?m&tَE=N.65!iRD		;8Gl:0τ!!Z"oyOF7K~Folg/tb9
(Z46$	_h"M{}Ed-rpƃII>.HHqzOgs:}n{ϊ~	@;dVcK&Ë5A]d<6qeXf>L6PBd
$;zƓQdNc>ZKw	@,܊|1$b8,l<H&wЇm*6՟HrIubYҢ2]POdU'qE'ERql$p#^C^bauJFh}j
XZDà
eRZ;m	0,#}+dMa %N9GtˬϙY(=<[f_#pblbသ*KIac&7*$N6S58锼f&K[Ɡ;yPܫH"zPx?0L1J(1T= ?CL0&_ĆaŒ}uw$D`\V鿃|o+lruek}vTj?5Xgc4yds9m r%+Br1wtvUp.z岮
ṭF̪Ҋ/%;SmgBB M2QQuH9B2X#U"Ͷc]+&}nYDqkjY	GX_tխ*~ROgggns)Wo _Ydl]ZԎ .^- ;pX>Eak-VľXgڗDimGBy
ljs&{On\70_GsjA~ـ;1EzHjRcFo{~p^EQ(u'	~0K;o{$D$p褱%N8jVYzsl>	Y_fB72޿rx8 =62E @ĕI+PQ21l#zҹzC:x340031Q,+d53B*PoCXl($ėe3KN	:+ڬBRk,+c!JJsKS~E^gݥvۮ I)RxtiSs}I{3|z牉/ XxU_lSUeew(F[Kg
ctQc{d5d{2<1	ah7|O&cLuо~~wf5#[%bj=e^ز*DKhXuNYm+%"-k%rt
)&)sX
q^*W-7]6(a:
@t4G*:I1(ŷIvԲ_֮aA*/Z#M!><$*)h%l)+bEeDꂒeC!JDæ=xX3ڂc{̤שD (V]pxOEX`	jTmXGuRقB25L%R<vT"TZ͊JXt	bs͖~&7>u~940JN//_a2:D*rI5m]-O;QKǁF6δhM3T]{2Nܱn#^B<K(*NĴ%#"j{I5@O#C<ݲ]Oq<3z
f#Vn	E`>8i`?~;t߶^<,Yt |=񐬱?V!61M~"'t
D׻4&%s%e5^jtPzV(# /
jw;JvB(
yh_Y،XHb, pS}nN!@AEt?=7,y'p|v3iX1	
K4rP?Eq,]mz`@JI1-vL:e"Z5!'UGl2%8<I\f	v$^6@sru~bVQxeH {	+}ڛ]>
	+@ q:l#5KnCՐW۷flqg)i5wIrLrfto=.K01&{DO*Ng* jB"$M$d`Ca=pO[=a6:n$}a?F8x3[{1y8W%0:~F.<;M|Th
dP[͟mi*vD_^[|gSܷw  ,Bviz1'j	?ל?p;L3F:yx uA8mܽt͚Ҡ_ēxsI,r!nPO~zf!T,(3/9 1wNLH
q2r+|SSRKӹ lSxM˞Z Ix340031QK,L/JeI*0q[SϘNz/CҜb՞Y<iI+`J2*ssbMY$\wMPe>ή~a:~/(_G?O7<`5EB]O?2Cw# WG_Wƌu*<[ym_늬TmaRK3RsSJJ*Jl
n_ޅpų+01 b{WۡqZ+Ԋ܂T_6芫wٮi9I9y/fܭܾxRm2𔰃VPWT2DY{w]sISi/$V[C+Iz*@=`ĮG.o dx˼y'o,Oܩ8W,f&&
AEy%z%%YYTh,^ib 
)itx+k>}"Z[ʠA'd]ݴ	LO>Od	޵l٢M	̩S;0:Q_dCSBV֦Rb PHxL `&s82銟AotFۚˮ]X*_4z/7w⧖my7&s[xl 3uA8mܽt͚Ҡ_40000 docs Q/Uoaq-/7,21l#zҹz/|]Y$R@=}1^tx3 /_Ƭ)E08~2
} >'{tQxV[kF&-T8uC&NKQqH[i$iKE3&}C
z+)_K[9#WMk/3;G~å߾_(X>ua}WR}WLaCmLP/k5˸ֹ

cq*R׵be #Ӏ|Q/4?d3̴ٙ)>`e$ܚ
m BG,f
]RZkN,L\HH4?;~b< 
dC`}> .kЀc6I'R*	24K~yx2E82&MZ22j! b9v-s2
E<.!w?yp3sCφhԓXhG':omsUУ911-s]QRW#,P1[ny1i<l?xskrs=#({CH5!	vjE̽
RH}
PKH>(j2Uʤ
G!OiF5 Nx&#+%"Au!u!>ڮcY.t(2|eM0wK{=I@J98ՐRT{wҪ+1I[Tލ2)[Y)OHBŚzW.M|@_>9L65~TsTJ[TfCd3<m<aQ{\k:ys,@R>fDb><2'M*JϞo,|c\o7-HUqVU`C# jDB- tfڃr|״{(6PZ~\#o<GUkKXeլꁀK[S+(f*단G3KUjOk-N:ŷCZ35Ǯ^ؽQnﰝ)o7Ñ20MtfVe6÷Xv\
ϟW+Pɜ2fR9"pB*ݼmݜqy|sy8eJau
Neƾ5zW$Q³pߚnpQHT
'X##ЭAYGQy4'1oF)Qڿ x340031QHOONLH+dʣHG=b(?'0l`[ҳnλT1%H0713kƂgT>Su~L! e/	yx[&2GtC+bZQ~BZNbq^jE^rbrFBfnA~Q31C+@/9?/-3=Z5>$2U)VVA!'UKY!(5$Ul4[A@4'?e0gv 1&Sx˼yCH=OٗS.H=x'&iv*Fg i1x nܥ+Oxkv_9A;R*23J45*|KJz\`9ɩyũV
!:
ũ
>ή~
iE
E
)%9z9'9+qns=:@<+7br0jN> l?d'qJL+k5ydUs͙5 <`a;xTMkA&fb-b-j+-(UңRfw&dw3I[/"QP<I<+<8PQ;yg}̻/.}|q9UwЀ)ez۝]Q9R,FǿOOr;UgQC6C7_d$B
"mysS(~ֶ<]NiA.9_ڌ$`9]:#?}/jV6=ĀX<m`V_KfFE.XȆ5XG5Hypvz/IY˲=dȯ
Q]ā!Qn7!$;m\;pJoR20"8POXvBԂ6'CO	EGR*dY_?DQ[2 $\u0VP%<`h?ل*`ejvZ_ :9!7NL䕊36	T#nHv
}BXU:ru^/&& 8f3np|庚~>P{1HO&wi>J F*4螡ZGTmvCcx,K"d0R#-"P2G1nT7Tj3At.PHk/qmƲ~m1xuoqߠ%6y9d;)'<Uq]F↌PI3d6ID%6/^
ad1NVP ²W>qsBDdF F$v~x˼yCHq)m]_dIfQU D
^-x˼yCdg-kox_̬dߡ2mI*Fg ٪
+WxG '100644 __init__.py `@Y~Ba
;'k:=ezdЛk
VA2C[nVxtiSs}I{3|z牉/ xg̖V7UQo
YMչ Xm.x<yC#: 6azxuTKlE6Ï۵;5K>&1M"T	!g;Kewƽ?@O=b8Dā[O\	NH QBBٵ=3g-h=XՈNZKbatl_+JjTtԕd2ZbSܳUG:6pq*:U47-BEZm|.3U$5jeH:OA+MjnRl?ZR0{<HԆ.${ϯ#*mCPLd&VL^bJ^!ʨ狍jXU5qiEg0|>íR?7OK%tbжՙL"ef=]t:61ToJߩлix'wllqƢEDPb`JKPvmt2&"&Am1:)CɞbRώk$V *@g
Oq.f3	hp%3BJhT5Y<~MJn ܜ  gG!MYsSp[JA_JHr_"}/wI:)"Skib&+"V1"=iŃ_
y*En
ώ
7C2_0Ǝ"L" Zcl5V$)D!ۖALin_U=x>W.6R1.3	,(ά' NW"OR_!n)SĿG|$*MUVx4c
Z(\4dW|0î(5sIXpp6K3> Ll[l8d`	;V	+@fS"{t!ـǳnNOQ^x8b8Zt r~	^m>x]ǋ "KeoO
)]y2X@k-}t)'Bt?zJ"c*޽Y98w[kna;/}%8/9
V6>8;xOQShiR.E/mIm8	5
DhΖuCA&ңQ/ƃW=Ohĳ}ۊ$a23xzZ{ovd9+[U0,&5m?
ne.o|SX,:+Ua*8~4).X% bN %ʼ)cBԿ.-&
ˡy\A?+mL#@ǧ@VYg2JgBSd'~Se~eЕq2e[@W\9:,7@>z`)IgHm2hb`ҿ	rc
&H4Ο\w=[$rk;H:ı@e<=2^[Ǐh<YrRrxm~cqaD-x(Z7Nɶ,UL`A`h4抑.\J\&CtB/})D߆/S~h93(I`;_o-3/&YgibFWٰȿ*U;(]_&G	x˼yCHFLgxl]|? [xti*/;9]fx39Ѷk}3 Og]x9 ܀/Y9UbsK]r/7*Ɗf\ EӛzCx3 U_l~jE~[8_7Ae7jmA+x[~dawIrҼĜ̒J|2ʓ{mD2sJSRKK2K q1xmRn0ęzRUnPRD{Bm6-e{/T >7>t].gͼ/=g8M 5ʀޡ¦@'G0ǳY2H¼ƥ)LmhdAj
d%amCږiˋ($A~E@Ͳ>V`{`lzuSmc -I̷xM	L%GZ3l$={cZ{S/4A*SV Ced])UƔH 	dQPț#s
Reudq:x;mnNÕ\ȠqT4y+ǧYY`.$6<711GRpw~~O/]ڪ6Z9DW"
{6d#t#3~%޽C/\6[*NｸsO{ϞqMx;+C~nVPjNjbqjWb^ibQ)XZW1%(Y\ZP_T_[SYR
q./JLO(m 4x6 W
ekVEq9 9%8  .hnx;qF
VsHln
  S,x˼y4_~g7/;#{== :x3 }~Ea-ֽґ8_7Ae7߭&kdxUn "x  f{(I@
<zCDxK 9.BǆIED.ǣ}2Z7^	5,q?Z^OZv34fN7D!NS F>x[ys§'af79ÞQs..ɂ=61N6/bR\8y__\_X @=(xq*
:Lم2&۲nvf2cb),H\"U NR/(KTJMK-JKNU(HUHI,ILJ,rJrKsJ2rR 895/(3_<$
d)Ծ"kBũ9iz`m򓗰iħgj$x:`=\
|&f`4V!3MbT@b٩JVHj7_a]f5y	'r	紂y=/Nu/lᶀN"e&XoVςKf YF ])<x]?K@TT;Yfppqq
sG)N$gu\n~ޥCplEY2AdӘ3HhN2wq[0xz':-hy>W	J4H3t[k@%)wj
$049\bj:pۄ{sqV~mʅn]lO<mcojs_%1N?hChx8H$}XhyiP1plxAˊtY%.Z:s}Hωevf xX]l7ͱ8%۱-ɾTf;7rg,qmGW2QTHqַ
+>+@ѢEn0tˆ>@
?DI`/+0=^^sw~9o~׾Ew;E\uZjn--VU*bǱl]hr܍`'zƒ:Ox%YԫQvEw25xh`Vjq_\ְ]TpҟŚޑlelPt.ݡTn[j>GwqEvRF5\BZ6V-޼f%~8;	H.Ç	ۛ/WR%R](EfCGʺY)x>/?&+w~pT@Ds*-R{JLMW/ʣbͶɳRs-ME	%#2u oȤ	6]ڀN05cTM-į]1fjEI.}jcf!YfzPSHNI2KzY.cW_l\yY(<l[-YtbA'SWmn RI,(<:6_
:
ƃs64xy2S"Ebdc;l>B]$>\b?X
A*SfA3{pǓGW풻qoGoktQu~z,Vgyv^/-|~t7~>=_M_H˖EdsԥU{Wkw]w۸3<?
Z	O|"$%55WtRϒ}$?'l,eŦ")f6%1	R)Jd6!({%#}Za?RlNe}4OϓJnz$Gt
&%c?,'B{^]B"zVAcMW q<NK<%"Щp5G:DaM'%Sv+@Ra0 3|.X&sJ%
(;Keb=PW
$^
L6)0	o7\fwPm-Nl&388r-T1BSOCl9ӃB$i>PX4ȥE4b!3}&h6Ix^Eٙ8|dN9Π-N~C=ZlnE#i/G^)Q.]\7_^^,X1J,vgBK3w5 [SoimX4҃6ȑ6A^ekg*i9W;fq)YleEt5|K lCMEƲam(N:2+تu=킲vpMw$@s;D_0U)moUȇDj&YCX"έazsE~SLB<lS4S*ˢ&
K=h˺ƝGE:kRStxY4f]3#1Y$ˢN<Gn^)_g<
a]|qd!R^MmQqoz9s-vbcT
T-s-6Ei.mjn\Tk	 5?!QBP[wQz51jvꎆⅴV|`RO>wB3Νa][	ydfN^Ӌ|mC.Zf^H+,d&&-&/l?ѽ+d0눴~qqu
S_k㋤G	
, EI8헣^V]xWmo}K=B "ܷv,1M@㱀w;bNaI8F'B?߅\j>;9ɩ!UÈ|8~
EbSs$xTkP[qh
e}^|
SQmܫ 1͛ħO~Фi'] 6{ι#Oa5YPdUjԵꒌݗRȬZn[ZF3ahJc9RZa5/v6`
#:B57`cb9Nǲ|ARk݆&ˊ*H7Kc
,(?I\:/sM9Q*0|8g>rֽrO?BQ1cȔA,\~G/m訩~6/@܊ķfw
TgH͒r%kDNu-b&|N
#V?&1)^BUY	#H|	±uX_Lt~sexMY̲fbh(|,&)R%oW HLsDq)rq!mqW?,gנtڏ(N*a^	JnhTFܠC=`B֕:\yR1wdtN;+O<n{C
s&@I~|7U?3.<PؙK?[x˼yCH7cCN:d͟؛
"xK x+4F:
Ҳ 鑾
 H.4q9}iߨZ^OZv34fN7D!NSJ[#Ixn0w?)HU2"uH-'8';MU޾N(&%EIAxB;L)IKp$PjS[9Y_,m	{Tvz6sE(R.eI`X"}@ص:JwF׈gsPKɓP%߳d%!ycM.]DHىSKy
'+oDVk^ȩ֖Ǐ}aH5.L.@tP!ܟN	DD,v
cX[c-Q.ΧDXҞ[ w':$BgKx, Ȭ ThisdnV`
MdAE*x5 fj(´ #awɫOz/owEwp*m 8om2x .hHyS%S36
gxcC \x 8+?Wq^ɨ$٤"LxŕQ $}YSI__ð8z\0>"jۇfof⎪ֈfF
b5'ʹLOMd\g@AW_Zەhi~(,$P` DD2ѩ)pVBntA%
e1\$F0`i=CJN23ɗfN?RF+ղIULÝE+Vi0QTH7*SsUkx!ERkaǸH|RfPe	FTtjI
WYlR21;*e';x>SocjTVvc<J Gć6kRrc>w}~!~rgm:re|Fp,_C	35#mkK~r^y6/%;wL|e+
n"njDWS)VKpϓ!G&eȄSadAؔB\$b$@
K3]ɔ5uGjW>vtwl'qB:ғ:ڔ[}	k-7Ȯl]R|5u0x5 fվgI;1wӚœz/Y:	C]pOӝ<!!xtiMrK{-~ʘ8Sb}[xC{(@fnA~QL,h>91(5=$HV!=$HJO)I()MQPiRR@0)&Lrr m,9x6 .S8cts7l2	@Dd܎xPBOqF|]a82|wx@Ǖ
ͭtMV$:{αЬ
+(BBJIKK  u6Nr<x߯F&0v#j$Y r9«4!EǬ]9Y8L|O+ ߲D| !%8(E-pwCS
F8=ac؃ir%x
_g]Fns* !G_']Q`NPFSDiEJ^Hǹǈh(p }UG [>7#$>(=f-m\tZiϿ9֮o<6LvF07K(4U~To@(݉;wuY8ۈFY8,Q^%%<L%bD4%9:v{{^Ms㗱_
&A- ǣkB[&dZdHqE<u̇74=NYGxY 6B$jQUyz#YnXz,MB_rc ftDFxWhTRGo4uc|^Lnxðԣ+\IM_u1:wVδBRy:7KFß_1lx8q?X -dx5 fye9Jg#&G/_Ɠz/kM1W%Y{bwYf	xK 8<9-3LEu|~L^^~0$}_JɠnqV
+Z	,G~s$kx]{d#  ixcC2#  
;xxqBRNijAQf^I|rQjbIj
WJj|b;';M'<fkDRKZL֕❼N:s<-z2YAz2v
L`4Hnf2RVH(I+JQ(-)R h"6)'?=>@((O& I;x;qfME%Ey
I9\ 
x340031Q,+di|a]тe%%E ux-RfQ~jS83=/1xsN?aj=׋(JsK&~Qᯇ$wn2SO9v"Ds  V2g_x[òe6 
=
'xiqCu/d>ۘ'㕎OK-IHMQжU0JIMS(,IM,%9هIp2s,bY71;3NSj2+ ;Lq=d.[9&q y&qqՔMnɘ+
W++;y[\2VBv	# 32x4+fg?X Gz:x5 fy6Y"kiO54Iz/&8=~t#o
9x3 8|jq<e ɵSB'Lu]	>ԛX&7pVTaB xQk#f=\x4'VR@3xL6Il"z ^
x340031Q,+dZF<][3+
!JRKsKSAʧݖϙ{ge<lFV^Z^Rxm45ֈ ٵ0zx% 3core.py J#Z-Zr'X23x[θqBHׁOUzHr'~\1N *x nbѧ(qxɼy.'26 2LxWoDWIui\MM].UT!M$wg곍&Bյjj%*x(_ 	x+}#Yp;;3'Ovq7f9Gr59AevIum7`q4ϻstfDBT+|uETq*aV
_	r1Wp2*wEDv\fAA6|YKh>H蒏Ҳ]jik:YM輇݅0lDkPO#%@wJu+l 伋5U45l
ϥRC5.RQ
8q6VbRq-t*L!j
U0Sggեܙ7`9?`xZnݳ;o>nmkwZ$>3aE"M9nXd6$ڲ]f/hZs$){҅Dj5"k<DDB\"-T V"]j}쿫LǺKc ?ъ^ߤ=2F[
v~*қ{=ę#9X:V")F&}ݭL}cG8v1@1L,KٗO/YT@",K]9ae4}Ll	(#gc#wn;w"Ͷͧ[',Qhi^z-EL"aY
_P[~{F7OwG5)Hmb&^Ƕ'jiqeuE]-K'rf814בXaR;zcBT%ZG.4lZl^o	=>?ҷlaނ{ĭa[9'/*\>*;e8'%>J|RT<E	hB+Q=~a+H6SӜNɏ2t_Vt[ۀz^;@_\ۀ22\S3,2=&xgD?_  ~MN$%
I~
 ?,
oklr}5fn05\g/%x
iz٬*@3s6-2 .?HWgwdadC6

UCs[Sk[5@J`vkXDd 6g,Ar$l%d-ƚ׾
Ot][Uب:%f	GwpbcكrX6<ϰMJ>J-_Y_\XUR|eg|vQvalRoӿCoa3Q1\{	ƃfW@JO4X&*ȾNzn1ױɖV9i6%}emfd*ke
3W:fE8fn?zGÝxƠ ?Mx/U./B054*+GIz/Ѥ<N<ZN]}kb)O3X_epơZWl/x?`#-7x h:	N(x˼yCȴEa<U'K?VLrg\ ϢHx3 {{|ˢ7ؑdc=M"0mg<@O;xcErQjbIj|RNijAQf^Bqfz^bNPBW Bx;Ǹq@rQjbIj|RNijAQf^fMM<x5 fSIET\TICz/7w⧖myx340031Q,+dwt{
?{EeQ
Rnőd<Xh[yYPEiE 5~ҩ𖏚4]S(?98n=[O,ʽUW\X\_zJO9jӲL%B2TUצ-=m3$M@$5 '$FVdپrAr+Ie`6n8if 2vxG '100644 __init__.py :ʞ+,
֥@==jm']]K:ӥ; BQ++wAVxG '100644 __init__.py  8ҧvjU fIYkBl'5NΛkBLywٿnUxq 8|jq<e ɵSB'L8:Q7)C|fcǃY100644 signals.py ֱ8̻i¸.v-Sg sL43k>x<yFf#u. lPx;#VhfMeF >h	Qxιe1#{zj^jQbdFF~\
P~j&WA~qIq|Re|Ibz<B &VndD&QvTyId2RR+LC D/ģx31 ̼tGǻ#1֘z G2cxfgFԼԢĒx$̼
 f
擼;١bImvbe&8YKI"z%/D6k3OnfPed!ɼRf]'o)a):PhS~Ů74dl`2_奁kjrM7\m2dKMw[(n(J-)-SHOO,( aVxe `&s82銟AotMv3
_<5(gG/7ï|y<he#Kpz/7w⧖my\-!x3 3i^q#A`˷%8_7Ae7ux[msHr_1ECC&,6SN{[- $$N @IT{{/d;1~}]T7^gb3+Nܬiidc2I7UwejΓ?̋q_w_|_&Ifɺ62ufkmM]m)Mހlj֦Zlfdش i2֔EQ.uimlfiiuzk 8>yl`1yE̋'QVIy3+r3I*24f. *imeq,I3{N2kVvLZqyU̒:1lLA1WLE:II.卹KPH6K^SQc:$QmKTAB9+rYp.<ghTaQ.m~	U}*LQzWv)zRYoe/h&^~!߇C)+bܚf
V8,N!	zxuuүj*NH"sr
5A2)$U+k
ܓq^@IX`@YqIfp^	MUl*SkޚerkM8M2Ln40r{69abE
<uA
<I,6Pqb\ҖG0w;\l1~<f-<(&삚]˄HTiqݼȲ3]A^_{mwR3	`Ԫ(y|}3	":Ũ
WzdN/=cmZsJCp/9ɓl_I6̀)}V]rVt"y [0H ny&H]U3o)+gI6/uJPf~Yָv;rar6F. C(+I'8Q7ՑɋJ>7qٙ=:26s`>aȤ+qr)m>eo" ۷߳$$V[OB[0Cqr=<O9;RWɯ?Z~y4q"Oǳ+@$G^£ʂXmdEyQD(	\J>Oo>?~\!@gߟ~x}x]~;:$σ׿=Utuz=pr>֗ϼG2 OaA39<a sxXs8VP6^:xaGCx{@B%#!/u`WZCw$ˆce䉗!f0u(NP2w@+°&<hXl>O".0oʌO/;27da	")cvWEpDR'Pv͊/ <׊
G(Tw}Yp@^rl*{%< ))KDW++I1?g
"x2uaZE!
6H̲p
 sD\i$aIP D3أzk~
^oϑTOJ06(<le4ڢREwj;	p1Ga5N҆d(vq	&½@ -80Pxs^`ct56 #9DqiEˈ$6pf'uAc@?V[52]#@B"92eQk$)";J%+Cɡ;͒Ψ<]3cTH/PpZ_z1$@4a%*V셯+Ŭa ڔ- 
-SfLPhL]"
do$£\-OʩV4ۜ"vaS0s\
f h]<]J*p
X*ݭm|jYS)SGA@YJ]
#ɪ)_nx)8)CŌzC9G9#)`'%_8fN??LD}RMHHZXH[i.HIV8pfA6}r^Uc;
ܵ,!E)p<G&@F@0 vFűĆ)(l|
	q)x$%wBhkQZa<,Q&P{e>&ǳsh"H-Du4G@i{{AH%V̀3t#"RLerQꦁ E#RUk>9y fh)1e<w,=?!b(fdmHb84YUIfWt
z"AؿKSW`x`u&мBV
Rǵxzn
E$cن{KS]njVn(Ǵ̆#O+=3,%Xec*3O)q<6$M;.ĪYdJvٶ\bXNsm
Qw)Y#q">n
KpR@$ G*D_D3ʣ=Ww,$OO`R
	ɨڮ6C*6߁֗ȡUT.$EI|!v|h3G<$4SSNˤn@$[-hW׶RIghr

 TX*-T" $לXdKz(bO('0ky9tj(<cIM{r!` ]ftzco- 933;2 @.8h1ͪ3l21ȵ5	d㞽L!PHVݡ#j(A1e'D1s?83@	vqfPB( /%Ȣ4.UhCyϔ<C|Ppڗsj0SbĲ1*АE˖vQ<{7"rVyɝƱA1
%cNjo$XBKկon;{JHj/ELђdA@m:/tqڻ
 lRf),	D}zfM/ns4Tn;t55-tA.,XLcϼͪP:vƁ
v#QC`Ib)A%ymS#?5m^mPYekMMfR̭UΈzHmsd=༔
fMyN
q#oߋćO>9"A.uk<R>+aǅ~%HQ9ub
{q3[r)3[Cao߯IQd<OIgS4ϯ32Ogh<;,1qNS˲U
Ip}M|@UwnG,M__g/קo<͗!'2d~Y~;h;|#I{(J*v̀5ޮx$?ș	Q~TFg

d
7	U3Ld&A/512F##Tq
 $),ӫӋB`ՃUF
f?tהww9)lӧ3idA,|,2bǒ"vrM.;9R6#)("}-ROp>^Q.먞P|ͮiN2˻<7ˋ2.Oޏ
$g_R	<L	g<фR:}|ޜ8>=_|C USᐊKLtvwIt4	Ogm\*6	4H%.!GX3<pCӑ'&eǺ	R.t5.StԈs]4٢z:`)n:;~>ٶ%/w2Y 7. "LQ"3`4z`wLܾN?~Xkwsާa͛c~a_
(-W><XhCD΍K=Ԃ]eY^h`}dhaN㲗.4/6,|&Ff	Mw<ί+5pQ82EE%;Pjh|Sj_ūh52sr_44Y;hK*qmVEB:̫KV+5*M)kQ
	%jU,EDC߱UVRn?CF8Gr
ǚ( ?XTr>GdnS	4ozaJ2o"\#b˹N՜F#zeAAp"⏥jKON>)zmH!z@`X$+f.Q~\ޚ?
#$^9c
]*V	 " _A}@%/m>#Ɉ,Z1
qq,UzxH|	tB+|KKh65qKXh޳g +~%S;)%D$bS\ra1 G?3X7w{xwnmvt#
0i
ڼÅW"cFڬF34`_<=^yHoJFT#0VE&5~|<8t}ygM  :3<DQ]
3p0NĂda-wm\86ިaʳmڬ<c
MRdsp*pEC|x[z0hߕ@]iS`/M4P1&=kb%[Q' f
p3-Mр.N?HBңRe@HOb8	 1W/j46k{(gP<9cȕ.\`Z*l
9u3{/lFA:%asU:uc~ֿ?a	zJIXt[v
<49ƞIY#~BwR?HDʓI*ah31xmN/#W22Dy^~.4fq)iUM:j7C<xq*߆mɭ{\ ]0
hԈKW]9^8@`0b
sc-=@*ؿP$|ޠQbv$??}OAN#Ԭlvw[Q"i{Dvm#5LV1"#(+a f/]5n_$5.cn)jwTHl&n}.@I!NIBwe9Qc90bұSFT%D
o>Xyg[+ܶ臞2m({v_9y?y(ʢ.Oq̻ruxJ4iewƧ&.,uN`P)wƭ9tw	rGfGqׇ_iն.}
p"DhU1eqqS̿}ZS
,XJD;iJr:vp֏x*0C@
qV;)Pz~Z	
r#?὾*d	7.O_uf͟ hS+;0ec6oS4w!M?~z377j3Q'ΘuegaFK:RwXs`_lߓe/\qc_:;L\w~CNU*oǝ9Bߎ/;o
v=/R)3xmQJA`$ࡼ2[X0%CnZ{v4!A^B
{0PSO}߯׽So`S^s!}\pkaxn5
2;0a!s4Y|Rp:smĆ%;0Y&o/1Wp
huf#i@gcND
+eoE6VXh:?*Ld2]erZ6	v:`$2[-><Z⇃E i"'7z{frJqa¡Ñفk*T	edTj`F[\-a$,`)IEڵbdkHQ~[mmrsm7X}%^v_Փ$xmOJA׹Y1nP𲐃OċIL';d2&,@g71^KCWWU{9{ݞŇ"ϵq0\F0.a2Rh
D;v%h\- cxH 	.rIk+*(|DB~FTN U9]
SN6'&e-Y4Tb?vi5C,( ʩszy~;9B^jB#zH R8JZnuӰZb|E̂޿j)n	IxL¨.Е13z(^{Xx3 ߹9=`J\uvtQ8u|ե5P
?~_x 5NΛkBLywٿnYx5 fFۚˮ]X*_4z/7w⧖my 'xۘٝXRTiť iE
I9%y
E%
Ey\ɩ%
`1ע"b
pC
+ҍb!A?p؛esS'_XDG!7$1%$Ѷ85'M/1ĒĜ&"eL873E3rULޱ%]hUs	0#		
Ofٜqr/ ,?`<g#*(|Qymܓ&nW9l[J-OOH	:
JAEP/.I$&g'*ir% M!$&98_ )цׇN>gE5g RIx5 f^љ>)7;?F|z/Θ="Gp6 xG '100644 __init__.py :ʞ+,
֥@==jm']LPbS43ǑƁ!yx;)r]ҊK&ȤV$(xA
7J/gaIK|%1(8>$#H#9XG DG8HRKJz%)

%E M ilrCN.-*J+[ٕ ٚ>'x.FtB@nbQvJ~yBfnA~Q?Lik$٬`t.EԊԼ
0UW 9bx_8X&9(U+cԿ?V|hD >x˼yJF%6zm[оޠM t=x% 3core.py @ur'X[YMxcQfԢ<ԊbM[[c.(lĢ99Ea^fIhԼԢԔXԊ@nbQvi& ȿfx Dwgwa!#@|100644 Requirements.txt [Q{x#WsZ	40000 docs Mu(72O7740000 example )@0X<Tc--fc`Q+4+^a:Nݨz/Y&ʰASjx3 =hM
KH}8"Ȕgwɹկ!]r]n3lIx[_xL͗ub -)xen0@*q4ew[B'&eOS^Oxxae%r><r<UuY@{T	5[ZZ^|t%c1Ώ1ʧKK=x	bՊ^Q,,?bLie8͎1޲ւ;?ROKbJސ_uUr,0H؃$92Q4>-2uQ7
(HY%D0򮂧OoytM?J]Y*Р(㵽7du}=5xt¬iQrs˪8i"g`!Usq%CQ!Ha~^NПo6Wxr4уpvt_ZG֩1xg̖V7UQo
YMԹ WYx˼y,,oEzNIVV/41 bPcj/vݏrMXD:"1 'ACCO6!ɺi|(*ܵCS҇M-7o3 ?0x5 fmK m_4MJz/Y&ʰADx9 Mu(72O77/7+4+^a:NݨzC'x  f+4+^a:NݨzCr6Px3 4e('rTrD8ݳY.R'nHD`D1U!gx]PJ@Fl4hBllTlMv.Y/.;+$Co$zg,7}~F(  GGKX&`4wxJԔVNti	M9Ϣ[
6q< Y)uzE23T 񅙲
?ɚr$JB%H"ΔP"F,1OgAA>Zpj#Kl{sS-)VīzxIa2<mQ.!ÖaO]S48^l}<ʤu*+XȮ#:rKCdvwK~.[jKBI`ew7:̭x340031QK,L/Je= a[)בs®벧"T槔3?'<	OL*_SVRXYWàq؟O=p,h<2OgW`W?S??]xlTkp^fghy߮z㡻TY^Qq	#-M,_JYp2,0*4(575Xׂk^{DfWM@!%?vqD{
og*NH-IeHitLq738dHI,ΎOOOKg}Gj_Է
bo*guUqjIi^A%g/7_!1g٘u!=y>U4hō}%o'5 /x9 (}BF QII:^"/7 cs!XteezC}zHx˼yCȽoՒR3'YN= httx8 SfYVPM{zgb9[zC]xke87-'8[7919#3/}h-. K_kx  fSo6['o밡zC;&:x s(100644 Datastore.md #jd2SDB[N2\hl}7qOvF6`bî&uq  ҭ㑐4jJS+J\ %̑80EԚ3.ʅwhE>jzx]=N0>!^ZlS%b%$DƳ+z \`
D9zO\̠5Eq<@uY)}uI0=?@]鹚fhS浧ϣ]d$qE|,	~rt[]
$Mw?F ]t!z-'K]o_8?n2gքHyzdR%N6 1|e7z7pNr$;o/WcxoxhVXjQqf~D}QO##CK-M..]
<bļ҂ĒTl]̜҂Ңe46Β  #$~xg̖V7UQo
%
Թ 8k0x<yFfCu. $Ix]QjA7*2! <x; Blteٞ'rk>B~A]Elhh^WՃݯ#Q>s:/Ű\ƕXAcV*=P޺6VX/B~9_&Yb	Xg/[
bla3) j:F`Ggp,r{J'E*=F#
ޣ_j&XW2j05$؋] MF`JR=S403
(	$h-w 4O*'Cp0Ա_&(a0vg9ਃsOAN_cu㴿Uojѽzq|t3,xj,}5>5Dzp߿~Ry.<5!O؇1
i_#x s(100644 Datastore.md #jd2SDB[N2\hl}7qOvF6Mw̚(m[5[Α4;\{9`hE
8ӝXɥ;Tm9_S=~xE e1%Wݞ-h|y8#gcdatastore.py TqX	MIMx0 '100644 __init__.py _{u*͎bWU'®^@x  vn\YzHTx31 ̼tIKg:U=꽌;ZʪLJ2sRKrS]az:qeG_b4  px340031QHJ,N(a=ouvGOm 4	x˼y4HNUR

.T.:Y &ix3 jJS+J\ %̒80EԚ3.ʅwyx9 :-U6Hfݭ͙cI/7-KM,6-Hid?%zCx;tis#n\:D{Oˏ 9
qx7 ^tŻ=O
T|tI&_G"-ZO]驓zC/xr ^tŻ=O
T|76J8c&_FPqy"|40000 example ؠWg0e颣QtI&_G"-ZO]驓zC3x˼yGZXܿ޳pdYa'73
+x˼yCnǿ|zdnJ?Bu*Fg c
Xx˼yCnǿ|zdnJ?Bu*Fg c
x9 UèRnۦc{/7K_D4POy\(zCRx;tiɃ-)7z'c, $Jx0 '100644 __init__.py ٺzg#-'ud0x uji`N1]x I(i
g@mUoAx%0/1=34/%((4/e4wzrA|qiAA~Q,4 |Fgx  Jwlmkqz/9xYˏGcَ8Pg{ܻ&$Ql1%:2==53tUxB
"!)(G. $8qCBB  1H|vj-۪[4^`]2}O	`9^1RH}r+Raay^&cAD(d9%'ԁUtWKtЙG[=rTd	z:y|sTZsGA=?;M'{zsn}gy~5k-ܲn.϶Wh,}~Jޜ{ML? Sk~~i=k_[k/--fPPg꽭:ZT?<rh52Iȵ?>2}\@#K<r6`	nȱQb`H+	zgJ9#s0n1|lANBDEEuhg~c0NlFAH#1edi$Ye: H'A(X.w	|qdMۤ
ı}cXAD	oCr2QfQ `>AAB,ʗB9=^B"=I	"tzhsAiZJxFẕONG߅Ɖ+aD"a	F\[<F4Y}e9:dv]
\%{bQ22Y
(%NQbt!~S:NW"0xHKDd#QiȦ8GTKMۋ|׭s
o7v&7=ytz ԉ#&ƻg$x0TM X9],&167N4ѭj(vj"PyzzSc;,)6*{Q0$=̘uKZtBw`4GKPJ=s 6'	&>^;`)8e܈!Ca$Yȧ2\p_7CuM*CXZեPnlmX8
!i@H3v؇0U;cOoɧiWOx%dʩn]{귕SK=W`ʗLST,,@+j@Uđ!kCc!)tq,䶜!8ތq<.Yi=t*ˉGKc|D2DA>mh(yUm4Gއ3if1
R2n-d6\}A},A+K&se0E2,4gNLLt4	ՠ+[SIZ*&Hrha;8D%2B#EYd:f,{ܖOX)_QuN[oO>6
-WJ{u3`BeGI.V0<rӞ
"جI܉\8G2иL5!xK{Q3؁{}Q`:j'
,
2*y- FՁSqdq.Sx8DPB 5I(;g\uLgHP!7/k+Œ2p:  B; 2oLv7<tq)
*C3c_M2MRgL}0v_*6*"Mϵ\zYC&bŤ+9lsI'$+\OKYp'UB˸sLbs"	1a㨍d"VZaԬx!P"K9)I`iR
Ud{B[ -L[Tڐ}\/KېFXċ̌硭I,V=[aOK}',:ߜ {Ջ$)3,&,P%e 	sv~֭[VvXd+uX"0/r
iD҄3E5|rs[U PTɼz;¼`hF7;
P3L2H+3 ,B73%y'
!/T
y7	)Uk`xAN[<iXf8Asg  C2_$xl}x&Ag(`
>UC"K&-7ӜHr.ZB$BY$خn{]U{2)2@8Ȕ ɩvwvBt#Em]HO[W7QVw\Ub+&(nVcC&jWf{b;J("ѱ=*<"*/dR'y
N
솜[0qX;Dar֛{z0Q5VsVyaS]9~Æ#Y!mGQժjJ7Π/i[p|v'VM+=~'!U-Fu{DKq5CXr\7)wNL@L#D
*C2
9
DCZ#0qEIIguu7ahpaWɤ$ 2#xr.ׁ"fk(eJJ{,2bb@ ~	h9Pc8҈Q3?c7S@T%(H0ACk$RxQ8R	%q#'0]E>Bv9 !qP#_q%f[^ i,'cm@"O%
BRS!_)ELtK=uvyUJϴ+~Y}a%ZئA\JW?QaB(r6]_i-ΦJhzm}nmbYm7\DM4KfN-S1C3/Բc.tq2 VsWҫǕsr8ٮjithȸ:y99h-㭁S^Y[U7HW]bZ5I-;>68dT^ۢGT׃R{i*$.^!#-u4+m	)],WD`Z7)S5*< ew^|'{}8Lnh-'mk6wGZ#+5|`VQN L^*Ԕ7{nRK!7ڱyl%3M/xg 7{୼+Fxݐ@C^d:[	i[\Zk8^rHsOm!K,SC:<YbG`9:4鏧 ;zm&Wr"<`Ôw:SMXuP&ɋҙfbEѣU7$v,yz45Xz UMZ߅,ng`fim'rk%q%n{˾D{.
Jwwx(uPp$w/jDC;ٗv쩬\&0rXTPjJ{A%T|.tr BXa'Ox<\At
l$xqf
,l

9
9)
.%%E
ťE%9K2&;*
oQ  Rs x˼yC*[
G;UVw4sr3 Ɛ
! x|y>FtrΫoٵ5K. @>xYkl[WWXnR'ΣI$vNY_iꔨm)E>vf_{U>&B%!}B|MHl@|a&)s~ӥ䱌[^	Jc6AeKZ-K6ʪizsF(
	23jD(eigtdZNZ)̢/>Sь
MhePfZI?t
eΦՂ*ylRCVfebIz20NZj^kK֋ԊU22>ZYtSaӪ6u-!m\!曚jqI}
e5@gS^ϦEd	rr
T,&]rFLQIvVXҞEfBMmgU`S-lk.sy\z^7rbbQ!SݴRF3]@ɕb'ʒpm*=:RYCYBt;':Rv 5A^wwBIbEdREWj˙ȒRo`<D{NyyMz/Ko:{æ2Ұ1ydS)W}
#[Z2JDFQդQuMa]LnpMWcLU=+s3n;U12U1tl_o"(0O8fJzN'+§]8sfu팲~Ee=t&KeľU("K	OkK
XQ
%[FP%?ᅧF=U`ArX0uPeD5?p}~0˾qjԙPuW}|kH s[8jsa(eY[,Tt4qxBXqJ%Omt"m4ڀ⑔1ff:3Dc_Fo6[xGof?4g\p继2ݻ_=F鏻wTj.|AǠkl1C㎓J:mYO~hꧤv33jFV=L,ݸcdpY=yߞ 6fa;[F=*peM=,F8e9.T}ŝұ}nh֖iZGu?caαF8 ýqg1[kXH=XItJFS1a*$c&gd }}AfS*}qyi=_zװFH,ہa<5H9®/O+Ԅ1Q ܧDQ05x8AB," TNDz&e>cJOJ8%'M&'R'w15+!eO%)S308s	?aOo)LDu}l/W'5/CAwe(E*V.B!P$b!+;cN`joJ?Oۋ8K`V{
{BÂ9#VCiU@t(Rd3#?аp 
Gvdr(|2"Q۾9
ܺ[w6^90Kg`;/Dn}I81>sZ4h1]m?xe:ڱҴ뛋L>?d3faE٨2fVI1 09#SYE'۱ZXIO+Vϯn!r줿:Fzm|:̵
ߎ][rUvNu;yvuK.Xp:+KZaLp*
/jo?{r} iot0}~j.D/NJ8yʜaUE/`Ff
-xFa&-tRfKH2-Bt)-p΋'ZFh`ۊi$HX#2J)t&LaH\5s)UdQ?V6Vϧ/\qȼLsd^2^5򤃇.yoliBcQ u{9
VncubEWX#b9LUQluV٘a
!m24P^3-dPpoeB>fJ((F o;KR |^5tL6kC,K|ZqUن U8'q8"հ5lؚ~-&Bb2LHmHxj/;-`&~1C Re q6Z3GX}fpQL-Ҳv".𙥕q^
V
8#j5"&	@hq$BӸ
b_o+ii8ݠxz醄sC7,~X[S85»cr
O;Tc[j䍥8o<!oUh6FB
aZ*eXP(c뾐n>5jS7TNnL$}QrQdTjѬÏn=x340031QK,L/Je= a[)בs®벧"T槔3?'<	OL*_SVRXYWP7oU_޼}d+DqӁ*tvve;9,/xFA:ye1x/:z1A:0׈ɖDϚޫͻO0UEy%z%%)s?0X-p PHO.f|AWzo{&O8NH-Ie`Z1ZwmN_6"-'8;>)'?==3/ၹ6[օLm]$ooSUũ%zGy(|HM"gc͇V
!F;\f7U\)`N 2x D^tŻ=O
T|100644 Requirements.txt 뽽\E340000 docs RQ.5
kO40000 example e7<m#AHK H#Q,iy{b<Ӧn
rz/
S,[hYc5UTJxP `v2,miͰÆth%־CA/7s@MEi[zCm)a	_x ``'ST]H⒞t\I(i
g@m76Jwlmkqz40000 example ؠWg0e颣Q̩g־˓z/bVgIeLD5Rؾt8r5N4(xH '100644 __init__.py ٺzg#-'507!4RwXx[|yRĒTJ49}޷/?ōƜϨx31 ̼t刺_3*i^]Abei&`%i99).0=pJi/1  Anx˼yCb[yY2i1{DfLbt kx|y	6f@ZĚ(W;9'35P(PP\_nX\[ikk7JF. hx  Ln\Yz`H#x˼yBȌMU1*nm:)-pc'# :
	j4x|yF۩ .x  fд( a?nCzC!/x9 h%־CA/7s@MEi[zC*x|y	6fv$d
+ҍruss3Rs+mm'^ mVx;|y#dyƕ xizҼ"<bE ]B<BcQIFiG~NU^jDCQԔJCKKCT΀ļDl1[ A}KJS
xs l4 )u-$\x  507!4Rĝgxg̖V7UQo
%
Թ 4<x[yHfȮi|$v||o$ 
x˼yCmuKsVcӮP1 P-x˼yCHyN3!W;ll~V+l\V*Fg 2
Cx[yȻkjyGhxdsL b 
l<x.
)i
y%ŚV\
@PRT	a@DR!3MX!X!/D/?/U!58̂.J-)-SV$(%攦Yl#\\R4AdTA~qI|f
F"ߊc;'=ɂbONޥ7yb
dг@Y [@u:xTMkA&R
`lձEm VѳC!eMGgw֙I?NAA<<{|gvl!Ly}>ҷϥwjsH[QKD.Sm$xo]|K"(fT?RIǁpGӘGi3YC_Wz{ǒaE$& 3xi/!6
(h8R0	JQ'`İ|bӡqǳxBG1"VJ6TEzwr/u:iHwf MqL5Ǵ9ϴӽ(
8̽-g4t-2	-Ͱz9!IB GWA-UsU$;CkIZCCq40={k,`#m%.-rTpQ<&d؛(l׋]*F
([wS$_BV$VÙZYZ^8pǔ)098,*q`nKd_HB/իpAzBatVMq5w(_JwN>W)ٕ86vj:ҧO3lobg\xL_!8X
+1c0WǱGIk=oӘ"4'D$VMW_D?B,~o8t4gnL鯒؛]^xw4]^A$<Sg
xsA
yssSK2S6e,.yr$gJq}E'?e.NIM.шKM/.I,IM+R@3t&7O^,):ACC	y*L>>ψsj&2k 73Xx˼yC͖zdb.3ԩIKt*Fg ox[y'Wzzk]YqE1Cz$ 
nqx;qA
7 ;J7x  $ctob.Ruxc 2\hl}7qOvF6$ѕ;+	A'e4FJS-o3 8LAǒuE5lsDGp.OxYˏGcَ8ä<~5!!bwl/WvD陮lOwzCnA׊C@
		q&zfW?*螭Y(o;2=O	`]bsN'=?$b@I_zVh2&䍽LfǞ=g?DQqJGɉ}*Y/Y[JS.6Z{*)/*4?trUn-(H{v]͹֝5p˺4?ZQ
z̥Il+-zs5S@zkjZ\[ZLM<iz{[>p)%xa?52I~ȵ?<TGC Hҡ&O:Dn0ބ_TF~}C1Yv
	|A
1=rӵe%x|Μ9nzPNMl!B։̢i36'6	B?2]4cL-2@n?H;(4mҐI^#ҵ=cX~H	or2ajV `>AX/
x^W/!:F{`;>).BJCֵkm+ǒSG&?~l[GV2c?}>,ϛ+qlawg7"ϡ+M;1AlǡuHQ27)Q,#URҍ!jir[nUհJhƒ%3Q᳆52G]h)dv#*9vku*t[
}AMz2RaPǦ)Wk9)(dbyJH
cm@z
2"a.jy|Xݺbw&B
jٮ[&|ڐ
27I!apOܔzsFX̃B]ݴkw\\H/"]vKƍbw)d"T^cBb(CXZաPllשwv,W^4
CL*6tMr'ٳѤ@2Lp=҉ߡ.W+0yKOƆkMVnBҕ!kCc)wp(䶜 8ތXwh:[N{Dc&ӱe\}%TP*/hT3gH1&Lb<qGå3d025Dɂn8ؙzX<9+K&sd0E2,4c7Mt4	ՠ+6$$x,43UFA̏uVICo
2q2b
YKNe-F:T
u\0<-dR2˻Ɖޮ&9\;/VZޕf#|6*a}x7=}!EW|qޏdXq}&jB0FEmv8N"oMFG6 ӁVcȀ.=Q`ul@흖Qϊo.,x%{6*hmG! HIY8{c<((Fڍ
8wAd^C_Mc?Ci*dX`Nts8CW؀<>>}$s
EƤާL5c畺bȬ*Y\TH50n RQY.~.dJ i!6 JH!tF\1Ɯ*(A!z>1b"@Yn8j#HcjGա4u4-^HPBI C纰(ln)ٞ&a>HS)06$6lv_{?KԤ=<3#hk&pAyVCIv7&H(l<IY|0
T #w>|_ukn񖕞 m#JN7g?#i(Lbk\Y!QBp(Ǘ/_VnNUj EE{ױ(֝atҳ ;$xGr =\TUg!0TG(ȃ?^<w^R4$8XrLES,yΰ`<
A3g .'C2_$Hytm}%{&Fg(`
>UA"K&-7ӌHrJBy$BbY$خSr^xL|62er`ܝovMKy2eRTU~GWvXS	ʪ9©[)gzutِʕ{NpJ4u,f@2!Q2vgNvM-8,
EcA D񺴢XabVz0Q53Vy]˓]9zÆ#Y!mVjJ;N/i[p|z#VNJ=|{'&e+Fy:8x	!,8ܔI'\&V u"E֡o윆wLMC"̤¤3ɺ0rb0ΫxiU xϑ<dMk_HYrՔ2%%=
Kmu
y- }SAȺPc8ҐQ3=c7S@
;T%(1!ACk$R;xQ8R	m%q#9<|6r2@,B0SyZ2kL>XNpD5KΥ06B3P
}ḗ,x)-Zf![{iJ$ʩsm*G,˃j]aISs9Fp(^D1QihEt}8w*鄠uZkźZoDW/Vh$]8˶L˼
/NݾPIqPk[Ͻ_J>[Nǥ3r0֏	}Ch8d\<Aݜ
׃Vé][n,̭o+-e2/Vm#AmͤV`eOTБL@QFTB0wE85V7@@Mʔ?Hwl(É A!V>[7qZh<8!Żv#-CY~m1+xe(R' &/jJ=hu7)ͥus{<EvӒ|T[Lֲ r<3U]V#<MoH \J/t4/-u
zVO~yP3On!K,SC$8w49Yb[`9:4ɏ=vL~um&Wr"<`ÔNn];ޭ#GSC'/If^ /KcFV.0LؑSӌk "ʚx5Y*#0N6vV
9RJMŝw}i燻.JVwx(uPp w7jDC;ٗvsi9L`䰨8Ԕw3Kԁ @]v'Rx:Rpx˼yCȇՏ2/<N{:OU*Fg 
*x[y[8va]ig|s$ s-xsgMқ*,f|I;3M!1''(xr {6ՐTĒDb@qbnB~HXxZfQq	H-ܘhX
Q)pzP̒Tt	a%%@1΃j̮8~䟒¬G-mJQb!`A"TE@JALD''pE+$+=
R䁝_
<xn>ʦ;YQZx_⬩9%t';Grq)@Nũ9iz%`W'UݧQUM]@6ȮҜE7 ܮ}x˼yqm~׼#5{(fT03m\ԣ^깉('3ۨ4YT1_), tjEbnAN*aeo0_$or HOÀ+7g*T>w9_j&W1<]Eys}W vKGx˼y4|}Ւ7,٤iaY5Y [-x˼yCȇՏ2/<N{:OU*Fg 
_xc 2\hl}7qOvF6Yj#vKX74,FQDdQ51^%8V׃3y ,\sxK |$ѕ;+	A'e4Q&:ܯi؇㖿kV8)Ӿls,B-b=5Η Yx[´iZ^'R~'2:l*j
 Q*x[´i	%>dx(X;S͔7| *x3 .Hl
jhL_/r8ç\ʱH}wf0d}Ax3 >Sp
.NXG80;oLu}&3t Ax3 r-%3F_g̃,8LAǒuE5lsDG]Ax[´iqQ0Y[z,k?9 PxYˏG$qlw,qyǯ{^a[k{ɮwq"tT]!

7%@9r +H!@ |WKVZlo֭9ǆN9K#˜$2a0frYňjD6a'ko^w<dy_u3/ٲ<to\^VoIx$>Wx^Rk18Qda;+s󳷖g.,_SNؖn+sks43?x{r{חG|pݵ[[?>rtosl>ŝ=f ,yw'~bb@Ɩ|$8ca]d<e?gOu:"i;)H#0GXtSh5խ:K$aQF<cU!ЅG م)~q, ax1|ilUM[qO{/ȏ컓om|=7|X^bIEa,˺sCXEhcg|wc6B6bF
UN^,Ղv:]PMR ;ҳ,]W27V,2dČ,#hzR5x
drKfh2w2m~NQf--6}?rǶ׭7[҄i,xbQX8f됩#_Prdz:i=uA7fsCF3?}cmA*4^?m/Gj~Gf3M_ZT~J#B2*H/"pɺ!ճ1ڒU
ħLn6Fu"!4AHiw9ꐒMݱӃx>lHZ dt0Ç9{O~ kɐZ[jBߤ׾dfYIw64Ԧ}lW֒.4VlorWu>[pW3~PPә%Dn:}kh
x5);dzߓ1rLGBGBh83
E[֌J
3u+u=*$bUx|΢bL,d[fE|&Ayj0D7˲LʪhH}\4?zSĩe:d]ghl*&Q*	=gO,{O'ep1.Lxf}'tn[-(޻M2L1'e[GIBrXcqKMas0+)&MJ~
1MG6'Xu2Y:UAVS@>~(X+**e- <,9cڦdQyd}0TgQNHҨe7
,F_UTx![$$M *oBsZB2]ZcSyh|f8=iUPL-k땺c3]ZU,ˠVP\:M,#jU,Dѩ
 y%~} )2BO$n$lfYs$G\>r e6nllCQ,@ODL8I gȳ.0ͭ#m2BZ\D(=Wk)#z"N&	'[L7U)=Vi9w1	H̞mhIVT ĻbP>1g^~]x0Ǌʽ&z0V("iiLӉZSg2Fc^4LggϞnn|jG@Q^uy!hVjgl·Ǒ.DS:M@KwA<zo08T$ZF4S`C;nsFێ!hqML|
|;h(ÇY(LAM&Qc5hQcViIM$(`"Q
B1^Wx5L|
62p	wѮoĒnQ9@66Ex"ݦݏ4jwǍ-%VmemT]jb(dTsk,	*EEfbѴ{\u0*\q0E
[&-50iXTcF Q7La$2XZm=XW͵ߩvdFY~K*|6øQ_S*q6*^k=:]M18h
̋BXq4vIJV u]
*2C

9BC^#"Ҥʤm}3ahߛa^WzC͖2鞣 xjXס&PfkieZJ{42[Z@!y	(\GB׷!jS>˧}sLYK,(0za뽄AHeFyZ7(t鲭q!)VJq
0
c/ЪLMuWA9%j+.u#Tw$Bx]_6p($.e?XW{®.N)/5+Xl9qv U%8bd]6ضXYz~	*fV?̀8-}x\;(b-)k7_x_xُksk?fj5;clwFϐ8tsZ+:͡pF<ĜoNu)s7--X[DWnFqQ_@gfuBmU:VaIȌ>ܓ(*#Ķn
;P>L>S+>#c7:̥L_!O^d*NДh?nPIn?
&i
U;~:'űe[r_v+<iKT&Ė'SW>o;1z	ر;qŘ@_u=rXך{h=z?xX>"{Ѯ!1[#v~ٲl95K=f7>?i}udD8%.&f6*1[o/Fr?0Vmpj{gǻǹw+QӶ:g>%f(
U䶽vFjz8-OE'G2Ͽ)(|#[yν|qTxq
V
		N>~>>n>>.		
ZI9ZV
99
%%
i9
9)@rA-VQ 8K$]lx۾
!&NA~.+)$%lv5 +xUK
0 QEWzj"\ hI++x*WgzgݪinG{B|PgrR!jlzUp5Hif`!Y"GGfnK
ʬ.P8:bP\_8JE%ki^;Da3:[Nwۦ;"UI48x[F
MC=CB\C]}]4K4sSJJ3s32r23K260`lhY) *Ebxqf
u|=]\}]4s4\R2
JKrSJR+J bz
!
@RT
ԜTɥXN-Q())WHK)N1srRsRSR2<B|}m<:J p<(xqf
4&cTd  kO<x  f;S=&tFJ?zC~x[yHWNLNg?T	 %x31 ̼t-}i5IP1$-3' '?1aNI]:_v/Fs &Pxr ;
Jչ{VQGQghO:
^/VOkϑ7;XD0>ˬgGvdd100644 sitemap.xml vOܑqm$w
@,Np1|xggpEHsxpA/%f+xgg^Ӟg΅:V~)8ppݥ} *xggpE6]-K&P 
*xg4ZdUM}glv8klω%%z%9^b{F%[

LL
S!?J셫xĭ?: l.Qtx [m+ј7ltde3ёc,xiȽOFWWR(]dShҗ/
*xM <q@ .Z̜wbf`'-100644 social_links.html Ak6rZڷbCSnx˼yqm~׼#5{(fT03m\ԣ^깉('3ۨ4YT1_), tjEbnAN*aeo0_$or AY%]؎9{ۯU";lWp| g#q= TJGx˼yCHWsnĿ*Fg ݛKx340031Q,+d}3ge5
61,\,2/17?%$(1=z;(yΛnPթyy`EC_d{9_7~Swa<̜T$㦿X ߵk^p׭|=?7Le~Qn1Jcջu	*߸a&TMAQ~rjqq~H]?>?eKCCg%McmY2^QOnD$N4u

:WE&K郩DHWÛgN%D>`kab 
%9%^k_qD׹1R,&dBu]%6#%ڦP	yIC|q@Քe~wB]s(I^>r$/ x` '100644 __init__.py 
ut
8dUkrr{'[t,Qi#GfuW퓊4O8KXa=6+*ox[yFYYsLsyy  ~<7xYkl[WWX4hR;ɱ'Sײ:m:%jfkJm>n 
iBbƇ
V
U@>!>&$6@H|a&)s~Ňh:m]4i\rX0iL>V,˗5yisHgZx,eLwt`٫nZ6tÝ^Tw_#+֋ZLyݲq
:Έ-}r;m`ug,ӛ8N{3GpZt6TDnH+ٛS.7T>^ϒ,ƙRg8kTwKpF)TFklö4o.QW
dvjaTe
7)֎sj8erPL(鬲-%zn6OHepV֨?&<E
;f0J<;lp<ٚFhpҖ̘Zֆ#cp'ڦ8	o=Ւwa(cm
fs͎5a|Jw%Æ_kB6ka%h5Dlg4tÛϸ/xۗv^W|rKPd7OXqa(ԏai^KL%qBj<$WVZ1UN2F7n\N0UcԌDXDIpT5#Mv4$>߃3]-$<{.Y}#N\1>y+.gՅөpUS{J"mr<{5E _h4B
FY	
\Y62ZHcB13S{1՞%yrPy{OPo\+orq¦QZpy󶴵+m!y	m!!Jd7I
^h74꟢묌u8 )z%g6VHshGl|bȳA|TUs8ícM'zکzQ3]usꇘF ?8*);:Ir``7?nG~FJ8h3p`>kW7݉;NlKf0۳kt-#/C \wa`-ϳ,O	ǾM|XEu{Cc,c	Ce-cG[YQpgx#P>Q{h/DHhMt
fS9R`<'Hgct`{C}Nf*uaqa5[x̩VFh;A<*f3ͅ_\e7F3I򝔅 jc'GqIFdjF10?:yΎMOQ(0*s+%'S?CQ?e'\NĴ{k.G45vBAt5(I2V!>J!Q7|.,tk#;#}n`lzY
ؓhe2HQ,^ORloxhPڼ`$4ī'U
MTbJ\C9alHj wx[XYLOO f7&_]T!(nm֭5Y#9N/En}4Ç(NG}5ZlU^,խi%_~;5p֠`TSQ&jc M)~Jkp|v~9RSska;p5Y=/OZY8
wW<Tv.tD[<Ѧj<²(R3+(}W>Tb72s=?3bWzE]:)$ҌUNnR
-dFa&IԌ
,[J=A2bg)S%7ȕdk	KruP[5%?gI@T$?蔑ǅRC?X\XdJ][>:qčó
UYda c黅IZh9g;|d`!)D@rN9|;+ĪFr#~ٱ	xs4nt.3:}\dԒSRK uj/Fk:h&+5ANŻN_aRVz zΠG	:1qN(C+l56BE|cD5SNΖ|#(B=$AݸVw1VwuCAK;$}`ieN8qL-C$Dh2zZ|Hzd{&`i\q	`
_XIoPB]"p"
[<ny0uA`I
|>
lLڧZe~z9
hYqĳ/a7n24DLBCv7+y~;2RT*تo[O~u:̺Ŭ
r'ͽ*w](b%\.م<E4-#*o%%/Yx;2
j7Lͨ9yd}mj?$x˼y}f1m+zKհT=71 bMgXX*<NH-IeP|]9A;JE'Ɂ"9߂LBҸλM0{Ig&W1X~~~{G ()9x˼y4):Y{U%xչfb 
9Jwv.X*~Ɂ"z懪bkJ_"C*Fg !hx˼yC݅R|=[Ǘ4U 
,x˼yC>V#<?3m8yr3 *,x9 J=gC[OTA/7|RjtL-zCGx ^tŻ=O
T|,x˼y4lJEe?Ҭ
 \|x ew=MI.xB  dynamodb.py BЦfPY i»toàA]m$t
Px;ti?a^MxEf0YQ zx˼yJFTh8>Or8 6xS͊Af0₰T03`QvQӦg2iٜs!E[=ɸɆ7?}%	4P	xPRpb1Wud
/3}X%`M[Qڢ}rk|6;ty6v'M38kCSV-%U+	/)sʄqx1+!0	qSRF  H 
7yo
qx-?	&P:Vm5R¹ZA112Hrz+e؋2$$`޹OөVFk]cSxpNQQm6({'έqda̋e3l/+"4a9vC	 f68:;JbBdbМq&M=rQvt7(]QBҵ}q8|r8^
R̔֙ȵSg䈩]o'bKw%"Uݚ5ߓ{͗dލGAS0oŋk~0Ոt=ſ_Mv
*[m
rrc]ˍ5l2x!m),WX #	tNxmU͎Ga$.R$.%!lؑލr(a!9f3eONwz4D<IC䐧MRZ~ǣ?gIitޒ$tzƝGNYSByYB+X_D7?1N$.)ǠA#{gL!	钿w~0qF!{zx>EؤL[4'%yj;%YS	t]ٰjNvq2e浾rBzHhIυ{%,KVCd ֠¹\ClL@gt>߭Su5讋MWF9M~=tބ"@~AM({
.t%s((8k/nԾtXU 8m픮=!Jy,;'1\EXʣ9#
-f#wL	S%-TۥK=,RT.,3|-Re!bϠA.o4nxk\e"Y7/u"]٥ז]t@iXn)KL%~vyy]nO˺⿔`	k{GG?T+>d6HɅaa|Wpx~!ddwd.u2_ 5 bFz
e7ZӨ47Xvk8i
3זi-:Iv;$mFGW2+V}ǿ0au	flR,Q,Au/oNI~Oݪc߄FT&ubdkF>jmB#MIfCo'eA{tη_D@xmR=o@IRE_
540PBj			_kg:EXPA܁9bc7? bFpg'i׷CzW@cXeReX`#a=tA_eIVa`,
`;8@=[ic B<yO }wCLX|F-k(5tPs馏{ɴ8׶A
,3
^;:&TL7={dۄuҵ	<M¨0yd{uEXm
jau۷7`6yAmT
sIJѬaΥGaSڈ(gOHVbKW-]
Zܯm
N1^%i$ֆ{̣]&UE;Nks?!\U^-0燹׼qv%ٕ89c_ {<0hYh03?IRǤBY.ѯS1$;U4ej/J98bPk?s3 X%Tx٬3A6YWAK+,83?O@RHKKAC+(5'58U4/UTG\KKAAW1%%>1G!-"X$_!!!$?7 >	/!A!3O!(5$3/}.LMXl2FɍXʃsS2sRsSJZr
SSRA.(}X O3xePc'ܨ"&!?iަ6^@I-vs~x_4Ŝ%aLsyBx~_.FǔT!l#%dba]Xюƒǒۙ6q'EU
O>pM&Ff'kΌbUX+޿߻=*|g
KKIx{NoFh^QjNjbqj&cJBq~rfbBNf^vD_R
Pq<Ă҂"/Dqx|yCHWNLNg?T] -j-xļyB5j x[yF2RdkDфϝ 
Mhxg̖V7UQo
Y-չ [o.x<yC#: "x<yDFCu. ,kx<yFfCu. +ixY[l#WVd8Mb'q;:۽8!k,Ethb;cx/e(HE*b/D
j*D*7		ZUSU6&Y*ϙs￝r{H^˸y'9t#ZV+kUUJYJUJfŐ4:KX1N'T(kE-W
MiUTDFY3MF|S+jtfU"R6n*Z^) +I!WV$ZTݙHYCq
MS;m") o\MBeJ-PfbךT,a^YSn5tfV+!Pr*2N1J+3(zLh묺lj-v6kbQARL*LP<;aOW-7z?ݓwz)2 ߽JJU'ru*5݂_S"3Ʈ'k1K7z}ϳK8_?cST)OZ2n)H2Rf]HaM	Y
yJ%umBe7	*",1fKlM3PBNT=lj f_%*Q=>f±<{aeer¥Kg'VѤoQ^	2ԧ=Y#̀
 ?PY|
nA[	:@=>xb|[	y_9f3JHϻ`*4WuAXG?5
1x?,.W u.R_Um%x1+_ݥq+lZ雵RHHGԶq@,f<?be44G-	y#A6'lR'27Aᑇ'w/l[AtSkíc]ߕ<ļR7ҵs?	C28ut$s#j=>K=rn3ݷb,1pSN1Ew8.ݚGѱ a{#h4<<+9[Xph?
,';R?wIY..7KO<桍'XÞ_`hH3C	GhJ|7_v%M!'ѩ	Y30!}j!}nx<eM0uoO}PKO	Ç)qbq0Ӹ°kZ41L}q$gYwi,T~rSQ|b%4uofp1$-tâb 7IJ"{~ujw7Ua. *&5b3Oc*"Ej* 9L%31Ft>}b(H1)	?GI,B3i
V[DX
HߚUri<Dl+Ffth[ c11khh5\֞ai~%z8ʃsލM!7{t#)EGn]C-Vgl_,-t>53탯trF:TScNJ s2_z=N4R6r6{Z9znu-
/L<O=\6ʭKpv~9ywk.oؚFfͨ3mԋty'}y/}~ L#9I{ziWuK8esjz	sle4&59ނ̔n!]mzI7%e\z^٪tաe\y=nlYsrjwB%͔H<Pv,K0P$nF刺:2ʨRNLVY[=py
ebC0AެwvV㽉sβ٢&I.BFKNV4rظ5D
VO]-c4 q4ʔ+PFX`#m04PQ3-dBPBQY>J()FoL$%v9"ékNyfuNRa;)'(y0[PDk_s5VD
T-Kuj`]h]b	z7-檂`|ٚ	ԃօzexUMnꎊbWO9QzP'JDӌq,yjKO EAKc1EGQ:iIٝe+%aL]uPMƧޟ$
`:]
NO@*PMpYxMY6X5Xxo+
:,o*D2ʭaD(cg>MiTJVL͋Kq8u1Dx{2$
5*"%E%J 2>3E)VssJd)Ǫ3X'|߽ A2@x9y2iiũ%

PFfeg`S`2G xUM0+,@J+VKU@lMUw	qHBP$lϛ7QHMʸumf=	]RZHB|w@3ҁQE7ĐeپJ]fH IAKՂ~kE`뇏O51͈,JGARmv"ʶcj1
'(,(.t͆5<&P!0A(Ч1r/J}uސYsSڪ
a6zM,0=fT]ȁ7<ЃfNg6>ۮw\'ܣKI E.RvwO䰣4vA$1o
ql$1
QYD%k;-z9ɋn[xe	 ZYl6˚b5>T;CVJnH*9y<6dÙcNgӌÄ@n(L8y]%lhHhfW7IHF_0Z& ?-sXJKTYJU	U?6Ap%$;7;#T
Uf hE'5?bd7ɝ=ֿ
/YD9mJWHojw.&ߏ\Aȕ5<yʝx#nzq?pp^|	̕-2$ڮ<\|Ĭ0QϸnHo8k'kb9dLx  f^3eO%!ffzC)0x340031Q,+d53B*PoCXl!DYRN~z|rbrF*Hi œn~-qy''䔦g>66^&\u?~1JsR
_p:imm`mU2H[*fp~fI 2X蟙7x_8_ My^9Mx{ɸilbJnf^A%߃^Uᖯ~Ɍ'{DZE PHI-ɯdYMضjל-e% !Yx*  dynamodb.py nb<'drH(#ԑyy\8x @	F09hyĴL
ʋ,x ВXnHp⑥
,x #ٔ@
NA䎟fi|xy1c3ֻy;{ǻ)**(e椖'(q%%eG+!i	ru('BKkD_b0XsRA^RVJi0O.aGd䄂9jBJS5 Fj+xļyB5j x31 ̼t٬'	wfS.Ռ<LJ2sRKrS]az:qeG_b4  i=x˼y}f1m+zKհT=71 b}lkj|_ݑ2@CԊ܂TCM"[vdW;S29QTDzRS[d?^RYEZ_,?udtsx# m8x˼yCBlxީJW+l-\ 
Ex %WZQ~BZNbqvĝ̼t܂RpAʼT"S0DxmFz7O GxO_x7 X[̜҂%Ăh%$-AnDwwuwqkV*KWQP*R`:=3M)KY!$583?xl=RW_Zc>y(d$mYT'7,۬4]Br}%;7 '̙qhr%g01CTLjmHQi& 0X;:x[72>>n>>.J

n9ũ\ʓ33HɞLJ&3V Gx{w6?`
`ޜV k3yxļD!>>3/$>^vGcӤ6qȻ1,2/17?%$(1=:еM
?{>n:5/=3()#5(yyVq&# ?6x[D!>>3/$>^A"Boݻk<^ei|;ʼT8+"WkiYwsWg6Tuj^zfXٞqMk_]7hc&# 6"5sx[ 6.VlǙŞ~el40000 example њm1k?t1t¡k0[QښǞ8σIzC *jx[ 6܅bC]RFɄ2Zk40000 example H27-eŅN閜T˄QZ)s}ݫ67HzC,.(ix[ 6y=53i>v$Q?40000 example g(o;SA udQ;2v?nϠOA&zCo$5x340031Q,+dXlFir1,2/17?%$(1=٭޲T`K̿!/AUgcN<Gb^e*J/-dzWNQ7!W^7Lф)(ON-./˝3'ְ̟|}iciߢ;=KYfڋ=ʷi
SUډ&wca\Ȅc)}0o>9qڔ[׾8һk&@P[XZ̠}en/A;w99ۖrjRiI&]:\b3R¯m
?TMYfj9}'9r#G| 豷mxI '100644 __init__.py 9GۈHƯf&@nAo'cpBtW._6=8<lXx7 faΊP>ʑzeA&^+T_&ؖsГ`H#Ex7 A^|g qOJ16DUPJ6a:aE\d69`HHxۣ_wi|r>>n>>.J:
!EV\
@o i
]xTOlTWVN$͟&vcZi,IWXSXYW@lQu&yَhڴ`ۏ]CИ4zd8HE !ve]!]i7ؓ}wkmi0uM{>{Lת"\JubrjS|˓dk?
f{w a)c93tcK.-wtٻka~Ϻq R?Ϧq=(;	8[dp qǕ~|O}n7s`r8b:FKE`P7yl]jbm>E	(|ʗŗ1I<
T7{Caqϑ*iAh.LvjYi^HG1gf(Ɗ̲Uy<<siN>EKvln#\#kzѪ՚ٲfɺaV<0RĆ40E(>FUX0wUVqTMR%`k`
X'&7K
I,X:()<-<v<O)w8.'"O@\MH`esnjJSv
ǣA'-b3
r$p ZO{
:5.?SrLb3yD5
^jֿgv-SDP><fq éPEQ#MwqZӾ$>g%村;zΣ}Z	y*C890nRAXVVfea
GA)w_PSۅ+l֪txޗcfqí|'n
^nZZ|/a~߫r)x31 ̼t#I;]&%Xv-Cu	XIZfNjiAN~b
ü3LuZ'_ kx[/1!%7$q.vCAvS4{|gEL2SlsRJS2˔6w11gMa,Xyz. )N.,(s@@E#%?475DS(51R#4/$3?OC
RIa^ZbJjH^qNfJjh)Hݘ0<F!iԴFjj5!ЇcVHF. sTx31 ̼t&3gbK,O1׫LJ2sRKrS]az:qeG_b4  *xp 6.VlǙŞ~el40000 example hӳ0q1CpQkQ2'NpF
l5=-z/WTd2)KZP{2 xM =њm1k?t1t¡k0[Q׽e1ǔBy0kR]<O`^˽:|%?yxkeangkgg81Z )Xx[YD!>>3/$>^vGcӤ6qȻ1z## G	exRf*}!
.$0|:
JI9EJ\e'_Bxrĝ0B
67ffThHE'{ٺLķl xq1RDrxOkQIhi&iU:iLd`š ,vQ0ɼ$4~.A]J7.tU 
ΤIic;}c(Joj**#EAWX}&yW
8bf%!䎚e
ӉPE04-p8{2؞54M,2_Pu$3}*}ާ+Ps&?F,kq>̦r3ڢX3| Frӧx<0lG~Z/gRe?DⲣGA 7Ny%{2h~~=TOp 9vIWca|x(e3<Oflo&]L؀Bzb}]1C+
BܧkQ=V`ߝݭ&wnZΫZh+uiy>.3J,S*:6i;l{%2
{m]43W
ݨ*zW	vOxkxn8[JHy'Y
6Lq\<6`[]xqB8Gi^fIIjqFI&J+. -/*QH/718%IV!4+"9M-1xs̂мb
d:
J~)
.y@ũ%
iE
%
 JL>A >,x5 f8/PBPy0\z/ &O<Pcst> m3x<yC#: ;xB  dynamodb.py  ubl|[(to78gR|Q`PO$Yx5 f8/PBPy0\z/d2d+ϷFMjX=xiBJe^bn~J^A%?FLEr)Ȝ*kh``fbPZ\SA__K^4ϩO{<$_|]A59y U v)2QxRn0+"N UIl~`e@m~XBΧ`????c"KK5#vbʴ *"Stznm]޹	VR1Ք'kX]=888IOœ.Pʉ9'h/͍T
ovQ<eBeΆ<#Xc-ҝW zm`DCaMKU]Y93h|_zB@Tv)GG:ߥc62dEIGHougYٌg_ 1/U翗G+#7#~]#aEjw
WxL AJƅgIASPiUW3pI~iJDXCIK*G"pxN n.dMg"Is;9/7O>v[wfb
b0Mz/WTd2)KZP{z ^x9 			U"(^oNՓ/7tox0*VT"HXzCP)Gx9 .VlǙŞ~el/79Sb5QYb~wܓzC+PGx  =hӳ0q1CpQkQlx340031Q,+d8Ro>ӆiWfYuT,5/=3/s,?R;?(*+TQZ~Qn1H]:Eq߄\yo0AF(?98fDpmm!UW6-jo Mf_)^׻
0'$(1=&\vHm6Ӝ
dD[fڴ-X=wd($3lx){edV(Ak#oAM*-Ʉ^KlFJM‪)L-}'Ն;?$꧜ZAe wuJxiK*MVם580و J-xt '100644 __init__.py i6BXffG%1͙h'[It?o<?z[k6?}
qW~iJDXCIK*>1vx` '100644 __init__.py +|j%D!tf'ȑ'!>*	C
s111Pń6VDp)g2H'oxG '100644 __init__.py ԁ)
'd&mp'W3pI+!Ux7 96xwB{*+meWORBC޶`$̓2H;oKEx mI]ȬOuU㑘Hx  =)ƅfcӷX֓Qll/x  =hӳ0q1CpQkQlWxc 2\hl}7qOvF6Yj#vKX74ٞb·ʛ:;7b8ɒNfp;P06.Q06sx[´i H[^~i# 25 xxizҼ"<bE ]B<BcQIFiG~NU^jDCQԔJCKKCT΀ļD<1[  4x"apxXˏG&qlw,8	T=n		am쵽ҾI"tT{U!

7HH \q@@8 Bp!7.8{z䒕;f~a̋6"ǙT>Jn0ƽ>vV~fZgCg+*نP0xáQWn.-/[_^[ZZպ|c銐ڐd[xsMryt7o߼ܯ
^jo/D`[lg?>qh˵kl9ĵS#g!>,ȷg>=17	{$c!$gQBYe7COn^2yv[Ȗkx6JD'UPݓ<YEn;B2
x5ֹ.<pՏonaAq#t NxD_q8UӶx"Ac?<cwq"y|ډf5L8Q%i<.&}y4
xbB`FֿXg}oW$hRSj̋JW펈(|<n
'?^ؑCX&3~7(e(ƣf=ٖ\?laŕZ- o<&wBTM2~`xA6טJP}ȋWEs8wTpYT#PPr=l=ɭ5Rjك'xhyaX/홖!Lt֥|gق	; @)GD']χ$dt	up^릑O pɹhJEL^Tdc`#}Tz1-+!%c;Jl
Mm챏pϳ?̗O@knJPMg2iOfkwVRف2$%4;os_6OL>;73
`9t*ˉ'hc᳙:"`w6ʂ*^MUBMU<>*x$H(UHm
wYЩa'+^Pe.>T<"+/\YL ["&o<h퉴ha_PA"{elTT4a@.=4?jSe&d]4gz(b):Q*
;N,kOn'epEWШKQ{?6&Z׼0E*DIQBsXcqGwa+)&IJ~ÊMLG6/[
j9[mU~AVSX_!>vM`ﴎ
W
^yd4$3F!2(RGVo[l+ztB9g+vނ ΫkԕaYuA-:jB4ѿmZ2;2
cMty`]fr)˖; ?Q7LhQQ%mk
ͥ+8h%=^.J'Će!R#4~*%#*9Β-K쀿WRXFaҒ3ۓ1I̤qȵP	#ǖ|SDz#R$
&&bkbitD+&v
jaQfw7f?].]d&&Uưiڕ
,)k0fѡPwc\7-!dw: z!2h&tp1I62>AlZn	tn+N1BWd".Æip+qwoK}cBFsv޾RMPzvC_?ъPUL"ԉ%f_W߻iI{MW}bRGIe+~K^:ɐ@S.WM]U'
c.OD0`%q:lu}%Vm;FRzu
@={y Ŝp&D>885lQ˩FtQ "-0ZP\s;Y0\;HZɪ7J 2ߕ=r$UbInTbɪ.%r2ϼTOjt.amwD+qLP	-pW[p tuJ#uG
*2Ü3

呂[!8R׏K*'isvrZhf^N6ёE$
Tҕ:6ZjxheF
:K Ҍ3kOՖ'X훙%c^x")mΕggOt&kұO+e:p3 TeلwQ5@O_CBƑ*Hņ#}n?N`0YD[^"2 UWho#-u{dԱv]{DwU@2JH}dz[K73*J,<찾O}R%ڎ$̈)sȓ4ZY.BnPvzo,m;@MR^sYXj
6Z~J^chdԂ9#P37M[edOD6Ѵa9	z}sD;@qbcinvҲ&)NhoK}}:dxnggzmM١OD`,v[""[=Ͽi,	6ǆ&٧a/-_yv;kgs`Xc詝{kEW/pjQiGtr8˼TʓOZى	D,ilB"E.&^roL|a?/&8*O{hxwq+Ө`#>[ /"GXE;h)i?fB4>Bs<pV-sKtAKkNb	!x1
0`\;6AT!мWT=I<,KA3	wyH
pPm֨r$2݃:D֦M{5DMO	ηAXF,Zc	P?N0xg̖V7UQo
Y-Թ [k.x<yFfCu. lxVMlGIH:?3MbƐ@
݌zwCjީPPh	8Vj[oz=UjRT)̬؆{ٝy}7-gw,$Aѱt4uز\EVZ	M=*Vs$pYlfq)'E'0,%a*)qY`UBR.S,~ʩ:/Y )ݢL㤮{,*`Jd$ie!QP|SP4SM7Q8[VUtF9tI9tx$4o
Z!x/Z.*>넃<)U
&&ђQ3yAT((ScT1TR+YIaSe	
߃uOĺ9U&ܱhE#L!2:P\a8f5-3-=ڶ=^gT@uGM0ob5GD|u:@Q+b3c$4~v]|vU+&wʦhi	^[ch8DTF㪏$V(]{uvZ4+Pt~`=FCg+gS{VqP@rƶyhPd"EC֌lX}y$EycU(7RZ]ϚJX=@PxʬY*5@
pp1sEbڹ+`o5$mNyaR]cp?[JQ
GfT=UZ.*+fLERecXaxw7'FF񉞷.a7L &͗rP$4gj:Q}UXg#4Dq8]H/0Ln>`]xG%OF'-x*>lVVZ\?;l* +)_"&(-_&9%)YPā𘿵֔*k
^	'<	ᭇP:l{gz@=
#\1Gl rCFH}>%`)o%	ΰvN
&|"Jr"%iYz#>@z23MR_=t,(ke
?C,Wi{Abוs!o_Kl!/z:,`m'?Dl;
DDh1L9PN;ٕ&#? .XP=wxxhEc=/2woG6dc
]jAD7mg"G"i'e8A#C;xJͰbz೬8EU2Ǆ-`PƼ<h	n=xWc#4ȲtÍmu*T<Ҏ.8wᇃ=0[S<G-01Ex}|sڳln1-3ێ {𰣈^XzggBC.Lepef#]1_Pg`GDK.x۰}8B@Y!$?7@!)8U!1/E((3D$_$#/,,JMQ(ILI-VH-J՛=%>/1w2irQjbIj|bNFRf^mqjN^|j^zf^TD$:PHG!?/,2.xr'G$[p3O"QZRZ
1 bD$1,09Q\x1ɽ:7؈1Nfج Yx31 ̼tOLQƷR7QvLJ2sRKrS]az:qeG_b4  B%Gxk0=>3u"WL|)J9E%)eJY똘3&sp0Oc,޼c='e؁9 \WWRV\Y
WQHS/-1%5$_@G@S8'3%5@$nL4jZX
Hbo1y+W$# NLx{8ilbJnf^A%߃^Uᖯ~Ɍ'{DC /4xĴiYE PHI-ɯdXl{uS'
WM<
 PSx340031QpON-JIe8/<tf-
ֿqV!DU+Co6l6Noٱ'qFA9ũz9lj];D֝زufGNTEEy%z%%Jy󧻾zwxzvwpMj)-/Nd9tFbܦf XTQ;xmSˎ0+x.9.r)C{[=Djd#)PX[p|9Laq
\[@F-ϰp@6ꃡ W]RÓy`t,F$>9&lN;V&x:`D[3h:/8TpĜ6V51U[&r&8 ,Z} ctt٨	crո# X
NQ֞0* @$SQVjs_PRo+sOU%3geE%boN,G$5eXw'	gR,1{)mQWwJǀ(;j7Jbvw9}-eWa۷gnVrF=M* ~53!8fxWYK
Y|͚ j[ hdyNgs?*ix&Snn4&OewS.!?VK_x  f9Sb5QYb~wܓzCGx[´i rK-oit˟dk
 
x˼yC[ş-_m/y*Fg -x˼y4'<gҴok:Y }nx  f!Cv;rZ@zC
x W3pIj:x5 f6NI\w3ϔ\CcUz/WTd2)KZP{%Ex˼yCi2i&xd; l*x7 !>*	C
s111Pń62_%ots
2H%x31 ̼tSgc?{˄NnLJ2sRKrS]az:qeG_b4   xgg)<]"To®u'<7qn Nzxk&E89'V)-(W79?(?g3'wV %x5 f!l_ʈlF4/z/WTd2)KZP{mEx˼yC Uu? ǜFfߧU  
x ?S4o:"-xiHF|רn/YX<F 
nx۰qV
87  52xv
;'qs)@BbiI~nbBRbqBb^BQjqIQfrBIdWQ֌ԢTXs'qx&&'h$eŧg($&CJ!|MņB:
y9`!qœ;9*6qL"5r4ĴVHIb:T`8dFC1x$6 \LHx˼yCHpQ(;#@vr3 
K.x˼yCH7Z-?c2MH#3 *!xiȼ'aݗJv/ZGlݓ= 9V-xiHF|רn/YX<F 
x31 ̼t3gu53S:[s4̜҂yg8%uAN\ї {x$KtBdV*d&+MVdRxEl3'1 i`z=$><YI|3ɎLh 
fk3ǃnfa2Y'of|YE&c߬ ,Kx  =ΨĈ$0嵲QlU{x7 6zʼacFϯ	;YΨĈ$0嵲Ql5x340031QK,L/Je= a[)בs®벧"T槔3?'<	OL*_SVRXYW0Z*iO^vwr'T_+CΩ.ga<|K6
58D/33XM}QeoO],UCfޟW/p;̢ԼbiZ'd
fYU,v('3l))+xJ6<lUNH-Ie>[tgt릆{<bi9I9yR/$\<).aӠ*N-)-+d:>*迧^HV
5}RW0kfd9 " x O`~ĳ F,t\_6zʼacFϯ	;100644 Requirements.txt Cdm&hDol#gՅW40000 docs ƞ
	OF/7~LsX"p5h4"g{Gz/Rc{5
tN24ONA?xx k6kYIo
ei(/7W}vک.WȊ_}j100644 setup.py H#'AaYL\40000 test J'M[C6"Pj2"x9 ޗnyUu<m1B5/771:<ETn^zCQx3 %}ڔ󆡘D 8xΓ	_CFFyj.HF5Cx ٞb·ʛ:;7bL]%x5PN@޳2XbvYaBi. S^1puOߏ}>-< gLG(77*Msu5O]CS]J>N[7ĆaSZ1^?HCϢX)/iiǣt`N97ʟjҲXʧ7MYM)@Oz*$8^MV^l.dl(@#SGD55ԾV6e{g%pwIxqr
::
y%:
驛Yu>LNl&7Z%Mf\i]
7wڼ  "Gx=n1Db$9agY<6HCPkq	E͏t'g:X=qfl=DXZw%ˏK=ʇ6"1b1TG1u)S
!D/!aIh<gCd̕%Q(ZVA~gs\O=EXĈyѡCP/xG '100644 __init__.py &b:9/`ܑ'P8&P+aPvCBVx\ '100644 __init__.py i6BXffG%1͙h'z[k6?}
qW~iJDXCIK*k(cx5 f}vک.WȊ_}jz/J'M[C6"Pjsx340031Q,+dTca 3xnƪi	B䔦g7ޒ[S>Z]JRKRA>c݋[<X⌺8g%YgvAhwSpQ0'$(1lbWA&l/^mvrNve[6;O1W
UXZ	Yf"&y:\ir?m n
x˼yJFwU៧p.5t7g +x4i.5e0"VU#+")9_ jx5 fV8;bʫ@_
z/eni\%[tZ--ӷp@x Ǜtf4RMux۰
G's(M>Ϯٔc%濜 2\xG '100644 __init__.py ll2#*$)x'!>ai5&z|\XboMIox4 `#e UÀģ4
8t5!S
yapq]w=jCx˼yJFO0c̪ƣvm Ȋ
(x `~ĳ F,tInx4i.7, Ẽ#f'XYL< 
+x4i.mbFz_5靇U.f|#x;xqC&g%eN,2YAcs ^x 6zʼacFϯ	;-x5 f,F(anQ4#uz/!S
yapq]wexK |]9 R$Mi9}4Nzuj~BNieKkO8NtF̘U46Ǉ?$[xK 2\hl}7qOvF6Yj#vKX7V׃3y #Yx <@>M^}KM*xXϏG&qtc1Ry3^0ֈ
Zo6JA23553wUxE
7"
		9.H	rC@|ggd]w_jߞ]g~=mTǿڋ9{	-<=qŒ{/p}/ʘmoLZ\c\T3-dc%}\ƽ'l&qHh,(y/2|HOH8ΒIx22Kԫv$Roo./uIy^ORwawWB}m$I5$q7"-Y5'/L"L,Ep㽭(MqY`SFHy$-F9Cz}Sl!#?:IPN<5̌JN)gF)Q2t<M$@2atGݻ=`󆾮dxY$ėOnc?7ZAJ=;E|eTƧbWtC$S
#y$\u:ůwms9uaR$ty5[7.| Uo	bQFpJq~dXL #To;CtcBh Tl&
U3``^C'YHx?!^)9Dmd
ּȾԾMcw7JKًbQya4Ux?]2&;>OCBs-bJ*r۷Ķ*q$CsliwIET*ŅxǄL&֥Xb$	 lٖ϶*W^E!U`h69ܠ/e8D;1áWvFI$s<L&ǆ}ʕgDO[o]+yp{e}򨒔*C-*0Ha	LyĀxj%sNgӉ& \.Ȗqe OlAl<9I1;"|P!zd@_o_hNDF*:5ֵPs#gz!^=3&ԘIgtuuqN
&x)"e"[*&VS7^t9H`?Ч	1OՑLb͟l1׎C	.,_*SI*Ura̷RÜLx:QE
aV[(2HM(U)HgkEc#=h*%A.\{C$PN|L22DQz:G(LiAˡ,,		
lsh 1 k$
Leom0fiAE(5XR-G!vcЛ:˝c?vk&A6u8"y'qs L,e<M5jFU#M
$ovf9ٜmu::vsr.Vp/k+(uEml@_Ǘ4Z=:
RH&	u5T8H޷O+!96}-13B׬pL{	'^tJ%+$o
&Ztɂ}?5Iźy".adn<b]+/$[Y/C_y#9ykuqX=<6RmMErB#SVR48'y+v0(LlAr5@4L\u:+ E9H4*SYZܺͱwGUN&iTGrzd>'pq._+~3Ynt<li-)Rku-u%7%S!	Eȝ!e(wJfFQrh.]IRp:9ŁR`6{`#Kb(;ƖN:V-QD#p@S.>X2"ܩt/2JtfNY=SFdb}a'2zvIKvp|c.yľ$)b$qWp p,Fw5Ր9+M
k&l!?t;J	$*u9Ax*MkwbW={꓆~-gL{57No:&4͘6*s"ұT>^5Fn)5=w>@$ Dgr5wr숍W?:]*].iԖ#P3Oko~qq?yظnB8yxsغNkhO+-Rbb:D$\]mYsHӄW~8I/IW__!Մ$:E=mK쮒Velu갿S/2GR0$i
!{s?vS_zy&Z.XŃΕCo\Fx{	,:9)
y)
y
%%
ũ%
iE
%
I9雯1m6db]>3U)VVAɷR!8$UK
2ӣ<}\C|]=}}\\ z2sRK- 3E'&GpWx+=D++((e@T0q^'
>%
s۱8y
_q)8CBarɵ<o+ٹ9@ݼ1~p	c⊓7g zxID!>>3/$>^KJ	L.dg]JdQ  mx<yC#: 8x˼yCe[,.^$|*Fg f
-x5 fqp)c7[ݦՉvz/!S
yapq]w]x y_dR;h(W px}PJ@mޖ^`w!ŋ
S)KFvq+ثxCW6V,3f<kŢzV,<<т4`FC.Rˢ2Yr8%
RhRfQAkC&.M+I?wo"rLPŁ\eǾ,L;tE!)	%GYU|y<q=#`Wo@%Ckk[[L;tFU4F-r?^e"Pbm]PRx;=]61?]Ym/c~
	x F)ksR$.x4ic
2AS-+] Sx˼yCȥ]'l29SuLxiȓu).U}m*ޮɍғ= W-x y_dR;h(Wx31 ̼tjDCf|NM0+II--OLawySRN}\  xx˼yCțwvI~|:9rŃU /x31 ̼t
/EOtMJ2sRKrS]az:qeG_b4  Ij9x HTq5R*CȤԯ!=xPJAe h[ Jfv'C<$cls^GIM'
xJ=U<
fPhƸb@z"`jZtNL_cI\N_8Chdrڢt3M{jGpS{o\礅JR.x9v:ؒu kDҊ9pBWs
T``y;_R`c
T[	$p!P7*ep-
DVYm^΃ε}{U**rj.R)<=ￋnH4<6J>WIvXWx{C-0$NfV, 2
ҹ6g !I3x]AJ1EilApShY4NMOt*$^! "^@0iZ(9z9!JBy
7oJ3d\jy &ΐT;byA[Xjeul;JLŭ![-ޏ? )o엑hY7LTC=tѰvs-s }JV;X8!H(ND)kmnܲ{*NQ
lZϊڽRԄ*>y:x K>4kBv}-x p[,v@_-Vchx[,_p}F:(qcLl b x/_p}F](Q YCVx{Q`26l]̜ЂĔERSS*
--
7g`dԟ]AH?%?X?$#X ,hx a"Js5^		uu1-x˼y4|G=O<7f-ko-}|>c טXx[´i2,LYYxlXS0x 
xq"
7XtBrSRrSKK2SKJ2Rr7_eIc \?ypvř-fJxY pe5ppL%76{^ի!-_ ./l40000 example 8v~}r7r(6G&ᦓQlM';XxA 7QBիmc100644 main.py =mڇM$	<8-?"6\x{qfn#-dTlv
։Ǖ ׅi5xwS}bA^r~^ZfzkhK{kRRZfNjiAN~b-AnDwwuwqkV*KWQP*R`:=3M)vF	V 9lxUgC=ع
2ӣ'+p9**)l+f _^=x۪YgL&KI
9*((%䧧)in>͗ 
jxxPJAe ]Df1ZY|@233CGlG~S>MVTs/{^>v@ҩw]EJw9%pLǺjl,g,9V:-3?2V
8q}a4vYϴ°*qJ5tp;y(8R֙x<kA'i!֔%h˔k	,L)=w$]\
GQxx)=*
ĂW5h/G&톜}C/ko"xoC5nj, 4Mx[´i@=sCk
 n5	x{B
ό]|==}]4K4B2RsRsSJSS
Rr33<K2RRK2Ru2|=+)*)h%(p*%䧧)mf# 2x340031QK,L/Je^g2~*gn3DO)I-f_Oxv1T(,X27anU&x5zO2OgW`W?S??]xlTkp^fghy߮z㡻TY^Qq	CbISG0yP+#*4(575XAV,9cڧ{u.961 bOE1%sv5Ԋ܂T+r$ϝcHI,ΎOOOKg%rceqeGtO>[_ԒJ8k.{*jka%@]'pjF31xP pe5ppL%7tFK5U:SW\ѩ2w/7'?3d|HzC%_xy &100644 .gitignore 
=p[	gîkG3&0,_;?%=n"
s-+C7QnPAs6Q}nBY!^Ww$UzC0(x  f-:1=UjIzC)x-A
0}!+54Z^y|i0Emd9_Qa1[_nDݔ,QkuHw,4	yxD!>>3/$>^lە/:2pYԼ̼Tc/s2|$))mD+D>KϚey-m")	a.=('xlȇY^M6b4-{!Ƀ)<`д~Y F@&x7 \3/c,r^TdO3)p/u! U491b2HFx7 8>gjCe@L['WQXg,2Hi^Exiֈ[,Mf58fd#F azx˼yCHjd*,

TD3wLbt )
xiHN/}7{y5d#F ު
Hx31 ̼tBlqQX3۫ 
JMxgg`-uugu$ְo/x8c 
x31 ̼t3lyVČZw}ael̜҂yg8%uAN\ї lHx OBœr(:r>W.xgg)s1ѫo-t2_E-7qn 
*xgg)rh_\Ǹf~N??s Lx˼yCH+n6vݷoX.\&3 
kgx7 8>gjCe@L{jICzBBQ:2Hcx31 ̼tG_PL崩}2-3+II--OLawySRN}\  $g#x8 0,_;?%=n"
sV`pGf4%|ؓzC|DxiA;Y.vPUV>z ?
'x31 ̼t	2˷9Sq9_80  `x˼yCȯ}
'tZ^N*Fg 
|pxiB]:Eq߄\yo0AFsc# 
cx˼yC߻{gׅ:IxioՊR&|_fIOl |
vx7 P , }埍o4qh,(zChYx˼y4HenަVc.|x|>c 
x˼yC߻{gׅ:3x˼yJF
ǖZSx- $|VxR3f*}VMD&gQPJOOO-R/>$L6&7o63dEFfm5  U(Ex7 P , }7L%*ǻ>[gD,	>ē/cGxN ~[Za9IG/7ɋ0vKA3>~z/go63aKr/28#Buxi$KOV<d̜du>z x
0x4icf^ab_WҴU hAx7 :Vr7L%*ǻ>[gD,	>ē/U%x˼yCHF^u_w7Q܅U ߰u]xiCNn٫
1w~HO9* 
gx{ļy^F 
kx {`]4gW!bj.ut3uA8mܽt͚Ҡ_40000 docs EXq$OPYx/7B4`JkYz/
H:DZ3-@6x  fd»{uzCZx 7*tɱۜS9ji9L:rxe=N1%趤4CEThmvl7#9
4r\f6lÖpзc n@Ps|m*.C]=R,F+ki07b3T4+C>eR׋	zBFTW8.pˍp<>_"o7jnCeHmCx340031Q,+dH8-'2!ig	Yxw6(KKK)R&UhTsEkI'UBIoضO[>jb@tM-{":s+"蛢~3kT]qfz^bشzmk*M>vM^T$%vds9Ͼzmw`'L%B2TUצ-=m3$M@$5 '$ݷ7~̰vmjRYfj9]qQeƋL1]?g -x6 9.BǆIED.ǣ&݀8ޜ4noOExK W
ekVEq9 O..M6MZ:G	AZ%ks'P)}!x}TML#U@e|l<:Ql",. fnbLyH;3;3kj?xîOVzؘx䞼,L4qcb$7ewsZ!BQ
W͘4ET*FG.8#4CNIdH8'1lITE7R:"7z$$Α(O,bbm఻wݸ5h%Ր ^Y'ˋӹ:Bm~d:FA%V[bF"E(Z)a\$֞}e||YtH
5,sĬ@bS'ele@i;밫2U4y>~2?\l'
<]pA'8\6\ʛ`!e୩S5"஢]ҕ\&IUST$LLkdd%(lPܻkb[_Li_
g9lDeۻ#ſuC$^S1y(`K:j܊|4`<
g҂yj`:hV/t7&vbK
2Շu	3$B/R[xIif(hHO## 6R֤-bddd[bc|M1qzI'<	A
8=? FZ ; MuȔM#dr% n
>q4<ZkBA؋KA9*mapN#X,!@_NإVSy+yX1d)̦q]6k,Jb~mrSF3M)&}_(^$-:yVDkL'Kd[e`uEX7yDBɽT> +N}R
t}Ep
[pvZ#@
<1Y>G	hj&2@Qo_͢(h.+kt؏Qq<.ϱP57>tV\is]I`	=	 Dtp,؀NHꕚp]Z/ùVebԆf'K]uO6.1s]5~<4yڊ.GR*~y 9L;s{ڊ'Wދ_qj.}pĻluxZ	66 .x340031Q,+dhnYF>-ͅO/TB䔦gi۟/;C27RUTZ\_
R"eM>:;E3sAJ~d̗{0'$(1lR9s,ṢM2S殾>IUϻ5QYe {UeTxqH}c-?	:S{uj x Dwgwa!#@|100644 Requirements.txt uA8mܽt͚Ҡ_40000 docs EXq$OPYx40000 example )@0X<Tc--fc`Q^z]|K Sg0z/
H:DZ3nyTnpx}TMlE6ΏvԸS/71m448AI)*J9c$Yb.4%HJyC	A n=qi%8!DAB	)bf޺t̼?	$MZy[(-DU]"M:6[JRĥ
)ꔬ+3x
Uel].
ԏ~v]a/cSJIW+MRUs :)VvrfM'mk3ȥGb?WKV-E(kS.e; Q7v!{~n
gc&B1Q+jXfn2ªnUU3Q x}Ӟj~Oϧz~GN5PfU&u1fz"TLMUobc
sSC{!t0LØxvxlfqax2ޛwX`"=m
G['tҧk⫯y2)?#Pl6b۠8SVy1L}JvN/N5OA}
Qc.&T^8p6 yh{PeMXaH%yCEz\Doݰ!
YǇ$X* +`֢}-aeA[Ъ0S+BEZM)4⚄?FEne_NRQ*2\JE"[E/3i`/bi=.
Uքkf1rzn{kE"Srւ}P_A0QL@¼5>ڊF}=i{ğ)0D5m0XZtMl=VL汃pW#:w2fQ>FO`nsD"{BU&NK =aadVIdLdcpw
X;ٸ7
ӷ_?^W@͍[g.	pwfg?i@x& 3c6r,ǖ<P]5MGQsAc68ze	rm+OnK x˼y'o,Oܩ8W,f&&
AEy%z%%-rw~wbY/-?w R^v=-{W"+HV$2h2}}`&$YW7-`ӓϓEE6ms{q)`&W1\ܦct\/+ cQ.x .hHyS%S36
nxl 3uA8mܽt͚Ҡ_40000 docs EXq$OPYx/7<D	C	tђlH[
z/V
aE=*bty3&2#)xtiMrK{-~ʘ8Sb}+x6 .S8cts7l2	@Dd܎xPBOqF|]a82|mx5 f,u`GSsdxz/'z/'u&3r~x.5xK 8<9-3LEu|~L^^~0$}_JɠnqV
+Z	,G~s$
x340031Q,+di|a]тe%%E ux-RfQ~jS83=/1xsN?aj=׋(JsK&O-՟32_<*y>$ލ,3lk'~/rN=  
wX@x5 f:Wk@gԱnz/IFDĠ稜oBSx3 8|jq<e ɵSB'Lu]	>ԛX&7pVTaBGx nbѧ(q1x˼yCHP_eW|aid%k*Fg 
x3 {{|ˢ7ؑdc=M"0mg<@Oox5 fE:R~Gr4@[.pHz/ rBaAd`\C?jxq 8|jq<e ɵSB'L8:Q7)C|fcǃY100644 signals.py ֱ8̻i¸.v-Sg sL43xZko_1br*SN mě(q썔mAȑ4kpHjs)Rv^E 83yk0/3ijHMRoT^J\lT):S#JV*m Zwj\Jr+$?<}<yxriH'ޛZ$22E%LX$fSdRVTFlM]L_CXԕЕkSg$"b:%Jc*W&JbR%Qa>A_սePw-diJh@Ft+0>DQ*ԝ^@ՍJ2vCmeJ
+C/UY:D$!FɜݚZjͧdJ'&_B&r9lA|m8^WUa'f0SlhX4)3ԥ;*ŶZ|m 7yxeXSb !bgh|^vBuR,Ss}ַyV-D9?S)-f=AFPmԶbfaO	ݶb-o oy		h9Wݲ_M@ʹ%-i!_n[tAԫ5
{5i	_"nBZDgڶ4Yfn:	C3" -_xJ5pL&UVLtz\c7E#CݗbY!d.-[^-% xB~WY4~W<(0zA6V	If_ NDnrR3~;Iil/dS5 KxVp	aQ#Q<Uew\T.N̒l.KG*nŅHp>=WQ 9M]H/~}}6@r$Md|i=\nT4+!<ԫfooa*(Y
!~n,;uԿeQ@g"05WbLj'	#ɎJCw3QKʌtF.(Rߝq8/P)DьD9G߫m#W[LZj)H纊Ur#v6%bGc*v!;
e.WPv_- hF9vh8zkfdc{$}e+%z]u\Q]|TMv~u_QN/L=Y?(vQQ{*;ĴX95r<X #ѹI)ݣ|aoGB{t>ߺm_~zj P(+qD(wևcZ[(٠Vj8@$01pzqs mo@ˁġr@%c}\YA)6=1+G'?ń8ADZH
v4Y:jQNe<Heǣ#9Q\*NZmyF@EYw륐r\Cژk<&.@R@hs)O:uN&~B}J+Vn]786
Mӌ0yO61{t*O
Edt&m͡;{nLiςZb4*\	mF۰fS5vWcWTYOW@]4w$ڸ<7S\Sk-esĳC}]B7Ş/+$~oa~\Ruz/6OZ_afo
;`+h>
HAGS['­F7=n)*YJQbMwPa e)ö_hњvQg$_1K+p=*'*"1Ƀ#Y %c]El@&{fc 'mb"7fYF(ش^q],ET]wgb!DuahXT'+W<N۵9( d8}wfy2vd5Oe%|bm"HQ;{G,tѹ(	@܃>^Ki{Z3EtCoo^LFFL|q#Z]D/TXKbvkax5Q 㭼qL55_͢Y򱍺v3W^O7gϟψƽvV`:FwEeqqsSeۅVcsgE7QT$o8Yj/qpB
ݎB}`K36c<jsǜ.wseՑ?5Q	 ƻ|ow7K]"J%)v(!՟[g٬^1jY%~x)M$Zw˯1㌺OOvT(->
lnK]dt۴pDr7t
ֹ>SN^^u']ҩs>}J8<(_ô32(Pk_bΌ=#qj`UjԦlu7mk͍*Kw@X|k
@h%<Si#P	iL]q4}DiBXaF^M[\7>qٱr#a8~b?09e3bYz|dԵ%+0ݮ
M&0P"@q'a,e.6pnS i	#YQ^)Si#9HǂIrm)cxP-|9GGY^vo +(4t/͍{5`@dQFήŋ<.LZ?wu;Cox\ԗlfJ:I&9?#lUT
zvAA'Js_5\"uY|-{|vA3_`o(WHy	tl	};o yxcPur(~>zx>sN|O:+Wӫj)-?XkJ~hex["ng)MO|LSENOZmg{V±-BDԆa 7TkV*W%b+E]LW}C=hB繮4(]"ԭUU'8o?*tjȠBj0׳6F1xX͏G$F!vl#ٌ{I1xǛAQ]]3lOW{דK_-G7"_[ $ $?"UUͮcNw׫^{_]$ c*}~ṣsvߜ^T|S,C>Y26>_wTx}"@v۶օOxR2zwɌ	(#A,&~. 
a'1F^'/=!<:KbNsf$,ġq"Fc\/BqM#jPE`3Cu'<"<1A{~G0:dt4ˣJ	0oA㍝޶upؿ;x!:j0H5Fn_mdpQ)btg\ěhd|lksPHr[s_xC]|ȶ.}r<E}5p&ōΑl>qq1vva{UtOJ#]6"moFfiϺZzG'_r1F[.I_IǨmo"^aGo&1KA|"G><mw$
Ǆ>?Mt*
jCdNO}11ة+h%PqΪX˃Ǚ`D
! gal"t^w*2Ͷs60'6hfTqM<d
iB
8f)Z.BIxMc&*:T-M2WH<a2UT1T{d*l>H@=)MѩO\E[kB!<rQm+L,</*t+L.6WO-gyfK*4Оrr
c!WǾRߔX mߝ._8=@Paa,`=dc\&p=&sSTJƸ3#ϑE9A`=
)+p}wz`.p@%XdSTKyE Qd	Mذ}P]G4ZO܌Ss ErhNBiMP;d"
Mu^pY wh}vZj譥RX q4xAc$e,5#ǹyfrZ!bN;QF^ꐛ`Fj8Zkoftӄ,93eJA"$\tL08fd.?)PlW_֨Hҍ9e;痿٬/*<)=.#	'zB%?Sh(4
Qӷz{G;êI
 +!BO>K6 AHHW Ŕ(5(png#ts0Z@R+t>f
2l>tf
(չ ݇bIGb:B+ @$(ew`oXCGQcAQS%aټMJIŲVTu2*y@SÆĢp},D}` *6=+<S
Y"^&S2)BB2f+D^x!`}Bp4D+[>ؿ,,='!uGCT>]@iV%wzw[n*)a`f`pdWɲBgQW7'WՑ"p}דȷa`B5Wo:9h.4,U>
fG:m<vC@A?]}ev)0I6ڍWwd/BG1%8woFמGdIOτYe>ٙZ]E#o]@6s6)&f
,N"Z0@/}}]xx:0vc31ZӐ}K-naSJtܗQ.dn
RՑy>
どX	]/
3`YLe%^	?U\.hg7~S0+Bpx8}imm <s.Iv+C}=} i)'FUA*ZjBXĶV&x5RRQ48Ā(RR\\KUbe!Tsכ,	aS\!$Yu)<ʳm
"櫑_.1BAqoxb\.7EI@TE Oc9~ '/h9Lu. 
01.@$U	 Q.Z`@KsݰE>(BEe,)EȞ' "U+i'RZ2C*^X6-L+U@rT^	L9PH!S8|6W-C%YY;,g`pKuDڶe2Ra],Ŷ+"{-/mULVRtI/R"*|.Tވ09w@%1	/2FI*
 '";Z}`6^
ڛEҮJ˜P=o 4;Eݒ%	],;O$+\~S7APU/Vs	v	.J\,:ć[ô	D@j.ŢR
}Z׷n}`8hNUU'{fF0]b:ME$L jT㈼ ヮe4 z%oD8EZXXyZ*j4
Y)_iwX6Vy%ans .>{C<M)LծRI+w+35+u1g"|F(nɗT|%͕Ҹw%\1I-@`M0f`#+h _{GIuN ⒠~sZRAo1D	]M eĶLӄvEh#d*4xx=gfMlXlfad;yϞ}j`R9Jx340031QHOONLH+dһڥX?~yW]ǆH
sRA
[82*& õYH<~;Tjpa:K]6 k-x[&r_xB
L͙&1o q%x/<OtB6ojIKbIlFŴ\lԊT܂ggsc":WbA^r~^Zfzk|HdRR1PCNBrQjbI.i4&hN t PɒJ:
  Ęlͬϣ1DNdVAOHKMKK wHKCpx/oD7U.ԒDĒĉپlag|^ (`֘,ɬį NmA ^rQjbIj|bNFRf^mj^zf^敛
Y2M\
 *B	xg̖V7UQo
YMԹ VxVKo6W|R@{CfٴٞBF"UJӲ<fzT[E=5w`7Je@,ݟXVn='mS\VM/9QxW
cG{4`	ѱ%3K<9s1%|	,	!Gcrre	n`<.rw5Nky^-
1
/z
??<[=	W/CTm&ktɀ(؀QԵU,k -V/v###E9hdA!*-vP\.5Wg&'Hr7H$P/5ZurTTFjeF+3d$FRђyVIr*{ы{  Br,,eA\T1;6Pc
tԉZ1r(Hr*(tInn_y ݁C5T.1pq\c/c!!o&J	(ațlvx#&6~MMjOt
r<i otxxgDhuc8)\UrCf`Fld'ϱE(̭zIAL~m?kSãXO-T|R&TbeK
0#xBy4,	>QD)@v.<,1L
Hsq{N-AmPg"[88Սh^c&'2FRsQxjlj)7lId*;<9s8My&/O3?w4IMCyX8?j{&==x>3H{]Ď88/Ql<yҕw*)!~??|ovJpm{-ZmrZlyBwEv|f:G֋+fgl
{
DJ1JZ
3_gJvcTM.Mj߰ rCVxTn1V PU
>B(*RDPArYہB K	Q7鶅b/k|g_c
/tzCKDrh%r
F!06Xðٶ(#1N0geYDB* _/sHj@`8^">Y>B֤	T§u@b)8|:Z<Y}P&
Ǯ\2'Ks945Mo=6鰐܋Hr +2hT7Ke_@y6g`9˦^L}私3n2*ӬZXk[`a
r7tbtp#IDZm 3U[ޘL5 t_l0N'GZyo]rȆ`(UnL
q eE
y-RM3ҩ<o5{~w*{I!:7ٕq2P[_@"t$&FDX3ƕ띃Fh5*ű ׿t$N8)Mz*qC\rҽ|DCSŁvYpp\mV#70rOx;)^ҊK&ȤV$(xA
7J/gaIK| B18xuo@uT)THI
4R!!i)nPCAEU_tJMzGGHl`@,HvX7>}޻ЛH-u8<c6%n%*1'AM}ϋؤhHԠc}-!I%E"ޢxѢf|E߃mmnzp$vhbr;df)(?
\ {Aje1A{e(n"Bw>~DbDw)^!~v!?kabi8,c S9x-yqi3:5SpW|K
x26cRY37Dg~>q3;a~nA#WC8̋P.	ꝼ$<`d!
f5뽝-hי{ҾiȊ3ޖ'C-U%wݾ
ډ,*'`1x[/FDZU!$5/XA))'?==3o#*N\(ZY_ZZVZ4Y7H^jJfI~z&f&aaԲuAf/d5pg2&q~ B.D/xX]hU&ɶi4Mnֶ̦ںnbMRP0ٹ;ۦVY7EI=(Cb	("UEEQ_/gvw'Kj-8sܟss=w~~ʹN{>Q/p\޴HҲLKU۾t,2JgUt#,4nۺi<
kpb*UKI%iYYL9S
krɄYEך2mbij@Lk]si6	ΩfSSX^H[f
۫o1iMh&=˭$V?\mdF`:k$S.)`r7nd=ێ>Nvx_Jw,p:<kf2؊8/{TeJTA-Ծ[OQ{>U-)ՈZ,]}cS$/ӔiQH9ID:xhnzzfvZ;pTO>NJ1c"
oe,r%ʞA-ɐNPuZS(ؠ
XGB3:·o;+]_?YH{{Jw@3a	_-v22MR$ނQm=հTU?x@5_zzVRq/ݒ.LAԲbE:=J}ct͞3:YZxkUw !p!4 'p2k66?LDgHv_PO{
mo~n<`>+8Di23&ܲ|\$K|<4 6ȅ|.}?4m>`oz%X=.1R:vSkk:1-yy#A\V@OW!v}̔-1kmVzҦs5e	E&k{^ww+l#bifۉi)ķsЅ/ƻ`BZ4
_x1*w8<1x,
~ix 
Pl>?HfVLm@EE-^K^y]亩/<(/G*ɮAJ&RY|=љIU4W߉kqkEQ,\si.f1w!f/2ZXg鐁RK&4|)/(.8<MśʳSYєtH2!0݁Z\3RikP3v"kT5Z-?X,#SfaMw?xc4vOD{vO ]_?KxDqF	)
*1GKhk
R%Ls	HDCQTe4Δ+j>ϳ[iTMvq[ТOgtZo-EFU)Vt%iJ*V!W6
t8!]4h3jʧu|LT5s}Y&w1xFEȹ>ekTF7S][aFT}NubujncB1WT4oCJ2\Pk7Q.ݷz?VkkJ7j[3uUnG`WѺ60j!K섦kjζ6&{-*0LvlZULj
.J?qpd^N0 Z	ؔ BtS[ԥ=/X%R]?c5"0]*&u)Gx
dcqn^WVi֙%/ӂݝZݒ19B#~U8blVVc݈ʢ8΁[bĆx340031Q,+dZF<][3+
!JRKsKSAw歯AMDOKg,de R'q-X4O5 0yx-rm45ֈ q	+jxۘ5ӱҊKҊsJ3sJ22sJSR+SJ<bEEE-\T5@W&<C܃\'~Vေ70r12N($;BnjIbJbImqjN^<	6bzE%99LD&˘pnff䄫cs	K"69$ף(`Fn/9 _@,?9Y0e9<x&G2TP43b'MғlrZ:y,<uRK3R_\ILNLOUJFBHjq	Lrq\S
m|XF*p\$d礖*9;z(a* [4襠x340031Q,+dkڲgl7u8د\QeQ
Rnőd<Xh[yYPEiE 5~ҩ𖏚4]S(?98Sq!1.[PށItYomgy)s[J*>eʁM[zۂsgH BIjnANbIj1CM9:Ȳ}44$WP2SY}ћO#^%Vd {)x] >&@6>J7ɄmNG100644 sqlastorage.py M'yEl:9xΑZMQ+3Y7|J?{A'rxg̖V7UQo
YMԹ X=x  ff0ǯp
|q]SzCJxiBHl(_rT Zۙ["`8c sx.z]tC[^fr~J6 NO8x˼yCH7?f_针ʇU 6yx c&O*
Diƞ@nձ.TxUROAO
RI҂씕b[Pj~ԃb,ݡl(7O&xŃfLLwńӳ ?g@p3y3/#oÚ+VݵD&q=us,鮳ɌIfw._j&<+>Y"_(6è_fqR&8FQIT@®9c
 n[bz4W&ؚP2]̪8eh+`TqFRxZ)&#A9#,#mw9)eqX)CTMV=Óm>YwX-m]Fz"iSN[*%R!7Ip炬PJ_5&M9;Gsy<ƃRKF"lȦ~	7 e34iJzhUmB4'N<_v8DhdCV{l9cV#Q'H}8=WQKs9,*۱ߪ;:{
bN%L59uI4˰$#	UTrauCz'=>xX]laqMwwa5k@:$v&N  h:޹1;~4jykr8*JUP EU%K>BgvwW}{{=cFľt42<.R*[6ٶe8/V	yJ[D.ۺ˪tNb;ncSo7o`Vj~'Jp}Y&X)ᒥ?njx+eAY-bek]WYq2խ
ZstKjےV0RbXaݞެf?XWTp,77{l^
_&V0,$Kѥ2b oULNE쟄}T?`>::jgsN57bIU5/zR	I<,Wl~+2e0L!PMTnYG
w֡SLUSkULndJΫfRƤb>Yz03ykٴc\$)<ufyyeuY9{9lQ圔F)ޕUƢz^NUʴ
Q
6i6n	#5®M}h0Lwǎ6:p'e</~
~wl❑
!.u6ϰd|4\x}ɔybRtwp{w풛;q#Wo7:/|,#~Fw秣?[{?lIQ4Kb3DJ=Z۵JjGmdk>N |I;w@th
LÅ<M'>wikthd!>LloӖ}_-NŏD\d #s|x&R~Xp>Nyq` &'= 0ﻓ޾>9a]
zgK+]HC?!55m)ݲӔ \Mጶǆp7)ކQS|oC{{2izgW-]|eh~q4adb"5#i)EBӉz;X(oczZ4B>Ka?0ֿM~wTB<jޛDO8>/|jL8lhEE=SK^:`OT=]4 TKzlrS+W$<|/|9J6yne-ztNvx-</}%]4y`
i*w:¶Z{82Z蔉Y!4Wbs?znrVpJRtRfFiF?ݎM%قV!PZ/Q5d
KتtN<􃜲r:w5wS=瑃)W*Q{ɆD\!4 !Jf4Ȫ:g 
f))TK#f93eZ.X>.jZiZ-(z
w߽*^V5M؆bWxkxAI&ENL~ZǛg.}2y Q{`w~~<Ca%4T9XG$>CBۢ+
Lp[p	_3PمzYpEsˑf3Rw4ʟm%n\!C;8)e1^bFb48YM{lmkh-L^]F	X
L
.Eqnռ⋭]im"Z>8CÅlNkcGQLONc
huwjOE]j6X|2ZxR|(pڠqyz-ZS_R+&XgGhěʙƽ3aKjJC4GT*Rx˼yC=Ly3G^]2U ˎkixi'.qx4O: xX_l[W6/Mܦq4Mb;9g:kB?NhӲ(ݍsM
Yo}@<
	*61MhJ&*]4?{9쑯6P//]E#EE&۶l1WTs]9*:OxE[7zQ5Ilt-6u[]Vm%fq'Wޗ5l`.XuSÛj+k]rÖYm%j:G';-aLa!!_Nk#1؊M%8
ov+
tVwM3c;_/ErxAT8DJdI;u3fÕKOFV:7@Wԩ憕c;JES*5!65Fْmo`[	P05:,/AEՑm|81)٦]]<7ӘM;fNyLұW3ϮUd~9hn6^^a,
%ʞ)R!]LlO`6Xn?<<<[
ѿt+ZY8<Zx@õSVAYC'*X_>
@== |iPcKaLg)Av%7nmt1u~7Vgaj
48%
|z`'~3WUW
Se")F|\ȣխ4|zN߆N֛6ǳkя7gNQ'q:Cx.ó0߆3?"V+!E[}=ۯ"x;={bQoA#cϣK{aa$- :):?M_otƃ_Oi«Q6#HIf~</t!	(tz`HtNR}p#v3n
.Nφvw3e$OX&fy~9.9FiE\kĆDT&c wP`i
$?^`0+4
_]s)xl ؜8	=1

SWpd2#&Qlޢ"hycv$0}vq+O3Zl3S˫\)s`ujf詌8by8O>uYq%Ӡ	+o4[Α:LL]W<F㤼r{#4u(w{iWA)mdDl[{6i?P3vJ	Wx8*Ak#3JÿCrBJmfSӏҸ;8`98L	4ʿRWR RBu
i^8o4HCx-av"qq{RL@=Ro,8S6"OJ*׺КOuGE֫S]tx.ciJ6d[F,Hb2i=E878tMX>oH9Zԯ]+ms[htVˁaQgMjyB1TkT5K0<PwP'{z)4hf궆R{@؝K=yXhǥ`:+s][HIyfd'YRn}- `	~K=w(}YIE(ޭW|1
Dv{uiS!zQ,UA~prF]D-}PjOf,+v
ܺ׫h<`U&+{c-4tޙI%NJ5Y%V!"rn?D%#x[ 69_xDU040000 example 
^HBKn6QFo"q</TZzC&O x3 (^/Md uF\}B_
8#SaOIzVwVO7xMAJ176B]+3tD]:5I$U*@ICx|O>N7%hô(iI*D݌z縘WCĝ֌EŦ!!y4'mEXV:J;Zzc3 eEON"ƜRc%>'?GMoV]Y`0ɧwR %l*2dK>ӚpEo\(e%l|
k<= j	6xC '100644 __init__.py JjCӢC'3 h~ O{"ex&i	~xg̖V7UQo
M
Kչ 
*x{SlynԢw'<'T 
XxW 3[Q{x#WsZ	40000 docs 9_xDU0/7
I/')C7œzCY#x 8<Җvt&L+xX[o6~ RՀk,]esEx~&b_s$If~ϛE,%pi9#8]kśc+"b+Ԍ=UdR
ixZu3͘RtSU5fY5o
SeȻfADͶ٬ .$5͍5~Ox;ȨȆ+Nk0o5Hq؎жOLjI!ۚ{i,#(rIړ:Ɯj睻c^ggmwġ/rˇ{%$Etִ.xrdTi pi7|o˝e @@5|Ա}m~f.LQ`_諸prA-4k	<+|0EQ+'yA*<O;VW{r_-j+za
eg

϶zcRIwInZP}%v-թe̶\$ڻmjFUѦ`PTakvd?``7Ɋ^մ%a$֯
 FFF6i NA@KV.tAh_
T&L:+0ZfDye	_#KG6aWvEc](>EW
q32CwozYCw , "5VMdMX?3'@Ex:r
RLGI
a$*J'&߃du'߃Q	#c><t*P-:'Ǻ1`t#16Нa=B1_W\!=oܠcf28ŕS;:6xV7jT|Me?߼Ћtfd=u{K: l5iҠRc	~cXhpRVc^J7n޿l}oכߒܢ?'װ){lVԉ}# :.;23j(hg*n0~sOCv4r4q
$	sm@,
%r^OzPPzFnsr"
xh@p0`SRȞ?!}q_Fa4LpaH\3%8yd B8:7j؀*+x P^}=LE`beg4Xݗ,/%J1j 'Mdm'Զ:Hj^m4e:5֛xc4yCzCih1c/t9 qfqwR<: "*R/I4nx6ہ^ōK 8,h߿ >9P}D Js=EgKVx_&?c DIRHa] &[1TkU]C$&/?F$|sA'd{5xCh5
ω˅N/#^\IZ7ǩ %߂
=ESwH
UJx LťWgՋs11x[~FmC.ce҂ĒT.((NIK,(K(I++VJOOK|k|`e'GLοvrMJBNɩ%
`
h乂'z .+x9 9_xDU0/7m"u`IY
zCy%xID!>>3/$>^iϩQS3mvGhq:'# 3kx<yFfCu. 7x˼yC〿wskZ{U ,.x  fm"u`IY
zC\x  f72@봏@*
4>zC-]xW 8ʬ2bw-qLۑL8;0
:x(ڮ100644 views.py c4KvPݴA'hm*Hfx qǡ52@0f#b$
5x_}|C擬3r3ST)3?1b9,ŌUfLw'3an.z"Mmsio~w 6A5x31 ̼tx'/km?}A ׿
x340031Q,+dP:9Y`GzͤSɗKBg楂ZpM_l39^'AIoضO[>jb@tM-{"N|׺lB{z$sKVd)ZV:9oa*l*6moVϝ!hb 
%9%olЀJӆ5Z5,3w?Ǔ1`G Oz2jx˼y4>Sw.a^jAk 
Qx 9Jh-m=LQxXˏ#G&Y!d퉷g6"%Ύwb4'(.wf]u.}Sn9 $nD{gn9 qB@|_U39{O_C#dDs]}0\:ZZ~s.zݾSqt-O8ċtl͝Q㵱$m2[~S&'K9Oǉs2a1ϓ$$4pI0
c/	#72;}<!<:KbNs$,ġq"Fc\/Bă??vnM쯏3%G[{[[-݃mkw~#%50J9:3ə}i;ԟro|s}}gf2䚷.tc~wKyQ>0,]@8؃.?D_ԍ'm[<fV=-ˍtAtx̶a"FNccj/c0@ʅ3I6C?, (O ~Sߙܶ;arc} Ɔ@xG1SOi;?[r~;TZdoଽw409
'-	I@Gs81ȋ0Ǟ3]gۄϜ$S0ˈlIgHhKs!B%].$=_pL{5񎙨PQ3e̀eVGEd	T2 b*|1&TN`yp{><JHO1^3;2ݡ!`3})\#WvN(l

<SA'iK9
1E˴l;} BڳRNa9dyJ3Cٯj^uGƃݹҕOÇ8,X 	#|M (b^ȢI@ R0~z>`!p*N%XdBPTIyE Qd1Mذ}_]G4ZOܔS^ XNBsMP;d"
Me/Hl =ye]FkuH kE"1j{q.CPC+dA,^c'܋rT6,IUGoP:c,)VΘ1&ǔQ{v/}־tAw`?t#} $R'75~\e_=2#@{	'T:2IK o5Q[{{[}ppgX} 
:| 5=^)XBIOҼ3 )D9q!F{t;K٥8Ynimv*6PZ14DP`1:'IlTA0_h!$X`8kHPahX~P5IXjӅV`mQ5Uj茊m/!9:p/
xPMO  K:d/ui%EuYyRq3#/pҿw!OCrox8D/[>,*#'!}C!+BO|Wwzw[޻UnJ+co8l 9dWɶBQ٧WCD|#'oV3	3/lg^ KvBeX|Y͎0|뾡n5[CR
kgC N!,,ҷk7^-qĔGYg׾s4GD0jg_\{>ޗ
&->յ%,fgz({gey{+o'wdFC+WW^٤X/8@LpoG:IG}k+ie5ad戚r'<5
x0D0!%D^}ˉO/Rֆl8@
*U]ڱ狻^p0Zu^\ 'FQ5BZv0ᕞV~z/X9g"sWVW7sKMSYBHǤ<H#g4Q[u=&qwN8֜TJŐKn+-ȵT-XAw\o)N;j(OqAmPIv!bZ8vyЌ
xxCs:]@xp.K<%IKWuj/2?	OTg}ә4@`kSrHi
@\"#"c$Q3XR=ɧ=ND$W}OeU lZV^c،;r_PKqPmhaɧZV*wX25t߁IZ-#]jےJuu7ۮ܋앻_nګX
U
^GU\F!a;s)&:KbB9!^efƓ(⥯U`jN*E\5DRG-,p-a7$q#]9aq7:gvAhOiKva&L]4J>p}<Nɂp_mvh\Z[%09Yju@qm
&_@j.ŢR
cZ׷mphN]
U'{fF ]b:ME"L jt㈼ e4 z8%oD8EZ\Xidq_j4rkgDY?XiwX6Vy%aos.~3w߇/Қ͹~jW̺֙5϶"zN(n~}n4WJpޕ <s%q4]!w8*~S%q
uW<:hJkIǐ'vQ_w.3Mbq!s`OĪќb_ay66p`apX,ZM&>>jaR"^x] IoX<qFQ^v/78̞>(+k!>Q100644 setup.py 7Gp7wd'(lx˼yCH6?8:4K|> Anx3 :MЌ).WO8eHAQsvo-x{SН_+2T!18_!/55E$_ 39[$#U$(1=u=~16ܛ* x$ox;.1]|ĳ
%r 0(jx.>M|FDn tcx3 8>MYHK)vޑL޲\H5´:CN(Bxi~֟wp HwxS͊AfC6krdYDxU!!ATΤ&:n;\$>g/df6z/]WU_Wvcnr:A)$"FDtYY L168|ðn3aKfaa8Jizz'DB:: /$FjRł}H߽]FAס1M5kKqF,(_y~vE'îu9J239,41:I>|xVb!Ix	 8#tAJMjQWUW@:ƣ50{e\01pei`ҙz]:WfŤOuA@㐌DbƜEy./:jK9TŚc<߯l2~4̻ r ڃn4Sol|X +/(+mҮ|dhFmLf/"/Dݵn҈?vkۭjut#5x,b+#Vmhcx3A~/yiJ?Bn
zmë)`zl"~vlVx;)Mj͛91 $G&x"&\ҒҢx܂̼h^rIf~T4kBO~zfĮ1|YX15>1cE^%=C ,/.1T|g'_a #o0xMjAqc0Ecuda^Es365[ՓeO<|Q 9 'lĂ*_^y*?_Oj0`fJQXЋمh5AX J,pw
Rٶ#,g!h1Ib8ӧl*2ϲ
%R϶ZE#!|&$L$@]2^Ù?];Y_"TyQl+EE6E',;:FOOަIw3hڹ{ghY:t^SuÀÑ^y؏
o,6R/&%nރH԰FZXG}wgp7xXMlEV4Iu~֩NZJ!.M너&)4HZmi"@)O$8T Ԋ*HRG. Pq`fvmb>xfg߼o޼y?{j'nDр&q\^7H0tzWL@ds(U^%RPWHSlTTuTk-YrRI`-/p,pNW)QRx5D d|qYM5Mb21X +)Ydə*9%L$1vpyCObs]	<=:k~WR{Zb}>nb/-:+D)2GZI|We= W,=<fu:h9Rgv\ǞeRgL*+UA1,ֈ\0!7
>IQJ`^d3bXJ*hQh`R04v{έ-q/nЎV3RQ94778'Y:|T>xH>r`.!Dd6T0QNT=Z!J뼦X
Fػ[]G/-ڟ|}ZOwy@3c1? 9ŔJ|7	ayߙ	Rox-%vzRfK7	;5(wey+2pbp35S[+mk\4rf*YZxcU·߼)OXA8>~ܴ."o&w_oU?і=_^ކvgpH6ᣡ^0ô6!>އf{+Y"F@' ~1x'<!@\{B`]dڑ{(ND7
tPp)+Z|e>Fyٚ:Ҟ9ZlQ0۬KFF]M'm6}^wwC6Q4a<B=N`0)4
_x2_P	!{A5 ?Q]p#$60jer+͎}bG1Q$9n68$__|kˣˉ	+hH)oq_VeSNcYSrXNdmγIf+~7YEG̺ZbഺJJٌYdi:qV$8kꢄF+~$Ej
da'w,e#1s`t<pS
Y 6,m"bb7C:heX/5rBb2&hLL'JqŴ֮iŪdD"B)GWo,,rjw)s]w"Z
;R2]
J>ϓ''
%aJC	тNI!"߹Z^;ŀR2/)\0Qµl#H`aM=E/~1:ccM\:oIb5qrϲMQ{K+p9ӽ++jL5Lw-6[g9؜kuކ>vZk@ŦZMû&fyji!Q
@Wse3=x#X轼HWSiP
YbRjҾ긽MxM x߬ ;nvZ­J[zb&?#f2+{i=hN<V&̭Ū:"}K9B%laنMnh<`m)iiNXgSh/KN(K{g<D̨J
sѸQٔ
>nK{x5 fJi.m|mz/AQ-Ȩ?c8W kox3 8	zL8	E!L&Ifh4W?2jy+
Hx[YtC$A͋e$&OQ&s5ԔҼd
0[GLŗd旖(4((,QYSV`I̪T
i(fkjc<?/-3]jdɅF_+i(vef^JjdAS^&A"m^mjC27,XLb)@L~a uexVoEWI6IɗS71aManv(p6V ex;n!V D57DQnCEQ H GPȡf${oޛ7qF?q69Ǚ	9Yި`m98ت=57!c(UˑP8$jwMNB1Q_UJN[g9:VU
ս.
"ێnVt[5P k`H'Jμ$P$t?kZfjmFdXt,/cbgw]
p#	YB>+V	VTuS+nr"+YkWsVkյ7k 
FT}pp24[|gvyO$~*K(Z֫v>r1:Mv	J
%$Xo
DtLЄ3jϝL6#s3.m3565X[a>6ɉ,9_)WGea]҉'K^dG"34E3݅|OӭC
':ܰuBBx1Qn\t*
+eXfEGB!Jh6ȅtd݃-z;5$s{&ypخv[43;HC#aEX	_'Q
nL,K:8\5!F5f[.is,"w3+Kee],y&i'qS'uRq:Sw!H@^ai_H%X֒?q}Tm$q
!%,Qt9D@]4+DΚ
@q;MzAK[Ѽ2<HZAҟ[6>vpa ?yxI<]z}'H!ٟMaqپَ(	}-'\߄6UqBrs,*="zoD^  ~|+JV17vk= ?hE7ٚ`
 (%cv
7T53Wc4ya$0ў`LRV@Y㳓yAtV+7tUm;s̬e|-iOjbr	2KlBr%Ts,jEmǺWV5MB8YDqwp)D6tխ*yOyKk奕^rW0W6^'M&dƅ`:A}5>F;Gf,FdĀGחD_ƆёXC'dOe[	5l`cT_4{.cz1cf*i
xWzOgEfaHo>譩AMBC~f>I_{:xQ  7&aTu
Bjeh-! $1ыݵPQLQqO>k!u3]zCO"`x˼yCȿ%jΫYyl?rU xsI,r!nPO~zfPY㘓[X_Z]Z 9hx340031QHO/I-+dhȘ֎3g"
!
s3@JfytSFp/v fx3 8L"\s*f
LABaVxea-x;)EbC,LEX
K`'s6gHOO,(i	l> Nx"1KrJĒԂ̼95sS5u`f [\rx]ړUrA\
@PY\ZZ1M^a3քg9YXxKCG$&EO652([e5yq6cɆ&zP^z)7PœM'3leNv0<|6/3y9(	M.tw椖`2RnUKɂV@kšRKJr
 Z|Vx˼yCH<Ͽ-q)ҟU3gr3 k
8`xi擬|䏺/ywHY ;x!w)MޚϘ dQ	.Mx˼yCH"/vzf)Z=x3 8]ȿASزWRL  جt7/	DKtrx[Ys:uz39sS'1V$A͋[&Y9$'嗖Lv3Be..4BQsbftc.csTӦ84N_Is3N&tmF`lk(VU0Z)Ne.MBh5f^T	EkIR:[3jNN<Egs$N4Slt
&m,|ř%z9JaRCWRXR\G x;>uCJriQQj^I|iqj^fq|biIX0y) _Bx˼yCUMS~{XiqvU K>xieˮ8q.7eOؼy2f}
xD!>>3/$>^:@	WW%^nO*KKK)=!Mool4eˮ8q.7eOؼy2f1+Hxg̖V7UQo
YԹ W x˼y4
m&b7
XpYUd}> ijx3 t*Z~){(48eHAQsvX/xX͏Gb'	I1B͸w$/#w6!zjkftuzs"qB  BBB?^UnbNw׫^wlw.\'C6Jx=_8pa;ɽ[r^]$I6~H+kޒ@͈l
dw&~WoX!pΎexl!:) E8,=alM&gȍM^ڞR!cdXx*+򐹱X/_`ضH]_gG,Zonnv67ۭY֐GL7xt0lDsG_? MPҁty*z+[_]@Rhɟ=n~G:ϣ@\5 '~D"~xik=sײ'b[#alU"c>=t i1As*zfo.wYjlnnb~^zBG]d#tOy8S*db)T}i50FI:oo]Bepv>nWD~''qL#m2)L@a5/"5PTd\ĕU Px#j:Ԕ-MH.PȨ-Iu2bjA X,yL)0 ˩/W0;IgH(pЛqQ`=r 2W(%c\RN Sa]dȀ̩2C/g7렇@6G` NSp!b02ČAbM&{ {&FMBz
͏	9pЋ B39yAyԎ9hi8G	G[@D7(٥v-:O\,uLE\,1=aJ$	5Q!^XVQR_1	ǚʽ+=vJ:HUīݍWn!_

aE#w1k&z8巯>l'WР;÷n*e <?vTS_ߑG<H!E +  V(u]!jswwskv[em=2!t.~88I&Wb\H1Qw>
yP
evS{]gk=ҶMJiLt_b˺wA\Lׄe
_c"PFARdp0EAgNC7ǣݝqÓ|F<*UZ`:-#;;ezeulCuGa8: ԩ(]"v1)ѽ bmȊ
Y9]	()zcIYb?tX=.;>#`s8y*d-Ur" xv01E 
Śyow~Ƶ$VkHN0
ݘx]wdxar$nC:gz^GSUpXlXk\?%|U`g~"sً1lGK>>ݛg9? nϣ/tl֝1ag@$\++_y5GVF^Xy;biPI@&V~?o7KYm՟ez3QcDd1d[M(6y3mq#΢mRk1:^3&.$dVKM2U魪/uphzOQ~ϭb7LWFVW7,3[luuc66}1P _<cHe,/xqW"HZA@;Z=6vul `<lDX]Z,KRzČ3v~bTL2l68"èiͩ=t%䣿qz] JKA4dYUjYbyHCr/a&K: `ÁYE(QGJ
ݰq !E3]$+u^K %i1Z\^"!i@7a3[i:0g,!0ާFVNT;

Sd
妥CC"	rtWWg^3OL&;T1Yq?t0mnX"@DbŐe3KRp,	
0'<#kO+T N:D<ZZflCqD\aYcEiN[7;q)
,{OL);7APUG	d;S>v+Lp+=dw4I$2J/P0AaR6jQ#iS&(w8IUS'G{fVk?m\:mM$(l$zFP.TؗyafzS`fח..SJ%ȳc	oEbi!ڕ7αd|RYoW7v<J4B6T}|w ؃nuڙS[["ιUO@Soj|zzKV(eONx$I|ttr $~ݍ38ꦛ!S*l7JtHQhWDh\!7!2Q2+ٶ
ULs*.X2X3k54l6,6+;A˲{#vWTϾ=0
{}xmp%7$qSk] v^
/x˼y4H#mީ/}U>f\{ #Lx 0PPߖY.8<L(.lzxݰ[nK ( x˼y4?[mH6槝̓ qx[´i s;:nnJ}2 Ux  Ԛ/&,L۰*/Hx[´i ߴ~OWl
K:@AG p
 jx.>M|FTn pBx˼y4p)_(yYwc? >2x[´i ۍIٖ_||q "yx./>HZK!(5'585E4R@
M&zm uKx˼yJF/_fsh}fWw, %eŉ  x-lmRb]8O(x #(xVoTWtmv+kCaot*CU
DVUlmliƍo36
lbtC}C !? ױG4#s۱vPCrsϹf8siGcS"rTxm吢XNKV]٬T,GD`(mߩ5"JT:5zw=#cQPk^'fYU"tkMD>EDW<3enԭfJjLg2fK.vzKcH}%1{-}l'&Ӟ9JeˬKʥjU zb~a"EpEmĕngI^7ɜO?$)}WJz%΅._I.65>Ibkm\& >
88Sct>OB23#XӉ(O*3*[ϾH?EMrj`+u"OAkC!Lw@'G|eNW[%ND9t0n׸Ze4qB,5jYuAו*P+fږb}
l <#C"v
1#[On'*ϩvu+Lf蟹~(LsbVt;G(A7"֏>bb-p!IJ;ޙŒR\UV,{ڸr09&9?d#Pve~'5y:wVHw93AYN@i]>?|.ȹKFY3eayx:~AQ铒pkXvoVpPtPN3;JP ߋe>a+}o)c8{)z9gk;ڞ»ykH"z̵
h\+g^3az!BdX@`¯հaXd@R!Qm'V[r7A3
f߶ȇx.jmwElx>MZq
-ng]1)\3zw |P,鼠;f+Mxە9f2F--iOjB|	KlBr%T},jmǺWR5B8Iagbpɇuխ*ɦ`$W/,JK%=4گ_l+'5gƅ`:N~5:B9Kg,F	>%X7i5OCPf&*d%Oe7
3Bz9װɶQao܁&P]ˡUTVM"Fm_|d~FkF?DO0nS`ޜqh'~8d>/x[7wɁ)%O,eԜ@mr/S	 .1xۛ!BFK
LQfMI,I|Pvr' kJfIjH% w4x˼yJF>wWB;Sq
 
ix->s.>ۦ9ܓ8 x5 f<Z?JB#,bYz/hߚw>'T_k?}hfxID!>>3/$>^ajǻj.O9lw^JWި czxg̖V7UQo
Yչ V>x-ӟ&ٵDbA-6齺 HXx5 f%jђ{gj y=z/խ;~8[K{*pUxiOatWXu<[ 5ExU_h[U'&[&MޛOͤ,.l,$,7{Q'ld|AJშ"OEAL9]Ea}w~YM0W8y#\3QZt3nd|#h˗tJ8
3Q
Rcy%VC)Tcat;C#E].qTS*&N'l)y'
&ܐ!&VWM~F#u>^ag:|RwQ[<nS$ŐXqXT-:z6՝V	XWtYGf]W\!4:s[?=mKS;E-)DږVds+R<#dq0/s#
QŦ|<L2
RW;]x/aMN9Ia˓AUYl$k;sIhins3 τ4YI2	@?(qoV7F 홽̶:vՅXwK5({
"==
_xׄL^i)@wˊywsog
wRf,%̋M\燠){|0?0_I$]dĿ!hgu]
mC}nFSh7; F2[sP
rL
& g93x88LhI\TLMO40y$0|5}cpt29ۑ{hBd?B%*)ѧU6r&>Fm6B^y{h4L
tL.20Gk$F{׀-mv0$<A'"S4O8K ,F9KVѺ3`+0?{[F/ZeyX=͑]r&sXZɮ1=\ˮgrd ׺۰ ɼix-byYƱWZٝGIB7v lhx[w'}A (Bx9 Ј6y뎘pK/7Tsv|G$BCzCI&x[´i H
3uӷz4_"g jmx.(6Ag㡫\ [TYxiȲ9S?xت@. 0x"e{6&Ɍ얓}97Ǳj k/tSx˼yCHHwn^HeRYU zx 8+e
"_
LԫW5xN@UDɉCUE+WEdCiA
%Q=T3uZ

V+pሸ{; t!{矟/^oI<j։>	!449CIĲ$yl!2jx$wFdHziSe%[>8BP2 op&dȑ CrpMG],ym핀,A0dBP?VhyS/]7b'4FqM_Xaa8-~31jK
̴]H7Sv;Ïݰk-G6%Hf9ҘS7L\ !Ӭ҄X'C97Wwn~od'8ͅ<j.n[7̱@G	Aߕժҋ?'L+n*zC8,(xq41wx7 4.?|5qcr8
TeZqe\^v;zC YhxTn@UzH	unQji*EJV	p@({z쮓H Uʅ?$vmi7{罙}f>F]JӈhPX5\WK2QG
DC
{ȈGIFDiD֌!Wd?6SE5D!r	w1 + tX
D5Tpc<h0+Yu&V wѠ䴏BHH>P
PAȦMj!AH:A"sm!}!NllS`?l]
 PnZpD1]<5IڸS}Q>zͣNs5۝)Z'Rګ
tWvg6qmZ伬l-nX>6c8̄05m'p_5 OKbd:E\M1)C<	pLc\^@QXnv+e}$1ջ*	Hf2I{y!D%T:??-#ET	+]
3O$\iDR^ZcICb$Z'%,~ep%A<69*PPS7qKȾ0eD|5ff?tˑ#]-"&S)Q+06ӯͶ<ԂjSX
<8zxm5<nUķ|w)G*Ꞙ(dqD02x  -h,| B/cx[´i H=SA&Lt]6i i	}x.~I`N͊LFl@N2.EF :Z8x9 	Ӗ^Xx\[^/[玢yyuc]0,dx3 =,lbzkl=dq|W8^qh,Nҋ4LR-xM1K@ǱZ,YD'#]4FtB,.BQ7+GG/ҩ䓈(k"^J}g4ouH%ϫύGw\HNo(mYt
R1Q	7C/i8ߌԡoX֌9d<Pc:ǔiJ|]bBqBꅆ$FL8i?OA YǪ=	AD/PD@p38^"E1f\~@*wk\~l.[Gb[+
J+LkgB";	9LW\C'VbTU܍s7'{=0rmԫl 7vdxN $fGEL%H~@卓/7{""'Y;	ޭdN_E(z/:gk;c`b%~)Uu!v]x3 ޸/L0Lkwf8^qh,Nҋ4C`xXKo-@ڱ$;߲EI*HN,MD8N`x9sIN5;{GE誋"(
(PtM=;Cv)ιwy?X.Oy>W"~ymywxaawk;WǫFrN0ԣrڀ 9{Hl`Cv*(`#%Df,	
8,Kfq\45v qT(cD̗NeNG?bb>
ŚBMFBœ"Yݝ޶wp~yZm9W?t{u;Gݶ9/8|
0bFH*og޼i~z^HI}_$ZN{I*}Ly:"-CIϔc
X/A2g#HL$(9@n"Ll+fCM΄&/0ҁ1Y^ lncAD)zj=r
9h0 @;\Й4(OSYk)zhi"-ਛx"tRF!֡r;f\cVd?aJhbhu HP<c'
Y2: pesoD9	ũv[U)W tܘƪ5p0g+K6^=wsޣw~zDr})#dOӛ7Pkyz!{:G`!
JS1v><<y`
j?_bt(8Da|6xffJP3'1	 cf&(h.gOenՋ#o1	cA',E&[|u`B:Ҁ|BU#-&"eV -ziVX~nu+4q)-X2[ jiT. Vݼ,6m6wHHká02먒}P2!NP*8 5fRCUo8R&%)L̞]ia#lch%y="vQ" UZj~Q@x1vH1E	 ^ù[oN?7^/K#rҨ	q8g9lOD^A>0xЬ71QsNyWtq͇Qx^2KxrsxK-={̯L!/ŀ||16-iN޹BY "80˳!M/Ro&5:{6¦|#[ӿ-9?`lP,϶waLuvDFoy@;osTٜ3uƮ*Kfe'5ph0\`'Xb&fmgաNLy*õÖPHѮ0b`bKUr͆lcD	$agŝ߾To`Edjd
T^[Wn84 HR_
A3t_g)6$4Jъ=BJ63,pUHkJaL,Cc	׳pگpDX2La,S|	4"Ж٨5&%XEO苙±CpCU\20?M:Pc"o
 Ibx54tDCcQ\RDamd4@#X9qXg~5j$
֫" eLiFHrp`&p&mXcӷ&|e|Z|v-*[y$Ulu4#zv'`!)-'oaĉq]0A"Q5sԡ#J.I5a'n2A'!erRe@ˉ5&#i-x欇3
0on7B$
ݨk-YJC1ܞ@2
}3uN.Лtj3E)m,+a\
ǯ#zJQ?Wfs	#e.
֢@MNA"kK0-A2gFZ0U؀K_*g<'o6rO{9jae;u#W!(\Ć+vbJ,p;Jy{Ü\b@ڐlÙwl-i҇JaV@(^$lX*5[0YWD<aDOpAaMeQt `L9\DZy1B,acy oVS՚߬{7/aI
0tcMT2tư;\?
ֈ/O
U~zU`@z.kD"pcH<,
0ull apZ'^]ynE }7z7
x{*}z6.ԒDĒٞ2
y
pA}jR:
 a[&$OV䗚|B)K.JM,IOHKMKKh)+䣐_5AFfc{dJ2iE%@
i
E%9z\(Z*3Su
K,[(N3!AA5DJd
Ѕ`E\
+dM6ݖj-ILyr2K@
ʙAr%d
(-N-
e0}=X|)6MII-I `l"dj)ȃ
,Q,,% lIx[,}C"TNW- $x6 8+e
"_
LbS 	yɸnx2qFΒJ+.  )ZZP[_TZT_*H,.(q zT;x5L
L|:
%)%~y%$61`4*()$\\
PP?y{j^zf^bEYL`
ffY͌y'4i:\@ J6_`fId[P~DY&GqMαQ|NjfAG{Iv91"tkms)eBhw#x:O9s>0g,09w= pjVx340031Q,+dZF<][3+
!JRKsKSA/LW,i]Fsew^qhfVvQƍ t0xEJA1AlPNAX\%4$D]iYg#"^AKt]Wځ8y#UM8ܧҟ
!q<B]JԏYs,!By>J![(.f.:3Zٳl)%v
,VDk,!hZu3K`J!lCY;=V}nWa4gEOnZ%:g"25'R7Y&}N61!`{*.]%G62K1'h$>Zߦ%gS;BjglφA߆o	Kx-sԜ4ԒD. $bYu;#d}ְ͛űKoK[.5pf?r§7%5ـu)u&S71B&O` :7:x5 fD*ԡey(
ʓz/1\eYbL{>Xrxi:;ֻlz28f)yu< x;5qL
&:Hm>f
dM 
lx340031Q,+dZF<][3+
!JRKsKSAʯX&f/'!+/L-/)4,Z+tΣ$;1=xۖy?}z'odVp#% ]9x N^ ie;Q@x340031Q,+dZF<][3+
!JRKsKSA-t=)ry
o2Fde dZ%ly÷ -*QxVAoDVI6t	S7'iE1iMHd=k̸MVZ
QZ/ 	*9 o$̼yocj[s
ؤ(D!erT(
hS%Č93;jzv%*G8"@	ǯbPEÍA%JuT0nMnn= |.פ]U"dF^ixdUFr'?p;24)e%Gz#?93˔`Nlyچ; Tz}u풽pquM`Q6zήC*88SJ:]dY|5gtvں[Is׾q&#2cUt!xO''rVZ;:jg?d)ޑ:MtB.bb+lqkDYJC3S*:8į㨋mN$:8	JaOl0;WƈWɑ-)dq6IMsį_YWq8MĘbaAG
u6z!'DPI~EO!5ׯ2I6+.>#,qpd_K-tY]iZ$Q7>Iqk-9	2Sm_8HٲAQ^3e	Yy64=}#V˭ŉ<UA3ۙtJZ  
<|nLc$.ӈshw>E|6)%,7
TȚ|.S2*=[ތq %('Zjx^+JY2ؗ H|;6k=4N	ZOnʱ
0](\N8lۜɚ%nɚYD}Y6=9P(xD?;~N͈w@蹶>\P
kmeN~ѴGh뽡tٔ)PNT:Pλ!4fb
lTt]ݭqDҲg]ܠ38.vląKK+}xF[0WFJ*V-BڗdUWSGĳG.oGP>+>K0>ޮ zxEtHfrG^oe%wGCϕv	..ѻ2'RWQ~QӍfۀ;qZ|y3ӧu8f!HOo}&[2
~׈*>ۉx5 I|JlrSW/z;iLkpSz 
Fl9>X1x[´iwS?V%r=n182x/> ix340031Q,+dZF<][3+
!JRKsKSAʷ/=ZɦXLe]%b¼ɟLr;>ǑM K0yx-2;u.iK:ߟh 
]x"sQ'gmef `Uaxޒqfe:ɻ7 uv\Tx[ 6喒#(ӗ(}(e40000 example WJ&Kmh
_K!7]Q0IgHVj0*:[zCb*#+x daVޤ숰JɐL	x[~%mz;ٞ2N¡0)GTNW- 
x340031QHO/I-+d]E¼ZnOn}*C<vD?}ޗq}W> a.x/|Lx+,bXM7gr1 Z%x;&wDl&0|)qA@,63 61x[{w%FĂh%'wwO?`W?G_WX[%J̒  U:xi:7c2hd}+]$b< Ǯ
LSx˼y4HǭK5˧lscV Yx  pQ}ǳ6֑qZx -a6%呾b,xD f8Yc7#,vBTE100644 setup.py Pmz~{rXgR9^xID!>>3/$>^(}ּܙ?2{`|f:'# 2)xg̖V7UQo
YԹ U;xMAK0q*\ěK=a7'k_tc'J?"xu~~QxGw{vW,yx
b\(m=ePi"cSFkBdBјxv@1Eh&S22#>hǜ\XY1ǁby9\5XM $i$?f cuLCU6=:ÔL ':3^:2[kj}4U*ңDqkumX〓Rh\DR@n0X٩7qq&%Vi~ Z`x˼y4ȹjIhLvߙSuid}> '
-x  2^iԱsHw\ź/O`9x[´i gwλMY1 
x.{̋Y6r)1 8 x3 cqbb؁X8IkqQDI	~Ζdx˼yJF?׉Owa܉یBc] F
lxkIoNpGi] (m$x˼yJFk=e'Zj gZx-brgEDպKW[ wxkIoNQ1/?273%5$RG!KAAa3%w61`b V1xN =o:NTb_.սϓQ=ƈHy]TQ@61z/1ٺ6ldyGۿuwj[)$]]x˼yJFg+m/~RQy+܋T
x340031QHO/I-+d3cAcYvj<nQRrnR]24Op QJS;x 8עt'jGɢ+	LHG+xuP=k@!MjOJr4HThPJ+H#SڡT+qYw}1C4 KƐ=$[ k~@Jʎv=_zq;?ۤ<)	)KB'"|tj4H`"Z#b)5ڔS	yBEAd 8RR$ doREyRr<ׄ<>fA]gO֖>ٸ_>IxҌDKXF%8±~.-}X
1E%tnmelQ{ѧ0nr1b)̃iJVG:`8C%ݘIp:mU<Fb>p:ضUSr
t]iiRRȒǮn[o|TFc<*0_!((xI\eQx-7G׆0|l 
f&x-"?]@kZ *xkN_;y5L̓d&L6e/b~&g1qO.?yf& bxkI_2j5L̓d&L6e/b~&g1qO.?yf&[L*3 ;tx5 fB'yB<O2!z/7 vߚH^m%.:CaxiGse~%'=i^ 
6rx{4efu7lIZo[Ǽd P|x-alNgμ_OnYu !
Jlx[da9 "ExN h R.!g;AR/7}1%oǀ^.:z/7 vߚH^m%.: ]x  fZk"rߦzC9_x3  ۺupEe8IkqQDI	~(7l x{*}CK} ,
x3 8ru{L"YÚ̼%
BxiȍUU7k0Kp_\; UlxoߐɹS	 sxU]hUfu1SM'6IIEE&M\H-V*0LvnΌwG)-A}H
EV
}'lA)TR{lv>aι~s+/Xk(%o<#!Π1إpB8$й}},:\%NUwR-Ĳ˖k֑%\aLY} HZݩ9XobA.Yv(ZwLo-u<i4m
?\
sSESp!rdsZf{ҝ{&俽ɐ]UdX!1wv#ւlXۭt_mZ5lyMLsB%n`j0mcguL2m
l3;D(ʡbiـ~yc^DcGGɱ!,O9r9?G(k9Mς	H.ǰk7?1%F/uBAEO
>tX0ׇ>50E8*q8: (3IbW)_B6|.	Ă{ӉbCbd|&T$aǆD"CBVp:`%dCNNC#%~=5+$MUd&3ͬ@t;|2ؽhEK-6Z9VeXӤnM:!S+T,6 `tT\:۫# NEboFXsʇeg,%je+w'=p퇅7sŪ-:fǛsg747,L4eǮZ5ُV
J`h?M}&w/J,2,ojnNmx,y%ɂ(Jڂ[(=Y@@dqͺ*^ >x˼yCV_zm<uo2U 0-x˼yCHqw'ϯu |ۢU a3xiiS˅
9X3odF },x oVoz񭝐V$Jx31 ̼tmvM|'AjiÖ 8]Ex[ ;!)Dett5VO`9P[{qc100644 page.html ~38ٚ"',kx6 ;l.č-d(c"qO,sPRX@&V'rS,x{#T`0HnjI^fq|iqjQ|RN~zzj\V^9
KJr62=g \@x[*R@ZU!$5/XA))'?==3o##N\h edY1 ?x31 ̼t)܋W;  x&a.{|gEL9 rU2x[/BDZU!$5/XA))'?==3o#*N\(ZY_ZZVZ4Y7H^jJfI~z&f&aaԲuAf/d83 I+Ex˼yCH-\=lǿ?*0c&U 
WTx yGլ1G CÓ$x31 ̼tͭR[䰁yio }x340031QHK̩,L.(a
kwr3ջ8B6CʤTMkgn<tԾaPE)ŅPdmSx.uއRS2K qYܬu4R̼
*x,nɅN7>#^ 1	2WVlӁ?L**,IM,Ы *>~X}B[seσӿ  )ko#x)Sh4#Kzf^fy( <Sx[*T`C!#Kzf^RF(k%S ,x[!DZU!$5/XA))'( cix9 |y7|^8Ep&sV/7
0G)g/|I]zC"Hx˼yCH-\=lǿ?*0c&U 
W1x3 jZ^S\xt8IkqQDI	~Crx{q+}CK7Y'W̞,79@vD 7ex? 84E
%Q2100644 views.py :<!
Xx31 tͭR[䰁yio S[xt=i	)
M6gld
%m&ĺFхirdO*LVQ(Ʊ9^Eqs%:̬ 6x7 (_őCzQ}?c
5R773eᡊ,&+`Z:˓/Fx 4.?|5qcr8
[ex3 ՂWz^\#oy8IkqQDI	~D4x~)}dC.0):L
*e15AY,GeP?,ksB0 W.SsxTn1V{(E =Ta^8d}"JS)R	dk/7>B{p(/+p47GOr,!482&MB>
I(Sx1z82==	~Ԋ6i
opbgis}; N=Ɓ
r@׫I]v|TD`Ԁ6|FRX*e\{} p?FBȥBJ:ba"EkQYTNv{ p/qrÕP	G4N8vzgZqosɋ^{n^V_k+]_pl0uQ%Y;yb0 <I5ɗqLEͪ=l
XͿޭlO(Õy<l3N ',5Eԥ[#H@ |mmjrڇгՓFl,rcc	܏ VX`LN+TMF6^L/|
f=;!1vjԌjORHHZ1fRSen
`̭eM>an7,gLhF!q^)^|5 LCuc.9y>Kwў}Mȋ7x9 
`-š"#q~E/7"{rAlQzCHx9 1:~Ҿ
96t/7}Db7V},JLzC9x3 -hu&issUvc8!+¼C	owgBx3 zqO/8IkqQDI	~RxޙA_fBO6
wMɟd`vDSU.zB94'+kģtr3KRs*rs&)NW<KB %f!
xigBo:/>gB\ r0<xt!qIFĂgYm9'q k.}5Wqk:yK!@f2dnReP(I(-/.V1'7Nޠ 9W9ɍZ5T@3SlEɜϪNܯ8OfԒ̼tԼIғ7hJLҦ/5@٨u(5<>-55Ec6` joxx/iIF̼gYm9'q k.}5Wqk:yɓ'	C'+ܤ(#TZQb[_\b*lTg)KIP<QLar*W)Lg|OYarjx	:rbiM>~ns!̜TԜ"E d&7Oާ(6u4n[iB9P,
 kEx˼yCm@_O=E]8 ű
,xW V`A1GWΑ`8#
8.%cq{100644 views.py vpyq>fv&fx hg;ϽUY
&x;)^ҊK&ȤV$(xA
7Jq 5x31 tOo+%w^+T x340031QHK̩,L.(a
kwr3ջ8B6CʤTMkgn<tԾaPE)ŅPdmSx.uއRS2K ߞ$RBs _!TYf^JjDUc'WW;%j	:VtXN<uT*%qEcO@g&U =}~cy>ʞ YimxC 95BLűSUYf100644 page.html K;OgS<oL'aZx[/Dd;HnjI^fq|iqjQ|RN~zzjf5N6 ƞG
sxx/iCIbۄx7)08'(VD+J:
RdN^29@e=emL+&OӚ|@
B9
)9%y
E
 3&Oܠ">y
ש
LfT /l9 v90x  
`-š"#q~E/<
)#x~<nC.
W'|Yt$>iFE'oeY|==C\}]`D1]6T:tXA`|& !)A>
H $#U(G!?M,,I(."SᔟP69Y\grh{s
Fv[
)i9%
		~y		\p=>~>!@=q

%Eٙy0oMgGAn(Jn7WWxO_RI]f4`\.i̽%Bt,M<9@Far'k/2Q0fl")
b(Y_YP_7O^a2Dyg奄 27`E
7Q  #~-Gx{{DMe!8='x˼y42gCZ2Lª?4U 
x3 -hu&issUvc8!+¼C	owgx {ljPM٦xKI,J9yPvyIWqaNbNrFjn%WnbQvJ~yWyjQvUji: Q4hx9 =DD?
sdI
e]Q$m}hpGUZzCGx˼yCȲM&)UܻS/it>1 7
Tx340031QM+dmAD).}' 
Zx340031Q,+d޴뭍h!	q74(KKK)}p"OۅTi1TQZ~Qn1Htm$8&9MԲ)(ON-./Kp_tЯ|̆6~0'$(1l1qn4VXRSPg U9pյiK[z@ P(I-I,I-fxa3"cTuk4{l$-&eݿUz_K)i _vGxID!>>3/$>^(}ּܙ?2{`|f:'# 2?x{'9AٱҊKҊsJ3sJ22sJRKR+SJ<EEE=TKSlRu*;L'ǰ<1'ekhNe,(-ZYa[1%Z)4'> 3B)v4
zq)i
ȶhZmB2BVDRgR,PQ3
jSK4|=:urur3ҕ4qIVlZ1 W?נ׈G֫RT.&%-;9Dx:#l':ڇ&$xpsuu$=r  #sWx{'*uv7X7z3M~BqjN^bA^r~^Zfd=V	T"4Є81.$ԥ3ٟC\Z/=DC=>4'> 3BIss	G# )x31 t#l{O_ 
ax{#A`#GA~q^iQV Y%Ax{9lgIQLTIHN-(Q-/*q-*/$oeIO,M//.)ԇ$l>=~rfvB&!#	myÌYbBr~^Zf^zj\Kg"&K{9*MNTSlϾyF8#?5 Sxg̖V7UQo
Yչ UDx˼y4H^X-Wҙךd}> 
F
x340031QMNMIe-2&~ِ{& P/.I,Lf~?kߩjNmirDIIFjnj1?o]93W{
!%T2?ق׾}fנJ2RR+KW@rKJ,aPY͏GfzI,iw \P^SxʸiBBbiIF~Q^Qq	ïofyƸ(&"lt7gQ\ZaU4
LLRsRS!f0Yvz %-@ x{Ͻk,bL

MeR{BL >&xD f8w @	!ܖpzF!5100644 setup.py >}SPW|Sx˼yCJ˭cB=orfrG=\ 6xM1KC1,Ytt̖DkM-.c<n~"8Opp?)ppw6?םEaeS>:"c@
֗@{)c?CI2^:wP-mp_a)EL¨F ]].	@<?f<)LIوd8ohh<?o5ɤ}Rcw$y%J/Ny >ԏ4ΙiAi
x  fеg3pLi
ߓzCAHx 8j2AocD_>L(,Sxky+/?okw/1Ne	 ^xD!>>3/$>^ᴏʴO?#ul~WNSԼ̼TF>Lvy?ӻOy z'%TkEx<yFfu. x  ƟD
\h'B\ҷt7x{+J`BO~zfƮ =-Kx˼y4F,Wx8/|od}> a$x[´i H+\_ yA,W mWx5kBI1mvef||*7# 	aIx˼y46å.);hrsd}> e#x[´i .#7y4ܔ\qW uVxkDCٍAIb\
ZZaEřy
zzFZZV\
E&aQS!Hd9&L?&3N`ً Ovx  Z
ƶ^ݷ,Fm/0Rx3 Z7 ۰>Ȯ㧟o#UO{N8$,aY>J1cwEEcxWnE4Db%
D^& Bl!kL\F8n\xH~ r5^{fw6YqwWU_}Ugޡa$SŢs,.-Ko8Up9$FZ'1({oDc<>|D 3a,Xf<"#g"3$C>!C	%xd	""i&g/D{k	$  >jn{݇ǤMpδ=uv7w:fJA^YcX2|$n}zƍF/N|iރb#_r%	
Ch	TL)~:LhpDB
ubN"Z0=#̅rLLB
9}ZD{dS@	$UY>õXXk͸v>_tKSsHF#KS@ aeDZ("vJ <GKiEGn%JuF5JY
'D1(
$Y8֎4}l6MIAn	U]6墜[k.~Vq'jb,_ $XX>iʼΜq`~gngu?guKq~+ͭ펿mA ؕpYЦTPl ѩI\bz"pu:wN7+qe`<e0thWFB.a"8`+t^6>qeӟ.}5L5	e2h}իKuS
 
lr6!XAJG12%45sRlVz)

Ƅ2gTC⨲cx56P@5; @NCcŃ!<JClLlXFP/AY)0{~b)TX,{:bUcA(	`@PCpԘr"5RPE刁HƳxc:6D3D
Y#I,_g+MY*̔4A飒AQ<.C{:W! [o$\ftyjYR?H^,b Ĝ.X?*ZfՆk:O1AW3-dINdhMa+
4yyډ<D{?HB\ִ{K#Ͳր.МCޠo
S	^k
1IRQZ&X}
BmV'P^D1ZMӀ*\b0 }-k\ahJ -k:<)eBc
ziYиq})Pk\sc8nqWB&(=+LȊtr~DΗalP.2o'3s˩6 .\=&^Pr+ktHm'F[=RJPmv՜eS˹+֚u+(:X{Y-jx|	pմ|{GPF *\hVDy1TpCV(jlXϫ|-1:_p4#TU׾zh^f3^A0OzxT/!vWJI}`^pϫjjERӯ~enfGAj͸Yx7 -!Fޅhy6p"Yܧ-H;}\b}țcQl#^9xTn1U"@%VH$SvhRjIQRgfccOAvlXY VHl,4
+9zϽfW*F$ šRtG%Ke٣N R%Fd| <np
rIPvz_!R]sq*u^A,[`_xi\E&NA]8v1jG""
B
/
%Qyh!dOH냅.Xib*ɦ/_e}cueѿf.9R߄.b(9{.͍o73>#/?'λ\kl<l4jJJApMz3
[WۉkSf?&w'ɮݜ:Bϩ&@^O06nN_d(W~KE=1V!`UUajĎ1'p_.ʅ`Ia
Fn>יzqO8$]1q@u(|(Zܣ0j2`}o-?[}{'J!ب/1/7²=#_0bQͶ}xDUҋH
ʑtmQvT`πRSk#e{Yx0@j"@`<CSBĤ$QdQy ':6SO{MWkxWcf4X꛱O(+TcV$Irx340031QM+d8fy?1%-EBsov- S
x˼yC"ÊH{%"}8!wr3 ՗
b-x˼yC+G9_>A-]hU 
x7 8<תȜ5*=PLG۞}k/]}Q$rSFx 8j2AocD_>L(,x31 t+Z]?rKם ;0xK @0ZzŰ
5Yjc_*8wL)B9kFLÑvKYT,A%6SүE x	xζmB#{iL E^xmGN'wwO? [5Qx{+JxCcxQͥ\ [W7x9 LDjE1LG$̓/7|r&210 zC^Hx  Z
ƶ^ݷ,Fm/0nxW 8^}4VSP*@tL8ҚsN~ ܻ*&h9100644 views.py KO*Rz0b%x31 t'q*o5
,;8c bLx340031QHK̩,L.(aPa91t<qaIũEZsn]i*7ٚ[d͂*J,.,U#ivxI7޿qԔ̒"ifgqE9IT0h0WUZQUNmZz 10O&J)o\qPEř%z@O^VR|hď-79T> kmxgg[[`g#8JlRk}	 l	x۰i" fZx7tv3M>'y{o3y`qy4{9*((m6`ܪ .x3 M/Kc]AJ^-8YmA pΝXJ|\x{s/fQ͏4SYL2sJSRRsRSKPKK2 2 It%xe>mk#+..ԜҜJ#CS-cJ
P"$#?OXD dMsBJ\ Yx[̲uLBXjQqf~h&(xT*(jA$ur3]djBBr~^ZfziQb	Ȭ2ޒ|TĂԒN..0
vOԗ%'ʅ.C=C\z

EEE 5_M.`Eu~^!'cQi%Fɿ5|DNyZx9 y`אqhL/7K~fXdKbOI(S%zC!iHx9 Im	m0"*J/7Fi$@4ՎPzCex3 mJM.DWqu-ڌ8YmA pΝXu1Bx[´ijKcbBxs> l
]axWU!HAi3g7%[E eDKx3 822mxr/W}⮑LΜXi^}zT%
Bxi 2__,iQ x
qg5x{'- 
lx4tiSE&'LnpsI,uOOK|\Ì	 Wl4x{z=tB5̘ +Jxs jd1Fɉғ%6cb|SU 
xD f8ː`RX?u100644 setup.py /+ft+%@AxD!>>3/$>^+em&*;vTYj^zf^*HQrlĬ^h>ꫝs'< !\x 822mxr/W}⮑Lkmkx<yC#: w3fx?AgcP
LW&oaX_7EqRaf $d94xoh4lr/f#=?6׳3 :	)	4x˼y4捯e<~\fUcL@!"1 'a,qǅ,a-naSyGv@Fpә玓~8c
LLSKJ
*
Rxk7*;۶u=[1!Ɨ0,l:BQto~  @>Wx3 w F>R58s i7]ՅJjb)x/xLs'c*\ƼDP˿D!?M$#U!)bsglDtJrR2+lrӕ6/嘜\d$(gd&g(d+$(+$p/L-/S2'EҔ33Uar
#"k$8' Ʌ(LW	rsq
qQ"?ygp`hp<&>~>!
M$
O))ld5	ufo>9 h_x340031QM+dt}t97
/kxU]o0}\uM$8!@Z*MTMe'	T^dd]<ؾEfʂf?*8z5Rp'*NrOkG2D_[YH4zF>;%6K+L)τiz[wY;lv 4|ܕHzp (h8עǸKw6\=L Sf%Hq~[|waip
Ԗ  :)'}x\Q$] a@!`=L@ѣyedv#a=Bz<_br6aʜ!p0Eֹ
ZҺsТ4/BA((&&,ʈ^D*3ʹqYgJ'*i|=IN9VF}ݾR SRB.:JS^
hrqz69!DAE12|w}{xЭ+1JnHto/{*-S2
vhDY.ju2bz<[()((P
gc|UC.s+߄+}@x)8wt{.`t;𪵅+D슜aѹUd&ejPpe.=B}20AgȈYL0>ѡ|Yla`jאo] CL7Sxau#sp7Wªa_#EBmf.A!s0
8#V(z3Z7pr.Fo!}{x"6AٱҊKҊsJ3sJ22sJRKR+SJ<EEE=.p 'x-OsP_ZQ˔L	@x`dYRTiť $TtSR+SJ<sJ\ J
7 [x˼y4ӿI5u܂ojIZ0Ng !
x3 єܺIx7x8YmA pΝXʬrx;s~EsK22s2K*KR&+	s*x)g)l^1 I_Hx˼y4>ck-(ھ.I̧œ "%x3 /Ol
\'tz28s i7]ՅJjBINxqXi)ͪ3Y B-Tx9 =!߹B/.ZAwW/[|ٵAMLL!3l^XeXw'x[´i SGU_%Xy;{3 3
olxzy> BJ\ 0!x90M~Raf q	(j$x[oƠ`v  Dx˼yBL+5zUzuc'# tzx<y"FbFF. 3`Mx5 fvӻJ"re@hƄCz/P)(\jkh0g8
YbAx340031Q,+dry.!bǅs/1(KKK)ꛟR8c=䰧)e.=PEiE 5~ҩ𖏚4]S(?98y~j|C!5ϝUW\X\_h~K51[YoDr| !;Iن' BIjnANbIj1åY~uw>&qO%&e?i2M+KY drxID!>>3/$>^+em&*;vFuNF 8gxRkAf#J.bd!\&"ٹwf;B&`ȦR+t6P875=:ĜzdC҆M0Ab|	j$-.\|$C/pFl {BB㺷+g\wݫpٝtַ`
0ՃO( gR	0)xc+l˫7p}w5LX]M;R!M6
A!ra ~UD.lr?"?PABM&Jꥰ,͙n]/G#-N
;cu`lW+2/PjKA0HQ~cӵϯ_և׿A@G Bo[b$Y6qJ?#< 6qc|13UYԒeWȚ> .4xx340031Q,+dZF<][3+
!JRKsKSA5E2j)˴Ԕˏ,3/6,}5Ip& 5.pxۘٔ)VTSW[_TPʵAQҊK2ŕF`1  U8`2V~dɗC'N<CI`r1 =*g8@AzlwI;QP
J-,,J-۪_\ILNLOUJI,.VI-.IN6Η+r
saaKk=9%y9e9J!!_ gf<x˼yC;5K>x;)/Fvy l
£x340031QK,L/JeI*0q[SϘNz/CҜb՞Y<iI+`J2*ss65aTqUo(/ؕ!OOr0w%Uǰ|u~^v5Ϯ˪Oʂ\]|]rS][_5z$OSXZlٛ.^s\WuГpeEy%z%%o?<;G<Eo
n.lb 
)M?fYT~ϲ%+uAS+srR	Hw\v6W{dBT$g'䧧g3X^Iű1O8tx8@z^fK^]Q6\İ-Sw=j4痢 r@x_ W-5[VT꨾i100644 setup.py knk{Z1=40000 test P)(\jkh0g8
>)xV[o6~8UUl)Cgmi`(@%"I%v-nAl;-~rbM^ܝ7ani}XS$1>r=x,:YZd"+&Ն!k?1Lh.HKnZ*FV6
47mgT=IdT3Ќ0eTLݫѲ3J1!v30mX*P^ꘐ#gƅ4G`4F*ޟĲMRmU+3e)QGDd솮Y>ȨƇK^Z%#R8 sFșJ
Cz\xeVj	t&뱏11EGy
#3*Pe5G62"~3G!t1z=kx4bi8bw|zqH~
4M1?o]aܫ'&d\BabaQTU/_EЭNaD=4">A:CBT~=#hT֊f89>ɗjvίwof>~JѲڜv|||k壌n  i.=DV&MCڋ$)[1ϑ{Fv53.ۃ`% M	\lk[f฽`X;IX.u/b29*jp!cmvg32O7S(LUSeظ4qj)// kֶ/bg3kXF 
L)L(_Ipf#P0g%ݟhK]{ֻkp?3ul
b,	@L<74E( ׶(t
e8}ïaԦ:6#.\$o~+y6]w"GL-CmLk5JkDe,TvS|/7خtW≛]dY';/2Ya7_ -v=FG=-

Ƞ5`xn_f8ӄ+j7KPURq?HDN?|B{H#:ډ<,n2v7r	C,<-Yg-ɬ[{rcu$Kܤpw+ew$
ߋie61W-@_#.zGCRibu3L3	w.eWw)>y0x    
x340031QMNMIe-2&~ِ{& P/.I,Lf~?kߩjNmirDIIFjnj1?o]93W{
!%T2?ق׾}fנJ2RR+KM<dQJZ،CX 6=Xn}: Y_Dxg̖V7UQo
{wxx }yk)_F/ɋ|M/7W&XF$IԺFq%Jq100644 setup.py #W^6S9N?':G40000 test lZKSwr o1xʸiBBbiIF~Q^Qq	E4~w^2Gႉ&".eܥߝ^dzUNU4
LLRsRS!f<-|PU]RSn7 K>.eDxk` x340031Q,+d0X__xbQ
RYg`ߩt6b?
IpxGMseUSPZ\_R8AnofO2M0'$(1lkb':9Ѽt7Xa*'
}Y3fgN}{{($3\UWwZjd\\pjRYfj9_gy5\p)DD$ zxxID!>>3/$>^i;vM+*rZ9UkHxggl j(x$:Ac). -hfx;)Vd. j x2lƍ}6x2qtƍ*,g,e<0W.c3'ħ$dNn,'.ٙ\E99IE0  )ex[34
t&+سl>jY2 /
M%xSMkA&$mJJ?=jHыa?P":3(/!=x(xrgc7A=Ty}yw-). m{r\{~թiZW68`Սy@ԏ11bSOKs&'Gw~ɰQbKkLȁ$A^M$$\*OG_?CW$hA;f;D6cN5ث\E5k_n&Ƅ@\W:Zmeti@@X(($Z\*KJ
$Yj-!͐J b Aq!	z;`ǚJeU
 1.$K3fˬ//"t>_ԏ:mXχLM$Z:
"`~4>sp>=pW/fU2KELzs@_r
[ɵIvR	N6i>3O*E\_x{1]&-'?D#7" XS"_W$"EҼy bgyxo|fnA~QB~1X1K15>1c=R*R37f4d3F ?$^x[wF"γ+)MnBf&F. $vx340031Q,+dZF<][3+
!JRKsKSA^l%EId펯9¯ZJ!+/L-/)	sx#f t/Txۘ<c*fIQd(W&<C܃\'~Vေ70ZO'_c;9^g!'ld7۫ q6ųMi$3DGA)(4(nB@~qI:X$19;1=UI+9'X!$&98_ )цׇN>g,d$d礖*9;zL~a| O]xY[o6~ϯT1Ou[.hҢJRw%Y&VCy.]LiK9ŝl)$?[j!KI{R.i΄m,|gV"6Ƈ74+-Ź)Unˇ$ךS|T&kWͩ1OGSx*@ca_^Hm?ϯ-7ZMW5-CS;%l[4y~Fb|IXƱo\N	bVnZkS5 '!
AAHe`-[V&f	2j?J~dJ<
«	 ]#y
?Mak~MGQ~A60ܾͺ/hl휿fgzۯfٴ@|kg/.Bt`#Ml {%xЧ
IEa{_q
*r/m:]]u@@Cb:5}MɆ۵b&zw=h~EQq*6-=:Qy$zwB/;6R?FRi"!MSpE 2pwޚKk"].
Ғy-1!{]2/["kzx`
3eo<.&qO#D*LM
cKhD
Sڦ YN)CLU-Bc!3jn26*Vǐع>T5 I8QOa;%b6F@ݧ?Ș?HLb0Vxs8;iKAy7.jN&՛XMbm6vޮ3 x Q	eiUS:O{Oð'T|'fB(~Uh)sE{W;\TbҎ@B
Qte5lVuSv#$0XE
ĬU.YpTp!)<=/Ns>&#mz8{4us]16~sFհ@MyQ,j$Ѝۧ贔3Y,p: W0TO	
)Kr 3h0n%h_QF?5Uh8YIeN	"Rѡ}v1'CR]WZ%5`&猸nJ_L=t": *^A"tE;\c7AMn/W#?>`&dWqk+] W9!16p\PRe
A
{Hv!N^"r_H`w:~jqt~gnb{UFJp{ʨA/%)*>X:G}%q`a\r=21w%͡LVH1#(jAQwɸ6*j>K:Ř4&)Wu2&	-VklP+7V
V[JRc5>EWNܕe.Ԝ6Y򱿫ʏ'+>׃ӏݔeEOJJ/d`s~>w'V6js93!2@xzx˼yCMn)x(my 
x[7lO 3!*mΜ X(xkϻhdX Crx[ `v4"L@x_1 vsOt8<9lf-I100644 setup.py ;9/<&R%ix7 fW)@q9QƧ]M7
>sB$%YZ_DQ/MEx˼y4'.\t%MdwMd}> ^xTn1U"@%@P+bɔ]5YJҪ:373&{{Ҧdǆ?`Ć`>{<MӴs=OW?U*F$ šRtG%Ce٣N R)yFd<DPTd'xL
rIPU;+Z̮K8:H&%D hc-/4{&NA]:qcD# Ad p<2	pէJ$BHE41stvd׮̘X%]Yt4S}rG7aEN]ڧe7GWNl3n~~yjruBJ]%C~nuTtmaքu{Gvec7&~0bg	PnFma%Lvw䪞^ոTCZa-\lR桖`Llcy"\&ӂa9iu.-)IpLc\S* (m;Xߛn􏤽fEމiH¶ÃuCh<?f^QweI mGaĢ
m;."剔/>CbۢmVڝ{BG.)(Y?@j"C``)!bu@]Zް tQ	a
թ=e|ϩמTcf4X꛱OgODYI:x~F:DYCxRqxʸiBPjNjbqj^Qq	SGU_%Xy;{3&($dA\X`]HwW%s.i"2R]9\1%KWu1Q ȭ.}x˼y4{/-v/g39ۥe. ;(x[´i%}`=_S2ONq
 3hxq^==̼ҔT++Ԝb..Ғ" x˼y4ȑiU^kW'@:q>c x[´D14?(x|'O nex7 ;/<E%4?37ĝfzmJ1}gOIPa/Mk:x)Sr[ɼ< ^(Ax7 ԩ3}٫xXeD7ĝfzmJ1}gOIPa/5:gx)u[rm 
O?7x_ { AUTHORS.rst P7-E;k&᠑tXrst ԩ3}٫xXeD^%C|=1GjHeUç+%_x ;Ńэյ-$G
kGx:ud!V ix{y#WJsyY/0ir(c c
EPxxq\ݶ<I=\*(fuzF 
L6x:uo's*TP
JIM,NMQ*KU0Q0204՚,
 R|x  A)|ɚOn
nU9ex Znv{Ҷf>jɣT$xAI|rfWqon 3{Oxx{yFw'eO7ۿjD܄
*] P(I-.a2uwfoK~): 2Qx[wF@fv%=C=Cۙs[bx{yFcwVpW_Q''M@$a9Bϣ/
.C> &xT Aیl{.F qU[3,K0f;`LTQ40000 test lZKSwr o%cx  A)|ɚOn
nU9Gxk1!rs-تOfR|qr{8'wU  n;%?xQJAeC@NRAvw@aA=Ar45v !^z!ٗ߫z^oRUWapԾ]Y_voMC>@ uCsMcM!7?$P&j)YKQQS!z(it=VjD
䚱6>[j?+i\&O,hY\+~e̥ICQ)침u3g?45߸Sg.j,1QeF9@d]!bBڰ@@nJ뀎M.2%RԸI:j&ϭmcI7ґxzNwgY%;HgVd~^}xY3\lɆc5zcо߷wW	o
Qx $`(E`ˎ?D$og9xq> ,j1x{y#YoʶrN5U:^{r(c ٱ>xxq\/jLxtP5!L{F 
gWxwa 
`x9 ADU{O<1"{!ɭU7*n0a|VdVCOZx bo[ŐVfA't$xYko_1bB
'QNDJA[#r$͚p=EJNbsC2ɳl6؈$mF6"u*֙RQX!D]nuqkU#pe?I<aُ??1M+YʲVLX$&/3ըl'#vDo DFF[f$"b %*c7&i*bJ%Ua
~o^(}oTQI֦)j-Knu#Tu*S"WVxݘJlp畬U`D$!PdLu#te
!F'&_R&7r96
Y¥iz6H!PLU1Ǒ0'PI[fR)I}xe	>M݉R,4z`,Y'%岺I]=XncwjE$2gP,	Gpd#Rɕ0п:d%K[7aO	vb+o%$TE 5<
mA)Nw 1%?'tAʴ-
;5i	_!n V0Ʒ`aKpckegAp"!jgpǑmR
K}fMobLt&g\sYN_v()xʘ
"J2%Фt8ʲ.t"F8՛"[(2~\lz&
S xGO,8%ǑMl&lDZY_sN"-Q"UUw\um̒wґ*jل8o.&s_%)|Dg6tD
TYX  7˹R(YhGM\Ge?q|T+(،	#¡,7޻5H4 &/F%JfO%gOgp:ѣ3mEelFK tI9<qrHz"qP{yÙkEMk!F:.)r0F5BqpjBe!fW"eT*R~:0G\3#Χ=$,u|Yſ\Q}xv41?zx=&G\N7+J?V@Dh
u#:XHrX8%p:G,gŃ$bU^|<U$>F
|5i=B٘
2p:[\Gne>E`(.	>q37.Ra
uP<s $q)z. ҖD;pXC<ge .2.h3ljnΖU@ǏsΉ*eÛ%QTܢCSG!17xNNݣf;4CϹQE&b>TJ)ܠ>aNJVO7fo	CTc;bVEh OSW6,>Yw`:eVD½aFQDFcK
A6s;:+
\`>9[sѴгcL= =w'|B7Q`&x^bO 9#sĳ&̚h<-,)[FN=T%2	[An
_+A"Kijxh /q@噚^7'fM̑4PaWt^XWqJb%["M(Lqr77ᯂF%=)$rِH*l:] köRPغۂ}Vڤ^W"9qgdČa77ҸH.ƢFq'}a uh
c?!v8hrLUSGf6xǩN:Wmx=$NJ
 ĭVwMw3kxtd-&U
'aT,^/o/̩2Zn(&Hv@G;I(ָ7Qa171
^n'߾-Øyq+YR%zΎzVv56aN8Ǐ>,
F~x@4^]]Go/.?._?_iPhޓxD|1޻S݃K~:vP#b.*.JmA*ۉ`Q",TR:?NоVV`)t;ϭqAnp({8td׬oymnMaьc{}[˵KPTbo)ѻ)	iݜ0JAGDY#8:*"]W8kfzx= O'9;66ccwȃ
j ;,Y%E,r+^#Vv9뫅
kaߓ5qP'q w}Kaه}7Cdp*e,0MCZ]7c_MY(M	J537Y>[UU[	wXҢG:WWFyriq՝.pS8^a
d  DEjBe,fe=!YoiڗNӬZ]>,+@?l%3#!Xph_s<f݄VX[sNN>yk'DH6-8tKRZNxcO vƔ{Yj;2|9>#K&H]Y}A0dȞ<o duDse<e׶g>LXL±=_QR);~RBKIgYɘד)	M
r1/Q_wyG Gxk6=+fo6I 4vIxD :eT33.Z|*ޟ>K<100644 storage.py U
F:)s4>=	Hk:.x2u6F`D&g/ɱ qlx[OqL<dv{7 Strx{yCHMNR4Ru<V0y3 ۏ

x340031Q,+d0X__xbQ
RYg`ߩt6b?
IpxGMseUSPZ\_R8AnofO2M0'$(1lkF6^7,9'Jo<JζEdTTSL@$5 '$Ҭb;wvRܸ'P2S-T8$YfQﳏ 5vxi:;=FW(TԹ0;µCy Ѳ
Bx{>4
zu7;' S(1axJA9
B1Ș1FlMn[=v'6VX=|-,Efaoi'E:6UiҀO/*)C0x|Z?欄	z-_ߤW8l:Jc/-|ʋyndN1S?B=EAc!NCHr!Dt
WB,I'C$v!\_Nf-:Cj:6*fXGK(A#tF.Vs 5]AX*XC3XTaN$bBRϱI<4Gz $^v*5CZFN%̸̱m|x##7 L<(5.Y#'0y*\nLZU%n4 d3EDjbQ|XS+Nۼ͜	ɥ8tDu
KSKRu2rNH8Sv懜L+,*4"6V I"x
>qlf̔;YMVgsؼq#9ɒܓm8&oT#yPdO$6@ʽD-7">?-8R@qˀ1lV48|7o_40WB\&?TLd*g6e(MT&qi2, trdKɓ(L/U(IL/
pMnTl	T)2U!x:0t(&s($eNT"*y mS!x05KAAac6^&ײkLcEI.CDxr9diNObaXj"tP4@nbE|~ZZqj-3KF ]E\S&+(O6e&3+nkb <YGk&
%^g6TM~!,yoF󢆌PYWLW3MRRfTQr)1@Funzɉ"g˙LΓ. p$ۂ/AJY'ʔ
R&kBiɪ>p'/} oT6x5 zTw~:-N>/LR],[:hkxY :F@V2%2iƵ100644 storage.py cu7e
4mMu)	qt\.</yD&8x340031Q,+dZF<][3+
!JRKsKSA'\Y|,30&YZkWRXM.  ,0Jxۘ7c*fIQd(W&<C܃\'~Vေ70ZO'_c;9^g!'ld7۫ q6ųMi$3DGA)(4(nB@~qI:X$19;1=UI+9'X!$&98_ )цׇN>g O'x 痝
vit"B
x340031Q,+dZF<][3+
!JRKsKSA'l+[ioYzoFV^Z^R,Q-׵+^F& 01laxۛ;cCVF (x{yB\Ö"+M-Xr%ŁjCg+~1Z PHH-IeOնM?C᥇HI,ΎOOOKgȼIjf^wἽ=

LLSKJ
*tx,-:aOHק 0ci{E7Wy* dOKx5 cAV8ڬ$OwXy/I5]<gghTNDxUj1D
rRڮcC$S)f@xK|V_ؐכ~E@LAF3)U9$F1\[ǳk[
>SV6VS@oǊa;K$i͉$,\='+u^ʥ"Lr$q!rnNx;tiKZNbĠ *x340031Q,+dZF<][3+
!JRKsKSAcR>T=ob0gj]J7b}o6a  -1xۘ9)eC _@,?9Y0e9<x6ro69HOvgs^< nգx340031QM+dDrr̓**ӛY4h  ukxTmk0_t!sq$kS(k֗$2Pb9eO!NrR{kmyt2S4˅AUQ+\:;YTp[g^=UFi"_mdWFkepܺ$/\Xijtޠ}*XKӣދ׶/k-2;8\+
fsb (qE!9њJ76\<L}Wf%G4+
: R!G2ڪR[h'G99㊪a'$&WT+(@c){ѣyed#a=BGOzv||:aʜ_xAƹ
˕7u9&A"(dbB
*CiD*3ʹqYg/p6=Q)7{]KuDN9TFnW) QRr$'奀V!g-:*7,;("#wǻ	ݸ"a p#E:þӲLwCOTetUN\ԐviCA7PRPP
l%:2p4?:Zzi+zE
.ÛzU-r6!3)SۇH+@p>~_r
Dp>^ʨ5aܔ,&Ԉ!ߺh G{naGxD/HXl-R$$
;7\:B;gǟW(z=FNNG~7=/x340031Q,+dZF<][3+
!JRKsKSA{V</.1=R|\Gde 1ar]o8lp /cx{yBWUпCoHUnoL{a!KxP `
g=w?txydelړ(ݟO<͢/?d;HO\d%l_x;4Aqb+ Mx340031Q,+dZF<][3+
!JRKsKSAʕx01"!DfߗxeƄ9KTuWjp|	 /B@xٕۘ,XZ_`X5fUFknX&7䨏/N,K/-N-//. 2St@<0#9?/OK	$ -(.I+NIM.шiz%EzCKrRcQM)J-.a19O[/-$9#1'GCsr"{l
xXJ4u!D b:
:
@'5mx*ҽ#Sw63Mʯq5aFm-Q#$1XDPw@sP=bgjѨW s-]X"@@	H{GQREA&VngOM#d%ɳ倒`Ťy6Z1nW9d1N3<Ao gUhxJ~Q: x ,ζNRHÀ8n<x{#Bl)&r  24oxe `V0CdxCqA0t[pNOV|
aLbs7/oWh]ӶȬ{kq1txL `
g=w?tdelړ(ݟO<͢y/?d;HO\dXb$$x{#9*B@Njbq*WqjƏ/qb 
*xk9᪌Biqf^obQvJ~yW@NjbqBqj*G
x;4Aqb,W  4Clx0 '100644 __init__.py a|IĤ]FmC'	.;o6xgcb5
  x340031Q,+d0Q=^Ad}>[[NDB$%9#StWtDPƦ$2SˋA
5f_Nؼ9z/' \0k5xɼy>dSf fx[av߲	o'!  ZSxüyBȎ+uMfUڧMׇPKK<

x-1
0Fὧ/.)j%IoPT>0޸#-Iԣ` Ft[̺ydZ;{8 A YxKePZ`[ZXXPZ\ N7 x~ `	!=hTbhFWt[٧Ǧܟ}T&
7 *xԦ־~C~hqܓU7"o3AXՉ&V/,6H-=nAY:x340031Q,+dH%n{
N}NCԼ̼TBO6,(-(eŻgEO]3(?98nyE5n$[7~wM3ԬtFg?,yُT"TiL>+Mt?jb 
%9%fa=,\TZvυugry=fBk  j}x3 <g8i=rflf7DpMnJso?x$'i<&gS((/LIMQ(HUHIMK,)$ MX'a}y'=81Nj ljHxͼy´Uxx[+rDxdkNnd \O8,xmRKhQIL~c&Mg>611V[SuTP6Mj4$"TPqU?=".t!"?<

Bq#
DQDݹCm;s߽wgqBSС)}ӟ@[ Q,Ɲu~!b7ypRPpG`IrjI;K$ieLѺ^M
2r`a.]6Ap8;^A]gB6 1.Ⲣ[tbÏmMSv_1X̙D1rb±hj6쟂Ӟ+HMZ
+b|Z=IHa|.xYMZ!ӋTd
nJ M͈Pn|y.{
\rRuX͗
{0?@%*aV[l/D`[&
?_`7:NbK:;kV,Vn։iZ\Dƃs(#$`a!s~$"Nv$:K8KyWˢ;(5h^ŋv<pyc5 ]l$̙'XmT:Sls2\5+f6k._f_2	s]x&0-
ӌ^UiFUZj">!H%*}ipe3Y+;E_eCegPuŋI6 N1^1!%`lI{g~
S3#qg4, g&x340031Q,+dpO[Όi+9ڢVB$%Eȿ^_`SoV +/L-/)~UV2BdEqcť ay/yx-ֱZIiՀ	bs825 }J	0xJ;!W--'8[/D0'1'9#5R!3 D!8"2yG噉zyi 5>.!NA

@#3KRյSsS2sR &TL,
Ds96$MUS&f
9`'0MK>dZOeQϲ8 ;0b(h=TFsr \1ܫ|`Z?yYbH:0ntfR'o}ln(;b0ŘDJS3SlJRK@%IX'|KBb98T, +]~dKNU|^
Wmrbff6_zNT:ܙ)9y 2d.pvƵPE5Yɖ:+'L֝Ӓ͋1 .$`x>fB|qaNbNrFjnBfnA~QBrQjbIj|j^zf^-'k2&ADlQUh,IW.NIӋOIJI|G!81$(1=UcKҼy&ݼE>3 U3-x[s'zd\Ԝ4ɽ0#XTəL'|udg 惬PVl]?3Mvw'qqOw|?q"=܌o2BUO~/ &Ml*Z
w'4_$'( ZVC{qx[nrC  Fͳm&l^vsr&ɲ
JEEE
i@YDJ1\U7_TbVJgͼbO7$9Z($$ڦd&hV*( J:%<&_d^L8wr ͌- k'o]Rdn& DXxp 6C:-=nVG=z40000 example ϡ^ۏ&qݢ,PCJ

Zer6ky/{lW6@	l2=xxq\Cjtr|U 
V,x '?sտT|}9z㿑$KElxk?ja>\D %{x340031QM+dU&~	~,rģ\7T Xxg+̒ĂM ]l!xg+ͯY:*2x ̋#*MRF.nlxmݰWiac %x-U`2GgUeS+Z n xcrCGbN^bI~~i; Uv2xüyPl
o
]lM@!%?\5y?jؤ<۹_mtjEbnAN*%bGYp2v[{g>zCdigӖs(T2X+Ql5[f),Ldc_Z\0q郉bd>rP7 QQvxKI,J9yPvyIWqaNbNrFjn%WnbQvJ~y xk?e#䯌,\E
-0nddܬ6C'?=DaIN;v'3Oa2SN~+\,
%
E

řy\Y ?x340031QM+d8w"	&+8i7 sx;"TxOoɸ%G$#K&a0Ce
8  Ex2fNF?&̼t< 4YAQVXI1%E!?/U<$C$#Ua6,v&;ʈpNW gDxct#) 6x J)5;3ڶi
;|x{#)X딓5Q0B@Njbq*WqjƏ/qb !x3 d(c
3*җEɢ*H;]wh֬/po/{rBxüy
FKL8{\ ˆ߸r$x{#M@Y-'8[)'?==3/}T^=TT97O D=x[}C*cg^qIbNNbIf~PZQWU(, g+$&[qq) Bjbqe|&T{ZNbqnRN~z:P1XW~BbNIjQЦԜJ4RkĲTHܜxQVYY'3T.h_ϐX
}OgW`WM.. Lx340031Q,+dpO[Όi+9ڢVB$%&h^%J!QK de կjCf[藬(ҝy !.Ix[31ffFy͑L״9rxüy
Fg9׽Rе11 
nx340031Q,+dpO[Όi+9ڢVB$%k^Q'=]9q0de կjCf[藬(ҝy 1xüy
FƘb>#/:͝yhZsD x340031Q,+dpO[Όi+9ڢVB$%z5Sg(x#+/L-/)~UV2BdEqcť 0x;1vnir<?nޢu 	]xa `˵ZIÃEfCDtoq%requirements.txt  y.ۙ9_"y/\LYB]	2WH8)pxüyB-FKꤌgby޼ă xKI,J9yPvyIWqaNbNrFjn%WnbQvJ~y gxKM`5V #^xüyC'HL/%3VVV'l$ᶈsRx1cS'ޕ jBTx GnGD"]I$h"U,xV T{s7kJ.J r/!]3su`1L]VS40000 test 5w*bcY"Xx _۱ۛVGҎ]m?鑱$^lzx;e}zf] "x1cSԋ&ޗ ~	vx340031Q,+dpO[Όi+9ڢVB$%_(Zis	s3e{Zcc+͊kV U/0zx-br9c\>5:-H Mnxcca!XYgz 
x7 `t
ϩ'(5tґ7xŖ/f:wսhqg&oYx ֗Zf=-')$Z{x;ej3	Lu @vX2x6 8;F7rDbRksR)>M%ZL8<1A7:c0lv&x]#aLELWޞ%◟f ox[*<Sp_O9D6v0 9>x7 !-ǴpWFp͐f9Ñ7icQ\j)kXe&oJdxx ř*i42R$.
lx;e=`X #NxiȓoۗɻXCC O
xi*rzm4&IN/7YGlAcL&5YNlrP<1bn6):hғ]*
D6_d*JBiBAl2bl 7Q){x7 !-ǴpWFp͐f9Ñ7#؂S.sTWX&oxxi\l˶׿vƜ3yU ix31 t_bW^1ocoa
Kjaxqµɢr +x<ym
u׿R7]5;&@Z[ʰBe^)W'cR1DEZNbqv|RN~zzf^:%
/?$5%Sd5| v*tx<y\]Z3Mya*c 9>x Pب 0|t$`x;eN kd[7ߐ 
7x340031QM+dxnv{)a zyx{4 8hx340031Q,+dH%n{
N}NCԼ̼T"k7E]%e
Ҵ[U_[R2r{݁r3"çܮ`ceTPZ\_Rg|EYoyY%;jVqaNbqI~Qb:]Ū.e5gܫ-.D,UI"K"n BIjnANbIj1C"=o~7ķ:Ӡ&e^.G#X_0 }RxY :	MIed㉫wxI$100644 storage.py *|jc.8S9Gő4<
 [sQ -~'/x[*Z`_O9D6.f|m;# f!x;øq䉮"H*NOK+N-рPHz  LCex31 t)[+z[FU Hx6 ;LmX^oSڑO`[p~4
UJ
V5%G|j2x[tvԍK Wx;xqC	bjxE7`<UdIɑ<ziiũ%JsIͿ|nCxxqfn9ou ,}x# a.3lLpMV\Y Hx[tfԍKy6bV(ii. V
F9x5 qt٥}־Z4Xd&[pH7?
V܋sDx5 Zc7q񮑯n_X_&[5w*bcY5xW &ydo:[8?MZ68ޢ$A͎5ehET>5A100644 views.py ;rۚ
$Vo| ot(#~fxiHQ܂~8 8jx31 t~3L+Uv畫K 
x6 ;LmX^oSڑO`کI4w`(OM%Îkx{#mB WBfBbNjQj-:݉tlS2@y)@y_P_\AY'0YdUW%J2KrRjkm\6v\1Mva6TQՅS^kuD#Pl
Fי&e).HSHI,.UILJQgȤ<&h'P2.  eaT\`
!yhMRl2P%NRN~rBn"@1 a	
qxc;4ҢԼ"Ғ ?39$5ECSAKlR2sm
Jsrt23J@0Q^95%$H]SVI!3V)/΃IQ XF 1N-//F?ieL 3>7x;f`¡gX&o%(VZ`XaQk_W9_&ynɉ<+'ݜ4y##ԒDZ.  lLdw]E
'
!Zz"7r Q==x;f3`¡gX&o%͝VZd`P;#=\RXx&bU+ir)d楤Vh$(@&+qȳrA͉AL7[r@l
&
Nv,- .(5!M@IԴR ԒD[2wM5l+l32ǈ&3
jW!Mټ2@&,(j	 c$[Px1[c-;D.5܂qab7p1Bɛx SNx5 s«d5(q@mB&[pH7?
VORx &D. ǀMUnO
	1xqC'y6qd1`N8&_69@{-/8yWdanɧ&7pN5=dͧxpM-2Yor*WHɳ5&Hn>/Y4YHVh9q
2@Ŏd}
rd6V 67xL \3qogL>4pV7C$x? |&[	SDs0leJ,g#*xY :yݮ\<K%K 100644 storage.py ҈;<Gysɴ]'\4Pm~{s31b+ug,exx~\

ѱ\
@0d{+?'ipLPJ|@e:Z%['r9'U0Y&+LpdAu2d~N=ʆ i*?L~,1XVM^R?yX9;'M*R<qL慪dB!xxXL,9'X!$(1=U#?)+5DjePlƓx)l&⑙QY_[WZT_YZRPPTPH-,KW ;DIsc8|^z30?3o$XO+ӹ$$3bX$%5M!/(71'*511XHhZA((O!(WZPZW\RY_ Zc txmkA{r	[< 2Kx340031Q,+dpO[Όi+9ڢVB$%ϙz-F؞7fv2SˋA
h<'L  30zx-ri
84+zqX-[ igTx,t2- RlKx<yx&ƞU~e[vL* R+srR5>;+ܣ]Z *rr3nv|bONLO>/j M)>xxq\)^.]ȲbPU "
^x;eAs&;{qjN^ffSU87ߐ 
x340031QM+d4<håӣ17  
U{xkmɩL؋Ss2S6272n`d t
Jx 8
{LH'Vx]JAL,5g=">v'XxE\0؄쟻uWv|k|
 y_F$N103k3x(:5QB'??fΛJ@73wF8ʑ+a=yiNjp ;/
w3㪪0ۀoq^'inj<V'F]k4J'ɓ^Zo)}I
giU}>xV 3"ۯ_VM:r;/RQ40000 docs TME{I% Zp7Q> M
J_2fH&ob%fKx[̶q~ Ax! $FW2D.oZ1Rڑ$olExLc?, *kxW 8# Uo,QuL8"jA100644 views.py D!pBoSMw蝙lF&&x!Qx&s's2'Ob""Yl_PY\6Yct͒

%EɩE
i
@`Bf_~^BjNq*}l1xx31 t3^_dUF7L  ]Bx3 {ȦW|71dO$7Om&vxqb?ERkox)Bp-dGɑ
 3?vx[/)!qrU 1Tx58x~Eb. H/R(/./(ON-.r3DJ73M˫6CJA Mx<y͐F?cf[Ž(Yd5| ǭ@xigKW2rp>gd_pf<* |x31 te3,o<z>j 	x340031QHJ,N(at]|e˪ˇ;]~hmQY_QĲ'.{丹a
TYf^JjDխ<ߚ̟,Y[qiPUPma1,߱uѿ 4=lx{.+fOL #oxy.s.έ (Ux<y|3YT~Κ{xcL@!"1 'iIVxqѬ}Ii9I9y7CI?{mR_gA]-xʸqDp~NP)6ԲںrMU x[j\;2X B`x340031QM+dԘĖ<7#iJu=@ ZhxUo"7~_1u8t[[ȅ^NMzU'@XxP37u]v:;d%nM|53Zj~sĪ]{- 9`d_#۟J-hfJy]RʯfgOh:Mx}F#,|9:?$SdUQ
qV>$[?2R0ܱ6 3S}Ŕ@a?~ -ȧWY3M?ʦ=[!GI]"fZĸL(fx*ap
|CUj௪v'*[h9tӈZ
PzxLʚqٞ[CB[H阻
L3J'@E]x҆6Y{/1iKymNstw"DK)i#OڥPI;Sӭ
ૈ`ň T%2f|1{ ¯^/]nN.xGJ7kje{pwymV z=h|Ĩ{= 4\f	jTk[j~1j_
" X
`M;+cԛ@-/]K
HR\2D-CG|"CA36:,$|zg$;Vq6&AJ{'}i=dl!i+t	۽7PPMJzdsyڇ)t؝Zr ɖ 
oJV{.XX.{F	
]?e]&(Mc?3æz&
v;lK&kxUJ@D#r\s8Q@A,D9&V8Sccil!oSKrSn}oyYITD^U2%V$s( sz_#93bjI.䠬6A|e?&\$A[VYnŬIitחc\+N?H8 8G!:sG}^{<ӵS+)Jhb0
jm| }!sDx<yxLƯKe}&@Z[`})eOAT$g'䧧g3d~x>vՆzNoƘ +*x! $FW8')S|I$]xNj\;0N^+"1  yL ?x340031QM+du֩1Y*+;YLd 
oxo 8$U2|_L85z<S0'u`8)Suo(100644 views.py ,_mм:LOpA/30x(>
"E%
%
y%yɩ&_f|]|D 1x{-o3f杌ll8d96Yb x31 tstT[.{,	Ei z	x340031QHJ,N(a|5aZwOGRIE)%Ee?KJ]zq&ĳ/\mGe?TYf^JjDխ<ߚ̟,Y[qiPUPma1,߱uѿ 9P9h9x{.\t\&̒˘9 lmx{!XpC9d>VٖL`\=9Yus{# 
bx;Jo0dBX&,Yc? 	xk 3%89vqG40000 docs s[%̌ @R7OU 峨>&[>>D4Hp̃4e5x[4! ިx340031QMNMIe-2&~ِ{&C3 P/HM-f9K5t抝wY}v!Ę4JC4JK[gj"M̼t1m&|Ԧ`-Pՙy)`E[*$L*屒_PE@%%0z#3$[4&?4'l]B,<sz
 _kAgxtq9 ?
xC<-'8;>)'?==3/] 19;1=k d
ÓkD
'O~-h9y$$4y@ &~Wxe
0E)@Sh4)+39}׶)Ӎ̜=au*^D>:7T;ce(CFFX'<Bv0Q[N w8C4_SufL | <;xbYϲa
BZNbqv|RN~zzf^^Qq	P47?4'ĝ1 xKI,ΎOOOKE\\zz
%%EVV\


V)%V
&\ 4T %ؠx340031Q,+dj:kQjc[.[kBg楂LMՑl')Eڜ1vrAj^FnoX;Px[dl;j
S@V5H7>kƝPuŅ9%E`[cXF(\:sl&T"T]갶q_W[Ū9#fb 
%9%.l.6s+Kƪ;ETZv&5ny\z9.-kkN$ wki
xceu 
Nx(|sByr~QBrNbqBIBbJBRN~zzf^BqiAA~Q	PK*KS
&2UNV`q.JM,IjHU+.IKNl.62NqI~QbzBAjQIbfP% 04T	{7ba&:" n9%Xx1 iyewr>

6Kl
"@7'x{Sw<dI= :Hxc9lBZZNbq^jE^qaNbNrFjnBfnA~QBp#DdJKF/Ss
2ӣA|=\}#]C]C<c'1ʃǧ$)"3DsF96$MTS&_b%9`73oca5474e;As,%LLHVnSF?yoXYgz r>PwxL wtpqHB=57J2]XqWkhS&[X
cDe*ӱX
!գx340031QMNMIe-2&~ِ{&C3 P/HM-f9K5t抝wY}v!Ę4Jygm"[WJ2RR+KKo-(|[Fv(TQ.9zI%*k#ޣL/=M [Jx;qz&F뙤K247?cz! :%x340031Q,+dKZZP KLx>CԼ̼T"r\uP?b+>v+N"3|U6
&ϚqCT]qaNbqI~Qb:.SO<,o)r`*?>Ա}-UǂNY JRsrKRw	יD[ӁP2Sߤf-4K/ǥrw͉ 2usx )Suo(œ$4gexe>8 pcx;9Qs93v%tSs
2ӣ||=C]blj7bVa x;y-}Gl<'00ǋ]V/?/u-~
&l0sOל<
8(>-3$H!3M*TH)NU(.IKK׀ kR@p&۱ 2y _yFjQL<7* Ft=Qx;,s´b&_`RĢ\b+tĴ{8%&{3d()$Nn|y{A~qI|f
P$sIF,@rYO:LLlΦfzr~i^	iiũ@K''+PSZRZ7YMhx\
i@E, ޿IP=x]A
0EE
 R"@MJf+.|x9Thc+ϢQr
|é#Naz2zZa`)XDgpuQ3K@bew,}D6,bU̢B>M{Mx k%ڙ̤BNllixdt-U(&h"x<yO%x
JHh5:Y1 x31 t͛MLNfcK Χ	x340031QHJ,N(a|5aZwOGRIE)%Ee?KJ]zq&ĳ/\mGe?TYf^JjDռ?5(-v8_oy 1jckb-{ڣhrD Jb;K	x8qB^7vujP 1}.+ ?HxipYZU!3M D/5%$1)'ufrlϲ(l`4YSmrV DMnx<yȜc>bz2^3/80[d5| bxiUVFqbINݻ4]&0  	x31 tJj{5?<.* !Gxk(%5'$ur#,,)%mXO3 
x5 exd!23@ '&[ГJ9024Eݙ P'x? 8Dh\
C#100644 views.py .hFe%NVܥ ::ntax31 tKkϝe)_y@q= g_x3 8 V^HבL7S؇	/WL!9q!fx{,PpC"#WrqQZ|I~vj\2v pSjLx(V`FS qx. .+0
"CFE	6*

#
~x340031Q,+dHfp7nNc0/G"S!DYIjqI|qaNbqI~Qbz*Hy*7roT{Si(n,3EO9Zֿ>Dn 0/yx-gL<5f]2+ jExiΌe Gtxd֮8A/(5$>@G!}Ɩ0f&Mo7q1NVrQi'J,ũE7(LjY
qɽũ@RS&ǱM^wG}rB"`9!IvԜ4Ms3S2rRSlBJS'riC0WV Q(I-.Q YKLDԋ
K dXL&\Zl.T(]QHDBE rA<@O, 6^\()n`]trEB`G+iO(e
䗖+i i~a}x5 ZmON*tD$
&>8c&[&J5^Iey92Ժ
mDx5 VygFkV&[ГJ9024Eݙ `F$xi'ov$iϋ<3Q nx31 t	HoO|h[ xx8qB粴{r3+-zϸk  E1x(:pMBFQjRuuA~q^iQNmdVI;D;.  ʤ($U*d%*)@EAD|Jb	Pt+E' 'kxc=6$P('>-HC=)'?=>@ 1=5>2>3E]G ȲzPBqNi:DTUR 
@~"DĦ. 05E!rfFҒ"ѥũEpMI6vZ}0<4A)%z%Ei%)
I:
 Mg@5n| vVgsx? 8a/psGɾ5100644 views.py ,˕X|9ҿSߓTx31 tύ3~Tb(hÎDN m
	x340031QHJ,N(a7󁨔lOɔu_f<d(5%$kMúWψ{ϺPey)UVk,rCsrJ}1tmPUP=cӞYl!7{] #x=lx{.zCdf #]j<xuBד !x{_eS'2oVg`.u.+19[p1*Hދ;&wnf0bAsr>Bk pnxkW-?|Ul':#do ©^x<yC3z*'xmZs+~WJ]|wԒJ[_Jf^OHh3m&@PZ\Pfu_xhr: -nx340031Q,+dKZZP KLx>CԼ̼T"r\uP?b+>v+N"IbmdA:vt+2Nhls2
]/*x3}NXqz&@P[XZ4OnV?7j[$=5,3'",LzŅ<  cxx? 8N?4.w.lq+P100644 views.py  MQg"{^G}ligZ|;x{B&VҢX[b⒢xFA~qdY6;ԒҢ<. #Lx~$fd
D&a|xɯش6+l.z_ Px31 t-^8GW*V 
	x340031QHJ,N(a7󁨔lOɔu_f<d(5%$}NAa|5A.bӁ*KIocNn
ӡ6{$ʩkᜅoUb ;
x3 8 V^HבL7ReC0S&p)x2!ykeҢZ%ɱ,6v]Sxc]:aTj]uuA~q^iqjQ|^bnjm>PxAQ⒢T
uH]\]u͍Ww2 ExrEaSNҢԼV%8&rݚCpr:~|, Hlx340031Q,+d0$ѧ➅[lλ0(+I-./.I,./JLO)BQeԯOC&Fw?Yk,3\؃E	'z{OƖ5Fzx-b't]sx]|ݮ gIx{iC# 
"x[zg+'yx'HOIn֕ 
x-Gb>dmVKX5&`U<Mq\Nͺi8&pn^Ǚ̸qiqjBHjqI(Td4 '?=3/$"&  #WBx|iBy[M@$aMoI}wgF?50! Nx; !7:)|.,V%w("	/f	c~
`x|iByrf&&
AU&	3!|<wq[vk}51 6uR%Mޝ]k 3dx31 tC]_U<yTĩ4lx{(xBp:fƅ  @]xr\vB~ɥEEy%5&KpM65t(=r'O~ʟR_\2Q@JRJ2KrRl@J`RW)@
 Q%E x;ti8wKjhdOSK~s`6< %&vxW \V0/9w3p8#:cⵋh)[Is100644 views.py =Rjj
hلz'<fxi{WV>ٮ{<{ >nxiB&ɳ+x31 taI3kW^N:j|B* Bx8q흌uח#ğ}ȷl&x;!xf  :&x;. [bNq*g(؂Yz%@&Xn2Sf"3Y'᩟[59Glr6_  }x;ti;zcTWeio,u	($g'䧧g3_r~~;
I( scx340031QM+d }|YS䬏S8>p3 =xk}3ac^~^en~iqhqjofEfO~zfob^bMp%XK'09AX1%3J)d*d)%楧jhZq) dc#Fi,dn6f
a c~((uxC ri
@blog_app.route('/editor/'	4ck\WZMx;tiU"mN]fW}*#]n, x
x340031QMNMIe-2&~ِ{&C3 P/HM-f9K5t抝wY}v!Ę4J5w[&mj{V̼
eoNxvS҆mLPE@%%0z#3$[4 LLxxa@rԴҜɗyI(gėdd+*TN>/,YXl. )>xb<sxjNr~nBI[NbqSN~zzf^zBJ~rinj^IbIf~"-0 fv lYDx;ŴiĐ
CGͭ#TB`U Iizx8qDl d?Bx[̴iBȧo<#/zi׉:ۚxKI,J9yPvyIWqaNbNrFjn%  tSYx;4AwbHȧo<#/zi׉ 8.xka8!pbY+̴릗dp_1n(0z{V*ᯬ3n .6xiHxmnCN9o
Wխ5 Y~x&Id/vY5'? ]x340031Q,+d<~ӧ6g)8$$0'$(1=
ES>
h\N2d	b݇>=cW3>	 t6zx{tiqO?wX[ԉ[	x(]p6?^2NvcRT:Ymr7#>y/[>]yn(NH˰$N!&ͩe *\x.Op*&vԼ̼ͫ| Zѭx340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xlTIPjaifQjnj^I^IE	ço<#/ziW PHI,ΎOOOKgzv_;WVlQgj(,I-.aeۋ?H+O%{#
 #L[x3 0}b0z	ڴZW{kBlQq~*ux. \Y@Gdb+db.($?tU=x뎜9$(1=u Ex340031Q,+d<~ӧ6g)8$$0'$(1=H&gU7+5LBV^Z^R
~9֌ 3\zx-mQw;;ʊ=! lYx;g3f/_ $+	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3<`iww')u,]!
KRK><kY{>wEވ :	x340031Q,+d&U;;wZzYį՟rB$%TW.(㔔D"M($3ز;l왃>t-XjZYfjy1]=
<se7<Uy49O#4 s:ӲxWnF}Wl M7#B.bIC Vڄ+_=\^$[+vv>gfrvڤXAVd)
Un߼L^%/糙mz5O	;&9)Zm)~otljŇRuwd&i+Tʥil.lՙi)FN,1U
dFKh@Y(!
#jdѬ=i8ND|k<%bo]0D\BZ8.t7z+V% Cno6Ƕr־;
!p8p3<<GϻGqzCzb֮}.뼏>8͎{|=_E./ n7-;
[`cK2]oUq}s˷Og?ޟj,Ar]r'l@H:2`ScTr;dt:q`}?g0/Z|
R9VRʅ0+H%0^([(Q*
܇a_}A\:;=q
2nt0vBg'Dʄ=?܊[.Q"@	06 
8%#^ijJv&.w 
N&Ѽؠ}
/!tSZ$f\;JPnf}8|ړUdCWO.d6D+ڭ^\"[Kno24uB7Zt<Sr>VAݪ]@dH"9A7`TmmLȭe2LЦC٩-x_	܉jm*Y(eoT
d`c|#_ttqw;O{IӒm7`CJf}"~~"N^]\,	fP{H_s*r(Y#W򻼇Pa[ӕ.NWIa_/~^/!,'!n3"ܓ/XCu5,*U`<&κfd3 7
e5-yCv\_%GCCm"|RY,MnTaWW7IhC	K.ߩǑʫPw?WJr_~~ZKJ}7ˣ6r?G ̥XamtG4mX.*
#*V]j_yǢiBWc&FͣVL}	<A}"ʽ*b(/ZsqpRA_-!{΄H#<??FYh%#2^A~+f+\l6!S[X)x$CnCdqjN^iqjQ|rbNNRbr_~^jI
@ VZҢ Siť X͂1᪊RKJXZ .x31 t֔
+0|Ƈ&?W< $Ġx340031QHJ,N(aQI6Jjć&1!2RR+ x:X*~'３۹u~egtQ=-_fxP3J +rx;wPFMF`W?G_g0NNbgrk,ۙmS*l3Jrs 9jfxc2a;Rx5+8('>-h@
Laz';br/opzFɎo?jd>?e'gqBe&{pMÑ\ZTW?قQc+ɛy&nc I)ɡ	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3D'VۮfQXZ\ +6ƫwl3e\̷ S:	x340031Q,+d촯sT|c!DYqaNbqI~Qbz*HeN}NK1NIYO$"~ڔ BIjnANbIj1ʞ]O-[3ƞ9Kڂ塦eY<GaY3ڔ^vZ u>4x+gNZQ~BZNbqv|RN~zzf^^iIfNBfnA~QBrQjbIj|qNiDgɛ&w1N b,Ɠ׳|EqyFG8,'fMj4M*.;dQڌ0 /1xsg]73bR@j( K+# ++
{x.%0fFwX~2 =.	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3hE(9NxX䰽\ 	%%:bsoJz6cY^|k}6	x340031Q,+dۮf
IK>\rx}eŅ9%E 9;K/1
8%e=kSnb 
%9%*{v==l4{O/jVZ^2g|of͈jSZzvk1 6?W
x${HfƦna M,N/ϋOJM.\« XXZQW;yf3]FԊM+.((J-)-SH)C3K/9?,Dc2_䭼 Ey)E 	h%S)VS!3M"S,f% MDơ	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3p4T_RTe9+ria?۞ZlB0ͽ*یguz w8©	x340031Q,+dvV-'r3(+.I,./JLO̩)]zQ0))D/^r P(I-I,I-fx"K!E*~5,3d>s͚զb ;Mx;$sQl]ܲ?p1
&e3yo 3x31 tۍ.y$Y]:<륫
x340031QHJ,N(aj;{:+βXxC̼
*x>;vnq 1jTc`ckuyT y-Xk xɻ{C=l \8	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3j+qr?B0(&Y}4_\Tיw :&x340031Q,+dvV-'r3(+.I,./JLO4tS70޽dˋs_z?l($3<V"{Wf燚VZS2~+[qTMYfj9Xf_Yy;9)s'  coL9x\a6Sf<IM
/69@k&BZ~fC( Ӳx1
0 =N`WDD4Hh%M7!w-dmO

 ?.ѽ0Zhd'\SMxaxCFdxx x	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3}H1U|e?a?/ 
KRKά>vO;B Ҕ9x340031Q,+dXhlz;u6Pܸ320'$(1=U<j1/禱3\ ߌ5x(vkdɩ?<ȴkoSX6eqa5YHM Tx[qC9>>$#(>^VA=IMSpJI,Թ&nT];9bd{{&籚O^4=NZQzA~qI|fzWY
cV@`E)%0D ?7?%3-35Y"(1
	,Ҝ&2L^!:9=g28eɱbbKO%4٘er5p.+ؠ
Y&͟#ŨRQa~9ex7KI-eaTؼ_NIAs|Eش2S&볊M6PVqIOν^ٌ	l_6eݠa	ፆ-3 at[>xKo@Eǭ4M҈@4P6r[!倄x	@%
nnܤ
A9pBB '8"Pn8\
0NҸ/;ۙ+OU4:lPx-x~ģUr~3pAHXNi+MU,F--TJ9̥!,,d_,"/
erM\/7-vA<by&*҉"Y:%\
ex5Ϙӂ9F9!_4X-z38/8\H&רHE7f|?V2؁C\9i`0bSm#>(Sb ocDUԵKl5XyvDSVƙGk-qܻD:׊~L⛞E=7]Ӱ_rBı;t̶?F].Ey2 ?;9p΂wZyyle+Ih1XSCsWGEl*z1fއfêj*9<r@AaئxWuuS$ȉE-d3Ép'{0SqVwgSޅnI,]`~{ gUaydXSj]T?0Mnn.ѺOnؔj}!ǁw.n>ġcaub7Q*8
(ky 0-joޢ?|JDHmn~ZNzQT}$c=8p5?!\f?`l{uᜣS;cqIFwd ?0	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3\m)&FK|QXZ\6Hr2;1o|h	 %;(x340031Q,+dHvӔ55˭?`.bQV\X\_
Ryf)f+XUAO !x;$s}dɩ?<ȴko@7+N xO6x;;sCSX$%*dZaV`g`*NL/L)JLC3"(\_\jFQjIiQBHF*LV,14UG!3O!98U!?
Z^_PZX
dɯ \A\x340031Q,+d<~ӧ6g)8$$0'$(1=/y;l^-u2 #ex;d3f/uﰲdN̄'JB.1ydiv&CM =	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3?OA#|VB0l3=(t2ݳ\ >8áx340031Q,+d0jⲴVY5~]!DYqaNbqI~Qbz*HC3E,5߾~Tq}= 8bl%xqc1wY*lҦx340031Q,+d<~ӧ6g)8$$0'$(1=(2\9^*t* 1#Jk xmdv;$ &F	x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3xO\+Uvf(,I-.aaK7>U e:x340031Q,+d0jⲴVY5~]!DYqaNbqI~Qbz*H%Ǽ#2-=/V>G: \{x@ HDG
a}
 ] # already exists

#; ]6Dx340031Q,+d<~ӧ6g)8$$0'$(1=\_e:5.oq6^g I#OxmNcsx]67M!y r		x340031QK,L/JeI*0q[SϘNz/C*OgW`W?S??]xl($g'䧧g3YqO]|}`}?T-}|99<a0 Q<x340031Q,+d0jⲴVY5~]!DYqaNbqI~Qbz*H׃Wvև_{I$ ^{9x[nwҜ[Z.((J-)-R ͜rR lx340031Q,+d<~ӧ6g)8$$0'$(1=PʱC|wl  ?%bx{D}0SBɼ:%)\ $	_f!xȘ=Q-  x340031Qtvve;9,/xF {x31 ̼tз<k2W)ykzOoVXZ\sٙ
O/'>8 <רx31 ̼t/M%|"bԷ7pe0D<;AŀPǪC>\ x340031Q,+dwܻRfye5K,<j
!ʊsKSA*}o>.t5w dmg`x;>e4 ?3|x}kAǩ-݄&4ښl
TEZ$$f3ufw
oҋ{Ń]/a)yoWJ_AAcyJ9%/㮡G6PS̵'U/v8dǤ%:brpF+47cE+m	fESFA6MMa=Y}[cϫ4TD*sl+GOqT*%3"?ʈZIiqRaw3z?2J&9qnߩs
aRZm9Cc#2Jk"n&Τr
Ur OX¥GaK{9js'p2>t/|z6I並갳М~μ).3`3	*pzKF߃_,ԧgg a,]/#"\Pwa`d0րC

7fJ|ȼb1Qpx340031Q,+d<~ӧ6g)8$$0'1$(1=>JGYOWu $FNx[^lEԢ̔gYܔSRJRKKrRsS3K2R2+4Ss4@D@lrSK㕸 xAj0E:\ e,ɲnzfZV*9\ ߛL@XDw3-Lc]0ԝvfud:+:wmUROڨQ[u{K9=	uޙCڱhghRC ot<\&YוxK
0@9E.L>M*1̤-1[<x1딇 PeI>:#2F!]BJX"
xmDHRxikĪ_`ÊJg8/WC}Yi;PǞk}:O1V_FMxKj1EѹVQsC_!-x%unIFx2=elB:m),QR,bR5f
ĝ	%HNhH:eC2L6dAǼ><b@
_c_Z|},mގ^?A9k'Oۜ/1qj]?[Ѩ7l
YxA! Ｂ?i`hl6^|hId0~'	R0Cj1&bTźH	}Ht"^)z5PFJAϼ׸Q*!],p}uUXHlc2Jw%Cni5؁MxJ0}b#%&ǘ$B/1}{n?W"g0ZҨ
Ӄw+my
f!#'Ȥ00ɄKcAwxWXJpwzCQmW*?fا}}9ewMH!333Rju[ZLkI|M@igCnQ u;2FlL[75xv?dxj0~
;Bnclveˉ!k`;_	H5[mV$PXmpɨV١e+Fh0BV*n;kW
Y]dH[B#G{);<mb|Ηjtyt5u5+rÚla찭kggsGG8Mn&Ȕ*0p6HKư@oχ"/3['Rv|.-%lrWΔˆ}xMj0@N1/(A0fClex<Dj+|v!n55LZך]c1XT':>5fVN[2!.R3k^GXW>yk9^<fYj߯g11Uk})}G!cێ;H_TxPJ1+Bs:"u'b?frv2!TkwS3xGB^^q BKN
:p%:K,aX!``ݮ7Vaƚn .4g0efBl)XOtBr
Nc0+?aip x<WX_CX xZ1΅VD_pOuH+۵jx(KJsyxn0Ew}	I,hdR]zIF~}etiK{Ȓ
:?	)+:y#e'ܴ(&a(joQy<1JǥqLk$n<<jU㛾?-c4	ǝs6Kݺ4gTuK	#/.oTa77n_J-5e](<ϟKN%y\{f#/G(%8"\1Ȁwn☌?=q(#
xOK0sT
IQăE?mm47E *'݊.)Rw
!3fZ
h-M)2yDV
DEj串neHf4cm+-)yi,O-nZt9o;пk^_'?мJ~c!zx{<
UO9m	%T)W w4*
O2>G[)nJ;SĚov=5xuRˎ@#*116Q``0k30J9%}RRJ(
UUeP*RDbaC25jh%1S
EAźP
eDX!	jPikb.2CMDW%y!UjBT A*s!GR,J;*(/4eBQ"N_u<UC|d<Β:i|==;>׎gDG $a/&U_eonUJtw׆a7{嶧vX/8geyUo.,ߪǩMhwV~OCRX<EIgfmx;l5M788WWSe\Nt:Us+x"yw/u{FUe[;.~ټ/{_	6֜VRGqoJy=߶M4nx#F=%:ǑNsE\321|5UW7o4y
Oΰb*~z:
ٞ6	u砡|4*@	ų"y$놶-QŀZ*oCV&`H>%a[0ş_L3xuRێ0}+,U]vv.$f
$!K[;/3:gHgŵASGF؈,fqq[sGmRɊ@hhl,fۚ5
C-}TZ&~2
S,SƔ2
9#ȶ!QHۤ~9d"IN
|BQ3I&ehp8:VUe@i0"kmRJ?I?J,
l
x+^?N`omWgғra/5ϚI)O++)v7a]kz;/㭒wRgK>P*`1fO8fA)*YXuܯmVU݃>+*vtlc)ehUu(
GGG#	D=mCytU8+Wz~

])h~zhq]ǨJU8v2Shva5R@-Cq>Nb:p}S!-q]r/RY29hary<m$陷1ed@
$nD29E,m5Yʬn=f?{%j2xuKoHfʤ(\ uR``v޴
(@&~<]9#}l &PTл
TJJ3Bh$|CM&f()5S,}R9&"LUM-NT=A jRh{`50y{^|xxk^V'm@+64ru)WyצEW-Oy)1ˇ2N B;'Kt
P<ɘi1v0Bt:.-d?333'<LWREjgZӾ%=EKJXVux-R6\hKQ ojŌRSD{!*]!64A3e~,]w
ׅoUн}H$&oؐuʣT͖{qcDNZ,<w
xy2X6:=叮s)k{|SQ6yvAFLKW8ժ˱k<jijֻz`4V/MvIS~m	^LEЍUz1AF@ַ5yx-]'lEalk.i@ \_=3xuIo@2f_d6;C˨incI4WuyQB.`e#3
Ehjf
̰"EPS95ȝ!%
=3DLI)CAUD]2Mũ*D(5P&4tJYR0k
xο^Oֿ)f&'A1xQ禥\yɊ,?]ϱl	6,9mYcY+{5/Ř8k;Ћ~?XV|
8b"io-d, cqv$ո9ӱS'UVӭ{2NɜXXv''L8E
#,C5lh#1F!Jԋq&a8c8T'o͝v-CY.G>]ܲoI _$Fc' /)>zxV7^6oqg	Q8p5~GYW6-[_LxLҰ\\$o%C"/ynpߙyĸМs_UKO:~2֠Tnw:6nS$qܮ#nYG?ŲɁ6(7؃6	4xun@E|EIDi(%0cl7*̓o'Qvo枡#	dCj9$PC,)yY#L:R
X&	 p"!(hJD4II|LB!b%ebEBXhbcCVw@P*~EMK?xYI<q*1̇<^b๪;4,m>O ps_g \z#6t0u=4e&{jn
O;ӟ7WzUu<}Ul*TzU_6ZTEgڛ˝R&H
0 9.߰vꘇթnE]H1\zEdr{p
4} 6ϴ>
TH4^:;Σ79[>44j^0
`Us[ĶFSm!}v5;y"/m#Rv)ݣEXuƅtNvs"iVȜcSJu}\i0s5:_%7ƬIЌE:Ҏ^ Q2R7f;4=0]py BTCCZ?UZ1xuI@r&Ӭnh3p.Q74a2-KI꽒c=@&(cLDEKBUA@*\T!=mP(D	'BX9R*JNrbE{`>TU+"$	$H@4}I\!G=0i=q^/DE=nWI/C	' &Zɢ`둀iW=޲#,벡Kro`kۇ?
zkд@6|anRbo4:f9)b=t]@^dnH,<5lTW&Ϊ:8 \>ӎTO;b.xHn3+
m,v*Yj8>D]*aHq}Ś#qG՝"ώNziߗmR8"E͋Dmro3`v^1~Ks7UnOĐw}8fܨԱe{Я(=Z5:V^wPPa2+WlnshQЍUzz7^V@ڷ5qMWB[w``	(o5xuRɒ0q*3BT%`lcc
@b3YǓ喼{/]#%@"!0Qu0UFĩT5,; w 5k]ʐh,U
sFt&I01~HC@+vu߼ _P~aU|ϐA":yHE/e:}.:n|v`coޱ~
PNiN,N	m&K=Ɉ{3f1{wi|Cmncfo\@O{#{dbWWg}uի-֧IZ_|-ҿ;Qx-Vc7(EiSG5{ޡ*7DpP+iԱOxCH}YYpAKo5uUD8(`|ur+1WK`ΰX. ~Z|f
<
I^c#p^e׷Hq;!*Q׎/mWՍWpnoo<~}g35ߙ'dKPyyeہO05U
 .xW?ھS50
@paZ`i}|oR5i~*kl_ x31 ̒$
o.ų?en'y7}f&&`%yEť+
9"zHrSJsRW{gz]{&﯀)+)J,,֫aP~St}HSϧW8x4iT_+CΩ.ga<|K6
58D/33XM}QeoO],UnwӒ'~R̾_rj0UEy%z%%,>Ԟе %&KO.fX.xBrR}IoHV$2Sa:8MZ^@T$g'䧧g3h޾,C˭+ߩ*N-)-+dgo췜<&@vİTǺ1nQ}WEi!P#J2K@jBv{0W]¬</+=ߢx340031Q,+d4!菺51%<0(KKOI*./JLOz/;u럼fTuj^zfXw+c8E;\5_(-(d]:Eq߄\yo0AF&=9%$d)449}޷/?Eʂ"S{Xo/
}UW[tgI7L{G6B?a
sB&KW]eq"L%"@&?+p*	_'o[ P(I-I,I-fypᔮͳ46|.E,<JK2!~mS!8ecGۯo^0pRҎ
 ix ?"40000 .github v&
I6Z0հƪ"_O2W*100644 Requirements.txt 1OVeLJImKf޴40000 docs (}BF QII:^"Q7Jr,W3}e/%`*n#{Yw7(Qx31 촜bտd=hqaL Z}f  x340031Q((J/JIM,Nիax<c˓V;[s{nCRde}k^\b,?g!'0|*+,)I-.K(V""} Q4x340031Q,+dTca 3xnƪi	B䔦g)Es&A_lɯ˔o@'	Oy탃Wc?6/yY]Je^bn~JHSei"_DjӓSKKF>)u%S'䊖{֓|g%L~*Д꽧d?^$Eiat垸y[Vf4ak2S*wgeknwK*TaiI&f'=ds EXx340031QpI,I,./JMaTJm$?-/
!|S2sR?nL=;_6$ KK2XcMyx?S:C3b#nm~޺TsNgy'jB-J,-/*+*.axW>ScKv~O,9?/McVJM>Խٺ?TIf^Jj؜Y^hzljgrKJ,aPY͏GfzI,iwTMQjNjbq*M.]4^+{	 J $x31 촜b,+1]ޯt	뽺cx31 촜b3l;Z/mFvUβ Nx340031Q((J/JIM,Nիax<c˓V;[s{nCʒ<݂t4urF1j,	Ulh䚼W7X4Y	_ 5x31 촜bn
[g95>=)h (x340031Q(,-HLNLOիax__{Z@c\'gBٝ wt.x{ &100644 .gitignore 
=p[	gîkG3H*89Gu8D	,Iu3H#'AaYL\40000 test P%	Ϡ-UH<{sW2r
xM F򷬆R<-@vKVPM{zgb9[z/bVgIeLD5Rؾt8L"[x9 1OVeLJImKf޴2VPI(/Zʓ,50$96kHk#x  O2W*ixkgigQ21 ̒$
o.ų?en'y7}V2t	<cnt#B+'g  q8:xD "40000 .github @dİo\'֝0"EJ挣,dѓ(!
xkgigQ21 ̒$ΐS3p	lTZ(pPgM<m.~vn}F
 sCoQx  EJ挣,dѓ(xkgigQ21 ̒$>N9!?:ӵ7*=e HOx|YD!>>3/$>^\{f;Oev߯Ǿ~jF x|YD!>>3/$>^v4xey@x)ijjDͰ9 
qx7 v(ȠJ5|6kϷ5z/'\uoR$7xi(L-.~?^fyQ5}"
EdxI =G^w+I73ax100644 test_views.py |5<lvn)JR$vQ 

x=0D/4^!&5k.-)4^1ۼyd5>R 7(lRTFKaDAӨk[Iϑ2pg+q\T&.:Lnb}1	uv1gK
iΙfQw:xx[8-'8{"O% -m/x[ϸ-'8{"b .xmOK@)^rѐ<DRaLdgXNx}{{P1gWhu'!!^e!NFBL
(Jy=K,f<zJm@¤!FvQ
wSfӾdP8S46Ƿ<~o_H\aʮbg4+oEr%>
ԓ5upG4ͯpQoR(KJges:V:3ȋNڋ}x<yDF#u. ,ԳyxUQo6~ׯ9bڱ
4 {ز
CvOCPIB,;Ici"h}xwEv{5(CA5PCS)|44%he

HI0t`=)k(;롵@[hBp].nQ3Tm}hQp<QybVQHH
DOD"2'Q3ov2k+@)-
<~|SGm6xN$8<ju7BTRiQ1ږjdf:LNfd6x7㲺g):DyO-GOuz2Ǐ<<|R>&h*fnLgd.9jdN@_-f	vA]?VYʀ V%f n6AbonG!Ft:Jk1@ ¬ȹ2*-!׶k8KBSS@W?(b;x
^BH?'ߟlJ"~%L֔Sk9)/Q j.ȩ#.FcJFVw'j@"6(W{ Zθ{^8X
Nbx
$8i_`ZUqɍEyl-!
93
TL?Mxd\CFqz-Yzԙ [O=;r*eb-\LPcny3{]׽{A6pA'&y y:Io,i
W~9`OFGK[{cwL6h(ס푿<Q}1Nr_I60J?_]`+ktxx?C6+Bn~IlV
& 9)xkKʒ<ԍ_w2N.`њ*6whV& xn:=_A8J Ӟl$m0Ch*RMΐDbuڤk?53;9#QEd0OGa,HKz@4Bq+ L&|mN
GQ}9st%6
"%Ռ\R(W_kyLA4  ;}
),|
wD^ޥ?1lpye
P	V#
OVz:8׀+G޿^}<2&7qҬ|OU_hyx}mHU2AS{XHZ.]ijԦbze1L^RadgOB p+!,MdHzvg2@,xՃ4e|
?sSNX˜HlTvʦy֌ؤ2ȵ˩+*&Zd!N|@1oZ:3ipfq+ƗGݻgbU=c
0ad2IEi,н-]xt.rxh;h력3[ $*֐m~z9uL&.@	);(bч@3?$}G WjXOs]`@]a;ѿmR%kxVΰ`Yv<@
h]ۨcj7WPIdRwVK 2ҏ3e"m+J f$ͳ{i^@l,N1ymn[l|AK1
yƽkǏ`m^iLfIoE=/}{nvPr~KB%C2ߗTL?.FRy`T$q`lKk=vk
9~qe	d*]S* BA`IL&Ϩ%yL)_-dn`cy橜\;Ӥ;9jLB`e `x@0ݠ
sP@[ >M:	@=vd]VxiW+Pvk`srKō-n:OoH1S
Wa$vDu~?#C`6ʁ-8_LeCcXvHqkܠE+G
RO#GhZarQIA /WqnZ5`[햩	$;$ǃ"(s%֯OQc՜~R\"SfW9
2l<M<z<oMG;qxKٸƽvi1]`UW/>YINsEc'Й9ҞUiޖVUl&khAUzM@54FRq/<goFߞ" -
ő3_,_&?ڰ.CP+2*W]3#36Hq1_"akmԪC4,a]LK=*S'iarՐ(=ꆔ}'XaL_7h`}MT|q[S>"a­1;dVV,MBu}Gboڬd8'tr4DKf%svOz//?">~<ۂqmRUvY?PSM-*Br;"l0Ė6 i"juQ6\Zv#nS>7cUlNEoSҨoM|-;`@I<AA(/8Js;
}$BFoߐ6]6G"#I5Wi~ࣝ:*ͱ|ylk=䁝upk󺠟ԥa%bVo|2L*=)kk	?L@ggvѕ;(U9pռ"jߠ/hp]h]1\Ed#z`Cr|T>`稚z󬣣.RT&V|Ig5V]d$ΒsfjG{N 0<Jo(F
`
X1؈2Z|x@֪nt
 k;orϳn*c_O<)>9;|'Jry*H@ˉO.ëF6{q5q968G~.j
3C*O+F
,T;;=<Ps[!mʡgzǎfnFL5>^~MXLyvI|#o`oie43zt7;nsn`
[*BڼKF3-)=S@}+o>:C埲
(J_o9/x~e5,cB1VI^|Ý5!>éjhY¤!g|`]"M%&mҫ;?i!3"/dOg_ȍ!  /kP|vf[nVwTimNߺl<"FGxOAS,jPPa(X&`Z*
jҝ1x7}'o`Eo&_?ܜ(I0y;o^v	k#e.21=ԌgnZZj̴IgRI2GjN)*Bõ-mHG0S(	?*ybz9esjU40-LgxF-Jrl`T,hRאaf7[eTN=TK茖2Iy:U[2d×hqYDkxnn	;N,3If!XM .6fZåEgaAOW<BC	.%V]i_MLQ[g:*>hJqFӆu3r㡔LtPsn,FGXݾ/c]i2К2.B.2b, Y23E$eXl!LTnXbLD5ӐI4CzѷgJPN8#=0I<"c@~	F5v	ƽ*!xzE%Dxw-BI%JHvWxqC#OZQ~oepOJZƛ,E%'/1{Q_\^ZIM8$\
$  -!!x\{oFߟbOF`N$hnj _]J\Yl(R%F>$EY~i	Dc米3)˧;,b2N/Y^"3#/rYCpYaQ晽[qYʢ4_̳ȦR.8;L{gC8Qi<	fؘ\e.@dgqj0
$ S*}*AE$Ls4Ke_e*,C'r5~XZb(jIr3$F'2,
}$sW2i% s˨/8".8KgExf"[UdaDDtG\Нi8C,K<jU'Vd@l@?Y$wJcW:XGiȢICF?=?^^8WF7&ٙB?</əhB&3|'"`h1=zmChB_%S ѤWN4
0oi b`0.VKJ8TsUhifCa3cgGCc50IIFc-X3zf6rL5Wl:Y~\6qlijE}t^yo?	r
{:޵Go>1C~\=e,v7)#Mנ|0ȰHS,m@`6{")Cg[)!Q
3B+!7Ϣb|;z|ԷlW*)o={Ok%4կiTC%_aSB3}!(qA@Bg-♡R(#kӀ⧑g\'u< n^d_௽"5_~l܌:zMDv[!LHD)#8Þqw{z6]7X J"8l.C2I2@,PH<q;$U6}*x}	K9R'0(T\`$qXǝӃ'x[R^<\јgL?POɍD@Q0MEE*z
(8<yeR4Q)@Uqf˃_Wah(CX@U_1m:)8s!pv`?}<wCdhߊ
}`r	}i4^4ijitKBgp-т#wvEqBhXzWVvNl-+Ųb9W[[I:cT=h7soHhmYhʋ()BᲝe"31+\آb㊿!H)TZ%6$)s6G;p*>\yo@S%~	E@lDb"I!SKP[$'+mi99ZaBUr+%-u!4Wo]4@Q C!R{xmJTkw1SS-Fe.
:Rfį)k
W"C~/q֘!p]w	JD7^Z ?&hGZZ?!sӽXb&#l\v%xom5e|T0'=+AfK<(-6l|X<OH[Մ@?1	8UY5%e틡zx95fK>%(sour㾓)q,̀+-6:؆i$L?~/%=RSOD@\f+=P
lKđ*OX&:ͣPlaxb9sr-GD|Pvgףy8!5pQGnR!=9w2P_LEYqS` n[8?GT*dE7'Xo)A8kGnɰ/fæ	'C;
&i(Fݠ1/mk>:@eQZY
j,q='Q8o ROxVbmiޤl>4"#%J:kX'}3$oKzkׄjoڞ"^
3n\5ljϡ|_$%tFfW-  (՚Q5J]((@d5l"xXʼuemծU[faХA~FDe|ͱn1%'@%3@(2sGDk0Xӟk<_OFj,B+VIr{+BJH{l2nÙ]{zuPb4#%W	
AV[=w+9ftVuGPk8QD5'Ob1a,a|[g4["iQ-Q9?ńeh[sb ww]E þ6dgzbM*8>G_pJűY׎C|mV^2[d:?5Ǆwԥ్݄uߤj&лdo7{썵T.dOVM0-/LF2l*s늶G1StrU̝W .T5i:2ju`j@lY
Q-r<r-HxrCJ}֘1VtmG,.cVyZv?f?jh~"	4~J^
&}n>4'
h<WP7j/jT;㣱-\^]}};7MA>Rc3=u`Kq7v![,+>JP[[
M#BM	|CjB6S'2'`	i^s'̇)$}31$ڶ ClԖ.xg_Payk8|%V6^%-Gl"Pu|x{x||^r9?ۀJ]FmO<L}~@d#`]ULw9 ^9<ؘog\]MZpE{*TJ%J
[gzRh4RPVAḨjZ+E-jAGڞMզ00ЍgmSm7̚0V3qU/GQn6Zl>&2^m0	!u5xmېbl8^_SkcS'*j&YZcA[6	+2F܂Ԋcuג
,citq.`bl
z)[T{Jԧƫ8
sd{&Z#0=.QJ"YJML2*Ĺ3[ne(f
*rXԬiG!	<)RmoCu(p3	TќHe.:Nҡ]:k0.ЁIud^>ApN
E*/xƓ@K5E-u:S!jh_;iMvd>i	)OJg,Fԡoïo{>zKjgkqV((x]C'CSVxr
/o!V٩cspcJa#+WK+MW%`p7)iɞ.
!D2e.gB&Č8Ee(ϓ޼,8ҝd0cEpWa?z5<8r;w8J:cj
KGCHN42`=xƸ0(?W!7$_!3 NΎOKOI2r@,<ݖUlo8'0+))eSSÃRSRJ2sVp)@A~^j^YfQ~^PCkppkdRRIjqIf^:n=A!`k
v#ZSp=59Bt5!l(2y/dWQ*m'sl 
P4xqBƚ68	 q$	xV6+hc&Yx-EړMKc1E2$^w-;p4͛ZCQ۶U]=B%^X@jU]Y۾j;Bd5:Zk{cgMd} ru
^Z,-ƟGN?	L׈&PdaG@>B0CPaQCcOe@>74z4QKF85.=&vHTZF}\Ro=BQ*JPKn8uz  {o{(RٳSA	HK!>uXT#l_k$3e8`ၪ-֌4YĽDA#D&bbGYioTBvJ8r[l)$@P&ϑ8k멓$+8)
wz#E~K4Pչ$)5Y)Mr\9C*i<tv6XqVEiy%h+vM	찺b7T*M}"!8͹W
:)"Y۠U@s9ǝK")K1$<!4})Oe½&)ɩ=5&,Y_i&zX
%~A~N 8U	Lz&MV-PLe۫Nl+3(~NM
ߴQ,ﯕq&4N+WtGqh H;_|y^kt5&1PKn%_;f|鎚'bsѩ_)$-h^K2]98qi.zurE?6X|
7B7EP`!V<BlCzt>5oj=4񘮹PxOZ8BA-x;&p@`Bwi^fIIjqIf^Ĳ(d{ "$xuN0y T=]@hgƑ ӓv
}y&)z)u;JqIo^ߏ1k145y<~10֑@U^YQX.y&.8{rg\
tM[`ÂĨLtz2 bseyVd5J'Ms	W<+g>l$b`4{JkEəxYrۺ}W`Lŗ3i>$&DBHHw
")/C" m*S)Tʝ8;NB̢I49;~Wl22ITF,HL^J/3%vڈL-mEKҚWЕK.BX:Kş
J]L4EG9$Siz|b3R0ee&]׹**VkX	
o^dY\UwLcQӳI~KkIGWs|.Vb^VwdM^魬Uq,(:Eas`r4:T.
.L,TY|؛?~\Vg->FoY3j2;0.[7u _+8hTHں7)щbD ]5{C (Y
q'Hمp=cw3`ꗷ0AR
yyٴbdL ;}2:B0IȲʍ\"
dQSF;9vzg
	hؿܴ`YD7.%fVtZ+e]\/KB$VI8\G/s;0,
90;p[
'>bOYʺVrX)tqJ%DǠ5	^Ւ?jr^t촭ih])}<YJUܿH0
жl
iA5͊ VhXlޜv%̤k;v jEG0H7	_'Rk_8t#UWa]cGx~w^3uzCR-!§_n^YS
}λn"e,K`b.Nr] $Qw0Z[BݕƎ9RvSvYn>y<H+
#T'CkXj%jjG}tSU%prgvQ6ʢ{WJ6xZD7XPN׎:js/)0O!+|gtYI8`|j%Ӌ>DDmg}nE(2Ðb:$P;"[YVyQ-orM}/}ǳY30إ4r@O?biP[t1} 48< P8?i|a11]
:w% X$Y)ɒuM	H#üv֤ogpj
hu5b̷y9QFj_bHıv/`B#x*5$"Acp_#RvXpW%2m(J)Z0+A"#	ɄXJ|#}?K
J\uԇ7:<ׁda}nyZ܆
MB2?Hw2So4(Sb1)1XOmH:\xr qde2_&	᨜<Z!T$@SdN
jJ[DcC}(73Xoց%@
(hNu?p1"AVJYh2~VeI\ǺeMZ'nł`5s0%ӗR(9 F	MdOǻE==zx^_`w?hmb	CelHxqx%7uk ꄷ!Kqft\<21j!	C: d 6C'	8!ool'PźJOc!Aqd_5^8X%
|][v0"5讂А$(8vGkÚ{
|R\kz{sNRUt2!.	bШ	LGb(>=Rytq8p0ψ/O	&k'\IVӪo{

gM:W qzU>rjGN]ETB4kJOYC#y9j XZгt,
K1Aah4I_΍KÜ887D|3\N	em/pk{p<BD8N8kUgcPM?BSVy;]Έ( LH[A.
lAKVN3$p~P*OT
R^i)/]
ϿMwxR{?9$|]aH"&m"a~ks6\PABI┗6	DnP	1
,Y
T+O+\M2GOOmǑ[zv.:2U	>oAݨף*d/YfS(LA]ܒÞ㘷i,9C Nq{5
"cESyEǯ8x),9vztr/a6 Cg.%x}RMk0W0(viˡ(;46.tslHOVCTkH.ZT; [: čQ鍏hjݝU$؍UlE
|@$RyR+;m3Oq h!+MGn8^0U!r;+.{0Ҁꄰf%dkCX_"KU:?j/^|e/IZ̞U]!YnGw{ $4_y6s3]>E8uOLTJ6yHo{thh'6WM']_xò:/17J!4)'8C$_!2+?ϊKA(5'58TP(,H-R.(MM8qC8}-. >ȿ	x]s8=BHӾC\ںζiI(mVh~ J,IڛLc$@ A $ҵ(3VޤYaї(nO,,uE[^dG\l

̲,$&#ZA<0d\y֋4/.T2JT/g2D8e\dC>Kɢ{ĂR(2M+~/E^`!s(x)_ل&:M&Mry
m)^5rF5X1~3(=hmͣMW:q^$`)<Z&A\Ѳ	¿_bBiu<#X+YXK
B	bf`Ђ`F[W P~M ?`MĬ֠ydE,
R
',Z"a},GGGXX_/+P&`U&TLanOg߾kv_3Wk`UG)N-UEĲUZ"uL'B"y p/M4YwCLwP2WkkOP-h6&,R0a3k]eS1NO>)  %uzESagmMcD,ss`i±'FJ55*R(Ե,
%`eѠ*NBY̓!:&eU=ip`$lB0f,1R2j)A 4Mhz&J D
̣j2>S^Uh赫FՍZbW<OKQ7DT/Vu[AZ_
n

 t.YiP8fDVZL\:GOܿP7TuXG	qO,:U7warM .3z,c-,dϊrbIh9jj6BdrlBg=qY+ǃLi1W\93Occ a%9&=$`H^$"BL,%CH嗋n5	>ph
pSxUiR{U	?Y*MjYxUIW'lH<W &O^]4,8RLxKWSd*d`3[i4}7:=]18r`oiE+ʁ$D56_Sw:NEDvV,KŶmu_XYGyFG&ȂSFN.WIb́!p)hѬdwWvδSn>X,eG'}hT  ]I
=._^],'#}
}OgO6LY-3bnGzk؈ Qi,`vav
'?5o }cShu2_Aоwz.L`A1zo-QfDFbET9<
t~[2Xɯ6?U~
VErhulOz0
 UΓ_*Ҭ#b]v0rɦ[4{Z?`!3GPZQԄ\4jwH'CC[IZsjptkQkԗ2V2%|Jmii
(5_8
 r KL/;anRnڵ©
;K gAPVi1$TEmDym^,2'F"vu<Ya4|lPԐfXah#'Urh-)Z4iՇ6<8a1~6k6V.`'i}6y|Yz-X\U_kdmwfW阵`bSQKڪ{+<vsU
M='*m]@}+*SPUZg^q|R0<EGbdTpSfd1ӌ\F>qLIl1ky݆b~ijt'x\=GV;Jf/.f|sX9uYWn'4.&b
cMdn*Zwh7 '?v<ClJBغ?W	"r2oɲG"1+VRgֱNbI7;E#Ҷ]%IzlѿL&#a
5վM]*Q|-TMem;va97پhhq|	m4J>c5^G14ϻbh(0E1v>M]Aۢڕz
:T-m?
SZ2+8+ϋBzHVX,vV̶I167oCtq ͗/1'C3GqփTR"	cQ׌$J>
d2{: 7HVp/Ip׃v=wyb!eJFǖw?j332b;zsHnL*S}?M'_wL%sXަI]H]3c]o_;_nd@zjFM9]0~m%GitS^{h=+ q'Exn7x	RȀB\xYuZGlݛ+cӤ]	7mruYVDO\^ۯ],XۭaAcOe<~ HD0myWZmr3<]H U3?n@206/`Az.'*y^-nͶ3~D<yã^MyG^&A΍88'O͈Ҍ=X27b
oSN'0GLk
%>9@t럑kK(_JL>(yP?Q-H
YCnqV)>>Lً7f?/]_[ >"RFQ)ךOfxLϠ`yCb2R$-#$4E3VCSGVk Q1cU6#PBduʭKO24>m>e	e|Ԓ[Krj=s,|
Մ
rJC=k Rǡq5e_HH<bo~'O9PkJPF3R4
w)7RKzڅڃD0	t8y
L#4=gfO<&MrǒЧ5݃`hNtUvb$O9yʱ~Z
4v$T$K2PS
@$e`oc>099d4̽O:6>7#"ÑvWcfHݏޞ▩Dr)_O$sم61Ec`&j$aSGc>I!A:AHգ-r`󳚼x

  G!%1
ڈ@,A^;phw(ȹCTkDvc*"YdмY{k4x"a z^ѸxVmo6_A($unӰm 	,+Zd.4T!%9r =wϽlFwG4
9:xWj*4ʨxB;i4~5m3[m,&_9.F8~MZRfՂBg:OM+tL=5;oyKW܉:ėWfiDE%Ai*xQZO:8~M-F
ox;'˫1?Kй}¡Hfgڏ4JPFP/c鵰B1haiFZkiiQ9E!й.(PwS+t%lV(E+Svu5v,h%l4!B{GC^ӻWbQǰ`Yu;Q(8}DJ{.L@QEfܐFlk1hDɜRWEQlGٿY18
LP
T"	4%!q^M+t٘1g,owɜ&vdCcBiB"~0]+&J'\r'-ieM%F9M:_M,oM!'7ܯJZ7"eFfJԴ:iEuu-$zy4R	O+;ʦ>>¥Y4hհ"$>P/YHzw/*+
ӏHA0H>HS
oB"h3&BUZنS$'"{^4.ְFF7l1=zxsf/2kQqD/T]%F[Vqϋu͍+wɈq+5+1[Cpܨ)>ϴqb6=RI؆ەm}y1!"	TT)QbJZbKO
61hA?Jkt-.hjyΊ.T{Ŋ[jM)@䦦szҶ<B:+t참7=@%5
nM wZ-/4|)K?)biZYEբory;Z{cj;\Ynp)xN/K-JLOJ)O,SU)*MI KRr %xVn0V(RrhݟXcj6mCll"M%7PYck^UU.bz2_LCR%CSB#(S&PxcG$I	 @_AHTr^ÁI%:9P
NvIM_XJip0{4}Jʤnp;Li	٥s&Jcu];*8&oTr>|6zT6a%({_Gg9C#8M-E}&:l4C	DWݢ@{V;8C%П;[fh
K$K[$?
e"Gj54n.C*IsQ/go|m4{WLAp
_W-J@f'1 j7O Mwǚ507pA"⯢>K9EtMb&KjGFNjn=C1#!ܘe1+3DLVs]AICr/׺Bƈ+`hA\g0&GZP[MK`5 i#l62*`6tԄ^Ⱥ$Kb]W.vT
**-****-****-****-**
.git/info/exclude
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~

**-****-****-****-**
.git/logs/HEAD
0000000000000000000000000000000000000000 5b69019c70d0cb1893687799276abb9743f61785 wwwwww1020 <wuqiteng1020@gmail.com> 1691295916 -0500	clone: from https://github.com/gouthambs/Flask-Blogging.git

**-****-****-****-**
.git/logs/refs/heads/master
0000000000000000000000000000000000000000 5b69019c70d0cb1893687799276abb9743f61785 wwwwww1020 <wuqiteng1020@gmail.com> 1691295916 -0500	clone: from https://github.com/gouthambs/Flask-Blogging.git

**-****-****-****-**
.git/logs/refs/remotes/origin/HEAD
0000000000000000000000000000000000000000 5b69019c70d0cb1893687799276abb9743f61785 wwwwww1020 <wuqiteng1020@gmail.com> 1691295916 -0500	clone: from https://github.com/gouthambs/Flask-Blogging.git

**-****-****-****-**
.git/hooks/commit-msg.sample
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}

**-****-****-****-**
.git/hooks/pre-rebase.sample
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END

**-****-****-****-**
.git/hooks/pre-commit.sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --

**-****-****-****-**
.git/hooks/applypatch-msg.sample
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:

**-****-****-****-**
.git/hooks/fsmonitor-watchman.sample
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {
			"since": $last_update_token,
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}

**-****-****-****-**
.git/hooks/pre-receive.sample
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi

**-****-****-****-**
.git/hooks/prepare-commit-msg.sample
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi

**-****-****-****-**
.git/hooks/post-update.sample
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info

**-****-****-****-**
.git/hooks/pre-merge-commit.sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:

**-****-****-****-**
.git/hooks/pre-applypatch.sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:

**-****-****-****-**
.git/hooks/pre-push.sample
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0

**-****-****-****-**
.git/hooks/update.sample
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0

**-****-****-****-**
.git/hooks/push-to-checkout.sample
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi

**-****-****-****-**
.git/refs/heads/master
5b69019c70d0cb1893687799276abb9743f61785

**-****-****-****-**
.git/refs/remotes/origin/HEAD
ref: refs/remotes/origin/master

--END--