{"version":3,"file":"index.node.mjs","sources":["../src/utils.ts","../src/imports-cache.ts","../src/debug-utils.ts","../src/normalize-options.ts","../src/visitors/usage.ts","../src/visitors/entry.ts","../src/node/dependencies.ts","../src/meta-resolver.ts","../src/index.ts"],"sourcesContent":["import { types as t, template } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type { Utils } from \"./types\";\nimport type ImportsCache from \"./imports-cache\";\n\nexport function intersection<T>(a: Set<T>, b: Set<T>): Set<T> {\n  const result = new Set<T>();\n  a.forEach(v => b.has(v) && result.add(v));\n  return result;\n}\n\nexport function has(object: any, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction getType(target: any): string {\n  return Object.prototype.toString.call(target).slice(8, -1);\n}\n\nfunction resolveId(path): string {\n  if (\n    path.isIdentifier() &&\n    !path.scope.hasBinding(path.node.name, /* noGlobals */ true)\n  ) {\n    return path.node.name;\n  }\n\n  const { deopt } = path.evaluate();\n  if (deopt && deopt.isIdentifier()) {\n    return deopt.node.name;\n  }\n}\n\nexport function resolveKey(\n  path: NodePath<t.Expression | t.PrivateName>,\n  computed: boolean = false,\n) {\n  const { scope } = path;\n  if (path.isStringLiteral()) return path.node.value;\n  const isIdentifier = path.isIdentifier();\n  if (\n    isIdentifier &&\n    !(computed || (path.parent as t.MemberExpression).computed)\n  ) {\n    return path.node.name;\n  }\n\n  if (\n    computed &&\n    path.isMemberExpression() &&\n    path.get(\"object\").isIdentifier({ name: \"Symbol\" }) &&\n    !scope.hasBinding(\"Symbol\", /* noGlobals */ true)\n  ) {\n    const sym = resolveKey(path.get(\"property\"), path.node.computed);\n    if (sym) return \"Symbol.\" + sym;\n  }\n\n  if (!isIdentifier || scope.hasBinding(path.node.name, /* noGlobals */ true)) {\n    const { value } = path.evaluate();\n    if (typeof value === \"string\") return value;\n  }\n}\n\nexport function resolveSource(obj: NodePath): {\n  id: string | null;\n  placement: \"prototype\" | \"static\" | null;\n} {\n  if (\n    obj.isMemberExpression() &&\n    obj.get(\"property\").isIdentifier({ name: \"prototype\" })\n  ) {\n    const id = resolveId(obj.get(\"object\"));\n\n    if (id) {\n      return { id, placement: \"prototype\" };\n    }\n    return { id: null, placement: null };\n  }\n\n  const id = resolveId(obj);\n  if (id) {\n    return { id, placement: \"static\" };\n  }\n\n  const { value } = obj.evaluate();\n  if (value !== undefined) {\n    return { id: getType(value), placement: \"prototype\" };\n  } else if (obj.isRegExpLiteral()) {\n    return { id: \"RegExp\", placement: \"prototype\" };\n  } else if (obj.isFunction()) {\n    return { id: \"Function\", placement: \"prototype\" };\n  }\n\n  return { id: null, placement: null };\n}\n\nexport function getImportSource({ node }: NodePath<t.ImportDeclaration>) {\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nexport function getRequireSource({ node }: NodePath<t.Statement>) {\n  if (!t.isExpressionStatement(node)) return;\n  const { expression } = node;\n  if (\n    t.isCallExpression(expression) &&\n    t.isIdentifier(expression.callee) &&\n    expression.callee.name === \"require\" &&\n    expression.arguments.length === 1 &&\n    t.isStringLiteral(expression.arguments[0])\n  ) {\n    return expression.arguments[0].value;\n  }\n}\n\nfunction hoist(node: t.Node) {\n  // @ts-expect-error\n  node._blockHoist = 3;\n  return node;\n}\n\nexport function createUtilsGetter(cache: ImportsCache) {\n  return (path: NodePath): Utils => {\n    const prog = path.findParent(p => p.isProgram()) as NodePath<t.Program>;\n\n    return {\n      injectGlobalImport(url) {\n        cache.storeAnonymous(prog, url, (isScript, source) => {\n          return isScript\n            ? template.statement.ast`require(${source})`\n            : t.importDeclaration([], source);\n        });\n      },\n      injectNamedImport(url, name, hint = name) {\n        return cache.storeNamed(prog, url, name, (isScript, source, name) => {\n          const id = prog.scope.generateUidIdentifier(hint);\n          return {\n            node: isScript\n              ? hoist(template.statement.ast`\n                  var ${id} = require(${source}).${name}\n                `)\n              : t.importDeclaration([t.importSpecifier(id, name)], source),\n            name: id.name,\n          };\n        });\n      },\n      injectDefaultImport(url, hint = url) {\n        return cache.storeNamed(prog, url, \"default\", (isScript, source) => {\n          const id = prog.scope.generateUidIdentifier(hint);\n          return {\n            node: isScript\n              ? hoist(template.statement.ast`var ${id} = require(${source})`)\n              : t.importDeclaration([t.importDefaultSpecifier(id)], source),\n            name: id.name,\n          };\n        });\n      },\n    };\n  };\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\n\ntype StrMap<K> = Map<string, K>;\n\nexport default class ImportsCache {\n  _imports: WeakMap<NodePath<t.Program>, StrMap<string>>;\n  _anonymousImports: WeakMap<NodePath<t.Program>, Set<string>>;\n  _lastImports: WeakMap<NodePath<t.Program>, NodePath<t.Node>>;\n  _resolver: (url: string) => string;\n\n  constructor(resolver: (url: string) => string) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n  }\n\n  storeAnonymous(\n    programPath: NodePath<t.Program>,\n    url: string,\n    // eslint-disable-next-line no-undef\n    getVal: (isScript: boolean, source: t.StringLiteral) => t.Node,\n  ) {\n    const key = this._normalizeKey(programPath, url);\n    const imports = this._ensure<Set<string>>(\n      this._anonymousImports,\n      programPath,\n      Set,\n    );\n\n    if (imports.has(key)) return;\n\n    const node = getVal(\n      programPath.node.sourceType === \"script\",\n      t.stringLiteral(this._resolver(url)),\n    );\n    imports.add(key);\n    this._injectImport(programPath, node);\n  }\n\n  storeNamed(\n    programPath: NodePath<t.Program>,\n    url: string,\n    name: string,\n    getVal: (\n      isScript: boolean,\n      // eslint-disable-next-line no-undef\n      source: t.StringLiteral,\n      // eslint-disable-next-line no-undef\n      name: t.Identifier,\n    ) => { node: t.Node; name: string },\n  ) {\n    const key = this._normalizeKey(programPath, url, name);\n    const imports = this._ensure<Map<string, any>>(\n      this._imports,\n      programPath,\n      Map,\n    );\n\n    if (!imports.has(key)) {\n      const { node, name: id } = getVal(\n        programPath.node.sourceType === \"script\",\n        t.stringLiteral(this._resolver(url)),\n        t.identifier(name),\n      );\n      imports.set(key, id);\n      this._injectImport(programPath, node);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(programPath: NodePath<t.Program>, node: t.Node) {\n    const lastImport = this._lastImports.get(programPath);\n    let newNodes: [NodePath];\n    if (\n      lastImport &&\n      lastImport.node &&\n      // Sometimes the AST is modified and the \"last import\"\n      // we have has been replaced\n      lastImport.parent === programPath.node &&\n      lastImport.container === programPath.node.body\n    ) {\n      newNodes = lastImport.insertAfter(node);\n    } else {\n      newNodes = programPath.unshiftContainer(\"body\", node);\n    }\n    const newNode = newNodes[newNodes.length - 1];\n    this._lastImports.set(programPath, newNode);\n\n    /*\n    let lastImport;\n\n    programPath.get(\"body\").forEach(path => {\n      if (path.isImportDeclaration()) lastImport = path;\n      if (\n        path.isExpressionStatement() &&\n        isRequireCall(path.get(\"expression\"))\n      ) {\n        lastImport = path;\n      }\n      if (\n        path.isVariableDeclaration() &&\n        path.get(\"declarations\").length === 1 &&\n        (isRequireCall(path.get(\"declarations.0.init\")) ||\n          (path.get(\"declarations.0.init\").isMemberExpression() &&\n            isRequireCall(path.get(\"declarations.0.init.object\"))))\n      ) {\n        lastImport = path;\n      }\n    });*/\n  }\n\n  _ensure<C extends Map<string, any> | Set<string>>(\n    map: WeakMap<NodePath<t.Program>, C>,\n    programPath: NodePath<t.Program>,\n    Collection: { new (...args: any): C },\n  ): C {\n    let collection = map.get(programPath);\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n    return collection;\n  }\n\n  _normalizeKey(\n    programPath: NodePath<t.Program>,\n    url: string,\n    name: string = \"\",\n  ): string {\n    const { sourceType } = programPath.node;\n\n    // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n    return `${name && sourceType}::${url}::${name}`;\n  }\n}\n","import { prettifyTargets } from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"./types\";\n\nexport const presetEnvSilentDebugHeader =\n  \"#__secret_key__@babel/preset-env__don't_log_debug_header_and_resolved_targets\";\n\nexport function stringifyTargetsMultiline(targets: Targets): string {\n  return JSON.stringify(prettifyTargets(targets), null, 2);\n}\n\nexport function stringifyTargets(targets: Targets): string {\n  return JSON.stringify(targets)\n    .replace(/,/g, \", \")\n    .replace(/^\\{\"/, '{ \"')\n    .replace(/\"\\}$/, '\" }');\n}\n","import { intersection } from \"./utils\";\nimport type {\n  Pattern,\n  PluginOptions,\n  MissingDependenciesOption,\n} from \"./types\";\n\nfunction patternToRegExp(pattern: Pattern): RegExp | null {\n  if (pattern instanceof RegExp) return pattern;\n\n  try {\n    return new RegExp(`^${pattern}$`);\n  } catch {\n    return null;\n  }\n}\n\nfunction buildUnusedError(label, unused) {\n  if (!unused.length) return \"\";\n  return (\n    `  - The following \"${label}\" patterns didn't match any polyfill:\\n` +\n    unused.map(original => `    ${String(original)}\\n`).join(\"\")\n  );\n}\n\nfunction buldDuplicatesError(duplicates) {\n  if (!duplicates.size) return \"\";\n  return (\n    `  - The following polyfills were matched both by \"include\" and \"exclude\" patterns:\\n` +\n    Array.from(duplicates, name => `    ${name}\\n`).join(\"\")\n  );\n}\n\nexport function validateIncludeExclude(\n  provider: string,\n  polyfills: Set<string>,\n  includePatterns: Pattern[],\n  excludePatterns: Pattern[],\n) {\n  let current;\n  const filter = pattern => {\n    const regexp = patternToRegExp(pattern);\n    if (!regexp) return false;\n\n    let matched = false;\n    for (const polyfill of polyfills) {\n      if (regexp.test(polyfill)) {\n        matched = true;\n        current.add(polyfill);\n      }\n    }\n    return !matched;\n  };\n\n  // prettier-ignore\n  const include = current = new Set<string> ();\n  const unusedInclude = Array.from(includePatterns).filter(filter);\n\n  // prettier-ignore\n  const exclude = current = new Set<string> ();\n  const unusedExclude = Array.from(excludePatterns).filter(filter);\n\n  const duplicates = intersection(include, exclude);\n\n  if (\n    duplicates.size > 0 ||\n    unusedInclude.length > 0 ||\n    unusedExclude.length > 0\n  ) {\n    throw new Error(\n      `Error while validating the \"${provider}\" provider options:\\n` +\n        buildUnusedError(\"include\", unusedInclude) +\n        buildUnusedError(\"exclude\", unusedExclude) +\n        buldDuplicatesError(duplicates),\n    );\n  }\n\n  return { include, exclude };\n}\n\nexport function applyMissingDependenciesDefaults(\n  options: PluginOptions,\n  babelApi: any,\n): MissingDependenciesOption {\n  const { missingDependencies = {} } = options;\n  if (missingDependencies === false) return false;\n\n  const caller = babelApi.caller(caller => caller?.name);\n\n  const {\n    log = \"deferred\",\n    inject = caller === \"rollup-plugin-babel\" ? \"throw\" : \"import\",\n    all = false,\n  } = missingDependencies;\n\n  return { log, inject, all };\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\nimport type { MetaDescriptor } from \"../types\";\n\nimport { resolveKey, resolveSource } from \"../utils\";\n\nexport default (\n  callProvider: (payload: MetaDescriptor, path: NodePath) => void,\n) => {\n  function property(object, key, placement, path) {\n    return callProvider({ kind: \"property\", object, key, placement }, path);\n  }\n\n  return {\n    // Symbol(), new Promise\n    ReferencedIdentifier(path: NodePath<t.Identifier>) {\n      const {\n        node: { name },\n        scope,\n      } = path;\n      if (scope.getBindingIdentifier(name)) return;\n\n      callProvider({ kind: \"global\", name }, path);\n    },\n\n    MemberExpression(path: NodePath<t.MemberExpression>) {\n      const key = resolveKey(path.get(\"property\"), path.node.computed);\n      if (!key || key === \"prototype\") return;\n\n      const object = path.get(\"object\");\n      if (object.isIdentifier()) {\n        const binding = object.scope.getBinding(object.node.name);\n        if (binding && binding.path.isImportNamespaceSpecifier()) return;\n      }\n\n      const source = resolveSource(object);\n      return property(source.id, key, source.placement, path);\n    },\n\n    ObjectPattern(path: NodePath<t.ObjectPattern>) {\n      const { parentPath, parent } = path;\n      let obj;\n\n      // const { keys, values } = Object\n      if (parentPath.isVariableDeclarator()) {\n        obj = parentPath.get(\"init\");\n        // ({ keys, values } = Object)\n      } else if (parentPath.isAssignmentExpression()) {\n        obj = parentPath.get(\"right\");\n        // !function ({ keys, values }) {...} (Object)\n        // resolution does not work after properties transform :-(\n      } else if (parentPath.isFunction()) {\n        const grand = parentPath.parentPath;\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            obj = grand.get(\"arguments\")[path.key];\n          }\n        }\n      }\n\n      let id = null;\n      let placement = null;\n      if (obj) ({ id, placement } = resolveSource(obj));\n\n      for (const prop of path.get(\"properties\")) {\n        if (prop.isObjectProperty()) {\n          const key = resolveKey(prop.get(\"key\"));\n          if (key) property(id, key, placement, prop);\n        }\n      }\n    },\n\n    BinaryExpression(path: NodePath<t.BinaryExpression>) {\n      if (path.node.operator !== \"in\") return;\n\n      const source = resolveSource(path.get(\"right\"));\n      const key = resolveKey(path.get(\"left\"), true);\n\n      if (!key) return;\n\n      callProvider(\n        {\n          kind: \"in\",\n          object: source.id,\n          key,\n          placement: source.placement,\n        },\n        path,\n      );\n    },\n  };\n};\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\nimport type { MetaDescriptor } from \"../types\";\n\nimport { getImportSource, getRequireSource } from \"../utils\";\n\nexport default (\n  callProvider: (payload: MetaDescriptor, path: NodePath) => void,\n) => ({\n  ImportDeclaration(path: NodePath<t.ImportDeclaration>) {\n    const source = getImportSource(path);\n    if (!source) return;\n    callProvider({ kind: \"import\", source }, path);\n  },\n  Program(path: NodePath<t.Program>) {\n    path.get(\"body\").forEach(bodyPath => {\n      const source = getRequireSource(bodyPath);\n      if (!source) return;\n      callProvider({ kind: \"import\", source }, bodyPath);\n    });\n  },\n});\n","import path from \"path\";\nimport debounce from \"lodash.debounce\";\nimport requireResolve from \"resolve\";\n\nconst nativeRequireResolve = parseFloat(process.versions.node) >= 8.9;\n\nimport { createRequire } from \"module\";\nconst require = createRequire(import /*::(_)*/.meta.url); // eslint-disable-line\n\nfunction myResolve(name: string, basedir: string) {\n  if (nativeRequireResolve) {\n    return require\n      .resolve(name, {\n        paths: [basedir],\n      })\n      .replace(/\\\\/g, \"/\");\n  } else {\n    return requireResolve.sync(name, { basedir }).replace(/\\\\/g, \"/\");\n  }\n}\n\nexport function resolve(\n  dirname: string,\n  moduleName: string,\n  absoluteImports: boolean | string,\n): string {\n  if (absoluteImports === false) return moduleName;\n\n  let basedir = dirname;\n  if (typeof absoluteImports === \"string\") {\n    basedir = path.resolve(basedir, absoluteImports);\n  }\n\n  try {\n    return myResolve(moduleName, basedir);\n  } catch (err) {\n    if (err.code !== \"MODULE_NOT_FOUND\") throw err;\n\n    throw Object.assign(\n      new Error(`Failed to resolve \"${moduleName}\" relative to \"${dirname}\"`),\n      {\n        code: \"BABEL_POLYFILL_NOT_FOUND\",\n        polyfill: moduleName,\n        dirname,\n      },\n    );\n  }\n}\n\nexport function has(basedir: string, name: string) {\n  try {\n    myResolve(name, basedir);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function logMissing(missingDeps: Set<string>) {\n  if (missingDeps.size === 0) return;\n\n  const deps = Array.from(missingDeps).sort().join(\" \");\n\n  console.warn(\n    \"\\nSome polyfills have been added but are not present in your dependencies.\\n\" +\n      \"Please run one of the following commands:\\n\" +\n      `\\tnpm install --save ${deps}\\n` +\n      `\\tyarn add ${deps}\\n`,\n  );\n\n  process.exitCode = 1;\n}\n\nlet allMissingDeps = new Set<string>();\n\nconst laterLogMissingDependencies = debounce(() => {\n  logMissing(allMissingDeps);\n  allMissingDeps = new Set<string>();\n}, 100);\n\nexport function laterLogMissing(missingDeps: Set<string>) {\n  if (missingDeps.size === 0) return;\n\n  missingDeps.forEach(name => allMissingDeps.add(name));\n  laterLogMissingDependencies();\n}\n","import type {\n  MetaDescriptor,\n  ResolverPolyfills,\n  ResolvedPolyfill,\n} from \"./types\";\n\nimport { has } from \"./utils\";\n\ntype ResolverFn<T> = (meta: MetaDescriptor) => void | ResolvedPolyfill<T>;\n\nconst PossibleGlobalObjects = new Set<string>([\n  \"global\",\n  \"globalThis\",\n  \"self\",\n  \"window\",\n]);\n\nexport default function createMetaResolver<T>(\n  polyfills: ResolverPolyfills<T>,\n): ResolverFn<T> {\n  const { static: staticP, instance: instanceP, global: globalP } = polyfills;\n\n  return meta => {\n    if (meta.kind === \"global\" && globalP && has(globalP, meta.name)) {\n      return { kind: \"global\", desc: globalP[meta.name], name: meta.name };\n    }\n\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const { placement, object, key } = meta;\n\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && has(globalP, key)) {\n          return { kind: \"global\", desc: globalP[key], name: key };\n        }\n\n        if (staticP && has(staticP, object) && has(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`,\n          };\n        }\n      }\n\n      if (instanceP && has(instanceP, key)) {\n        return { kind: \"instance\", desc: instanceP[key], name: `${key}` };\n      }\n    }\n  };\n}\n","import { declare } from \"@babel/helper-plugin-utils\";\nimport type { NodePath } from \"@babel/traverse\";\n\nimport _getTargets, {\n  isRequired,\n  getInclusionReasons,\n} from \"@babel/helper-compilation-targets\";\nconst getTargets = _getTargets.default || _getTargets;\n\nimport { createUtilsGetter } from \"./utils\";\nimport ImportsCache from \"./imports-cache\";\nimport {\n  stringifyTargetsMultiline,\n  presetEnvSilentDebugHeader,\n} from \"./debug-utils\";\nimport {\n  validateIncludeExclude,\n  applyMissingDependenciesDefaults,\n} from \"./normalize-options\";\n\nimport type {\n  ProviderApi,\n  MethodString,\n  Targets,\n  MetaDescriptor,\n  PolyfillProvider,\n  PluginOptions,\n  ProviderOptions,\n} from \"./types\";\n\nimport * as v from \"./visitors\";\nimport * as deps from \"./node/dependencies\";\n\nimport createMetaResolver from \"./meta-resolver\";\n\nexport type { PolyfillProvider, MetaDescriptor, Utils, Targets } from \"./types\";\n\nfunction resolveOptions<Options>(\n  options: PluginOptions,\n  babelApi,\n): {\n  method: MethodString;\n  methodName: \"usageGlobal\" | \"entryGlobal\" | \"usagePure\";\n  targets: Targets;\n  debug: boolean | typeof presetEnvSilentDebugHeader;\n  shouldInjectPolyfill:\n    | ((name: string, shouldInject: boolean) => boolean)\n    | undefined;\n  providerOptions: ProviderOptions<Options>;\n  absoluteImports: string | boolean;\n} {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports,\n    ...providerOptions\n  } = options;\n\n  if (isEmpty(options)) {\n    throw new Error(\n      `\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`,\n    );\n  }\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";\n  else if (method === \"entry-global\") methodName = \"entryGlobal\";\n  else if (method === \"usage-pure\") methodName = \"usagePure\";\n  else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(\n      `.method must be one of \"entry-global\", \"usage-global\"` +\n        ` or \"usage-pure\" (received ${JSON.stringify(method)})`,\n    );\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(\n        `.include and .exclude are not supported when using the` +\n          ` .shouldInjectPolyfill function.`,\n      );\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(\n      `.shouldInjectPolyfill must be a function, or undefined` +\n        ` (received ${JSON.stringify(shouldInjectPolyfill)})`,\n    );\n  }\n\n  if (\n    absoluteImports != null &&\n    typeof absoluteImports !== \"boolean\" &&\n    typeof absoluteImports !== \"string\"\n  ) {\n    throw new Error(\n      `.absoluteImports must be a boolean, a string, or undefined` +\n        ` (received ${JSON.stringify(absoluteImports)})`,\n    );\n  }\n\n  let targets;\n\n  if (\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    targetsOption ||\n    configPath ||\n    ignoreBrowserslistConfig\n  ) {\n    const targetsObj =\n      typeof targetsOption === \"string\" || Array.isArray(targetsOption)\n        ? { browsers: targetsOption }\n        : targetsOption;\n\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath,\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports ?? false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions as any as ProviderOptions<Options>,\n  };\n}\n\nfunction instantiateProvider<Options>(\n  factory: PolyfillProvider<Options>,\n  options: PluginOptions,\n  missingDependencies,\n  dirname,\n  debugLog,\n  babelApi,\n) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports,\n  } = resolveOptions<Options>(options, babelApi);\n\n  const getUtils = createUtilsGetter(\n    new ImportsCache(moduleName =>\n      deps.resolve(dirname, moduleName, absoluteImports),\n    ),\n  );\n\n  // eslint-disable-next-line prefer-const\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n\n  const depsCache = new Map();\n\n  const api: ProviderApi = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver,\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(\n          `Internal error in the ${factory.name} provider: ` +\n            `shouldInjectPolyfill() can't be called during initialization.`,\n        );\n      }\n      if (!polyfillsNames.has(name)) {\n        console.warn(\n          `Internal error in the ${providerName} provider: ` +\n            `unknown polyfill \"${name}\".`,\n        );\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n\n      let shouldInject = isRequired(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude,\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n    debug(name) {\n      debugLog().found = true;\n\n      if (!debug || !name) return;\n\n      if (debugLog().polyfills.has(providerName)) return;\n      debugLog().polyfills.add(name);\n      debugLog().polyfillsSupport ??= polyfillsSupport;\n    },\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n\n      const found = missingDependencies.all\n        ? false\n        : mapGetOr(depsCache, `${name} :: ${dirname}`, () =>\n            deps.has(dirname, name),\n          );\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    },\n  };\n\n  const provider = factory(api, providerOptions, dirname);\n  const providerName = provider.name || factory.name;\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(\n      `The \"${providerName}\" provider doesn't support the \"${method}\" polyfilling method.`,\n    );\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({ include, exclude } = validateIncludeExclude(\n    providerName,\n    polyfillsNames,\n    providerOptions.include || [],\n    providerOptions.exclude || [],\n  ));\n\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n    providerName,\n    callProvider(payload: MetaDescriptor, path: NodePath) {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path);\n    },\n  };\n}\n\nexport default function definePolyfillProvider<Options>(\n  factory: PolyfillProvider<Options>,\n) {\n  return declare((babelApi, options: PluginOptions, dirname: string) => {\n    babelApi.assertVersion(7);\n    const { traverse } = babelApi;\n\n    let debugLog;\n\n    const missingDependencies = applyMissingDependenciesDefaults(\n      options,\n      babelApi,\n    );\n\n    const { debug, method, targets, provider, providerName, callProvider } =\n      instantiateProvider<Options>(\n        factory,\n        options,\n        missingDependencies,\n        dirname,\n        () => debugLog,\n        babelApi,\n      );\n\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n\n    const visitor = provider.visitor\n      ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor])\n      : createVisitor(callProvider);\n\n    if (debug && debug !== presetEnvSilentDebugHeader) {\n      console.log(`${providerName}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${stringifyTargetsMultiline(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    const { runtimeName } = provider;\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre(file) {\n        if (runtimeName) {\n          if (\n            file.get(\"runtimeHelpersModuleName\") &&\n            file.get(\"runtimeHelpersModuleName\") !== runtimeName\n          ) {\n            console.warn(\n              `Two different polyfill providers` +\n                ` (${file.get(\"runtimeHelpersModuleProvider\")}` +\n                ` and ${providerName}) are trying to define two` +\n                ` conflicting @babel/runtime alternatives:` +\n                ` ${file.get(\"runtimeHelpersModuleName\")} and ${runtimeName}.` +\n                ` The second one will be ignored.`,\n            );\n          } else {\n            file.set(\"runtimeHelpersModuleName\", runtimeName);\n            file.set(\"runtimeHelpersModuleProvider\", providerName);\n          }\n        }\n\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set(),\n        };\n\n        provider.pre?.apply(this, arguments);\n      },\n      post() {\n        provider.post?.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(\n            method === \"entry-global\"\n              ? debugLog.found\n                ? `Based on your targets, the ${providerName} polyfill did not add any polyfill.`\n                : `The entry point for the ${providerName} polyfill has not been found.`\n              : `Based on your code and targets, the ${providerName} polyfill did not add any polyfill.`,\n          );\n\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(\n            `The ${providerName} polyfill entry has been replaced with ` +\n              `the following polyfills:`,\n          );\n        } else {\n          console.log(\n            `The ${providerName} polyfill added the following polyfills:`,\n          );\n        }\n\n        for (const name of debugLog.polyfills) {\n          if (debugLog.polyfillsSupport?.[name]) {\n            const filteredTargets = getInclusionReasons(\n              name,\n              targets,\n              debugLog.polyfillsSupport,\n            );\n\n            const formattedTargets = JSON.stringify(filteredTargets)\n              .replace(/,/g, \", \")\n              .replace(/^\\{\"/, '{ \"')\n              .replace(/\"\\}$/, '\" }');\n\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      },\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n  return val;\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n"],"names":["types","t","template","_babel","default","intersection","a","b","result","Set","forEach","v","has","add","object","key","Object","prototype","hasOwnProperty","call","getType","target","toString","slice","resolveId","path","isIdentifier","scope","hasBinding","node","name","deopt","evaluate","resolveKey","computed","isStringLiteral","value","parent","isMemberExpression","get","sym","resolveSource","obj","id","placement","undefined","isRegExpLiteral","isFunction","getImportSource","specifiers","length","source","getRequireSource","isExpressionStatement","expression","isCallExpression","callee","arguments","hoist","_blockHoist","createUtilsGetter","cache","prog","findParent","p","isProgram","injectGlobalImport","url","storeAnonymous","isScript","statement","ast","importDeclaration","injectNamedImport","hint","storeNamed","generateUidIdentifier","importSpecifier","injectDefaultImport","importDefaultSpecifier","ImportsCache","constructor","resolver","_imports","WeakMap","_anonymousImports","_lastImports","_resolver","programPath","getVal","_normalizeKey","imports","_ensure","sourceType","stringLiteral","_injectImport","Map","identifier","set","lastImport","newNodes","container","body","insertAfter","unshiftContainer","newNode","map","Collection","collection","presetEnvSilentDebugHeader","stringifyTargetsMultiline","targets","JSON","stringify","prettifyTargets","patternToRegExp","pattern","RegExp","buildUnusedError","label","unused","original","String","join","buldDuplicatesError","duplicates","size","Array","from","validateIncludeExclude","provider","polyfills","includePatterns","excludePatterns","current","filter","regexp","matched","polyfill","test","include","unusedInclude","exclude","unusedExclude","Error","applyMissingDependenciesDefaults","options","babelApi","missingDependencies","caller","log","inject","all","callProvider","property","kind","ReferencedIdentifier","getBindingIdentifier","MemberExpression","binding","getBinding","isImportNamespaceSpecifier","ObjectPattern","parentPath","isVariableDeclarator","isAssignmentExpression","grand","isNewExpression","prop","isObjectProperty","BinaryExpression","operator","ImportDeclaration","Program","bodyPath","nativeRequireResolve","parseFloat","process","versions","require","createRequire","import","meta","myResolve","basedir","resolve","paths","replace","requireResolve","sync","dirname","moduleName","absoluteImports","err","code","assign","logMissing","missingDeps","deps","sort","console","warn","exitCode","allMissingDeps","laterLogMissingDependencies","debounce","laterLogMissing","PossibleGlobalObjects","createMetaResolver","static","staticP","instance","instanceP","global","globalP","desc","getTargets","_getTargets","resolveOptions","method","targetsOption","ignoreBrowserslistConfig","configPath","debug","shouldInjectPolyfill","providerOptions","isEmpty","methodName","targetsObj","isArray","browsers","instantiateProvider","factory","debugLog","getUtils","polyfillsSupport","polyfillsNames","filterPolyfills","depsCache","api","babel","providerName","shouldInject","isRequired","compatData","includes","excludes","_debugLog","_debugLog$polyfillsSu","found","assertDependency","version","dep","mapGetOr","keys","payload","utils","definePolyfillProvider","declare","assertVersion","traverse","createVisitor","visitor","visitors","merge","runtimeName","pre","file","_provider$pre","providers","apply","post","_provider$post","filename","_debugLog$polyfillsSu2","filteredTargets","getInclusionReasons","formattedTargets","getDefault","val"],"mappings":"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"}